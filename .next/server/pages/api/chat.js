// runtime can't be in strict mode because a global variable is assign and maybe created.
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["pages/api/chat"],{

/***/ "buffer":
/*!******************************!*\
  !*** external "node:buffer" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:buffer");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/build/webpack/loaders/next-edge-function-loader.js?absolutePagePath=%2FUsers%2Ftsaric%2FDownloads%2Fneo-final-complete%2Fpages%2Fapi%2Fchat.ts&page=%2Fapi%2Fchat&rootDir=%2FUsers%2Ftsaric%2FDownloads%2Fneo-final-complete&preferredRegion=&middlewareConfig=e30%3D!":
/*!*******************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-edge-function-loader.js?absolutePagePath=%2FUsers%2Ftsaric%2FDownloads%2Fneo-final-complete%2Fpages%2Fapi%2Fchat.ts&page=%2Fapi%2Fchat&rootDir=%2FUsers%2Ftsaric%2FDownloads%2Fneo-final-complete&preferredRegion=&middlewareConfig=e30%3D! ***!
  \*******************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ nHandler)\n/* harmony export */ });\n/* harmony import */ var next_dist_esm_server_web_globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/esm/server/web/globals */ \"(middleware)/./node_modules/next/dist/esm/server/web/globals.js\");\n/* harmony import */ var next_dist_esm_server_web_adapter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/esm/server/web/adapter */ \"(middleware)/./node_modules/next/dist/esm/server/web/adapter.js\");\n/* harmony import */ var next_dist_esm_server_lib_incremental_cache__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/esm/server/lib/incremental-cache */ \"(middleware)/./node_modules/next/dist/esm/server/lib/incremental-cache/index.js\");\n/* harmony import */ var _pages_api_chat_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages/api/chat.ts */ \"(middleware)/./pages/api/chat.ts\");\n\n        \n        \n        \n\n        \n\n        if (typeof _pages_api_chat_ts__WEBPACK_IMPORTED_MODULE_3__[\"default\"] !== 'function') {\n          throw new Error('The Edge Function \"pages/api/chat\" must export a `default` function');\n        }\n\n        function nHandler (opts) {\n          return (0,next_dist_esm_server_web_adapter__WEBPACK_IMPORTED_MODULE_1__.adapter)({\n              ...opts,\n              IncrementalCache: next_dist_esm_server_lib_incremental_cache__WEBPACK_IMPORTED_MODULE_2__.IncrementalCache,\n              page: \"/api/chat\",\n              handler: _pages_api_chat_ts__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n          })\n        }\n    //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvbmV4dC1lZGdlLWZ1bmN0aW9uLWxvYWRlci5qcz9hYnNvbHV0ZVBhZ2VQYXRoPSUyRlVzZXJzJTJGdHNhcmljJTJGRG93bmxvYWRzJTJGbmVvLWZpbmFsLWNvbXBsZXRlJTJGcGFnZXMlMkZhcGklMkZjaGF0LnRzJnBhZ2U9JTJGYXBpJTJGY2hhdCZyb290RGlyPSUyRlVzZXJzJTJGdHNhcmljJTJGRG93bmxvYWRzJTJGbmVvLWZpbmFsLWNvbXBsZXRlJnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUNBLFFBQWlEO0FBQ2pELFFBQWtFO0FBQ2xFLFFBQXFGOztBQUVyRixRQUFpRDs7QUFFakQsbUJBQW1CLDBEQUFPO0FBQzFCO0FBQ0E7O0FBRUEsUUFBdUI7QUFDdkIsaUJBQWlCLHlFQUFPO0FBQ3hCO0FBQ0EsOEJBQThCO0FBQzlCO0FBQ0EscUJBQXFCO0FBQ3JCLFdBQVc7QUFDWDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8/ZGViMSJdLCJzb3VyY2VzQ29udGVudCI6WyJcbiAgICAgICAgaW1wb3J0ICduZXh0L2Rpc3QvZXNtL3NlcnZlci93ZWIvZ2xvYmFscydcbiAgICAgICAgaW1wb3J0IHsgYWRhcHRlciB9IGZyb20gJ25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9hZGFwdGVyJ1xuICAgICAgICBpbXBvcnQgeyBJbmNyZW1lbnRhbENhY2hlIH0gZnJvbSAnbmV4dC9kaXN0L2VzbS9zZXJ2ZXIvbGliL2luY3JlbWVudGFsLWNhY2hlJ1xuXG4gICAgICAgIGltcG9ydCBoYW5kbGVyIGZyb20gXCIuL3BhZ2VzL2FwaS9jaGF0LnRzXCJcblxuICAgICAgICBpZiAodHlwZW9mIGhhbmRsZXIgIT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1RoZSBFZGdlIEZ1bmN0aW9uIFwicGFnZXMvYXBpL2NoYXRcIiBtdXN0IGV4cG9ydCBhIGBkZWZhdWx0YCBmdW5jdGlvbicpO1xuICAgICAgICB9XG5cbiAgICAgICAgZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gbkhhbmRsZXIgKG9wdHMpIHtcbiAgICAgICAgICByZXR1cm4gYWRhcHRlcih7XG4gICAgICAgICAgICAgIC4uLm9wdHMsXG4gICAgICAgICAgICAgIEluY3JlbWVudGFsQ2FjaGUsXG4gICAgICAgICAgICAgIHBhZ2U6IFwiL2FwaS9jaGF0XCIsXG4gICAgICAgICAgICAgIGhhbmRsZXIsXG4gICAgICAgICAgfSlcbiAgICAgICAgfVxuICAgICJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/build/webpack/loaders/next-edge-function-loader.js?absolutePagePath=%2FUsers%2Ftsaric%2FDownloads%2Fneo-final-complete%2Fpages%2Fapi%2Fchat.ts&page=%2Fapi%2Fchat&rootDir=%2FUsers%2Ftsaric%2FDownloads%2Fneo-final-complete&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/compiled/@edge-runtime/cookies/index.js":
/*!************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/@edge-runtime/cookies/index.js ***!
  \************************************************************************/
/***/ ((module) => {

"use strict";
eval("\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all)=>{\n    for(var name in all)__defProp(target, name, {\n        get: all[name],\n        enumerable: true\n    });\n};\nvar __copyProps = (to, from, except, desc)=>{\n    if (from && typeof from === \"object\" || typeof from === \"function\") {\n        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n            get: ()=>from[key],\n            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n        });\n    }\n    return to;\n};\nvar __toCommonJS = (mod)=>__copyProps(__defProp({}, \"__esModule\", {\n        value: true\n    }), mod);\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n    RequestCookies: ()=>RequestCookies,\n    ResponseCookies: ()=>ResponseCookies,\n    parseCookie: ()=>parseCookie,\n    parseSetCookie: ()=>parseSetCookie,\n    stringifyCookie: ()=>stringifyCookie\n});\nmodule.exports = __toCommonJS(src_exports);\n// src/serialize.ts\nfunction stringifyCookie(c) {\n    var _a;\n    const attrs = [\n        \"path\" in c && c.path && `Path=${c.path}`,\n        \"expires\" in c && (c.expires || c.expires === 0) && `Expires=${(typeof c.expires === \"number\" ? new Date(c.expires) : c.expires).toUTCString()}`,\n        \"maxAge\" in c && typeof c.maxAge === \"number\" && `Max-Age=${c.maxAge}`,\n        \"domain\" in c && c.domain && `Domain=${c.domain}`,\n        \"secure\" in c && c.secure && \"Secure\",\n        \"httpOnly\" in c && c.httpOnly && \"HttpOnly\",\n        \"sameSite\" in c && c.sameSite && `SameSite=${c.sameSite}`,\n        \"priority\" in c && c.priority && `Priority=${c.priority}`\n    ].filter(Boolean);\n    return `${c.name}=${encodeURIComponent((_a = c.value) != null ? _a : \"\")}; ${attrs.join(\"; \")}`;\n}\nfunction parseCookie(cookie) {\n    const map = /* @__PURE__ */ new Map();\n    for (const pair of cookie.split(/; */)){\n        if (!pair) continue;\n        const splitAt = pair.indexOf(\"=\");\n        if (splitAt === -1) {\n            map.set(pair, \"true\");\n            continue;\n        }\n        const [key, value] = [\n            pair.slice(0, splitAt),\n            pair.slice(splitAt + 1)\n        ];\n        try {\n            map.set(key, decodeURIComponent(value != null ? value : \"true\"));\n        } catch  {}\n    }\n    return map;\n}\nfunction parseSetCookie(setCookie) {\n    if (!setCookie) {\n        return void 0;\n    }\n    const [[name, value], ...attributes] = parseCookie(setCookie);\n    const { domain, expires, httponly, maxage, path, samesite, secure, priority } = Object.fromEntries(attributes.map(([key, value2])=>[\n            key.toLowerCase(),\n            value2\n        ]));\n    const cookie = {\n        name,\n        value: decodeURIComponent(value),\n        domain,\n        ...expires && {\n            expires: new Date(expires)\n        },\n        ...httponly && {\n            httpOnly: true\n        },\n        ...typeof maxage === \"string\" && {\n            maxAge: Number(maxage)\n        },\n        path,\n        ...samesite && {\n            sameSite: parseSameSite(samesite)\n        },\n        ...secure && {\n            secure: true\n        },\n        ...priority && {\n            priority: parsePriority(priority)\n        }\n    };\n    return compact(cookie);\n}\nfunction compact(t) {\n    const newT = {};\n    for(const key in t){\n        if (t[key]) {\n            newT[key] = t[key];\n        }\n    }\n    return newT;\n}\nvar SAME_SITE = [\n    \"strict\",\n    \"lax\",\n    \"none\"\n];\nfunction parseSameSite(string) {\n    string = string.toLowerCase();\n    return SAME_SITE.includes(string) ? string : void 0;\n}\nvar PRIORITY = [\n    \"low\",\n    \"medium\",\n    \"high\"\n];\nfunction parsePriority(string) {\n    string = string.toLowerCase();\n    return PRIORITY.includes(string) ? string : void 0;\n}\nfunction splitCookiesString(cookiesString) {\n    if (!cookiesString) return [];\n    var cookiesStrings = [];\n    var pos = 0;\n    var start;\n    var ch;\n    var lastComma;\n    var nextStart;\n    var cookiesSeparatorFound;\n    function skipWhitespace() {\n        while(pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))){\n            pos += 1;\n        }\n        return pos < cookiesString.length;\n    }\n    function notSpecialChar() {\n        ch = cookiesString.charAt(pos);\n        return ch !== \"=\" && ch !== \";\" && ch !== \",\";\n    }\n    while(pos < cookiesString.length){\n        start = pos;\n        cookiesSeparatorFound = false;\n        while(skipWhitespace()){\n            ch = cookiesString.charAt(pos);\n            if (ch === \",\") {\n                lastComma = pos;\n                pos += 1;\n                skipWhitespace();\n                nextStart = pos;\n                while(pos < cookiesString.length && notSpecialChar()){\n                    pos += 1;\n                }\n                if (pos < cookiesString.length && cookiesString.charAt(pos) === \"=\") {\n                    cookiesSeparatorFound = true;\n                    pos = nextStart;\n                    cookiesStrings.push(cookiesString.substring(start, lastComma));\n                    start = pos;\n                } else {\n                    pos = lastComma + 1;\n                }\n            } else {\n                pos += 1;\n            }\n        }\n        if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n            cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n        }\n    }\n    return cookiesStrings;\n}\n// src/request-cookies.ts\nvar RequestCookies = class {\n    constructor(requestHeaders){\n        /** @internal */ this._parsed = /* @__PURE__ */ new Map();\n        this._headers = requestHeaders;\n        const header = requestHeaders.get(\"cookie\");\n        if (header) {\n            const parsed = parseCookie(header);\n            for (const [name, value] of parsed){\n                this._parsed.set(name, {\n                    name,\n                    value\n                });\n            }\n        }\n    }\n    [Symbol.iterator]() {\n        return this._parsed[Symbol.iterator]();\n    }\n    /**\n   * The amount of cookies received from the client\n   */ get size() {\n        return this._parsed.size;\n    }\n    get(...args) {\n        const name = typeof args[0] === \"string\" ? args[0] : args[0].name;\n        return this._parsed.get(name);\n    }\n    getAll(...args) {\n        var _a;\n        const all = Array.from(this._parsed);\n        if (!args.length) {\n            return all.map(([_, value])=>value);\n        }\n        const name = typeof args[0] === \"string\" ? args[0] : (_a = args[0]) == null ? void 0 : _a.name;\n        return all.filter(([n])=>n === name).map(([_, value])=>value);\n    }\n    has(name) {\n        return this._parsed.has(name);\n    }\n    set(...args) {\n        const [name, value] = args.length === 1 ? [\n            args[0].name,\n            args[0].value\n        ] : args;\n        const map = this._parsed;\n        map.set(name, {\n            name,\n            value\n        });\n        this._headers.set(\"cookie\", Array.from(map).map(([_, value2])=>stringifyCookie(value2)).join(\"; \"));\n        return this;\n    }\n    /**\n   * Delete the cookies matching the passed name or names in the request.\n   */ delete(names) {\n        const map = this._parsed;\n        const result = !Array.isArray(names) ? map.delete(names) : names.map((name)=>map.delete(name));\n        this._headers.set(\"cookie\", Array.from(map).map(([_, value])=>stringifyCookie(value)).join(\"; \"));\n        return result;\n    }\n    /**\n   * Delete all the cookies in the cookies in the request.\n   */ clear() {\n        this.delete(Array.from(this._parsed.keys()));\n        return this;\n    }\n    /**\n   * Format the cookies in the request as a string for logging\n   */ [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n        return `RequestCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`;\n    }\n    toString() {\n        return [\n            ...this._parsed.values()\n        ].map((v)=>`${v.name}=${encodeURIComponent(v.value)}`).join(\"; \");\n    }\n};\n// src/response-cookies.ts\nvar ResponseCookies = class {\n    constructor(responseHeaders){\n        /** @internal */ this._parsed = /* @__PURE__ */ new Map();\n        var _a, _b, _c;\n        this._headers = responseHeaders;\n        const setCookie = (_c = (_b = (_a = responseHeaders.getSetCookie) == null ? void 0 : _a.call(responseHeaders)) != null ? _b : responseHeaders.get(\"set-cookie\")) != null ? _c : [];\n        const cookieStrings = Array.isArray(setCookie) ? setCookie : splitCookiesString(setCookie);\n        for (const cookieString of cookieStrings){\n            const parsed = parseSetCookie(cookieString);\n            if (parsed) this._parsed.set(parsed.name, parsed);\n        }\n    }\n    /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-get CookieStore#get} without the Promise.\n   */ get(...args) {\n        const key = typeof args[0] === \"string\" ? args[0] : args[0].name;\n        return this._parsed.get(key);\n    }\n    /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-getAll CookieStore#getAll} without the Promise.\n   */ getAll(...args) {\n        var _a;\n        const all = Array.from(this._parsed.values());\n        if (!args.length) {\n            return all;\n        }\n        const key = typeof args[0] === \"string\" ? args[0] : (_a = args[0]) == null ? void 0 : _a.name;\n        return all.filter((c)=>c.name === key);\n    }\n    has(name) {\n        return this._parsed.has(name);\n    }\n    /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-set CookieStore#set} without the Promise.\n   */ set(...args) {\n        const [name, value, cookie] = args.length === 1 ? [\n            args[0].name,\n            args[0].value,\n            args[0]\n        ] : args;\n        const map = this._parsed;\n        map.set(name, normalizeCookie({\n            name,\n            value,\n            ...cookie\n        }));\n        replace(map, this._headers);\n        return this;\n    }\n    /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-delete CookieStore#delete} without the Promise.\n   */ delete(...args) {\n        const [name, path, domain] = typeof args[0] === \"string\" ? [\n            args[0]\n        ] : [\n            args[0].name,\n            args[0].path,\n            args[0].domain\n        ];\n        return this.set({\n            name,\n            path,\n            domain,\n            value: \"\",\n            expires: /* @__PURE__ */ new Date(0)\n        });\n    }\n    [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n        return `ResponseCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`;\n    }\n    toString() {\n        return [\n            ...this._parsed.values()\n        ].map(stringifyCookie).join(\"; \");\n    }\n};\nfunction replace(bag, headers) {\n    headers.delete(\"set-cookie\");\n    for (const [, value] of bag){\n        const serialized = stringifyCookie(value);\n        headers.append(\"set-cookie\", serialized);\n    }\n}\nfunction normalizeCookie(cookie = {\n    name: \"\",\n    value: \"\"\n}) {\n    if (typeof cookie.expires === \"number\") {\n        cookie.expires = new Date(cookie.expires);\n    }\n    if (cookie.maxAge) {\n        cookie.expires = new Date(Date.now() + cookie.maxAge * 1e3);\n    }\n    if (cookie.path === null || cookie.path === void 0) {\n        cookie.path = \"/\";\n    }\n    return cookie;\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/compiled/@edge-runtime/cookies/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/compiled/cookie/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/next/dist/compiled/cookie/index.js ***!
  \*********************************************************/
/***/ ((module) => {

"use strict";
eval("var __dirname = \"/\";\n\n(()=>{\n    \"use strict\";\n    if (typeof __nccwpck_require__ !== \"undefined\") __nccwpck_require__.ab = __dirname + \"/\";\n    var e = {};\n    (()=>{\n        var r = e;\n        /*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */ r.parse = parse;\n        r.serialize = serialize;\n        var i = decodeURIComponent;\n        var t = encodeURIComponent;\n        var a = /; */;\n        var n = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n        function parse(e, r) {\n            if (typeof e !== \"string\") {\n                throw new TypeError(\"argument str must be a string\");\n            }\n            var t = {};\n            var n = r || {};\n            var o = e.split(a);\n            var s = n.decode || i;\n            for(var p = 0; p < o.length; p++){\n                var f = o[p];\n                var u = f.indexOf(\"=\");\n                if (u < 0) {\n                    continue;\n                }\n                var v = f.substr(0, u).trim();\n                var c = f.substr(++u, f.length).trim();\n                if ('\"' == c[0]) {\n                    c = c.slice(1, -1);\n                }\n                if (undefined == t[v]) {\n                    t[v] = tryDecode(c, s);\n                }\n            }\n            return t;\n        }\n        function serialize(e, r, i) {\n            var a = i || {};\n            var o = a.encode || t;\n            if (typeof o !== \"function\") {\n                throw new TypeError(\"option encode is invalid\");\n            }\n            if (!n.test(e)) {\n                throw new TypeError(\"argument name is invalid\");\n            }\n            var s = o(r);\n            if (s && !n.test(s)) {\n                throw new TypeError(\"argument val is invalid\");\n            }\n            var p = e + \"=\" + s;\n            if (null != a.maxAge) {\n                var f = a.maxAge - 0;\n                if (isNaN(f) || !isFinite(f)) {\n                    throw new TypeError(\"option maxAge is invalid\");\n                }\n                p += \"; Max-Age=\" + Math.floor(f);\n            }\n            if (a.domain) {\n                if (!n.test(a.domain)) {\n                    throw new TypeError(\"option domain is invalid\");\n                }\n                p += \"; Domain=\" + a.domain;\n            }\n            if (a.path) {\n                if (!n.test(a.path)) {\n                    throw new TypeError(\"option path is invalid\");\n                }\n                p += \"; Path=\" + a.path;\n            }\n            if (a.expires) {\n                if (typeof a.expires.toUTCString !== \"function\") {\n                    throw new TypeError(\"option expires is invalid\");\n                }\n                p += \"; Expires=\" + a.expires.toUTCString();\n            }\n            if (a.httpOnly) {\n                p += \"; HttpOnly\";\n            }\n            if (a.secure) {\n                p += \"; Secure\";\n            }\n            if (a.sameSite) {\n                var u = typeof a.sameSite === \"string\" ? a.sameSite.toLowerCase() : a.sameSite;\n                switch(u){\n                    case true:\n                        p += \"; SameSite=Strict\";\n                        break;\n                    case \"lax\":\n                        p += \"; SameSite=Lax\";\n                        break;\n                    case \"strict\":\n                        p += \"; SameSite=Strict\";\n                        break;\n                    case \"none\":\n                        p += \"; SameSite=None\";\n                        break;\n                    default:\n                        throw new TypeError(\"option sameSite is invalid\");\n                }\n            }\n            return p;\n        }\n        function tryDecode(e, r) {\n            try {\n                return r(e);\n            } catch (r) {\n                return e;\n            }\n        }\n    })();\n    module.exports = e;\n})();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9jb29raWUvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7QUFBQztJQUFLO0lBQWEsSUFBRyxPQUFPQSx3QkFBc0IsYUFBWUEsb0JBQW9CQyxFQUFFLEdBQUNDLFNBQVNBLEdBQUM7SUFBSSxJQUFJQyxJQUFFLENBQUM7SUFBRztRQUFLLElBQUlDLElBQUVEO1FBQ3pIOzs7OztDQUtDLEdBQUVDLEVBQUVDLEtBQUssR0FBQ0E7UUFBTUQsRUFBRUUsU0FBUyxHQUFDQTtRQUFVLElBQUlDLElBQUVDO1FBQW1CLElBQUlDLElBQUVDO1FBQW1CLElBQUlDLElBQUU7UUFBTSxJQUFJQyxJQUFFO1FBQXdDLFNBQVNQLE1BQU1GLENBQUMsRUFBQ0MsQ0FBQztZQUFFLElBQUcsT0FBT0QsTUFBSSxVQUFTO2dCQUFDLE1BQU0sSUFBSVUsVUFBVTtZQUFnQztZQUFDLElBQUlKLElBQUUsQ0FBQztZQUFFLElBQUlHLElBQUVSLEtBQUcsQ0FBQztZQUFFLElBQUlVLElBQUVYLEVBQUVZLEtBQUssQ0FBQ0o7WUFBRyxJQUFJSyxJQUFFSixFQUFFSyxNQUFNLElBQUVWO1lBQUUsSUFBSSxJQUFJVyxJQUFFLEdBQUVBLElBQUVKLEVBQUVLLE1BQU0sRUFBQ0QsSUFBSTtnQkFBQyxJQUFJRSxJQUFFTixDQUFDLENBQUNJLEVBQUU7Z0JBQUMsSUFBSUcsSUFBRUQsRUFBRUUsT0FBTyxDQUFDO2dCQUFLLElBQUdELElBQUUsR0FBRTtvQkFBQztnQkFBUTtnQkFBQyxJQUFJRSxJQUFFSCxFQUFFSSxNQUFNLENBQUMsR0FBRUgsR0FBR0ksSUFBSTtnQkFBRyxJQUFJQyxJQUFFTixFQUFFSSxNQUFNLENBQUMsRUFBRUgsR0FBRUQsRUFBRUQsTUFBTSxFQUFFTSxJQUFJO2dCQUFHLElBQUcsT0FBS0MsQ0FBQyxDQUFDLEVBQUUsRUFBQztvQkFBQ0EsSUFBRUEsRUFBRUMsS0FBSyxDQUFDLEdBQUUsQ0FBQztnQkFBRTtnQkFBQyxJQUFHQyxhQUFXbkIsQ0FBQyxDQUFDYyxFQUFFLEVBQUM7b0JBQUNkLENBQUMsQ0FBQ2MsRUFBRSxHQUFDTSxVQUFVSCxHQUFFVjtnQkFBRTtZQUFDO1lBQUMsT0FBT1A7UUFBQztRQUFDLFNBQVNILFVBQVVILENBQUMsRUFBQ0MsQ0FBQyxFQUFDRyxDQUFDO1lBQUUsSUFBSUksSUFBRUosS0FBRyxDQUFDO1lBQUUsSUFBSU8sSUFBRUgsRUFBRW1CLE1BQU0sSUFBRXJCO1lBQUUsSUFBRyxPQUFPSyxNQUFJLFlBQVc7Z0JBQUMsTUFBTSxJQUFJRCxVQUFVO1lBQTJCO1lBQUMsSUFBRyxDQUFDRCxFQUFFbUIsSUFBSSxDQUFDNUIsSUFBRztnQkFBQyxNQUFNLElBQUlVLFVBQVU7WUFBMkI7WUFBQyxJQUFJRyxJQUFFRixFQUFFVjtZQUFHLElBQUdZLEtBQUcsQ0FBQ0osRUFBRW1CLElBQUksQ0FBQ2YsSUFBRztnQkFBQyxNQUFNLElBQUlILFVBQVU7WUFBMEI7WUFBQyxJQUFJSyxJQUFFZixJQUFFLE1BQUlhO1lBQUUsSUFBRyxRQUFNTCxFQUFFcUIsTUFBTSxFQUFDO2dCQUFDLElBQUlaLElBQUVULEVBQUVxQixNQUFNLEdBQUM7Z0JBQUUsSUFBR0MsTUFBTWIsTUFBSSxDQUFDYyxTQUFTZCxJQUFHO29CQUFDLE1BQU0sSUFBSVAsVUFBVTtnQkFBMkI7Z0JBQUNLLEtBQUcsZUFBYWlCLEtBQUtDLEtBQUssQ0FBQ2hCO1lBQUU7WUFBQyxJQUFHVCxFQUFFMEIsTUFBTSxFQUFDO2dCQUFDLElBQUcsQ0FBQ3pCLEVBQUVtQixJQUFJLENBQUNwQixFQUFFMEIsTUFBTSxHQUFFO29CQUFDLE1BQU0sSUFBSXhCLFVBQVU7Z0JBQTJCO2dCQUFDSyxLQUFHLGNBQVlQLEVBQUUwQixNQUFNO1lBQUE7WUFBQyxJQUFHMUIsRUFBRTJCLElBQUksRUFBQztnQkFBQyxJQUFHLENBQUMxQixFQUFFbUIsSUFBSSxDQUFDcEIsRUFBRTJCLElBQUksR0FBRTtvQkFBQyxNQUFNLElBQUl6QixVQUFVO2dCQUF5QjtnQkFBQ0ssS0FBRyxZQUFVUCxFQUFFMkIsSUFBSTtZQUFBO1lBQUMsSUFBRzNCLEVBQUU0QixPQUFPLEVBQUM7Z0JBQUMsSUFBRyxPQUFPNUIsRUFBRTRCLE9BQU8sQ0FBQ0MsV0FBVyxLQUFHLFlBQVc7b0JBQUMsTUFBTSxJQUFJM0IsVUFBVTtnQkFBNEI7Z0JBQUNLLEtBQUcsZUFBYVAsRUFBRTRCLE9BQU8sQ0FBQ0MsV0FBVztZQUFFO1lBQUMsSUFBRzdCLEVBQUU4QixRQUFRLEVBQUM7Z0JBQUN2QixLQUFHO1lBQVk7WUFBQyxJQUFHUCxFQUFFK0IsTUFBTSxFQUFDO2dCQUFDeEIsS0FBRztZQUFVO1lBQUMsSUFBR1AsRUFBRWdDLFFBQVEsRUFBQztnQkFBQyxJQUFJdEIsSUFBRSxPQUFPVixFQUFFZ0MsUUFBUSxLQUFHLFdBQVNoQyxFQUFFZ0MsUUFBUSxDQUFDQyxXQUFXLEtBQUdqQyxFQUFFZ0MsUUFBUTtnQkFBQyxPQUFPdEI7b0JBQUcsS0FBSzt3QkFBS0gsS0FBRzt3QkFBb0I7b0JBQU0sS0FBSTt3QkFBTUEsS0FBRzt3QkFBaUI7b0JBQU0sS0FBSTt3QkFBU0EsS0FBRzt3QkFBb0I7b0JBQU0sS0FBSTt3QkFBT0EsS0FBRzt3QkFBa0I7b0JBQU07d0JBQVEsTUFBTSxJQUFJTCxVQUFVO2dCQUE2QjtZQUFDO1lBQUMsT0FBT0s7UUFBQztRQUFDLFNBQVNXLFVBQVUxQixDQUFDLEVBQUNDLENBQUM7WUFBRSxJQUFHO2dCQUFDLE9BQU9BLEVBQUVEO1lBQUUsRUFBQyxPQUFNQyxHQUFFO2dCQUFDLE9BQU9EO1lBQUM7UUFBQztJQUFDO0lBQUswQyxPQUFPQyxPQUFPLEdBQUMzQztBQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvY29va2llL2luZGV4LmpzP2IyNWUiXSwic291cmNlc0NvbnRlbnQiOlsiKCgpPT57XCJ1c2Ugc3RyaWN0XCI7aWYodHlwZW9mIF9fbmNjd3Bja19yZXF1aXJlX18hPT1cInVuZGVmaW5lZFwiKV9fbmNjd3Bja19yZXF1aXJlX18uYWI9X19kaXJuYW1lK1wiL1wiO3ZhciBlPXt9OygoKT0+e3ZhciByPWU7XG4vKiFcbiAqIGNvb2tpZVxuICogQ29weXJpZ2h0KGMpIDIwMTItMjAxNCBSb21hbiBTaHR5bG1hblxuICogQ29weXJpZ2h0KGMpIDIwMTUgRG91Z2xhcyBDaHJpc3RvcGhlciBXaWxzb25cbiAqIE1JVCBMaWNlbnNlZFxuICovci5wYXJzZT1wYXJzZTtyLnNlcmlhbGl6ZT1zZXJpYWxpemU7dmFyIGk9ZGVjb2RlVVJJQ29tcG9uZW50O3ZhciB0PWVuY29kZVVSSUNvbXBvbmVudDt2YXIgYT0vOyAqLzt2YXIgbj0vXltcXHUwMDA5XFx1MDAyMC1cXHUwMDdlXFx1MDA4MC1cXHUwMGZmXSskLztmdW5jdGlvbiBwYXJzZShlLHIpe2lmKHR5cGVvZiBlIT09XCJzdHJpbmdcIil7dGhyb3cgbmV3IFR5cGVFcnJvcihcImFyZ3VtZW50IHN0ciBtdXN0IGJlIGEgc3RyaW5nXCIpfXZhciB0PXt9O3ZhciBuPXJ8fHt9O3ZhciBvPWUuc3BsaXQoYSk7dmFyIHM9bi5kZWNvZGV8fGk7Zm9yKHZhciBwPTA7cDxvLmxlbmd0aDtwKyspe3ZhciBmPW9bcF07dmFyIHU9Zi5pbmRleE9mKFwiPVwiKTtpZih1PDApe2NvbnRpbnVlfXZhciB2PWYuc3Vic3RyKDAsdSkudHJpbSgpO3ZhciBjPWYuc3Vic3RyKCsrdSxmLmxlbmd0aCkudHJpbSgpO2lmKCdcIic9PWNbMF0pe2M9Yy5zbGljZSgxLC0xKX1pZih1bmRlZmluZWQ9PXRbdl0pe3Rbdl09dHJ5RGVjb2RlKGMscyl9fXJldHVybiB0fWZ1bmN0aW9uIHNlcmlhbGl6ZShlLHIsaSl7dmFyIGE9aXx8e307dmFyIG89YS5lbmNvZGV8fHQ7aWYodHlwZW9mIG8hPT1cImZ1bmN0aW9uXCIpe3Rocm93IG5ldyBUeXBlRXJyb3IoXCJvcHRpb24gZW5jb2RlIGlzIGludmFsaWRcIil9aWYoIW4udGVzdChlKSl7dGhyb3cgbmV3IFR5cGVFcnJvcihcImFyZ3VtZW50IG5hbWUgaXMgaW52YWxpZFwiKX12YXIgcz1vKHIpO2lmKHMmJiFuLnRlc3Qocykpe3Rocm93IG5ldyBUeXBlRXJyb3IoXCJhcmd1bWVudCB2YWwgaXMgaW52YWxpZFwiKX12YXIgcD1lK1wiPVwiK3M7aWYobnVsbCE9YS5tYXhBZ2Upe3ZhciBmPWEubWF4QWdlLTA7aWYoaXNOYU4oZil8fCFpc0Zpbml0ZShmKSl7dGhyb3cgbmV3IFR5cGVFcnJvcihcIm9wdGlvbiBtYXhBZ2UgaXMgaW52YWxpZFwiKX1wKz1cIjsgTWF4LUFnZT1cIitNYXRoLmZsb29yKGYpfWlmKGEuZG9tYWluKXtpZighbi50ZXN0KGEuZG9tYWluKSl7dGhyb3cgbmV3IFR5cGVFcnJvcihcIm9wdGlvbiBkb21haW4gaXMgaW52YWxpZFwiKX1wKz1cIjsgRG9tYWluPVwiK2EuZG9tYWlufWlmKGEucGF0aCl7aWYoIW4udGVzdChhLnBhdGgpKXt0aHJvdyBuZXcgVHlwZUVycm9yKFwib3B0aW9uIHBhdGggaXMgaW52YWxpZFwiKX1wKz1cIjsgUGF0aD1cIithLnBhdGh9aWYoYS5leHBpcmVzKXtpZih0eXBlb2YgYS5leHBpcmVzLnRvVVRDU3RyaW5nIT09XCJmdW5jdGlvblwiKXt0aHJvdyBuZXcgVHlwZUVycm9yKFwib3B0aW9uIGV4cGlyZXMgaXMgaW52YWxpZFwiKX1wKz1cIjsgRXhwaXJlcz1cIithLmV4cGlyZXMudG9VVENTdHJpbmcoKX1pZihhLmh0dHBPbmx5KXtwKz1cIjsgSHR0cE9ubHlcIn1pZihhLnNlY3VyZSl7cCs9XCI7IFNlY3VyZVwifWlmKGEuc2FtZVNpdGUpe3ZhciB1PXR5cGVvZiBhLnNhbWVTaXRlPT09XCJzdHJpbmdcIj9hLnNhbWVTaXRlLnRvTG93ZXJDYXNlKCk6YS5zYW1lU2l0ZTtzd2l0Y2godSl7Y2FzZSB0cnVlOnArPVwiOyBTYW1lU2l0ZT1TdHJpY3RcIjticmVhaztjYXNlXCJsYXhcIjpwKz1cIjsgU2FtZVNpdGU9TGF4XCI7YnJlYWs7Y2FzZVwic3RyaWN0XCI6cCs9XCI7IFNhbWVTaXRlPVN0cmljdFwiO2JyZWFrO2Nhc2VcIm5vbmVcIjpwKz1cIjsgU2FtZVNpdGU9Tm9uZVwiO2JyZWFrO2RlZmF1bHQ6dGhyb3cgbmV3IFR5cGVFcnJvcihcIm9wdGlvbiBzYW1lU2l0ZSBpcyBpbnZhbGlkXCIpfX1yZXR1cm4gcH1mdW5jdGlvbiB0cnlEZWNvZGUoZSxyKXt0cnl7cmV0dXJuIHIoZSl9Y2F0Y2gocil7cmV0dXJuIGV9fX0pKCk7bW9kdWxlLmV4cG9ydHM9ZX0pKCk7Il0sIm5hbWVzIjpbIl9fbmNjd3Bja19yZXF1aXJlX18iLCJhYiIsIl9fZGlybmFtZSIsImUiLCJyIiwicGFyc2UiLCJzZXJpYWxpemUiLCJpIiwiZGVjb2RlVVJJQ29tcG9uZW50IiwidCIsImVuY29kZVVSSUNvbXBvbmVudCIsImEiLCJuIiwiVHlwZUVycm9yIiwibyIsInNwbGl0IiwicyIsImRlY29kZSIsInAiLCJsZW5ndGgiLCJmIiwidSIsImluZGV4T2YiLCJ2Iiwic3Vic3RyIiwidHJpbSIsImMiLCJzbGljZSIsInVuZGVmaW5lZCIsInRyeURlY29kZSIsImVuY29kZSIsInRlc3QiLCJtYXhBZ2UiLCJpc05hTiIsImlzRmluaXRlIiwiTWF0aCIsImZsb29yIiwiZG9tYWluIiwicGF0aCIsImV4cGlyZXMiLCJ0b1VUQ1N0cmluZyIsImh0dHBPbmx5Iiwic2VjdXJlIiwic2FtZVNpdGUiLCJ0b0xvd2VyQ2FzZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/compiled/cookie/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/compiled/lru-cache/index.js":
/*!************************************************************!*\
  !*** ./node_modules/next/dist/compiled/lru-cache/index.js ***!
  \************************************************************/
/***/ ((module) => {

"use strict";
eval("var __dirname = \"/\";\n\n(()=>{\n    \"use strict\";\n    var t = {\n        806: (t, e, i)=>{\n            const s = i(190);\n            const n = Symbol(\"max\");\n            const l = Symbol(\"length\");\n            const r = Symbol(\"lengthCalculator\");\n            const h = Symbol(\"allowStale\");\n            const a = Symbol(\"maxAge\");\n            const o = Symbol(\"dispose\");\n            const u = Symbol(\"noDisposeOnSet\");\n            const f = Symbol(\"lruList\");\n            const p = Symbol(\"cache\");\n            const v = Symbol(\"updateAgeOnGet\");\n            const naiveLength = ()=>1;\n            class LRUCache {\n                constructor(t){\n                    if (typeof t === \"number\") t = {\n                        max: t\n                    };\n                    if (!t) t = {};\n                    if (t.max && (typeof t.max !== \"number\" || t.max < 0)) throw new TypeError(\"max must be a non-negative number\");\n                    const e = this[n] = t.max || Infinity;\n                    const i = t.length || naiveLength;\n                    this[r] = typeof i !== \"function\" ? naiveLength : i;\n                    this[h] = t.stale || false;\n                    if (t.maxAge && typeof t.maxAge !== \"number\") throw new TypeError(\"maxAge must be a number\");\n                    this[a] = t.maxAge || 0;\n                    this[o] = t.dispose;\n                    this[u] = t.noDisposeOnSet || false;\n                    this[v] = t.updateAgeOnGet || false;\n                    this.reset();\n                }\n                set max(t) {\n                    if (typeof t !== \"number\" || t < 0) throw new TypeError(\"max must be a non-negative number\");\n                    this[n] = t || Infinity;\n                    trim(this);\n                }\n                get max() {\n                    return this[n];\n                }\n                set allowStale(t) {\n                    this[h] = !!t;\n                }\n                get allowStale() {\n                    return this[h];\n                }\n                set maxAge(t) {\n                    if (typeof t !== \"number\") throw new TypeError(\"maxAge must be a non-negative number\");\n                    this[a] = t;\n                    trim(this);\n                }\n                get maxAge() {\n                    return this[a];\n                }\n                set lengthCalculator(t) {\n                    if (typeof t !== \"function\") t = naiveLength;\n                    if (t !== this[r]) {\n                        this[r] = t;\n                        this[l] = 0;\n                        this[f].forEach((t)=>{\n                            t.length = this[r](t.value, t.key);\n                            this[l] += t.length;\n                        });\n                    }\n                    trim(this);\n                }\n                get lengthCalculator() {\n                    return this[r];\n                }\n                get length() {\n                    return this[l];\n                }\n                get itemCount() {\n                    return this[f].length;\n                }\n                rforEach(t, e) {\n                    e = e || this;\n                    for(let i = this[f].tail; i !== null;){\n                        const s = i.prev;\n                        forEachStep(this, t, i, e);\n                        i = s;\n                    }\n                }\n                forEach(t, e) {\n                    e = e || this;\n                    for(let i = this[f].head; i !== null;){\n                        const s = i.next;\n                        forEachStep(this, t, i, e);\n                        i = s;\n                    }\n                }\n                keys() {\n                    return this[f].toArray().map((t)=>t.key);\n                }\n                values() {\n                    return this[f].toArray().map((t)=>t.value);\n                }\n                reset() {\n                    if (this[o] && this[f] && this[f].length) {\n                        this[f].forEach((t)=>this[o](t.key, t.value));\n                    }\n                    this[p] = new Map;\n                    this[f] = new s;\n                    this[l] = 0;\n                }\n                dump() {\n                    return this[f].map((t)=>isStale(this, t) ? false : {\n                            k: t.key,\n                            v: t.value,\n                            e: t.now + (t.maxAge || 0)\n                        }).toArray().filter((t)=>t);\n                }\n                dumpLru() {\n                    return this[f];\n                }\n                set(t, e, i) {\n                    i = i || this[a];\n                    if (i && typeof i !== \"number\") throw new TypeError(\"maxAge must be a number\");\n                    const s = i ? Date.now() : 0;\n                    const h = this[r](e, t);\n                    if (this[p].has(t)) {\n                        if (h > this[n]) {\n                            del(this, this[p].get(t));\n                            return false;\n                        }\n                        const r = this[p].get(t);\n                        const a = r.value;\n                        if (this[o]) {\n                            if (!this[u]) this[o](t, a.value);\n                        }\n                        a.now = s;\n                        a.maxAge = i;\n                        a.value = e;\n                        this[l] += h - a.length;\n                        a.length = h;\n                        this.get(t);\n                        trim(this);\n                        return true;\n                    }\n                    const v = new Entry(t, e, h, s, i);\n                    if (v.length > this[n]) {\n                        if (this[o]) this[o](t, e);\n                        return false;\n                    }\n                    this[l] += v.length;\n                    this[f].unshift(v);\n                    this[p].set(t, this[f].head);\n                    trim(this);\n                    return true;\n                }\n                has(t) {\n                    if (!this[p].has(t)) return false;\n                    const e = this[p].get(t).value;\n                    return !isStale(this, e);\n                }\n                get(t) {\n                    return get(this, t, true);\n                }\n                peek(t) {\n                    return get(this, t, false);\n                }\n                pop() {\n                    const t = this[f].tail;\n                    if (!t) return null;\n                    del(this, t);\n                    return t.value;\n                }\n                del(t) {\n                    del(this, this[p].get(t));\n                }\n                load(t) {\n                    this.reset();\n                    const e = Date.now();\n                    for(let i = t.length - 1; i >= 0; i--){\n                        const s = t[i];\n                        const n = s.e || 0;\n                        if (n === 0) this.set(s.k, s.v);\n                        else {\n                            const t = n - e;\n                            if (t > 0) {\n                                this.set(s.k, s.v, t);\n                            }\n                        }\n                    }\n                }\n                prune() {\n                    this[p].forEach((t, e)=>get(this, e, false));\n                }\n            }\n            const get = (t, e, i)=>{\n                const s = t[p].get(e);\n                if (s) {\n                    const e = s.value;\n                    if (isStale(t, e)) {\n                        del(t, s);\n                        if (!t[h]) return undefined;\n                    } else {\n                        if (i) {\n                            if (t[v]) s.value.now = Date.now();\n                            t[f].unshiftNode(s);\n                        }\n                    }\n                    return e.value;\n                }\n            };\n            const isStale = (t, e)=>{\n                if (!e || !e.maxAge && !t[a]) return false;\n                const i = Date.now() - e.now;\n                return e.maxAge ? i > e.maxAge : t[a] && i > t[a];\n            };\n            const trim = (t)=>{\n                if (t[l] > t[n]) {\n                    for(let e = t[f].tail; t[l] > t[n] && e !== null;){\n                        const i = e.prev;\n                        del(t, e);\n                        e = i;\n                    }\n                }\n            };\n            const del = (t, e)=>{\n                if (e) {\n                    const i = e.value;\n                    if (t[o]) t[o](i.key, i.value);\n                    t[l] -= i.length;\n                    t[p].delete(i.key);\n                    t[f].removeNode(e);\n                }\n            };\n            class Entry {\n                constructor(t, e, i, s, n){\n                    this.key = t;\n                    this.value = e;\n                    this.length = i;\n                    this.now = s;\n                    this.maxAge = n || 0;\n                }\n            }\n            const forEachStep = (t, e, i, s)=>{\n                let n = i.value;\n                if (isStale(t, n)) {\n                    del(t, i);\n                    if (!t[h]) n = undefined;\n                }\n                if (n) e.call(s, n.value, n.key, t);\n            };\n            t.exports = LRUCache;\n        },\n        76: (t)=>{\n            t.exports = function(t) {\n                t.prototype[Symbol.iterator] = function*() {\n                    for(let t = this.head; t; t = t.next){\n                        yield t.value;\n                    }\n                };\n            };\n        },\n        190: (t, e, i)=>{\n            t.exports = Yallist;\n            Yallist.Node = Node;\n            Yallist.create = Yallist;\n            function Yallist(t) {\n                var e = this;\n                if (!(e instanceof Yallist)) {\n                    e = new Yallist;\n                }\n                e.tail = null;\n                e.head = null;\n                e.length = 0;\n                if (t && typeof t.forEach === \"function\") {\n                    t.forEach(function(t) {\n                        e.push(t);\n                    });\n                } else if (arguments.length > 0) {\n                    for(var i = 0, s = arguments.length; i < s; i++){\n                        e.push(arguments[i]);\n                    }\n                }\n                return e;\n            }\n            Yallist.prototype.removeNode = function(t) {\n                if (t.list !== this) {\n                    throw new Error(\"removing node which does not belong to this list\");\n                }\n                var e = t.next;\n                var i = t.prev;\n                if (e) {\n                    e.prev = i;\n                }\n                if (i) {\n                    i.next = e;\n                }\n                if (t === this.head) {\n                    this.head = e;\n                }\n                if (t === this.tail) {\n                    this.tail = i;\n                }\n                t.list.length--;\n                t.next = null;\n                t.prev = null;\n                t.list = null;\n                return e;\n            };\n            Yallist.prototype.unshiftNode = function(t) {\n                if (t === this.head) {\n                    return;\n                }\n                if (t.list) {\n                    t.list.removeNode(t);\n                }\n                var e = this.head;\n                t.list = this;\n                t.next = e;\n                if (e) {\n                    e.prev = t;\n                }\n                this.head = t;\n                if (!this.tail) {\n                    this.tail = t;\n                }\n                this.length++;\n            };\n            Yallist.prototype.pushNode = function(t) {\n                if (t === this.tail) {\n                    return;\n                }\n                if (t.list) {\n                    t.list.removeNode(t);\n                }\n                var e = this.tail;\n                t.list = this;\n                t.prev = e;\n                if (e) {\n                    e.next = t;\n                }\n                this.tail = t;\n                if (!this.head) {\n                    this.head = t;\n                }\n                this.length++;\n            };\n            Yallist.prototype.push = function() {\n                for(var t = 0, e = arguments.length; t < e; t++){\n                    push(this, arguments[t]);\n                }\n                return this.length;\n            };\n            Yallist.prototype.unshift = function() {\n                for(var t = 0, e = arguments.length; t < e; t++){\n                    unshift(this, arguments[t]);\n                }\n                return this.length;\n            };\n            Yallist.prototype.pop = function() {\n                if (!this.tail) {\n                    return undefined;\n                }\n                var t = this.tail.value;\n                this.tail = this.tail.prev;\n                if (this.tail) {\n                    this.tail.next = null;\n                } else {\n                    this.head = null;\n                }\n                this.length--;\n                return t;\n            };\n            Yallist.prototype.shift = function() {\n                if (!this.head) {\n                    return undefined;\n                }\n                var t = this.head.value;\n                this.head = this.head.next;\n                if (this.head) {\n                    this.head.prev = null;\n                } else {\n                    this.tail = null;\n                }\n                this.length--;\n                return t;\n            };\n            Yallist.prototype.forEach = function(t, e) {\n                e = e || this;\n                for(var i = this.head, s = 0; i !== null; s++){\n                    t.call(e, i.value, s, this);\n                    i = i.next;\n                }\n            };\n            Yallist.prototype.forEachReverse = function(t, e) {\n                e = e || this;\n                for(var i = this.tail, s = this.length - 1; i !== null; s--){\n                    t.call(e, i.value, s, this);\n                    i = i.prev;\n                }\n            };\n            Yallist.prototype.get = function(t) {\n                for(var e = 0, i = this.head; i !== null && e < t; e++){\n                    i = i.next;\n                }\n                if (e === t && i !== null) {\n                    return i.value;\n                }\n            };\n            Yallist.prototype.getReverse = function(t) {\n                for(var e = 0, i = this.tail; i !== null && e < t; e++){\n                    i = i.prev;\n                }\n                if (e === t && i !== null) {\n                    return i.value;\n                }\n            };\n            Yallist.prototype.map = function(t, e) {\n                e = e || this;\n                var i = new Yallist;\n                for(var s = this.head; s !== null;){\n                    i.push(t.call(e, s.value, this));\n                    s = s.next;\n                }\n                return i;\n            };\n            Yallist.prototype.mapReverse = function(t, e) {\n                e = e || this;\n                var i = new Yallist;\n                for(var s = this.tail; s !== null;){\n                    i.push(t.call(e, s.value, this));\n                    s = s.prev;\n                }\n                return i;\n            };\n            Yallist.prototype.reduce = function(t, e) {\n                var i;\n                var s = this.head;\n                if (arguments.length > 1) {\n                    i = e;\n                } else if (this.head) {\n                    s = this.head.next;\n                    i = this.head.value;\n                } else {\n                    throw new TypeError(\"Reduce of empty list with no initial value\");\n                }\n                for(var n = 0; s !== null; n++){\n                    i = t(i, s.value, n);\n                    s = s.next;\n                }\n                return i;\n            };\n            Yallist.prototype.reduceReverse = function(t, e) {\n                var i;\n                var s = this.tail;\n                if (arguments.length > 1) {\n                    i = e;\n                } else if (this.tail) {\n                    s = this.tail.prev;\n                    i = this.tail.value;\n                } else {\n                    throw new TypeError(\"Reduce of empty list with no initial value\");\n                }\n                for(var n = this.length - 1; s !== null; n--){\n                    i = t(i, s.value, n);\n                    s = s.prev;\n                }\n                return i;\n            };\n            Yallist.prototype.toArray = function() {\n                var t = new Array(this.length);\n                for(var e = 0, i = this.head; i !== null; e++){\n                    t[e] = i.value;\n                    i = i.next;\n                }\n                return t;\n            };\n            Yallist.prototype.toArrayReverse = function() {\n                var t = new Array(this.length);\n                for(var e = 0, i = this.tail; i !== null; e++){\n                    t[e] = i.value;\n                    i = i.prev;\n                }\n                return t;\n            };\n            Yallist.prototype.slice = function(t, e) {\n                e = e || this.length;\n                if (e < 0) {\n                    e += this.length;\n                }\n                t = t || 0;\n                if (t < 0) {\n                    t += this.length;\n                }\n                var i = new Yallist;\n                if (e < t || e < 0) {\n                    return i;\n                }\n                if (t < 0) {\n                    t = 0;\n                }\n                if (e > this.length) {\n                    e = this.length;\n                }\n                for(var s = 0, n = this.head; n !== null && s < t; s++){\n                    n = n.next;\n                }\n                for(; n !== null && s < e; s++, n = n.next){\n                    i.push(n.value);\n                }\n                return i;\n            };\n            Yallist.prototype.sliceReverse = function(t, e) {\n                e = e || this.length;\n                if (e < 0) {\n                    e += this.length;\n                }\n                t = t || 0;\n                if (t < 0) {\n                    t += this.length;\n                }\n                var i = new Yallist;\n                if (e < t || e < 0) {\n                    return i;\n                }\n                if (t < 0) {\n                    t = 0;\n                }\n                if (e > this.length) {\n                    e = this.length;\n                }\n                for(var s = this.length, n = this.tail; n !== null && s > e; s--){\n                    n = n.prev;\n                }\n                for(; n !== null && s > t; s--, n = n.prev){\n                    i.push(n.value);\n                }\n                return i;\n            };\n            Yallist.prototype.splice = function(t, e) {\n                if (t > this.length) {\n                    t = this.length - 1;\n                }\n                if (t < 0) {\n                    t = this.length + t;\n                }\n                for(var i = 0, s = this.head; s !== null && i < t; i++){\n                    s = s.next;\n                }\n                var n = [];\n                for(var i = 0; s && i < e; i++){\n                    n.push(s.value);\n                    s = this.removeNode(s);\n                }\n                if (s === null) {\n                    s = this.tail;\n                }\n                if (s !== this.head && s !== this.tail) {\n                    s = s.prev;\n                }\n                for(var i = 2; i < arguments.length; i++){\n                    s = insert(this, s, arguments[i]);\n                }\n                return n;\n            };\n            Yallist.prototype.reverse = function() {\n                var t = this.head;\n                var e = this.tail;\n                for(var i = t; i !== null; i = i.prev){\n                    var s = i.prev;\n                    i.prev = i.next;\n                    i.next = s;\n                }\n                this.head = e;\n                this.tail = t;\n                return this;\n            };\n            function insert(t, e, i) {\n                var s = e === t.head ? new Node(i, null, e, t) : new Node(i, e, e.next, t);\n                if (s.next === null) {\n                    t.tail = s;\n                }\n                if (s.prev === null) {\n                    t.head = s;\n                }\n                t.length++;\n                return s;\n            }\n            function push(t, e) {\n                t.tail = new Node(e, t.tail, null, t);\n                if (!t.head) {\n                    t.head = t.tail;\n                }\n                t.length++;\n            }\n            function unshift(t, e) {\n                t.head = new Node(e, null, t.head, t);\n                if (!t.tail) {\n                    t.tail = t.head;\n                }\n                t.length++;\n            }\n            function Node(t, e, i, s) {\n                if (!(this instanceof Node)) {\n                    return new Node(t, e, i, s);\n                }\n                this.list = s;\n                this.value = t;\n                if (e) {\n                    e.next = this;\n                    this.prev = e;\n                } else {\n                    this.prev = null;\n                }\n                if (i) {\n                    i.prev = this;\n                    this.next = i;\n                } else {\n                    this.next = null;\n                }\n            }\n            try {\n                i(76)(Yallist);\n            } catch (t) {}\n        }\n    };\n    var e = {};\n    function __nccwpck_require__(i) {\n        var s = e[i];\n        if (s !== undefined) {\n            return s.exports;\n        }\n        var n = e[i] = {\n            exports: {}\n        };\n        var l = true;\n        try {\n            t[i](n, n.exports, __nccwpck_require__);\n            l = false;\n        } finally{\n            if (l) delete e[i];\n        }\n        return n.exports;\n    }\n    if (typeof __nccwpck_require__ !== \"undefined\") __nccwpck_require__.ab = __dirname + \"/\";\n    var i = __nccwpck_require__(806);\n    module.exports = i;\n})();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/compiled/lru-cache/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/compiled/path-browserify/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/compiled/path-browserify/index.js ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
eval("var __dirname = \"/\";\n\n(function() {\n    \"use strict\";\n    var e = {\n        114: function(e) {\n            function assertPath(e) {\n                if (typeof e !== \"string\") {\n                    throw new TypeError(\"Path must be a string. Received \" + JSON.stringify(e));\n                }\n            }\n            function normalizeStringPosix(e, r) {\n                var t = \"\";\n                var i = 0;\n                var n = -1;\n                var a = 0;\n                var f;\n                for(var l = 0; l <= e.length; ++l){\n                    if (l < e.length) f = e.charCodeAt(l);\n                    else if (f === 47) break;\n                    else f = 47;\n                    if (f === 47) {\n                        if (n === l - 1 || a === 1) {} else if (n !== l - 1 && a === 2) {\n                            if (t.length < 2 || i !== 2 || t.charCodeAt(t.length - 1) !== 46 || t.charCodeAt(t.length - 2) !== 46) {\n                                if (t.length > 2) {\n                                    var s = t.lastIndexOf(\"/\");\n                                    if (s !== t.length - 1) {\n                                        if (s === -1) {\n                                            t = \"\";\n                                            i = 0;\n                                        } else {\n                                            t = t.slice(0, s);\n                                            i = t.length - 1 - t.lastIndexOf(\"/\");\n                                        }\n                                        n = l;\n                                        a = 0;\n                                        continue;\n                                    }\n                                } else if (t.length === 2 || t.length === 1) {\n                                    t = \"\";\n                                    i = 0;\n                                    n = l;\n                                    a = 0;\n                                    continue;\n                                }\n                            }\n                            if (r) {\n                                if (t.length > 0) t += \"/..\";\n                                else t = \"..\";\n                                i = 2;\n                            }\n                        } else {\n                            if (t.length > 0) t += \"/\" + e.slice(n + 1, l);\n                            else t = e.slice(n + 1, l);\n                            i = l - n - 1;\n                        }\n                        n = l;\n                        a = 0;\n                    } else if (f === 46 && a !== -1) {\n                        ++a;\n                    } else {\n                        a = -1;\n                    }\n                }\n                return t;\n            }\n            function _format(e, r) {\n                var t = r.dir || r.root;\n                var i = r.base || (r.name || \"\") + (r.ext || \"\");\n                if (!t) {\n                    return i;\n                }\n                if (t === r.root) {\n                    return t + i;\n                }\n                return t + e + i;\n            }\n            var r = {\n                resolve: function resolve() {\n                    var e = \"\";\n                    var r = false;\n                    var t;\n                    for(var i = arguments.length - 1; i >= -1 && !r; i--){\n                        var n;\n                        if (i >= 0) n = arguments[i];\n                        else {\n                            if (t === undefined) t = \"\";\n                            n = t;\n                        }\n                        assertPath(n);\n                        if (n.length === 0) {\n                            continue;\n                        }\n                        e = n + \"/\" + e;\n                        r = n.charCodeAt(0) === 47;\n                    }\n                    e = normalizeStringPosix(e, !r);\n                    if (r) {\n                        if (e.length > 0) return \"/\" + e;\n                        else return \"/\";\n                    } else if (e.length > 0) {\n                        return e;\n                    } else {\n                        return \".\";\n                    }\n                },\n                normalize: function normalize(e) {\n                    assertPath(e);\n                    if (e.length === 0) return \".\";\n                    var r = e.charCodeAt(0) === 47;\n                    var t = e.charCodeAt(e.length - 1) === 47;\n                    e = normalizeStringPosix(e, !r);\n                    if (e.length === 0 && !r) e = \".\";\n                    if (e.length > 0 && t) e += \"/\";\n                    if (r) return \"/\" + e;\n                    return e;\n                },\n                isAbsolute: function isAbsolute(e) {\n                    assertPath(e);\n                    return e.length > 0 && e.charCodeAt(0) === 47;\n                },\n                join: function join() {\n                    if (arguments.length === 0) return \".\";\n                    var e;\n                    for(var t = 0; t < arguments.length; ++t){\n                        var i = arguments[t];\n                        assertPath(i);\n                        if (i.length > 0) {\n                            if (e === undefined) e = i;\n                            else e += \"/\" + i;\n                        }\n                    }\n                    if (e === undefined) return \".\";\n                    return r.normalize(e);\n                },\n                relative: function relative(e, t) {\n                    assertPath(e);\n                    assertPath(t);\n                    if (e === t) return \"\";\n                    e = r.resolve(e);\n                    t = r.resolve(t);\n                    if (e === t) return \"\";\n                    var i = 1;\n                    for(; i < e.length; ++i){\n                        if (e.charCodeAt(i) !== 47) break;\n                    }\n                    var n = e.length;\n                    var a = n - i;\n                    var f = 1;\n                    for(; f < t.length; ++f){\n                        if (t.charCodeAt(f) !== 47) break;\n                    }\n                    var l = t.length;\n                    var s = l - f;\n                    var o = a < s ? a : s;\n                    var u = -1;\n                    var h = 0;\n                    for(; h <= o; ++h){\n                        if (h === o) {\n                            if (s > o) {\n                                if (t.charCodeAt(f + h) === 47) {\n                                    return t.slice(f + h + 1);\n                                } else if (h === 0) {\n                                    return t.slice(f + h);\n                                }\n                            } else if (a > o) {\n                                if (e.charCodeAt(i + h) === 47) {\n                                    u = h;\n                                } else if (h === 0) {\n                                    u = 0;\n                                }\n                            }\n                            break;\n                        }\n                        var c = e.charCodeAt(i + h);\n                        var v = t.charCodeAt(f + h);\n                        if (c !== v) break;\n                        else if (c === 47) u = h;\n                    }\n                    var g = \"\";\n                    for(h = i + u + 1; h <= n; ++h){\n                        if (h === n || e.charCodeAt(h) === 47) {\n                            if (g.length === 0) g += \"..\";\n                            else g += \"/..\";\n                        }\n                    }\n                    if (g.length > 0) return g + t.slice(f + u);\n                    else {\n                        f += u;\n                        if (t.charCodeAt(f) === 47) ++f;\n                        return t.slice(f);\n                    }\n                },\n                _makeLong: function _makeLong(e) {\n                    return e;\n                },\n                dirname: function dirname(e) {\n                    assertPath(e);\n                    if (e.length === 0) return \".\";\n                    var r = e.charCodeAt(0);\n                    var t = r === 47;\n                    var i = -1;\n                    var n = true;\n                    for(var a = e.length - 1; a >= 1; --a){\n                        r = e.charCodeAt(a);\n                        if (r === 47) {\n                            if (!n) {\n                                i = a;\n                                break;\n                            }\n                        } else {\n                            n = false;\n                        }\n                    }\n                    if (i === -1) return t ? \"/\" : \".\";\n                    if (t && i === 1) return \"//\";\n                    return e.slice(0, i);\n                },\n                basename: function basename(e, r) {\n                    if (r !== undefined && typeof r !== \"string\") throw new TypeError('\"ext\" argument must be a string');\n                    assertPath(e);\n                    var t = 0;\n                    var i = -1;\n                    var n = true;\n                    var a;\n                    if (r !== undefined && r.length > 0 && r.length <= e.length) {\n                        if (r.length === e.length && r === e) return \"\";\n                        var f = r.length - 1;\n                        var l = -1;\n                        for(a = e.length - 1; a >= 0; --a){\n                            var s = e.charCodeAt(a);\n                            if (s === 47) {\n                                if (!n) {\n                                    t = a + 1;\n                                    break;\n                                }\n                            } else {\n                                if (l === -1) {\n                                    n = false;\n                                    l = a + 1;\n                                }\n                                if (f >= 0) {\n                                    if (s === r.charCodeAt(f)) {\n                                        if (--f === -1) {\n                                            i = a;\n                                        }\n                                    } else {\n                                        f = -1;\n                                        i = l;\n                                    }\n                                }\n                            }\n                        }\n                        if (t === i) i = l;\n                        else if (i === -1) i = e.length;\n                        return e.slice(t, i);\n                    } else {\n                        for(a = e.length - 1; a >= 0; --a){\n                            if (e.charCodeAt(a) === 47) {\n                                if (!n) {\n                                    t = a + 1;\n                                    break;\n                                }\n                            } else if (i === -1) {\n                                n = false;\n                                i = a + 1;\n                            }\n                        }\n                        if (i === -1) return \"\";\n                        return e.slice(t, i);\n                    }\n                },\n                extname: function extname(e) {\n                    assertPath(e);\n                    var r = -1;\n                    var t = 0;\n                    var i = -1;\n                    var n = true;\n                    var a = 0;\n                    for(var f = e.length - 1; f >= 0; --f){\n                        var l = e.charCodeAt(f);\n                        if (l === 47) {\n                            if (!n) {\n                                t = f + 1;\n                                break;\n                            }\n                            continue;\n                        }\n                        if (i === -1) {\n                            n = false;\n                            i = f + 1;\n                        }\n                        if (l === 46) {\n                            if (r === -1) r = f;\n                            else if (a !== 1) a = 1;\n                        } else if (r !== -1) {\n                            a = -1;\n                        }\n                    }\n                    if (r === -1 || i === -1 || a === 0 || a === 1 && r === i - 1 && r === t + 1) {\n                        return \"\";\n                    }\n                    return e.slice(r, i);\n                },\n                format: function format(e) {\n                    if (e === null || typeof e !== \"object\") {\n                        throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof e);\n                    }\n                    return _format(\"/\", e);\n                },\n                parse: function parse(e) {\n                    assertPath(e);\n                    var r = {\n                        root: \"\",\n                        dir: \"\",\n                        base: \"\",\n                        ext: \"\",\n                        name: \"\"\n                    };\n                    if (e.length === 0) return r;\n                    var t = e.charCodeAt(0);\n                    var i = t === 47;\n                    var n;\n                    if (i) {\n                        r.root = \"/\";\n                        n = 1;\n                    } else {\n                        n = 0;\n                    }\n                    var a = -1;\n                    var f = 0;\n                    var l = -1;\n                    var s = true;\n                    var o = e.length - 1;\n                    var u = 0;\n                    for(; o >= n; --o){\n                        t = e.charCodeAt(o);\n                        if (t === 47) {\n                            if (!s) {\n                                f = o + 1;\n                                break;\n                            }\n                            continue;\n                        }\n                        if (l === -1) {\n                            s = false;\n                            l = o + 1;\n                        }\n                        if (t === 46) {\n                            if (a === -1) a = o;\n                            else if (u !== 1) u = 1;\n                        } else if (a !== -1) {\n                            u = -1;\n                        }\n                    }\n                    if (a === -1 || l === -1 || u === 0 || u === 1 && a === l - 1 && a === f + 1) {\n                        if (l !== -1) {\n                            if (f === 0 && i) r.base = r.name = e.slice(1, l);\n                            else r.base = r.name = e.slice(f, l);\n                        }\n                    } else {\n                        if (f === 0 && i) {\n                            r.name = e.slice(1, a);\n                            r.base = e.slice(1, l);\n                        } else {\n                            r.name = e.slice(f, a);\n                            r.base = e.slice(f, l);\n                        }\n                        r.ext = e.slice(a, l);\n                    }\n                    if (f > 0) r.dir = e.slice(0, f - 1);\n                    else if (i) r.dir = \"/\";\n                    return r;\n                },\n                sep: \"/\",\n                delimiter: \":\",\n                win32: null,\n                posix: null\n            };\n            r.posix = r;\n            e.exports = r;\n        }\n    };\n    var r = {};\n    function __nccwpck_require__(t) {\n        var i = r[t];\n        if (i !== undefined) {\n            return i.exports;\n        }\n        var n = r[t] = {\n            exports: {}\n        };\n        var a = true;\n        try {\n            e[t](n, n.exports, __nccwpck_require__);\n            a = false;\n        } finally{\n            if (a) delete r[t];\n        }\n        return n.exports;\n    }\n    if (typeof __nccwpck_require__ !== \"undefined\") __nccwpck_require__.ab = __dirname + \"/\";\n    var t = __nccwpck_require__(114);\n    module.exports = t;\n})();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/compiled/path-browserify/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/client/components/app-router-headers.js":
/*!****************************************************************************!*\
  !*** ./node_modules/next/dist/esm/client/components/app-router-headers.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ACTION: () => (/* binding */ ACTION),\n/* harmony export */   FLIGHT_PARAMETERS: () => (/* binding */ FLIGHT_PARAMETERS),\n/* harmony export */   NEXT_ROUTER_PREFETCH: () => (/* binding */ NEXT_ROUTER_PREFETCH),\n/* harmony export */   NEXT_ROUTER_STATE_TREE: () => (/* binding */ NEXT_ROUTER_STATE_TREE),\n/* harmony export */   NEXT_RSC_UNION_QUERY: () => (/* binding */ NEXT_RSC_UNION_QUERY),\n/* harmony export */   NEXT_URL: () => (/* binding */ NEXT_URL),\n/* harmony export */   RSC: () => (/* binding */ RSC),\n/* harmony export */   RSC_CONTENT_TYPE_HEADER: () => (/* binding */ RSC_CONTENT_TYPE_HEADER),\n/* harmony export */   RSC_VARY_HEADER: () => (/* binding */ RSC_VARY_HEADER)\n/* harmony export */ });\nconst RSC = \"RSC\";\nconst ACTION = \"Next-Action\";\nconst NEXT_ROUTER_STATE_TREE = \"Next-Router-State-Tree\";\nconst NEXT_ROUTER_PREFETCH = \"Next-Router-Prefetch\";\nconst NEXT_URL = \"Next-Url\";\nconst RSC_CONTENT_TYPE_HEADER = \"text/x-component\";\nconst RSC_VARY_HEADER = RSC + \", \" + NEXT_ROUTER_STATE_TREE + \", \" + NEXT_ROUTER_PREFETCH + \", \" + NEXT_URL;\nconst FLIGHT_PARAMETERS = [\n    [\n        RSC\n    ],\n    [\n        NEXT_ROUTER_STATE_TREE\n    ],\n    [\n        NEXT_ROUTER_PREFETCH\n    ]\n];\nconst NEXT_RSC_UNION_QUERY = \"_rsc\"; //# sourceMappingURL=app-router-headers.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vY2xpZW50L2NvbXBvbmVudHMvYXBwLXJvdXRlci1oZWFkZXJzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFPLE1BQU1BLE1BQU0sTUFBTTtBQUNsQixNQUFNQyxTQUFTLGNBQWM7QUFDN0IsTUFBTUMseUJBQXlCLHlCQUF5QjtBQUN4RCxNQUFNQyx1QkFBdUIsdUJBQXVCO0FBQ3BELE1BQU1DLFdBQVcsV0FBVztBQUM1QixNQUFNQywwQkFBMEIsbUJBQW1CO0FBQ25ELE1BQU1DLGtCQUFrQk4sTUFBTSxPQUFPRSx5QkFBeUIsT0FBT0MsdUJBQXVCLE9BQU9DLFNBQVM7QUFDNUcsTUFBTUcsb0JBQW9CO0lBQzdCO1FBQ0lQO0tBQ0g7SUFDRDtRQUNJRTtLQUNIO0lBQ0Q7UUFDSUM7S0FDSDtDQUNKLENBQUM7QUFDSyxNQUFNSyx1QkFBdUIsT0FBTyxDQUUzQyw4Q0FBOEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vY2xpZW50L2NvbXBvbmVudHMvYXBwLXJvdXRlci1oZWFkZXJzLmpzPzIyN2EiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IFJTQyA9IFwiUlNDXCI7XG5leHBvcnQgY29uc3QgQUNUSU9OID0gXCJOZXh0LUFjdGlvblwiO1xuZXhwb3J0IGNvbnN0IE5FWFRfUk9VVEVSX1NUQVRFX1RSRUUgPSBcIk5leHQtUm91dGVyLVN0YXRlLVRyZWVcIjtcbmV4cG9ydCBjb25zdCBORVhUX1JPVVRFUl9QUkVGRVRDSCA9IFwiTmV4dC1Sb3V0ZXItUHJlZmV0Y2hcIjtcbmV4cG9ydCBjb25zdCBORVhUX1VSTCA9IFwiTmV4dC1VcmxcIjtcbmV4cG9ydCBjb25zdCBSU0NfQ09OVEVOVF9UWVBFX0hFQURFUiA9IFwidGV4dC94LWNvbXBvbmVudFwiO1xuZXhwb3J0IGNvbnN0IFJTQ19WQVJZX0hFQURFUiA9IFJTQyArIFwiLCBcIiArIE5FWFRfUk9VVEVSX1NUQVRFX1RSRUUgKyBcIiwgXCIgKyBORVhUX1JPVVRFUl9QUkVGRVRDSCArIFwiLCBcIiArIE5FWFRfVVJMO1xuZXhwb3J0IGNvbnN0IEZMSUdIVF9QQVJBTUVURVJTID0gW1xuICAgIFtcbiAgICAgICAgUlNDXG4gICAgXSxcbiAgICBbXG4gICAgICAgIE5FWFRfUk9VVEVSX1NUQVRFX1RSRUVcbiAgICBdLFxuICAgIFtcbiAgICAgICAgTkVYVF9ST1VURVJfUFJFRkVUQ0hcbiAgICBdXG5dO1xuZXhwb3J0IGNvbnN0IE5FWFRfUlNDX1VOSU9OX1FVRVJZID0gXCJfcnNjXCI7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZXItaGVhZGVycy5qcy5tYXAiXSwibmFtZXMiOlsiUlNDIiwiQUNUSU9OIiwiTkVYVF9ST1VURVJfU1RBVEVfVFJFRSIsIk5FWFRfUk9VVEVSX1BSRUZFVENIIiwiTkVYVF9VUkwiLCJSU0NfQ09OVEVOVF9UWVBFX0hFQURFUiIsIlJTQ19WQVJZX0hFQURFUiIsIkZMSUdIVF9QQVJBTUVURVJTIiwiTkVYVF9SU0NfVU5JT05fUVVFUlkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/client/components/app-router-headers.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/client/components/async-local-storage.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/next/dist/esm/client/components/async-local-storage.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createAsyncLocalStorage: () => (/* binding */ createAsyncLocalStorage)\n/* harmony export */ });\nconst sharedAsyncLocalStorageNotAvailableError = new Error(\"Invariant: AsyncLocalStorage accessed in runtime where it is not available\");\nclass FakeAsyncLocalStorage {\n    disable() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    getStore() {\n        // This fake implementation of AsyncLocalStorage always returns `undefined`.\n        return undefined;\n    }\n    run() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    exit() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    enterWith() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n}\nconst maybeGlobalAsyncLocalStorage = globalThis.AsyncLocalStorage;\nfunction createAsyncLocalStorage() {\n    if (maybeGlobalAsyncLocalStorage) {\n        return new maybeGlobalAsyncLocalStorage();\n    }\n    return new FakeAsyncLocalStorage();\n} //# sourceMappingURL=async-local-storage.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vY2xpZW50L2NvbXBvbmVudHMvYXN5bmMtbG9jYWwtc3RvcmFnZS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsTUFBTUEsMkNBQTJDLElBQUlDLE1BQU07QUFDM0QsTUFBTUM7SUFDRkMsVUFBVTtRQUNOLE1BQU1IO0lBQ1Y7SUFDQUksV0FBVztRQUNQLDRFQUE0RTtRQUM1RSxPQUFPQztJQUNYO0lBQ0FDLE1BQU07UUFDRixNQUFNTjtJQUNWO0lBQ0FPLE9BQU87UUFDSCxNQUFNUDtJQUNWO0lBQ0FRLFlBQVk7UUFDUixNQUFNUjtJQUNWO0FBQ0o7QUFDQSxNQUFNUywrQkFBK0JDLFdBQVdDLGlCQUFpQjtBQUMxRCxTQUFTQztJQUNaLElBQUlILDhCQUE4QjtRQUM5QixPQUFPLElBQUlBO0lBQ2Y7SUFDQSxPQUFPLElBQUlQO0FBQ2YsRUFFQSwrQ0FBK0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vY2xpZW50L2NvbXBvbmVudHMvYXN5bmMtbG9jYWwtc3RvcmFnZS5qcz9iNDJmIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHNoYXJlZEFzeW5jTG9jYWxTdG9yYWdlTm90QXZhaWxhYmxlRXJyb3IgPSBuZXcgRXJyb3IoXCJJbnZhcmlhbnQ6IEFzeW5jTG9jYWxTdG9yYWdlIGFjY2Vzc2VkIGluIHJ1bnRpbWUgd2hlcmUgaXQgaXMgbm90IGF2YWlsYWJsZVwiKTtcbmNsYXNzIEZha2VBc3luY0xvY2FsU3RvcmFnZSB7XG4gICAgZGlzYWJsZSgpIHtcbiAgICAgICAgdGhyb3cgc2hhcmVkQXN5bmNMb2NhbFN0b3JhZ2VOb3RBdmFpbGFibGVFcnJvcjtcbiAgICB9XG4gICAgZ2V0U3RvcmUoKSB7XG4gICAgICAgIC8vIFRoaXMgZmFrZSBpbXBsZW1lbnRhdGlvbiBvZiBBc3luY0xvY2FsU3RvcmFnZSBhbHdheXMgcmV0dXJucyBgdW5kZWZpbmVkYC5cbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgcnVuKCkge1xuICAgICAgICB0aHJvdyBzaGFyZWRBc3luY0xvY2FsU3RvcmFnZU5vdEF2YWlsYWJsZUVycm9yO1xuICAgIH1cbiAgICBleGl0KCkge1xuICAgICAgICB0aHJvdyBzaGFyZWRBc3luY0xvY2FsU3RvcmFnZU5vdEF2YWlsYWJsZUVycm9yO1xuICAgIH1cbiAgICBlbnRlcldpdGgoKSB7XG4gICAgICAgIHRocm93IHNoYXJlZEFzeW5jTG9jYWxTdG9yYWdlTm90QXZhaWxhYmxlRXJyb3I7XG4gICAgfVxufVxuY29uc3QgbWF5YmVHbG9iYWxBc3luY0xvY2FsU3RvcmFnZSA9IGdsb2JhbFRoaXMuQXN5bmNMb2NhbFN0b3JhZ2U7XG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQXN5bmNMb2NhbFN0b3JhZ2UoKSB7XG4gICAgaWYgKG1heWJlR2xvYmFsQXN5bmNMb2NhbFN0b3JhZ2UpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBtYXliZUdsb2JhbEFzeW5jTG9jYWxTdG9yYWdlKCk7XG4gICAgfVxuICAgIHJldHVybiBuZXcgRmFrZUFzeW5jTG9jYWxTdG9yYWdlKCk7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFzeW5jLWxvY2FsLXN0b3JhZ2UuanMubWFwIl0sIm5hbWVzIjpbInNoYXJlZEFzeW5jTG9jYWxTdG9yYWdlTm90QXZhaWxhYmxlRXJyb3IiLCJFcnJvciIsIkZha2VBc3luY0xvY2FsU3RvcmFnZSIsImRpc2FibGUiLCJnZXRTdG9yZSIsInVuZGVmaW5lZCIsInJ1biIsImV4aXQiLCJlbnRlcldpdGgiLCJtYXliZUdsb2JhbEFzeW5jTG9jYWxTdG9yYWdlIiwiZ2xvYmFsVGhpcyIsIkFzeW5jTG9jYWxTdG9yYWdlIiwiY3JlYXRlQXN5bmNMb2NhbFN0b3JhZ2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/client/components/async-local-storage.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/client/components/request-async-storage.external.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next/dist/esm/client/components/request-async-storage.external.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var _async_local_storage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./async-local-storage */ \"(middleware)/./node_modules/next/dist/esm/client/components/async-local-storage.js\");\n\nconst requestAsyncStorage = (0,_async_local_storage__WEBPACK_IMPORTED_MODULE_0__.createAsyncLocalStorage)(); //# sourceMappingURL=request-async-storage.external.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vY2xpZW50L2NvbXBvbmVudHMvcmVxdWVzdC1hc3luYy1zdG9yYWdlLmV4dGVybmFsLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWdFO0FBQ3pELE1BQU1DLHNCQUFzQkQsNkVBQXVCQSxHQUFHLENBRTdELDBEQUEwRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9jbGllbnQvY29tcG9uZW50cy9yZXF1ZXN0LWFzeW5jLXN0b3JhZ2UuZXh0ZXJuYWwuanM/Yjc2MiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVBc3luY0xvY2FsU3RvcmFnZSB9IGZyb20gXCIuL2FzeW5jLWxvY2FsLXN0b3JhZ2VcIjtcbmV4cG9ydCBjb25zdCByZXF1ZXN0QXN5bmNTdG9yYWdlID0gY3JlYXRlQXN5bmNMb2NhbFN0b3JhZ2UoKTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVxdWVzdC1hc3luYy1zdG9yYWdlLmV4dGVybmFsLmpzLm1hcCJdLCJuYW1lcyI6WyJjcmVhdGVBc3luY0xvY2FsU3RvcmFnZSIsInJlcXVlc3RBc3luY1N0b3JhZ2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/client/components/request-async-storage.external.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/lib/constants.js":
/*!*****************************************************!*\
  !*** ./node_modules/next/dist/esm/lib/constants.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   APP_DIR_ALIAS: () => (/* binding */ APP_DIR_ALIAS),\n/* harmony export */   CACHE_ONE_YEAR: () => (/* binding */ CACHE_ONE_YEAR),\n/* harmony export */   DOT_NEXT_ALIAS: () => (/* binding */ DOT_NEXT_ALIAS),\n/* harmony export */   ESLINT_DEFAULT_DIRS: () => (/* binding */ ESLINT_DEFAULT_DIRS),\n/* harmony export */   ESLINT_PROMPT_VALUES: () => (/* binding */ ESLINT_PROMPT_VALUES),\n/* harmony export */   GSP_NO_RETURNED_VALUE: () => (/* binding */ GSP_NO_RETURNED_VALUE),\n/* harmony export */   GSSP_COMPONENT_MEMBER_ERROR: () => (/* binding */ GSSP_COMPONENT_MEMBER_ERROR),\n/* harmony export */   GSSP_NO_RETURNED_VALUE: () => (/* binding */ GSSP_NO_RETURNED_VALUE),\n/* harmony export */   INSTRUMENTATION_HOOK_FILENAME: () => (/* binding */ INSTRUMENTATION_HOOK_FILENAME),\n/* harmony export */   MIDDLEWARE_FILENAME: () => (/* binding */ MIDDLEWARE_FILENAME),\n/* harmony export */   MIDDLEWARE_LOCATION_REGEXP: () => (/* binding */ MIDDLEWARE_LOCATION_REGEXP),\n/* harmony export */   NEXT_CACHE_IMPLICIT_TAG_ID: () => (/* binding */ NEXT_CACHE_IMPLICIT_TAG_ID),\n/* harmony export */   NEXT_CACHE_REVALIDATED_TAGS_HEADER: () => (/* binding */ NEXT_CACHE_REVALIDATED_TAGS_HEADER),\n/* harmony export */   NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER: () => (/* binding */ NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER),\n/* harmony export */   NEXT_CACHE_SOFT_TAGS_HEADER: () => (/* binding */ NEXT_CACHE_SOFT_TAGS_HEADER),\n/* harmony export */   NEXT_CACHE_SOFT_TAG_MAX_LENGTH: () => (/* binding */ NEXT_CACHE_SOFT_TAG_MAX_LENGTH),\n/* harmony export */   NEXT_CACHE_TAGS_HEADER: () => (/* binding */ NEXT_CACHE_TAGS_HEADER),\n/* harmony export */   NEXT_CACHE_TAG_MAX_LENGTH: () => (/* binding */ NEXT_CACHE_TAG_MAX_LENGTH),\n/* harmony export */   NEXT_QUERY_PARAM_PREFIX: () => (/* binding */ NEXT_QUERY_PARAM_PREFIX),\n/* harmony export */   NON_STANDARD_NODE_ENV: () => (/* binding */ NON_STANDARD_NODE_ENV),\n/* harmony export */   PAGES_DIR_ALIAS: () => (/* binding */ PAGES_DIR_ALIAS),\n/* harmony export */   PRERENDER_REVALIDATE_HEADER: () => (/* binding */ PRERENDER_REVALIDATE_HEADER),\n/* harmony export */   PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER: () => (/* binding */ PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER),\n/* harmony export */   PUBLIC_DIR_MIDDLEWARE_CONFLICT: () => (/* binding */ PUBLIC_DIR_MIDDLEWARE_CONFLICT),\n/* harmony export */   ROOT_DIR_ALIAS: () => (/* binding */ ROOT_DIR_ALIAS),\n/* harmony export */   RSC_ACTION_CLIENT_WRAPPER_ALIAS: () => (/* binding */ RSC_ACTION_CLIENT_WRAPPER_ALIAS),\n/* harmony export */   RSC_ACTION_PROXY_ALIAS: () => (/* binding */ RSC_ACTION_PROXY_ALIAS),\n/* harmony export */   RSC_ACTION_VALIDATE_ALIAS: () => (/* binding */ RSC_ACTION_VALIDATE_ALIAS),\n/* harmony export */   RSC_MOD_REF_PROXY_ALIAS: () => (/* binding */ RSC_MOD_REF_PROXY_ALIAS),\n/* harmony export */   SERVER_PROPS_EXPORT_ERROR: () => (/* binding */ SERVER_PROPS_EXPORT_ERROR),\n/* harmony export */   SERVER_PROPS_GET_INIT_PROPS_CONFLICT: () => (/* binding */ SERVER_PROPS_GET_INIT_PROPS_CONFLICT),\n/* harmony export */   SERVER_PROPS_SSG_CONFLICT: () => (/* binding */ SERVER_PROPS_SSG_CONFLICT),\n/* harmony export */   SERVER_RUNTIME: () => (/* binding */ SERVER_RUNTIME),\n/* harmony export */   SSG_FALLBACK_EXPORT_ERROR: () => (/* binding */ SSG_FALLBACK_EXPORT_ERROR),\n/* harmony export */   SSG_GET_INITIAL_PROPS_CONFLICT: () => (/* binding */ SSG_GET_INITIAL_PROPS_CONFLICT),\n/* harmony export */   STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR: () => (/* binding */ STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR),\n/* harmony export */   UNSTABLE_REVALIDATE_RENAME_ERROR: () => (/* binding */ UNSTABLE_REVALIDATE_RENAME_ERROR),\n/* harmony export */   WEBPACK_LAYERS: () => (/* binding */ WEBPACK_LAYERS),\n/* harmony export */   WEBPACK_RESOURCE_QUERIES: () => (/* binding */ WEBPACK_RESOURCE_QUERIES)\n/* harmony export */ });\nconst NEXT_QUERY_PARAM_PREFIX = \"nxtP\";\nconst PRERENDER_REVALIDATE_HEADER = \"x-prerender-revalidate\";\nconst PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER = \"x-prerender-revalidate-if-generated\";\nconst NEXT_CACHE_TAGS_HEADER = \"x-next-cache-tags\";\nconst NEXT_CACHE_SOFT_TAGS_HEADER = \"x-next-cache-soft-tags\";\nconst NEXT_CACHE_REVALIDATED_TAGS_HEADER = \"x-next-revalidated-tags\";\nconst NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER = \"x-next-revalidate-tag-token\";\nconst NEXT_CACHE_TAG_MAX_LENGTH = 256;\nconst NEXT_CACHE_SOFT_TAG_MAX_LENGTH = 1024;\nconst NEXT_CACHE_IMPLICIT_TAG_ID = \"_N_T_\";\n// in seconds\nconst CACHE_ONE_YEAR = 31536000;\n// Patterns to detect middleware files\nconst MIDDLEWARE_FILENAME = \"middleware\";\nconst MIDDLEWARE_LOCATION_REGEXP = `(?:src/)?${MIDDLEWARE_FILENAME}`;\n// Pattern to detect instrumentation hooks file\nconst INSTRUMENTATION_HOOK_FILENAME = \"instrumentation\";\n// Because on Windows absolute paths in the generated code can break because of numbers, eg 1 in the path,\n// we have to use a private alias\nconst PAGES_DIR_ALIAS = \"private-next-pages\";\nconst DOT_NEXT_ALIAS = \"private-dot-next\";\nconst ROOT_DIR_ALIAS = \"private-next-root-dir\";\nconst APP_DIR_ALIAS = \"private-next-app-dir\";\nconst RSC_MOD_REF_PROXY_ALIAS = \"private-next-rsc-mod-ref-proxy\";\nconst RSC_ACTION_VALIDATE_ALIAS = \"private-next-rsc-action-validate\";\nconst RSC_ACTION_PROXY_ALIAS = \"private-next-rsc-action-proxy\";\nconst RSC_ACTION_CLIENT_WRAPPER_ALIAS = \"private-next-rsc-action-client-wrapper\";\nconst PUBLIC_DIR_MIDDLEWARE_CONFLICT = `You can not have a '_next' folder inside of your public folder. This conflicts with the internal '/_next' route. https://nextjs.org/docs/messages/public-next-folder-conflict`;\nconst SSG_GET_INITIAL_PROPS_CONFLICT = `You can not use getInitialProps with getStaticProps. To use SSG, please remove your getInitialProps`;\nconst SERVER_PROPS_GET_INIT_PROPS_CONFLICT = `You can not use getInitialProps with getServerSideProps. Please remove getInitialProps.`;\nconst SERVER_PROPS_SSG_CONFLICT = `You can not use getStaticProps or getStaticPaths with getServerSideProps. To use SSG, please remove getServerSideProps`;\nconst STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR = `can not have getInitialProps/getServerSideProps, https://nextjs.org/docs/messages/404-get-initial-props`;\nconst SERVER_PROPS_EXPORT_ERROR = `pages with \\`getServerSideProps\\` can not be exported. See more info here: https://nextjs.org/docs/messages/gssp-export`;\nconst GSP_NO_RETURNED_VALUE = \"Your `getStaticProps` function did not return an object. Did you forget to add a `return`?\";\nconst GSSP_NO_RETURNED_VALUE = \"Your `getServerSideProps` function did not return an object. Did you forget to add a `return`?\";\nconst UNSTABLE_REVALIDATE_RENAME_ERROR = \"The `unstable_revalidate` property is available for general use.\\n\" + \"Please use `revalidate` instead.\";\nconst GSSP_COMPONENT_MEMBER_ERROR = `can not be attached to a page's component and must be exported from the page. See more info here: https://nextjs.org/docs/messages/gssp-component-member`;\nconst NON_STANDARD_NODE_ENV = `You are using a non-standard \"NODE_ENV\" value in your environment. This creates inconsistencies in the project and is strongly advised against. Read more: https://nextjs.org/docs/messages/non-standard-node-env`;\nconst SSG_FALLBACK_EXPORT_ERROR = `Pages with \\`fallback\\` enabled in \\`getStaticPaths\\` can not be exported. See more info here: https://nextjs.org/docs/messages/ssg-fallback-true-export`;\nconst ESLINT_DEFAULT_DIRS = [\n    \"app\",\n    \"pages\",\n    \"components\",\n    \"lib\",\n    \"src\"\n];\nconst ESLINT_PROMPT_VALUES = [\n    {\n        title: \"Strict\",\n        recommended: true,\n        config: {\n            extends: \"next/core-web-vitals\"\n        }\n    },\n    {\n        title: \"Base\",\n        config: {\n            extends: \"next\"\n        }\n    },\n    {\n        title: \"Cancel\",\n        config: null\n    }\n];\nconst SERVER_RUNTIME = {\n    edge: \"edge\",\n    experimentalEdge: \"experimental-edge\",\n    nodejs: \"nodejs\"\n};\n/**\n * The names of the webpack layers. These layers are the primitives for the\n * webpack chunks.\n */ const WEBPACK_LAYERS_NAMES = {\n    /**\n   * The layer for the shared code between the client and server bundles.\n   */ shared: \"shared\",\n    /**\n   * React Server Components layer (rsc).\n   */ reactServerComponents: \"rsc\",\n    /**\n   * Server Side Rendering layer for app (ssr).\n   */ serverSideRendering: \"ssr\",\n    /**\n   * The browser client bundle layer for actions.\n   */ actionBrowser: \"action-browser\",\n    /**\n   * The layer for the API routes.\n   */ api: \"api\",\n    /**\n   * The layer for the middleware code.\n   */ middleware: \"middleware\",\n    /**\n   * The layer for assets on the edge.\n   */ edgeAsset: \"edge-asset\",\n    /**\n   * The browser client bundle layer for App directory.\n   */ appPagesBrowser: \"app-pages-browser\",\n    /**\n   * The server bundle layer for metadata routes.\n   */ appMetadataRoute: \"app-metadata-route\",\n    /**\n   * The layer for the server bundle for App Route handlers.\n   */ appRouteHandler: \"app-route-handler\"\n};\nconst WEBPACK_LAYERS = {\n    ...WEBPACK_LAYERS_NAMES,\n    GROUP: {\n        server: [\n            WEBPACK_LAYERS_NAMES.reactServerComponents,\n            WEBPACK_LAYERS_NAMES.actionBrowser,\n            WEBPACK_LAYERS_NAMES.appMetadataRoute,\n            WEBPACK_LAYERS_NAMES.appRouteHandler\n        ],\n        nonClientServerTarget: [\n            // plus middleware and pages api\n            WEBPACK_LAYERS_NAMES.middleware,\n            WEBPACK_LAYERS_NAMES.api\n        ],\n        app: [\n            WEBPACK_LAYERS_NAMES.reactServerComponents,\n            WEBPACK_LAYERS_NAMES.actionBrowser,\n            WEBPACK_LAYERS_NAMES.appMetadataRoute,\n            WEBPACK_LAYERS_NAMES.appRouteHandler,\n            WEBPACK_LAYERS_NAMES.serverSideRendering,\n            WEBPACK_LAYERS_NAMES.appPagesBrowser\n        ]\n    }\n};\nconst WEBPACK_RESOURCE_QUERIES = {\n    edgeSSREntry: \"__next_edge_ssr_entry__\",\n    metadata: \"__next_metadata__\",\n    metadataRoute: \"__next_metadata_route__\",\n    metadataImageMeta: \"__next_metadata_image_meta__\"\n};\n //# sourceMappingURL=constants.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/lib/constants.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/api-utils/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/api-utils/index.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ApiError: () => (/* binding */ ApiError),\n/* harmony export */   COOKIE_NAME_PRERENDER_BYPASS: () => (/* binding */ COOKIE_NAME_PRERENDER_BYPASS),\n/* harmony export */   COOKIE_NAME_PRERENDER_DATA: () => (/* binding */ COOKIE_NAME_PRERENDER_DATA),\n/* harmony export */   RESPONSE_LIMIT_DEFAULT: () => (/* binding */ RESPONSE_LIMIT_DEFAULT),\n/* harmony export */   SYMBOL_CLEARED_COOKIES: () => (/* binding */ SYMBOL_CLEARED_COOKIES),\n/* harmony export */   SYMBOL_PREVIEW_DATA: () => (/* binding */ SYMBOL_PREVIEW_DATA),\n/* harmony export */   checkIsOnDemandRevalidate: () => (/* binding */ checkIsOnDemandRevalidate),\n/* harmony export */   clearPreviewData: () => (/* binding */ clearPreviewData),\n/* harmony export */   redirect: () => (/* binding */ redirect),\n/* harmony export */   sendError: () => (/* binding */ sendError),\n/* harmony export */   sendStatusCode: () => (/* binding */ sendStatusCode),\n/* harmony export */   setLazyProp: () => (/* binding */ setLazyProp)\n/* harmony export */ });\n/* harmony import */ var _web_spec_extension_adapters_headers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../web/spec-extension/adapters/headers */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/adapters/headers.js\");\n/* harmony import */ var _lib_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../lib/constants */ \"(middleware)/./node_modules/next/dist/esm/lib/constants.js\");\n\n\n/**\n *\n * @param res response object\n * @param statusCode `HTTP` status code of response\n */ function sendStatusCode(res, statusCode) {\n    res.statusCode = statusCode;\n    return res;\n}\n/**\n *\n * @param res response object\n * @param [statusOrUrl] `HTTP` status code of redirect\n * @param url URL of redirect\n */ function redirect(res, statusOrUrl, url) {\n    if (typeof statusOrUrl === \"string\") {\n        url = statusOrUrl;\n        statusOrUrl = 307;\n    }\n    if (typeof statusOrUrl !== \"number\" || typeof url !== \"string\") {\n        throw new Error(`Invalid redirect arguments. Please use a single argument URL, e.g. res.redirect('/destination') or use a status code and URL, e.g. res.redirect(307, '/destination').`);\n    }\n    res.writeHead(statusOrUrl, {\n        Location: url\n    });\n    res.write(url);\n    res.end();\n    return res;\n}\nfunction checkIsOnDemandRevalidate(req, previewProps) {\n    const headers = _web_spec_extension_adapters_headers__WEBPACK_IMPORTED_MODULE_0__.HeadersAdapter.from(req.headers);\n    const previewModeId = headers.get(_lib_constants__WEBPACK_IMPORTED_MODULE_1__.PRERENDER_REVALIDATE_HEADER);\n    const isOnDemandRevalidate = previewModeId === previewProps.previewModeId;\n    const revalidateOnlyGenerated = headers.has(_lib_constants__WEBPACK_IMPORTED_MODULE_1__.PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER);\n    return {\n        isOnDemandRevalidate,\n        revalidateOnlyGenerated\n    };\n}\nconst COOKIE_NAME_PRERENDER_BYPASS = `__prerender_bypass`;\nconst COOKIE_NAME_PRERENDER_DATA = `__next_preview_data`;\nconst RESPONSE_LIMIT_DEFAULT = 4 * 1024 * 1024;\nconst SYMBOL_PREVIEW_DATA = Symbol(COOKIE_NAME_PRERENDER_DATA);\nconst SYMBOL_CLEARED_COOKIES = Symbol(COOKIE_NAME_PRERENDER_BYPASS);\nfunction clearPreviewData(res, options = {}) {\n    if (SYMBOL_CLEARED_COOKIES in res) {\n        return res;\n    }\n    const { serialize } = __webpack_require__(/*! next/dist/compiled/cookie */ \"(middleware)/./node_modules/next/dist/compiled/cookie/index.js\");\n    const previous = res.getHeader(\"Set-Cookie\");\n    res.setHeader(`Set-Cookie`, [\n        ...typeof previous === \"string\" ? [\n            previous\n        ] : Array.isArray(previous) ? previous : [],\n        serialize(COOKIE_NAME_PRERENDER_BYPASS, \"\", {\n            // To delete a cookie, set `expires` to a date in the past:\n            // https://tools.ietf.org/html/rfc6265#section-4.1.1\n            // `Max-Age: 0` is not valid, thus ignored, and the cookie is persisted.\n            expires: new Date(0),\n            httpOnly: true,\n            sameSite:  false ? 0 : \"lax\",\n            secure: \"development\" !== \"development\",\n            path: \"/\",\n            ...options.path !== undefined ? {\n                path: options.path\n            } : undefined\n        }),\n        serialize(COOKIE_NAME_PRERENDER_DATA, \"\", {\n            // To delete a cookie, set `expires` to a date in the past:\n            // https://tools.ietf.org/html/rfc6265#section-4.1.1\n            // `Max-Age: 0` is not valid, thus ignored, and the cookie is persisted.\n            expires: new Date(0),\n            httpOnly: true,\n            sameSite:  false ? 0 : \"lax\",\n            secure: \"development\" !== \"development\",\n            path: \"/\",\n            ...options.path !== undefined ? {\n                path: options.path\n            } : undefined\n        })\n    ]);\n    Object.defineProperty(res, SYMBOL_CLEARED_COOKIES, {\n        value: true,\n        enumerable: false\n    });\n    return res;\n}\n/**\n * Custom error class\n */ class ApiError extends Error {\n    constructor(statusCode, message){\n        super(message);\n        this.statusCode = statusCode;\n    }\n}\n/**\n * Sends error in `response`\n * @param res response object\n * @param statusCode of response\n * @param message of response\n */ function sendError(res, statusCode, message) {\n    res.statusCode = statusCode;\n    res.statusMessage = message;\n    res.end(message);\n}\n/**\n * Execute getter function only if its needed\n * @param LazyProps `req` and `params` for lazyProp\n * @param prop name of property\n * @param getter function to get data\n */ function setLazyProp({ req }, prop, getter) {\n    const opts = {\n        configurable: true,\n        enumerable: true\n    };\n    const optsReset = {\n        ...opts,\n        writable: true\n    };\n    Object.defineProperty(req, prop, {\n        ...opts,\n        get: ()=>{\n            const value = getter();\n            // we set the property on the object to avoid recalculating it\n            Object.defineProperty(req, prop, {\n                ...optsReset,\n                value\n            });\n            return value;\n        },\n        set: (value)=>{\n            Object.defineProperty(req, prop, {\n                ...optsReset,\n                value\n            });\n        }\n    });\n} //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/api-utils/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/async-storage/draft-mode-provider.js":
/*!********************************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/async-storage/draft-mode-provider.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DraftModeProvider: () => (/* binding */ DraftModeProvider)\n/* harmony export */ });\n/* harmony import */ var _api_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../api-utils */ \"(middleware)/./node_modules/next/dist/esm/server/api-utils/index.js\");\n\nclass DraftModeProvider {\n    constructor(previewProps, req, cookies, mutableCookies){\n        var _cookies_get;\n        // The logic for draftMode() is very similar to tryGetPreviewData()\n        // but Draft Mode does not have any data associated with it.\n        const isOnDemandRevalidate = previewProps && (0,_api_utils__WEBPACK_IMPORTED_MODULE_0__.checkIsOnDemandRevalidate)(req, previewProps).isOnDemandRevalidate;\n        const cookieValue = (_cookies_get = cookies.get(_api_utils__WEBPACK_IMPORTED_MODULE_0__.COOKIE_NAME_PRERENDER_BYPASS)) == null ? void 0 : _cookies_get.value;\n        this.isEnabled = Boolean(!isOnDemandRevalidate && cookieValue && previewProps && cookieValue === previewProps.previewModeId);\n        this._previewModeId = previewProps == null ? void 0 : previewProps.previewModeId;\n        this._mutableCookies = mutableCookies;\n    }\n    enable() {\n        if (!this._previewModeId) {\n            throw new Error(\"Invariant: previewProps missing previewModeId this should never happen\");\n        }\n        this._mutableCookies.set({\n            name: _api_utils__WEBPACK_IMPORTED_MODULE_0__.COOKIE_NAME_PRERENDER_BYPASS,\n            value: this._previewModeId,\n            httpOnly: true,\n            sameSite:  false ? 0 : \"lax\",\n            secure: \"development\" !== \"development\",\n            path: \"/\"\n        });\n    }\n    disable() {\n        // To delete a cookie, set `expires` to a date in the past:\n        // https://tools.ietf.org/html/rfc6265#section-4.1.1\n        // `Max-Age: 0` is not valid, thus ignored, and the cookie is persisted.\n        this._mutableCookies.set({\n            name: _api_utils__WEBPACK_IMPORTED_MODULE_0__.COOKIE_NAME_PRERENDER_BYPASS,\n            value: \"\",\n            httpOnly: true,\n            sameSite:  false ? 0 : \"lax\",\n            secure: \"development\" !== \"development\",\n            path: \"/\",\n            expires: new Date(0)\n        });\n    }\n} //# sourceMappingURL=draft-mode-provider.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL2FzeW5jLXN0b3JhZ2UvZHJhZnQtbW9kZS1wcm92aWRlci5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF1RjtBQUNoRixNQUFNRTtJQUNUQyxZQUFZQyxZQUFZLEVBQUVDLEdBQUcsRUFBRUMsT0FBTyxFQUFFQyxjQUFjLENBQUM7UUFDbkQsSUFBSUM7UUFDSixtRUFBbUU7UUFDbkUsNERBQTREO1FBQzVELE1BQU1DLHVCQUF1QkwsZ0JBQWdCSCxxRUFBeUJBLENBQUNJLEtBQUtELGNBQWNLLG9CQUFvQjtRQUM5RyxNQUFNQyxjQUFjLENBQUNGLGVBQWVGLFFBQVFLLEdBQUcsQ0FBQ1gsb0VBQTRCQSxDQUFBLEtBQU0sT0FBTyxLQUFLLElBQUlRLGFBQWFJLEtBQUs7UUFDcEgsSUFBSSxDQUFDQyxTQUFTLEdBQUdDLFFBQVEsQ0FBQ0wsd0JBQXdCQyxlQUFlTixnQkFBZ0JNLGdCQUFnQk4sYUFBYVcsYUFBYTtRQUMzSCxJQUFJLENBQUNDLGNBQWMsR0FBR1osZ0JBQWdCLE9BQU8sS0FBSyxJQUFJQSxhQUFhVyxhQUFhO1FBQ2hGLElBQUksQ0FBQ0UsZUFBZSxHQUFHVjtJQUMzQjtJQUNBVyxTQUFTO1FBQ0wsSUFBSSxDQUFDLElBQUksQ0FBQ0YsY0FBYyxFQUFFO1lBQ3RCLE1BQU0sSUFBSUcsTUFBTTtRQUNwQjtRQUNBLElBQUksQ0FBQ0YsZUFBZSxDQUFDRyxHQUFHLENBQUM7WUFDckJDLE1BQU1yQixvRUFBNEJBO1lBQ2xDWSxPQUFPLElBQUksQ0FBQ0ksY0FBYztZQUMxQk0sVUFBVTtZQUNWQyxVQUFVQyxNQUFzQyxHQUFHLENBQU0sR0FBRztZQUM1REMsUUFBUUQsa0JBQXlCO1lBQ2pDRSxNQUFNO1FBQ1Y7SUFDSjtJQUNBQyxVQUFVO1FBQ04sMkRBQTJEO1FBQzNELG9EQUFvRDtRQUNwRCx3RUFBd0U7UUFDeEUsSUFBSSxDQUFDVixlQUFlLENBQUNHLEdBQUcsQ0FBQztZQUNyQkMsTUFBTXJCLG9FQUE0QkE7WUFDbENZLE9BQU87WUFDUFUsVUFBVTtZQUNWQyxVQUFVQyxNQUFzQyxHQUFHLENBQU0sR0FBRztZQUM1REMsUUFBUUQsa0JBQXlCO1lBQ2pDRSxNQUFNO1lBQ05FLFNBQVMsSUFBSUMsS0FBSztRQUN0QjtJQUNKO0FBQ0osRUFFQSwrQ0FBK0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL2FzeW5jLXN0b3JhZ2UvZHJhZnQtbW9kZS1wcm92aWRlci5qcz84N2UwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENPT0tJRV9OQU1FX1BSRVJFTkRFUl9CWVBBU1MsIGNoZWNrSXNPbkRlbWFuZFJldmFsaWRhdGUgfSBmcm9tIFwiLi4vYXBpLXV0aWxzXCI7XG5leHBvcnQgY2xhc3MgRHJhZnRNb2RlUHJvdmlkZXIge1xuICAgIGNvbnN0cnVjdG9yKHByZXZpZXdQcm9wcywgcmVxLCBjb29raWVzLCBtdXRhYmxlQ29va2llcyl7XG4gICAgICAgIHZhciBfY29va2llc19nZXQ7XG4gICAgICAgIC8vIFRoZSBsb2dpYyBmb3IgZHJhZnRNb2RlKCkgaXMgdmVyeSBzaW1pbGFyIHRvIHRyeUdldFByZXZpZXdEYXRhKClcbiAgICAgICAgLy8gYnV0IERyYWZ0IE1vZGUgZG9lcyBub3QgaGF2ZSBhbnkgZGF0YSBhc3NvY2lhdGVkIHdpdGggaXQuXG4gICAgICAgIGNvbnN0IGlzT25EZW1hbmRSZXZhbGlkYXRlID0gcHJldmlld1Byb3BzICYmIGNoZWNrSXNPbkRlbWFuZFJldmFsaWRhdGUocmVxLCBwcmV2aWV3UHJvcHMpLmlzT25EZW1hbmRSZXZhbGlkYXRlO1xuICAgICAgICBjb25zdCBjb29raWVWYWx1ZSA9IChfY29va2llc19nZXQgPSBjb29raWVzLmdldChDT09LSUVfTkFNRV9QUkVSRU5ERVJfQllQQVNTKSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9jb29raWVzX2dldC52YWx1ZTtcbiAgICAgICAgdGhpcy5pc0VuYWJsZWQgPSBCb29sZWFuKCFpc09uRGVtYW5kUmV2YWxpZGF0ZSAmJiBjb29raWVWYWx1ZSAmJiBwcmV2aWV3UHJvcHMgJiYgY29va2llVmFsdWUgPT09IHByZXZpZXdQcm9wcy5wcmV2aWV3TW9kZUlkKTtcbiAgICAgICAgdGhpcy5fcHJldmlld01vZGVJZCA9IHByZXZpZXdQcm9wcyA9PSBudWxsID8gdm9pZCAwIDogcHJldmlld1Byb3BzLnByZXZpZXdNb2RlSWQ7XG4gICAgICAgIHRoaXMuX211dGFibGVDb29raWVzID0gbXV0YWJsZUNvb2tpZXM7XG4gICAgfVxuICAgIGVuYWJsZSgpIHtcbiAgICAgICAgaWYgKCF0aGlzLl9wcmV2aWV3TW9kZUlkKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhcmlhbnQ6IHByZXZpZXdQcm9wcyBtaXNzaW5nIHByZXZpZXdNb2RlSWQgdGhpcyBzaG91bGQgbmV2ZXIgaGFwcGVuXCIpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX211dGFibGVDb29raWVzLnNldCh7XG4gICAgICAgICAgICBuYW1lOiBDT09LSUVfTkFNRV9QUkVSRU5ERVJfQllQQVNTLFxuICAgICAgICAgICAgdmFsdWU6IHRoaXMuX3ByZXZpZXdNb2RlSWQsXG4gICAgICAgICAgICBodHRwT25seTogdHJ1ZSxcbiAgICAgICAgICAgIHNhbWVTaXRlOiBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJkZXZlbG9wbWVudFwiID8gXCJub25lXCIgOiBcImxheFwiLFxuICAgICAgICAgICAgc2VjdXJlOiBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJkZXZlbG9wbWVudFwiLFxuICAgICAgICAgICAgcGF0aDogXCIvXCJcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGRpc2FibGUoKSB7XG4gICAgICAgIC8vIFRvIGRlbGV0ZSBhIGNvb2tpZSwgc2V0IGBleHBpcmVzYCB0byBhIGRhdGUgaW4gdGhlIHBhc3Q6XG4gICAgICAgIC8vIGh0dHBzOi8vdG9vbHMuaWV0Zi5vcmcvaHRtbC9yZmM2MjY1I3NlY3Rpb24tNC4xLjFcbiAgICAgICAgLy8gYE1heC1BZ2U6IDBgIGlzIG5vdCB2YWxpZCwgdGh1cyBpZ25vcmVkLCBhbmQgdGhlIGNvb2tpZSBpcyBwZXJzaXN0ZWQuXG4gICAgICAgIHRoaXMuX211dGFibGVDb29raWVzLnNldCh7XG4gICAgICAgICAgICBuYW1lOiBDT09LSUVfTkFNRV9QUkVSRU5ERVJfQllQQVNTLFxuICAgICAgICAgICAgdmFsdWU6IFwiXCIsXG4gICAgICAgICAgICBodHRwT25seTogdHJ1ZSxcbiAgICAgICAgICAgIHNhbWVTaXRlOiBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJkZXZlbG9wbWVudFwiID8gXCJub25lXCIgOiBcImxheFwiLFxuICAgICAgICAgICAgc2VjdXJlOiBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJkZXZlbG9wbWVudFwiLFxuICAgICAgICAgICAgcGF0aDogXCIvXCIsXG4gICAgICAgICAgICBleHBpcmVzOiBuZXcgRGF0ZSgwKVxuICAgICAgICB9KTtcbiAgICB9XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRyYWZ0LW1vZGUtcHJvdmlkZXIuanMubWFwIl0sIm5hbWVzIjpbIkNPT0tJRV9OQU1FX1BSRVJFTkRFUl9CWVBBU1MiLCJjaGVja0lzT25EZW1hbmRSZXZhbGlkYXRlIiwiRHJhZnRNb2RlUHJvdmlkZXIiLCJjb25zdHJ1Y3RvciIsInByZXZpZXdQcm9wcyIsInJlcSIsImNvb2tpZXMiLCJtdXRhYmxlQ29va2llcyIsIl9jb29raWVzX2dldCIsImlzT25EZW1hbmRSZXZhbGlkYXRlIiwiY29va2llVmFsdWUiLCJnZXQiLCJ2YWx1ZSIsImlzRW5hYmxlZCIsIkJvb2xlYW4iLCJwcmV2aWV3TW9kZUlkIiwiX3ByZXZpZXdNb2RlSWQiLCJfbXV0YWJsZUNvb2tpZXMiLCJlbmFibGUiLCJFcnJvciIsInNldCIsIm5hbWUiLCJodHRwT25seSIsInNhbWVTaXRlIiwicHJvY2VzcyIsInNlY3VyZSIsInBhdGgiLCJkaXNhYmxlIiwiZXhwaXJlcyIsIkRhdGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/async-storage/draft-mode-provider.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/async-storage/request-async-storage-wrapper.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/async-storage/request-async-storage-wrapper.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RequestAsyncStorageWrapper: () => (/* binding */ RequestAsyncStorageWrapper)\n/* harmony export */ });\n/* harmony import */ var _client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../client/components/app-router-headers */ \"(middleware)/./node_modules/next/dist/esm/client/components/app-router-headers.js\");\n/* harmony import */ var _web_spec_extension_adapters_headers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../web/spec-extension/adapters/headers */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/adapters/headers.js\");\n/* harmony import */ var _web_spec_extension_adapters_request_cookies__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../web/spec-extension/adapters/request-cookies */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/adapters/request-cookies.js\");\n/* harmony import */ var _web_spec_extension_cookies__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../web/spec-extension/cookies */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/cookies.js\");\n/* harmony import */ var _draft_mode_provider__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./draft-mode-provider */ \"(middleware)/./node_modules/next/dist/esm/server/async-storage/draft-mode-provider.js\");\n\n\n\n\n\nfunction getHeaders(headers) {\n    const cleaned = _web_spec_extension_adapters_headers__WEBPACK_IMPORTED_MODULE_1__.HeadersAdapter.from(headers);\n    for (const param of _client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_0__.FLIGHT_PARAMETERS){\n        cleaned.delete(param.toString().toLowerCase());\n    }\n    return _web_spec_extension_adapters_headers__WEBPACK_IMPORTED_MODULE_1__.HeadersAdapter.seal(cleaned);\n}\nfunction getCookies(headers) {\n    const cookies = new _web_spec_extension_cookies__WEBPACK_IMPORTED_MODULE_3__.RequestCookies(_web_spec_extension_adapters_headers__WEBPACK_IMPORTED_MODULE_1__.HeadersAdapter.from(headers));\n    return _web_spec_extension_adapters_request_cookies__WEBPACK_IMPORTED_MODULE_2__.RequestCookiesAdapter.seal(cookies);\n}\nfunction getMutableCookies(headers, onUpdateCookies) {\n    const cookies = new _web_spec_extension_cookies__WEBPACK_IMPORTED_MODULE_3__.RequestCookies(_web_spec_extension_adapters_headers__WEBPACK_IMPORTED_MODULE_1__.HeadersAdapter.from(headers));\n    return _web_spec_extension_adapters_request_cookies__WEBPACK_IMPORTED_MODULE_2__.MutableRequestCookiesAdapter.wrap(cookies, onUpdateCookies);\n}\nconst RequestAsyncStorageWrapper = {\n    /**\n   * Wrap the callback with the given store so it can access the underlying\n   * store using hooks.\n   *\n   * @param storage underlying storage object returned by the module\n   * @param context context to seed the store\n   * @param callback function to call within the scope of the context\n   * @returns the result returned by the callback\n   */ wrap (storage, { req, res, renderOpts }, callback) {\n        let previewProps = undefined;\n        if (renderOpts && \"previewProps\" in renderOpts) {\n            // TODO: investigate why previewProps isn't on RenderOpts\n            previewProps = renderOpts.previewProps;\n        }\n        function defaultOnUpdateCookies(cookies) {\n            if (res) {\n                res.setHeader(\"Set-Cookie\", cookies);\n            }\n        }\n        const cache = {};\n        const store = {\n            get headers () {\n                if (!cache.headers) {\n                    // Seal the headers object that'll freeze out any methods that could\n                    // mutate the underlying data.\n                    cache.headers = getHeaders(req.headers);\n                }\n                return cache.headers;\n            },\n            get cookies () {\n                if (!cache.cookies) {\n                    // Seal the cookies object that'll freeze out any methods that could\n                    // mutate the underlying data.\n                    cache.cookies = getCookies(req.headers);\n                }\n                return cache.cookies;\n            },\n            get mutableCookies () {\n                if (!cache.mutableCookies) {\n                    cache.mutableCookies = getMutableCookies(req.headers, (renderOpts == null ? void 0 : renderOpts.onUpdateCookies) || (res ? defaultOnUpdateCookies : undefined));\n                }\n                return cache.mutableCookies;\n            },\n            get draftMode () {\n                if (!cache.draftMode) {\n                    cache.draftMode = new _draft_mode_provider__WEBPACK_IMPORTED_MODULE_4__.DraftModeProvider(previewProps, req, this.cookies, this.mutableCookies);\n                }\n                return cache.draftMode;\n            }\n        };\n        return storage.run(store, callback, store);\n    }\n}; //# sourceMappingURL=request-async-storage-wrapper.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL2FzeW5jLXN0b3JhZ2UvcmVxdWVzdC1hc3luYy1zdG9yYWdlLXdyYXBwZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQStFO0FBQ1A7QUFDNkM7QUFDdEQ7QUFDTDtBQUMxRCxTQUFTTSxXQUFXQyxPQUFPO0lBQ3ZCLE1BQU1DLFVBQVVQLGdGQUFjQSxDQUFDUSxJQUFJLENBQUNGO0lBQ3BDLEtBQUssTUFBTUcsU0FBU1Ysb0ZBQWlCQSxDQUFDO1FBQ2xDUSxRQUFRRyxNQUFNLENBQUNELE1BQU1FLFFBQVEsR0FBR0MsV0FBVztJQUMvQztJQUNBLE9BQU9aLGdGQUFjQSxDQUFDYSxJQUFJLENBQUNOO0FBQy9CO0FBQ0EsU0FBU08sV0FBV1IsT0FBTztJQUN2QixNQUFNUyxVQUFVLElBQUlaLHVFQUFjQSxDQUFDSCxnRkFBY0EsQ0FBQ1EsSUFBSSxDQUFDRjtJQUN2RCxPQUFPSiwrRkFBcUJBLENBQUNXLElBQUksQ0FBQ0U7QUFDdEM7QUFDQSxTQUFTQyxrQkFBa0JWLE9BQU8sRUFBRVcsZUFBZTtJQUMvQyxNQUFNRixVQUFVLElBQUlaLHVFQUFjQSxDQUFDSCxnRkFBY0EsQ0FBQ1EsSUFBSSxDQUFDRjtJQUN2RCxPQUFPTCxzR0FBNEJBLENBQUNpQixJQUFJLENBQUNILFNBQVNFO0FBQ3REO0FBQ08sTUFBTUUsNkJBQTZCO0lBQ3RDOzs7Ozs7OztHQVFELEdBQUdELE1BQU1FLE9BQU8sRUFBRSxFQUFFQyxHQUFHLEVBQUVDLEdBQUcsRUFBRUMsVUFBVSxFQUFFLEVBQUVDLFFBQVE7UUFDL0MsSUFBSUMsZUFBZUM7UUFDbkIsSUFBSUgsY0FBYyxrQkFBa0JBLFlBQVk7WUFDNUMseURBQXlEO1lBQ3pERSxlQUFlRixXQUFXRSxZQUFZO1FBQzFDO1FBQ0EsU0FBU0UsdUJBQXVCWixPQUFPO1lBQ25DLElBQUlPLEtBQUs7Z0JBQ0xBLElBQUlNLFNBQVMsQ0FBQyxjQUFjYjtZQUNoQztRQUNKO1FBQ0EsTUFBTWMsUUFBUSxDQUFDO1FBQ2YsTUFBTUMsUUFBUTtZQUNWLElBQUl4QixXQUFXO2dCQUNYLElBQUksQ0FBQ3VCLE1BQU12QixPQUFPLEVBQUU7b0JBQ2hCLG9FQUFvRTtvQkFDcEUsOEJBQThCO29CQUM5QnVCLE1BQU12QixPQUFPLEdBQUdELFdBQVdnQixJQUFJZixPQUFPO2dCQUMxQztnQkFDQSxPQUFPdUIsTUFBTXZCLE9BQU87WUFDeEI7WUFDQSxJQUFJUyxXQUFXO2dCQUNYLElBQUksQ0FBQ2MsTUFBTWQsT0FBTyxFQUFFO29CQUNoQixvRUFBb0U7b0JBQ3BFLDhCQUE4QjtvQkFDOUJjLE1BQU1kLE9BQU8sR0FBR0QsV0FBV08sSUFBSWYsT0FBTztnQkFDMUM7Z0JBQ0EsT0FBT3VCLE1BQU1kLE9BQU87WUFDeEI7WUFDQSxJQUFJZ0Isa0JBQWtCO2dCQUNsQixJQUFJLENBQUNGLE1BQU1FLGNBQWMsRUFBRTtvQkFDdkJGLE1BQU1FLGNBQWMsR0FBR2Ysa0JBQWtCSyxJQUFJZixPQUFPLEVBQUUsQ0FBQ2lCLGNBQWMsT0FBTyxLQUFLLElBQUlBLFdBQVdOLGVBQWUsS0FBTUssQ0FBQUEsTUFBTUsseUJBQXlCRCxTQUFRO2dCQUNoSztnQkFDQSxPQUFPRyxNQUFNRSxjQUFjO1lBQy9CO1lBQ0EsSUFBSUMsYUFBYTtnQkFDYixJQUFJLENBQUNILE1BQU1HLFNBQVMsRUFBRTtvQkFDbEJILE1BQU1HLFNBQVMsR0FBRyxJQUFJNUIsbUVBQWlCQSxDQUFDcUIsY0FBY0osS0FBSyxJQUFJLENBQUNOLE9BQU8sRUFBRSxJQUFJLENBQUNnQixjQUFjO2dCQUNoRztnQkFDQSxPQUFPRixNQUFNRyxTQUFTO1lBQzFCO1FBQ0o7UUFDQSxPQUFPWixRQUFRYSxHQUFHLENBQUNILE9BQU9OLFVBQVVNO0lBQ3hDO0FBQ0osRUFBRSxDQUVGLHlEQUF5RCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9zZXJ2ZXIvYXN5bmMtc3RvcmFnZS9yZXF1ZXN0LWFzeW5jLXN0b3JhZ2Utd3JhcHBlci5qcz9jNjUwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEZMSUdIVF9QQVJBTUVURVJTIH0gZnJvbSBcIi4uLy4uL2NsaWVudC9jb21wb25lbnRzL2FwcC1yb3V0ZXItaGVhZGVyc1wiO1xuaW1wb3J0IHsgSGVhZGVyc0FkYXB0ZXIgfSBmcm9tIFwiLi4vd2ViL3NwZWMtZXh0ZW5zaW9uL2FkYXB0ZXJzL2hlYWRlcnNcIjtcbmltcG9ydCB7IE11dGFibGVSZXF1ZXN0Q29va2llc0FkYXB0ZXIsIFJlcXVlc3RDb29raWVzQWRhcHRlciB9IGZyb20gXCIuLi93ZWIvc3BlYy1leHRlbnNpb24vYWRhcHRlcnMvcmVxdWVzdC1jb29raWVzXCI7XG5pbXBvcnQgeyBSZXF1ZXN0Q29va2llcyB9IGZyb20gXCIuLi93ZWIvc3BlYy1leHRlbnNpb24vY29va2llc1wiO1xuaW1wb3J0IHsgRHJhZnRNb2RlUHJvdmlkZXIgfSBmcm9tIFwiLi9kcmFmdC1tb2RlLXByb3ZpZGVyXCI7XG5mdW5jdGlvbiBnZXRIZWFkZXJzKGhlYWRlcnMpIHtcbiAgICBjb25zdCBjbGVhbmVkID0gSGVhZGVyc0FkYXB0ZXIuZnJvbShoZWFkZXJzKTtcbiAgICBmb3IgKGNvbnN0IHBhcmFtIG9mIEZMSUdIVF9QQVJBTUVURVJTKXtcbiAgICAgICAgY2xlYW5lZC5kZWxldGUocGFyYW0udG9TdHJpbmcoKS50b0xvd2VyQ2FzZSgpKTtcbiAgICB9XG4gICAgcmV0dXJuIEhlYWRlcnNBZGFwdGVyLnNlYWwoY2xlYW5lZCk7XG59XG5mdW5jdGlvbiBnZXRDb29raWVzKGhlYWRlcnMpIHtcbiAgICBjb25zdCBjb29raWVzID0gbmV3IFJlcXVlc3RDb29raWVzKEhlYWRlcnNBZGFwdGVyLmZyb20oaGVhZGVycykpO1xuICAgIHJldHVybiBSZXF1ZXN0Q29va2llc0FkYXB0ZXIuc2VhbChjb29raWVzKTtcbn1cbmZ1bmN0aW9uIGdldE11dGFibGVDb29raWVzKGhlYWRlcnMsIG9uVXBkYXRlQ29va2llcykge1xuICAgIGNvbnN0IGNvb2tpZXMgPSBuZXcgUmVxdWVzdENvb2tpZXMoSGVhZGVyc0FkYXB0ZXIuZnJvbShoZWFkZXJzKSk7XG4gICAgcmV0dXJuIE11dGFibGVSZXF1ZXN0Q29va2llc0FkYXB0ZXIud3JhcChjb29raWVzLCBvblVwZGF0ZUNvb2tpZXMpO1xufVxuZXhwb3J0IGNvbnN0IFJlcXVlc3RBc3luY1N0b3JhZ2VXcmFwcGVyID0ge1xuICAgIC8qKlxuICAgKiBXcmFwIHRoZSBjYWxsYmFjayB3aXRoIHRoZSBnaXZlbiBzdG9yZSBzbyBpdCBjYW4gYWNjZXNzIHRoZSB1bmRlcmx5aW5nXG4gICAqIHN0b3JlIHVzaW5nIGhvb2tzLlxuICAgKlxuICAgKiBAcGFyYW0gc3RvcmFnZSB1bmRlcmx5aW5nIHN0b3JhZ2Ugb2JqZWN0IHJldHVybmVkIGJ5IHRoZSBtb2R1bGVcbiAgICogQHBhcmFtIGNvbnRleHQgY29udGV4dCB0byBzZWVkIHRoZSBzdG9yZVxuICAgKiBAcGFyYW0gY2FsbGJhY2sgZnVuY3Rpb24gdG8gY2FsbCB3aXRoaW4gdGhlIHNjb3BlIG9mIHRoZSBjb250ZXh0XG4gICAqIEByZXR1cm5zIHRoZSByZXN1bHQgcmV0dXJuZWQgYnkgdGhlIGNhbGxiYWNrXG4gICAqLyB3cmFwIChzdG9yYWdlLCB7IHJlcSwgcmVzLCByZW5kZXJPcHRzIH0sIGNhbGxiYWNrKSB7XG4gICAgICAgIGxldCBwcmV2aWV3UHJvcHMgPSB1bmRlZmluZWQ7XG4gICAgICAgIGlmIChyZW5kZXJPcHRzICYmIFwicHJldmlld1Byb3BzXCIgaW4gcmVuZGVyT3B0cykge1xuICAgICAgICAgICAgLy8gVE9ETzogaW52ZXN0aWdhdGUgd2h5IHByZXZpZXdQcm9wcyBpc24ndCBvbiBSZW5kZXJPcHRzXG4gICAgICAgICAgICBwcmV2aWV3UHJvcHMgPSByZW5kZXJPcHRzLnByZXZpZXdQcm9wcztcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBkZWZhdWx0T25VcGRhdGVDb29raWVzKGNvb2tpZXMpIHtcbiAgICAgICAgICAgIGlmIChyZXMpIHtcbiAgICAgICAgICAgICAgICByZXMuc2V0SGVhZGVyKFwiU2V0LUNvb2tpZVwiLCBjb29raWVzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBjb25zdCBjYWNoZSA9IHt9O1xuICAgICAgICBjb25zdCBzdG9yZSA9IHtcbiAgICAgICAgICAgIGdldCBoZWFkZXJzICgpIHtcbiAgICAgICAgICAgICAgICBpZiAoIWNhY2hlLmhlYWRlcnMpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gU2VhbCB0aGUgaGVhZGVycyBvYmplY3QgdGhhdCdsbCBmcmVlemUgb3V0IGFueSBtZXRob2RzIHRoYXQgY291bGRcbiAgICAgICAgICAgICAgICAgICAgLy8gbXV0YXRlIHRoZSB1bmRlcmx5aW5nIGRhdGEuXG4gICAgICAgICAgICAgICAgICAgIGNhY2hlLmhlYWRlcnMgPSBnZXRIZWFkZXJzKHJlcS5oZWFkZXJzKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNhY2hlLmhlYWRlcnM7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZ2V0IGNvb2tpZXMgKCkge1xuICAgICAgICAgICAgICAgIGlmICghY2FjaGUuY29va2llcykge1xuICAgICAgICAgICAgICAgICAgICAvLyBTZWFsIHRoZSBjb29raWVzIG9iamVjdCB0aGF0J2xsIGZyZWV6ZSBvdXQgYW55IG1ldGhvZHMgdGhhdCBjb3VsZFxuICAgICAgICAgICAgICAgICAgICAvLyBtdXRhdGUgdGhlIHVuZGVybHlpbmcgZGF0YS5cbiAgICAgICAgICAgICAgICAgICAgY2FjaGUuY29va2llcyA9IGdldENvb2tpZXMocmVxLmhlYWRlcnMpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gY2FjaGUuY29va2llcztcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBnZXQgbXV0YWJsZUNvb2tpZXMgKCkge1xuICAgICAgICAgICAgICAgIGlmICghY2FjaGUubXV0YWJsZUNvb2tpZXMpIHtcbiAgICAgICAgICAgICAgICAgICAgY2FjaGUubXV0YWJsZUNvb2tpZXMgPSBnZXRNdXRhYmxlQ29va2llcyhyZXEuaGVhZGVycywgKHJlbmRlck9wdHMgPT0gbnVsbCA/IHZvaWQgMCA6IHJlbmRlck9wdHMub25VcGRhdGVDb29raWVzKSB8fCAocmVzID8gZGVmYXVsdE9uVXBkYXRlQ29va2llcyA6IHVuZGVmaW5lZCkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gY2FjaGUubXV0YWJsZUNvb2tpZXM7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZ2V0IGRyYWZ0TW9kZSAoKSB7XG4gICAgICAgICAgICAgICAgaWYgKCFjYWNoZS5kcmFmdE1vZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgY2FjaGUuZHJhZnRNb2RlID0gbmV3IERyYWZ0TW9kZVByb3ZpZGVyKHByZXZpZXdQcm9wcywgcmVxLCB0aGlzLmNvb2tpZXMsIHRoaXMubXV0YWJsZUNvb2tpZXMpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gY2FjaGUuZHJhZnRNb2RlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gc3RvcmFnZS5ydW4oc3RvcmUsIGNhbGxiYWNrLCBzdG9yZSk7XG4gICAgfVxufTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVxdWVzdC1hc3luYy1zdG9yYWdlLXdyYXBwZXIuanMubWFwIl0sIm5hbWVzIjpbIkZMSUdIVF9QQVJBTUVURVJTIiwiSGVhZGVyc0FkYXB0ZXIiLCJNdXRhYmxlUmVxdWVzdENvb2tpZXNBZGFwdGVyIiwiUmVxdWVzdENvb2tpZXNBZGFwdGVyIiwiUmVxdWVzdENvb2tpZXMiLCJEcmFmdE1vZGVQcm92aWRlciIsImdldEhlYWRlcnMiLCJoZWFkZXJzIiwiY2xlYW5lZCIsImZyb20iLCJwYXJhbSIsImRlbGV0ZSIsInRvU3RyaW5nIiwidG9Mb3dlckNhc2UiLCJzZWFsIiwiZ2V0Q29va2llcyIsImNvb2tpZXMiLCJnZXRNdXRhYmxlQ29va2llcyIsIm9uVXBkYXRlQ29va2llcyIsIndyYXAiLCJSZXF1ZXN0QXN5bmNTdG9yYWdlV3JhcHBlciIsInN0b3JhZ2UiLCJyZXEiLCJyZXMiLCJyZW5kZXJPcHRzIiwiY2FsbGJhY2siLCJwcmV2aWV3UHJvcHMiLCJ1bmRlZmluZWQiLCJkZWZhdWx0T25VcGRhdGVDb29raWVzIiwic2V0SGVhZGVyIiwiY2FjaGUiLCJzdG9yZSIsIm11dGFibGVDb29raWVzIiwiZHJhZnRNb2RlIiwicnVuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/async-storage/request-async-storage-wrapper.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/internal-utils.js":
/*!*************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/internal-utils.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   stripInternalHeaders: () => (/* binding */ stripInternalHeaders),\n/* harmony export */   stripInternalQueries: () => (/* binding */ stripInternalQueries),\n/* harmony export */   stripInternalSearchParams: () => (/* binding */ stripInternalSearchParams)\n/* harmony export */ });\n/* harmony import */ var _client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../client/components/app-router-headers */ \"(middleware)/./node_modules/next/dist/esm/client/components/app-router-headers.js\");\n\nconst INTERNAL_QUERY_NAMES = [\n    \"__nextFallback\",\n    \"__nextLocale\",\n    \"__nextInferredLocaleFromDefault\",\n    \"__nextDefaultLocale\",\n    \"__nextIsNotFound\",\n    _client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_0__.NEXT_RSC_UNION_QUERY\n];\nconst EDGE_EXTENDED_INTERNAL_QUERY_NAMES = [\n    \"__nextDataReq\"\n];\nfunction stripInternalQueries(query) {\n    for (const name of INTERNAL_QUERY_NAMES){\n        delete query[name];\n    }\n}\nfunction stripInternalSearchParams(url, isEdge) {\n    const isStringUrl = typeof url === \"string\";\n    const instance = isStringUrl ? new URL(url) : url;\n    for (const name of INTERNAL_QUERY_NAMES){\n        instance.searchParams.delete(name);\n    }\n    if (isEdge) {\n        for (const name of EDGE_EXTENDED_INTERNAL_QUERY_NAMES){\n            instance.searchParams.delete(name);\n        }\n    }\n    return isStringUrl ? instance.toString() : instance;\n}\n/**\n * Headers that are set by the Next.js server and should be stripped from the\n * request headers going to the user's application.\n */ const INTERNAL_HEADERS = [\n    \"x-invoke-path\",\n    \"x-invoke-status\",\n    \"x-invoke-error\",\n    \"x-invoke-query\",\n    \"x-invoke-output\",\n    \"x-middleware-invoke\"\n];\n/**\n * Strip internal headers from the request headers.\n *\n * @param headers the headers to strip of internal headers\n */ function stripInternalHeaders(headers) {\n    for (const key of INTERNAL_HEADERS){\n        delete headers[key];\n    }\n} //# sourceMappingURL=internal-utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL2ludGVybmFsLXV0aWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBK0U7QUFDL0UsTUFBTUMsdUJBQXVCO0lBQ3pCO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQUQsdUZBQW9CQTtDQUN2QjtBQUNELE1BQU1FLHFDQUFxQztJQUN2QztDQUNIO0FBQ00sU0FBU0MscUJBQXFCQyxLQUFLO0lBQ3RDLEtBQUssTUFBTUMsUUFBUUoscUJBQXFCO1FBQ3BDLE9BQU9HLEtBQUssQ0FBQ0MsS0FBSztJQUN0QjtBQUNKO0FBQ08sU0FBU0MsMEJBQTBCQyxHQUFHLEVBQUVDLE1BQU07SUFDakQsTUFBTUMsY0FBYyxPQUFPRixRQUFRO0lBQ25DLE1BQU1HLFdBQVdELGNBQWMsSUFBSUUsSUFBSUosT0FBT0E7SUFDOUMsS0FBSyxNQUFNRixRQUFRSixxQkFBcUI7UUFDcENTLFNBQVNFLFlBQVksQ0FBQ0MsTUFBTSxDQUFDUjtJQUNqQztJQUNBLElBQUlHLFFBQVE7UUFDUixLQUFLLE1BQU1ILFFBQVFILG1DQUFtQztZQUNsRFEsU0FBU0UsWUFBWSxDQUFDQyxNQUFNLENBQUNSO1FBQ2pDO0lBQ0o7SUFDQSxPQUFPSSxjQUFjQyxTQUFTSSxRQUFRLEtBQUtKO0FBQy9DO0FBQ0E7OztDQUdDLEdBQUcsTUFBTUssbUJBQW1CO0lBQ3pCO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtDQUNIO0FBQ0Q7Ozs7Q0FJQyxHQUFVLFNBQVNDLHFCQUFxQkMsT0FBTztJQUM1QyxLQUFLLE1BQU1DLE9BQU9ILGlCQUFpQjtRQUMvQixPQUFPRSxPQUFPLENBQUNDLElBQUk7SUFDdkI7QUFDSixFQUVBLDBDQUEwQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9zZXJ2ZXIvaW50ZXJuYWwtdXRpbHMuanM/YjMyYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBORVhUX1JTQ19VTklPTl9RVUVSWSB9IGZyb20gXCIuLi9jbGllbnQvY29tcG9uZW50cy9hcHAtcm91dGVyLWhlYWRlcnNcIjtcbmNvbnN0IElOVEVSTkFMX1FVRVJZX05BTUVTID0gW1xuICAgIFwiX19uZXh0RmFsbGJhY2tcIixcbiAgICBcIl9fbmV4dExvY2FsZVwiLFxuICAgIFwiX19uZXh0SW5mZXJyZWRMb2NhbGVGcm9tRGVmYXVsdFwiLFxuICAgIFwiX19uZXh0RGVmYXVsdExvY2FsZVwiLFxuICAgIFwiX19uZXh0SXNOb3RGb3VuZFwiLFxuICAgIE5FWFRfUlNDX1VOSU9OX1FVRVJZXG5dO1xuY29uc3QgRURHRV9FWFRFTkRFRF9JTlRFUk5BTF9RVUVSWV9OQU1FUyA9IFtcbiAgICBcIl9fbmV4dERhdGFSZXFcIlxuXTtcbmV4cG9ydCBmdW5jdGlvbiBzdHJpcEludGVybmFsUXVlcmllcyhxdWVyeSkge1xuICAgIGZvciAoY29uc3QgbmFtZSBvZiBJTlRFUk5BTF9RVUVSWV9OQU1FUyl7XG4gICAgICAgIGRlbGV0ZSBxdWVyeVtuYW1lXTtcbiAgICB9XG59XG5leHBvcnQgZnVuY3Rpb24gc3RyaXBJbnRlcm5hbFNlYXJjaFBhcmFtcyh1cmwsIGlzRWRnZSkge1xuICAgIGNvbnN0IGlzU3RyaW5nVXJsID0gdHlwZW9mIHVybCA9PT0gXCJzdHJpbmdcIjtcbiAgICBjb25zdCBpbnN0YW5jZSA9IGlzU3RyaW5nVXJsID8gbmV3IFVSTCh1cmwpIDogdXJsO1xuICAgIGZvciAoY29uc3QgbmFtZSBvZiBJTlRFUk5BTF9RVUVSWV9OQU1FUyl7XG4gICAgICAgIGluc3RhbmNlLnNlYXJjaFBhcmFtcy5kZWxldGUobmFtZSk7XG4gICAgfVxuICAgIGlmIChpc0VkZ2UpIHtcbiAgICAgICAgZm9yIChjb25zdCBuYW1lIG9mIEVER0VfRVhURU5ERURfSU5URVJOQUxfUVVFUllfTkFNRVMpe1xuICAgICAgICAgICAgaW5zdGFuY2Uuc2VhcmNoUGFyYW1zLmRlbGV0ZShuYW1lKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gaXNTdHJpbmdVcmwgPyBpbnN0YW5jZS50b1N0cmluZygpIDogaW5zdGFuY2U7XG59XG4vKipcbiAqIEhlYWRlcnMgdGhhdCBhcmUgc2V0IGJ5IHRoZSBOZXh0LmpzIHNlcnZlciBhbmQgc2hvdWxkIGJlIHN0cmlwcGVkIGZyb20gdGhlXG4gKiByZXF1ZXN0IGhlYWRlcnMgZ29pbmcgdG8gdGhlIHVzZXIncyBhcHBsaWNhdGlvbi5cbiAqLyBjb25zdCBJTlRFUk5BTF9IRUFERVJTID0gW1xuICAgIFwieC1pbnZva2UtcGF0aFwiLFxuICAgIFwieC1pbnZva2Utc3RhdHVzXCIsXG4gICAgXCJ4LWludm9rZS1lcnJvclwiLFxuICAgIFwieC1pbnZva2UtcXVlcnlcIixcbiAgICBcIngtaW52b2tlLW91dHB1dFwiLFxuICAgIFwieC1taWRkbGV3YXJlLWludm9rZVwiXG5dO1xuLyoqXG4gKiBTdHJpcCBpbnRlcm5hbCBoZWFkZXJzIGZyb20gdGhlIHJlcXVlc3QgaGVhZGVycy5cbiAqXG4gKiBAcGFyYW0gaGVhZGVycyB0aGUgaGVhZGVycyB0byBzdHJpcCBvZiBpbnRlcm5hbCBoZWFkZXJzXG4gKi8gZXhwb3J0IGZ1bmN0aW9uIHN0cmlwSW50ZXJuYWxIZWFkZXJzKGhlYWRlcnMpIHtcbiAgICBmb3IgKGNvbnN0IGtleSBvZiBJTlRFUk5BTF9IRUFERVJTKXtcbiAgICAgICAgZGVsZXRlIGhlYWRlcnNba2V5XTtcbiAgICB9XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWludGVybmFsLXV0aWxzLmpzLm1hcCJdLCJuYW1lcyI6WyJORVhUX1JTQ19VTklPTl9RVUVSWSIsIklOVEVSTkFMX1FVRVJZX05BTUVTIiwiRURHRV9FWFRFTkRFRF9JTlRFUk5BTF9RVUVSWV9OQU1FUyIsInN0cmlwSW50ZXJuYWxRdWVyaWVzIiwicXVlcnkiLCJuYW1lIiwic3RyaXBJbnRlcm5hbFNlYXJjaFBhcmFtcyIsInVybCIsImlzRWRnZSIsImlzU3RyaW5nVXJsIiwiaW5zdGFuY2UiLCJVUkwiLCJzZWFyY2hQYXJhbXMiLCJkZWxldGUiLCJ0b1N0cmluZyIsIklOVEVSTkFMX0hFQURFUlMiLCJzdHJpcEludGVybmFsSGVhZGVycyIsImhlYWRlcnMiLCJrZXkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/internal-utils.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/lib/incremental-cache/fetch-cache.js":
/*!********************************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/lib/incremental-cache/fetch-cache.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ FetchCache)\n/* harmony export */ });\n/* harmony import */ var next_dist_compiled_lru_cache__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/compiled/lru-cache */ \"(middleware)/./node_modules/next/dist/compiled/lru-cache/index.js\");\n/* harmony import */ var next_dist_compiled_lru_cache__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_compiled_lru_cache__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _lib_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../lib/constants */ \"(middleware)/./node_modules/next/dist/esm/lib/constants.js\");\n\n\nlet rateLimitedUntil = 0;\nlet memoryCache;\nconst CACHE_TAGS_HEADER = \"x-vercel-cache-tags\";\nconst CACHE_HEADERS_HEADER = \"x-vercel-sc-headers\";\nconst CACHE_STATE_HEADER = \"x-vercel-cache-state\";\nconst CACHE_REVALIDATE_HEADER = \"x-vercel-revalidate\";\nconst CACHE_FETCH_URL_HEADER = \"x-vercel-cache-item-name\";\nconst CACHE_CONTROL_VALUE_HEADER = \"x-vercel-cache-control\";\nclass FetchCache {\n    static isAvailable(ctx) {\n        return !!(ctx._requestHeaders[\"x-vercel-sc-host\"] || process.env.SUSPENSE_CACHE_URL);\n    }\n    constructor(ctx){\n        this.debug = !!process.env.NEXT_PRIVATE_DEBUG_CACHE;\n        this.headers = {};\n        this.headers[\"Content-Type\"] = \"application/json\";\n        if (CACHE_HEADERS_HEADER in ctx._requestHeaders) {\n            const newHeaders = JSON.parse(ctx._requestHeaders[CACHE_HEADERS_HEADER]);\n            for(const k in newHeaders){\n                this.headers[k] = newHeaders[k];\n            }\n            delete ctx._requestHeaders[CACHE_HEADERS_HEADER];\n        }\n        const scHost = ctx._requestHeaders[\"x-vercel-sc-host\"] || process.env.SUSPENSE_CACHE_URL;\n        const scBasePath = ctx._requestHeaders[\"x-vercel-sc-basepath\"] || process.env.SUSPENSE_CACHE_BASEPATH;\n        if (process.env.SUSPENSE_CACHE_AUTH_TOKEN) {\n            this.headers[\"Authorization\"] = `Bearer ${process.env.SUSPENSE_CACHE_AUTH_TOKEN}`;\n        }\n        if (scHost) {\n            this.cacheEndpoint = `https://${scHost}${scBasePath || \"\"}`;\n            if (this.debug) {\n                console.log(\"using cache endpoint\", this.cacheEndpoint);\n            }\n        } else if (this.debug) {\n            console.log(\"no cache endpoint available\");\n        }\n        if (ctx.maxMemoryCacheSize) {\n            if (!memoryCache) {\n                if (this.debug) {\n                    console.log(\"using memory store for fetch cache\");\n                }\n                memoryCache = new (next_dist_compiled_lru_cache__WEBPACK_IMPORTED_MODULE_0___default())({\n                    max: ctx.maxMemoryCacheSize,\n                    length ({ value }) {\n                        var _JSON_stringify;\n                        if (!value) {\n                            return 25;\n                        } else if (value.kind === \"REDIRECT\") {\n                            return JSON.stringify(value.props).length;\n                        } else if (value.kind === \"IMAGE\") {\n                            throw new Error(\"invariant image should not be incremental-cache\");\n                        } else if (value.kind === \"FETCH\") {\n                            return JSON.stringify(value.data || \"\").length;\n                        } else if (value.kind === \"ROUTE\") {\n                            return value.body.length;\n                        }\n                        // rough estimate of size of cache value\n                        return value.html.length + (((_JSON_stringify = JSON.stringify(value.pageData)) == null ? void 0 : _JSON_stringify.length) || 0);\n                    }\n                });\n            }\n        } else {\n            if (this.debug) {\n                console.log(\"not using memory store for fetch cache\");\n            }\n        }\n    }\n    async revalidateTag(tag) {\n        if (this.debug) {\n            console.log(\"revalidateTag\", tag);\n        }\n        if (Date.now() < rateLimitedUntil) {\n            if (this.debug) {\n                console.log(\"rate limited \", rateLimitedUntil);\n            }\n            return;\n        }\n        try {\n            const res = await fetch(`${this.cacheEndpoint}/v1/suspense-cache/revalidate?tags=${tag}`, {\n                method: \"POST\",\n                headers: this.headers,\n                // @ts-expect-error not on public type\n                next: {\n                    internal: true\n                }\n            });\n            if (res.status === 429) {\n                const retryAfter = res.headers.get(\"retry-after\") || \"60000\";\n                rateLimitedUntil = Date.now() + parseInt(retryAfter);\n            }\n            if (!res.ok) {\n                throw new Error(`Request failed with status ${res.status}.`);\n            }\n        } catch (err) {\n            console.warn(`Failed to revalidate tag ${tag}`, err);\n        }\n    }\n    async get(key, ctx) {\n        const { tags, softTags, fetchCache, fetchIdx, fetchUrl } = ctx;\n        if (!fetchCache) return null;\n        if (Date.now() < rateLimitedUntil) {\n            if (this.debug) {\n                console.log(\"rate limited\");\n            }\n            return null;\n        }\n        let data = memoryCache == null ? void 0 : memoryCache.get(key);\n        // memory cache data is only leveraged for up to 1 seconds\n        // so that revalidation events can be pulled from source\n        if (Date.now() - ((data == null ? void 0 : data.lastModified) || 0) > 2000) {\n            data = undefined;\n        }\n        // get data from fetch cache\n        if (!data && this.cacheEndpoint) {\n            try {\n                const start = Date.now();\n                const fetchParams = {\n                    internal: true,\n                    fetchType: \"cache-get\",\n                    fetchUrl: fetchUrl,\n                    fetchIdx\n                };\n                const res = await fetch(`${this.cacheEndpoint}/v1/suspense-cache/${key}`, {\n                    method: \"GET\",\n                    headers: {\n                        ...this.headers,\n                        [CACHE_FETCH_URL_HEADER]: fetchUrl,\n                        [CACHE_TAGS_HEADER]: (tags == null ? void 0 : tags.join(\",\")) || \"\",\n                        [_lib_constants__WEBPACK_IMPORTED_MODULE_1__.NEXT_CACHE_SOFT_TAGS_HEADER]: (softTags == null ? void 0 : softTags.join(\",\")) || \"\"\n                    },\n                    next: fetchParams\n                });\n                if (res.status === 429) {\n                    const retryAfter = res.headers.get(\"retry-after\") || \"60000\";\n                    rateLimitedUntil = Date.now() + parseInt(retryAfter);\n                }\n                if (res.status === 404) {\n                    if (this.debug) {\n                        console.log(`no fetch cache entry for ${key}, duration: ${Date.now() - start}ms`);\n                    }\n                    return null;\n                }\n                if (!res.ok) {\n                    console.error(await res.text());\n                    throw new Error(`invalid response from cache ${res.status}`);\n                }\n                const cached = await res.json();\n                if (!cached || cached.kind !== \"FETCH\") {\n                    this.debug && console.log({\n                        cached\n                    });\n                    throw new Error(`invalid cache value`);\n                }\n                const cacheState = res.headers.get(CACHE_STATE_HEADER);\n                const age = res.headers.get(\"age\");\n                data = {\n                    value: cached,\n                    // if it's already stale set it to a time in the past\n                    // if not derive last modified from age\n                    lastModified: cacheState !== \"fresh\" ? Date.now() - _lib_constants__WEBPACK_IMPORTED_MODULE_1__.CACHE_ONE_YEAR : Date.now() - parseInt(age || \"0\", 10) * 1000\n                };\n                if (this.debug) {\n                    console.log(`got fetch cache entry for ${key}, duration: ${Date.now() - start}ms, size: ${Object.keys(cached).length}, cache-state: ${cacheState} tags: ${tags == null ? void 0 : tags.join(\",\")} softTags: ${softTags == null ? void 0 : softTags.join(\",\")}`);\n                }\n                if (data) {\n                    memoryCache == null ? void 0 : memoryCache.set(key, data);\n                }\n            } catch (err) {\n                // unable to get data from fetch-cache\n                if (this.debug) {\n                    console.error(`Failed to get from fetch-cache`, err);\n                }\n            }\n        }\n        return data || null;\n    }\n    async set(key, data, { fetchCache, fetchIdx, fetchUrl, tags }) {\n        if (!fetchCache) return;\n        if (Date.now() < rateLimitedUntil) {\n            if (this.debug) {\n                console.log(\"rate limited\");\n            }\n            return;\n        }\n        memoryCache == null ? void 0 : memoryCache.set(key, {\n            value: data,\n            lastModified: Date.now()\n        });\n        if (this.cacheEndpoint) {\n            try {\n                const start = Date.now();\n                if (data !== null && \"revalidate\" in data) {\n                    this.headers[CACHE_REVALIDATE_HEADER] = data.revalidate.toString();\n                }\n                if (!this.headers[CACHE_REVALIDATE_HEADER] && data !== null && \"data\" in data) {\n                    this.headers[CACHE_CONTROL_VALUE_HEADER] = data.data.headers[\"cache-control\"];\n                }\n                const body = JSON.stringify({\n                    ...data,\n                    // we send the tags in the header instead\n                    // of in the body here\n                    tags: undefined\n                });\n                if (this.debug) {\n                    console.log(\"set cache\", key);\n                }\n                const fetchParams = {\n                    internal: true,\n                    fetchType: \"cache-set\",\n                    fetchUrl,\n                    fetchIdx\n                };\n                const res = await fetch(`${this.cacheEndpoint}/v1/suspense-cache/${key}`, {\n                    method: \"POST\",\n                    headers: {\n                        ...this.headers,\n                        [CACHE_FETCH_URL_HEADER]: fetchUrl || \"\",\n                        [CACHE_TAGS_HEADER]: (tags == null ? void 0 : tags.join(\",\")) || \"\"\n                    },\n                    body: body,\n                    next: fetchParams\n                });\n                if (res.status === 429) {\n                    const retryAfter = res.headers.get(\"retry-after\") || \"60000\";\n                    rateLimitedUntil = Date.now() + parseInt(retryAfter);\n                }\n                if (!res.ok) {\n                    this.debug && console.log(await res.text());\n                    throw new Error(`invalid response ${res.status}`);\n                }\n                if (this.debug) {\n                    console.log(`successfully set to fetch-cache for ${key}, duration: ${Date.now() - start}ms, size: ${body.length}`);\n                }\n            } catch (err) {\n                // unable to set to fetch-cache\n                if (this.debug) {\n                    console.error(`Failed to update fetch cache`, err);\n                }\n            }\n        }\n        return;\n    }\n} //# sourceMappingURL=fetch-cache.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/lib/incremental-cache/fetch-cache.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/lib/incremental-cache/file-system-cache.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/lib/incremental-cache/file-system-cache.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ FileSystemCache)\n/* harmony export */ });\n/* harmony import */ var next_dist_compiled_lru_cache__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/compiled/lru-cache */ \"(middleware)/./node_modules/next/dist/compiled/lru-cache/index.js\");\n/* harmony import */ var next_dist_compiled_lru_cache__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_compiled_lru_cache__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _shared_lib_isomorphic_path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../shared/lib/isomorphic/path */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/isomorphic/path.js\");\n/* harmony import */ var _shared_lib_isomorphic_path__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_shared_lib_isomorphic_path__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _lib_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../lib/constants */ \"(middleware)/./node_modules/next/dist/esm/lib/constants.js\");\n\n\n\nlet memoryCache;\nlet tagsManifest;\nclass FileSystemCache {\n    constructor(ctx){\n        this.fs = ctx.fs;\n        this.flushToDisk = ctx.flushToDisk;\n        this.serverDistDir = ctx.serverDistDir;\n        this.appDir = !!ctx._appDir;\n        this.revalidatedTags = ctx.revalidatedTags;\n        if (ctx.maxMemoryCacheSize && !memoryCache) {\n            memoryCache = new (next_dist_compiled_lru_cache__WEBPACK_IMPORTED_MODULE_0___default())({\n                max: ctx.maxMemoryCacheSize,\n                length ({ value }) {\n                    var _JSON_stringify;\n                    if (!value) {\n                        return 25;\n                    } else if (value.kind === \"REDIRECT\") {\n                        return JSON.stringify(value.props).length;\n                    } else if (value.kind === \"IMAGE\") {\n                        throw new Error(\"invariant image should not be incremental-cache\");\n                    } else if (value.kind === \"FETCH\") {\n                        return JSON.stringify(value.data || \"\").length;\n                    } else if (value.kind === \"ROUTE\") {\n                        return value.body.length;\n                    }\n                    // rough estimate of size of cache value\n                    return value.html.length + (((_JSON_stringify = JSON.stringify(value.pageData)) == null ? void 0 : _JSON_stringify.length) || 0);\n                }\n            });\n        }\n        if (this.serverDistDir && this.fs) {\n            this.tagsManifestPath = _shared_lib_isomorphic_path__WEBPACK_IMPORTED_MODULE_1___default().join(this.serverDistDir, \"..\", \"cache\", \"fetch-cache\", \"tags-manifest.json\");\n            this.loadTagsManifest();\n        }\n    }\n    loadTagsManifest() {\n        if (!this.tagsManifestPath || !this.fs || tagsManifest) return;\n        try {\n            tagsManifest = JSON.parse(this.fs.readFileSync(this.tagsManifestPath, \"utf8\"));\n        } catch (err) {\n            tagsManifest = {\n                version: 1,\n                items: {}\n            };\n        }\n    }\n    async revalidateTag(tag) {\n        // we need to ensure the tagsManifest is refreshed\n        // since separate workers can be updating it at the same\n        // time and we can't flush out of sync data\n        this.loadTagsManifest();\n        if (!tagsManifest || !this.tagsManifestPath) {\n            return;\n        }\n        const data = tagsManifest.items[tag] || {};\n        data.revalidatedAt = Date.now();\n        tagsManifest.items[tag] = data;\n        try {\n            await this.fs.mkdir(_shared_lib_isomorphic_path__WEBPACK_IMPORTED_MODULE_1___default().dirname(this.tagsManifestPath));\n            await this.fs.writeFile(this.tagsManifestPath, JSON.stringify(tagsManifest || {}));\n        } catch (err) {\n            console.warn(\"Failed to update tags manifest.\", err);\n        }\n    }\n    async get(key, { tags, softTags, fetchCache } = {}) {\n        var _data_value, _data_value1;\n        let data = memoryCache == null ? void 0 : memoryCache.get(key);\n        // let's check the disk for seed data\n        if (!data && \"edge\" !== \"edge\") { var _data_value_data, _data_value3, _data_value2; }\n        if ((data == null ? void 0 : (_data_value = data.value) == null ? void 0 : _data_value.kind) === \"PAGE\") {\n            var _data_value_headers;\n            let cacheTags;\n            const tagsHeader = (_data_value_headers = data.value.headers) == null ? void 0 : _data_value_headers[_lib_constants__WEBPACK_IMPORTED_MODULE_2__.NEXT_CACHE_TAGS_HEADER];\n            if (typeof tagsHeader === \"string\") {\n                cacheTags = tagsHeader.split(\",\");\n            }\n            if (cacheTags == null ? void 0 : cacheTags.length) {\n                this.loadTagsManifest();\n                const isStale = cacheTags.some((tag)=>{\n                    var _tagsManifest_items_tag;\n                    return (tagsManifest == null ? void 0 : (_tagsManifest_items_tag = tagsManifest.items[tag]) == null ? void 0 : _tagsManifest_items_tag.revalidatedAt) && (tagsManifest == null ? void 0 : tagsManifest.items[tag].revalidatedAt) >= ((data == null ? void 0 : data.lastModified) || Date.now());\n                });\n                // we trigger a blocking validation if an ISR page\n                // had a tag revalidated, if we want to be a background\n                // revalidation instead we return data.lastModified = -1\n                if (isStale) {\n                    data = undefined;\n                }\n            }\n        }\n        if (data && (data == null ? void 0 : (_data_value1 = data.value) == null ? void 0 : _data_value1.kind) === \"FETCH\") {\n            this.loadTagsManifest();\n            const combinedTags = [\n                ...tags || [],\n                ...softTags || []\n            ];\n            const wasRevalidated = combinedTags.some((tag)=>{\n                var _tagsManifest_items_tag;\n                if (this.revalidatedTags.includes(tag)) {\n                    return true;\n                }\n                return (tagsManifest == null ? void 0 : (_tagsManifest_items_tag = tagsManifest.items[tag]) == null ? void 0 : _tagsManifest_items_tag.revalidatedAt) && (tagsManifest == null ? void 0 : tagsManifest.items[tag].revalidatedAt) >= ((data == null ? void 0 : data.lastModified) || Date.now());\n            });\n            // When revalidate tag is called we don't return\n            // stale data so it's updated right away\n            if (wasRevalidated) {\n                data = undefined;\n            }\n        }\n        return data || null;\n    }\n    async set(key, data, ctx) {\n        memoryCache == null ? void 0 : memoryCache.set(key, {\n            value: data,\n            lastModified: Date.now()\n        });\n        if (!this.flushToDisk) return;\n        if ((data == null ? void 0 : data.kind) === \"ROUTE\") {\n            const { filePath } = await this.getFsPath({\n                pathname: `${key}.body`,\n                appDir: true\n            });\n            await this.fs.mkdir(_shared_lib_isomorphic_path__WEBPACK_IMPORTED_MODULE_1___default().dirname(filePath));\n            await this.fs.writeFile(filePath, data.body);\n            await this.fs.writeFile(filePath.replace(/\\.body$/, \".meta\"), JSON.stringify({\n                headers: data.headers,\n                status: data.status\n            }));\n            return;\n        }\n        if ((data == null ? void 0 : data.kind) === \"PAGE\") {\n            const isAppPath = typeof data.pageData === \"string\";\n            const { filePath: htmlPath } = await this.getFsPath({\n                pathname: `${key}.html`,\n                appDir: isAppPath\n            });\n            await this.fs.mkdir(_shared_lib_isomorphic_path__WEBPACK_IMPORTED_MODULE_1___default().dirname(htmlPath));\n            await this.fs.writeFile(htmlPath, data.html);\n            await this.fs.writeFile((await this.getFsPath({\n                pathname: `${key}.${isAppPath ? \"rsc\" : \"json\"}`,\n                appDir: isAppPath\n            })).filePath, isAppPath ? data.pageData : JSON.stringify(data.pageData));\n            if (data.headers || data.status) {\n                await this.fs.writeFile(htmlPath.replace(/\\.html$/, \".meta\"), JSON.stringify({\n                    headers: data.headers,\n                    status: data.status\n                }));\n            }\n        } else if ((data == null ? void 0 : data.kind) === \"FETCH\") {\n            const { filePath } = await this.getFsPath({\n                pathname: key,\n                fetchCache: true\n            });\n            await this.fs.mkdir(_shared_lib_isomorphic_path__WEBPACK_IMPORTED_MODULE_1___default().dirname(filePath));\n            await this.fs.writeFile(filePath, JSON.stringify({\n                ...data,\n                tags: ctx.tags\n            }));\n        }\n    }\n    async getFsPath({ pathname, appDir, fetchCache }) {\n        if (fetchCache) {\n            // we store in .next/cache/fetch-cache so it can be persisted\n            // across deploys\n            return {\n                filePath: _shared_lib_isomorphic_path__WEBPACK_IMPORTED_MODULE_1___default().join(this.serverDistDir, \"..\", \"cache\", \"fetch-cache\", pathname),\n                isAppPath: false\n            };\n        }\n        let isAppPath = false;\n        let filePath = _shared_lib_isomorphic_path__WEBPACK_IMPORTED_MODULE_1___default().join(this.serverDistDir, \"pages\", pathname);\n        if (!this.appDir || appDir === false) return {\n            filePath,\n            isAppPath\n        };\n        try {\n            await this.fs.readFile(filePath);\n            return {\n                filePath,\n                isAppPath\n            };\n        } catch (err) {\n            return {\n                filePath: _shared_lib_isomorphic_path__WEBPACK_IMPORTED_MODULE_1___default().join(this.serverDistDir, \"app\", pathname),\n                isAppPath: true\n            };\n        }\n    }\n} //# sourceMappingURL=file-system-cache.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/lib/incremental-cache/file-system-cache.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/lib/incremental-cache/index.js":
/*!**************************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/lib/incremental-cache/index.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CacheHandler: () => (/* binding */ CacheHandler),\n/* harmony export */   IncrementalCache: () => (/* binding */ IncrementalCache)\n/* harmony export */ });\n/* harmony import */ var _fetch_cache__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./fetch-cache */ \"(middleware)/./node_modules/next/dist/esm/server/lib/incremental-cache/fetch-cache.js\");\n/* harmony import */ var _file_system_cache__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./file-system-cache */ \"(middleware)/./node_modules/next/dist/esm/server/lib/incremental-cache/file-system-cache.js\");\n/* harmony import */ var _shared_lib_isomorphic_path__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../shared/lib/isomorphic/path */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/isomorphic/path.js\");\n/* harmony import */ var _shared_lib_isomorphic_path__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_shared_lib_isomorphic_path__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _stream_utils_encode_decode__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../stream-utils/encode-decode */ \"(middleware)/./node_modules/next/dist/esm/server/stream-utils/encode-decode.js\");\n/* harmony import */ var _shared_lib_base64_arraybuffer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../shared/lib/base64-arraybuffer */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/base64-arraybuffer.js\");\n/* harmony import */ var _shared_lib_page_path_normalize_page_path__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../shared/lib/page-path/normalize-page-path */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/page-path/normalize-page-path.js\");\n/* harmony import */ var _lib_constants__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../lib/constants */ \"(middleware)/./node_modules/next/dist/esm/lib/constants.js\");\n\n\n\n\n\n\n\nfunction toRoute(pathname) {\n    return pathname.replace(/\\/$/, \"\").replace(/\\/index$/, \"\") || \"/\";\n}\nclass CacheHandler {\n    // eslint-disable-next-line\n    constructor(_ctx){}\n    async get(..._args) {\n        return {};\n    }\n    async set(..._args) {}\n    async revalidateTag(_tag) {}\n}\nclass IncrementalCache {\n    constructor({ fs, dev, appDir, flushToDisk, fetchCache, minimalMode, serverDistDir, requestHeaders, requestProtocol, maxMemoryCacheSize, getPrerenderManifest, fetchCacheKeyPrefix, CurCacheHandler, allowedRevalidateHeaderKeys }){\n        var _this_prerenderManifest_preview, _this_prerenderManifest, _this_prerenderManifest_preview1, _this_prerenderManifest1;\n        this.locks = new Map();\n        this.unlocks = new Map();\n        const debug = !!process.env.NEXT_PRIVATE_DEBUG_CACHE;\n        if (!CurCacheHandler) {\n            if (fs && serverDistDir) {\n                if (debug) {\n                    console.log(\"using filesystem cache handler\");\n                }\n                CurCacheHandler = _file_system_cache__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\n            }\n            if (_fetch_cache__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isAvailable({\n                _requestHeaders: requestHeaders\n            }) && minimalMode && fetchCache) {\n                if (debug) {\n                    console.log(\"using fetch cache handler\");\n                }\n                CurCacheHandler = _fetch_cache__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\n            }\n        } else if (debug) {\n            console.log(\"using custom cache handler\", CurCacheHandler.name);\n        }\n        if (process.env.__NEXT_TEST_MAX_ISR_CACHE) {\n            // Allow cache size to be overridden for testing purposes\n            maxMemoryCacheSize = parseInt(process.env.__NEXT_TEST_MAX_ISR_CACHE, 10);\n        }\n        this.dev = dev;\n        // this is a hack to avoid Webpack knowing this is equal to this.minimalMode\n        // because we replace this.minimalMode to true in production bundles.\n        const minimalModeKey = \"minimalMode\";\n        this[minimalModeKey] = minimalMode;\n        this.requestHeaders = requestHeaders;\n        this.requestProtocol = requestProtocol;\n        this.allowedRevalidateHeaderKeys = allowedRevalidateHeaderKeys;\n        this.prerenderManifest = getPrerenderManifest();\n        this.fetchCacheKeyPrefix = fetchCacheKeyPrefix;\n        let revalidatedTags = [];\n        if (requestHeaders[_lib_constants__WEBPACK_IMPORTED_MODULE_6__.PRERENDER_REVALIDATE_HEADER] === ((_this_prerenderManifest = this.prerenderManifest) == null ? void 0 : (_this_prerenderManifest_preview = _this_prerenderManifest.preview) == null ? void 0 : _this_prerenderManifest_preview.previewModeId)) {\n            this.isOnDemandRevalidate = true;\n        }\n        if (minimalMode && typeof requestHeaders[_lib_constants__WEBPACK_IMPORTED_MODULE_6__.NEXT_CACHE_REVALIDATED_TAGS_HEADER] === \"string\" && requestHeaders[_lib_constants__WEBPACK_IMPORTED_MODULE_6__.NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER] === ((_this_prerenderManifest1 = this.prerenderManifest) == null ? void 0 : (_this_prerenderManifest_preview1 = _this_prerenderManifest1.preview) == null ? void 0 : _this_prerenderManifest_preview1.previewModeId)) {\n            revalidatedTags = requestHeaders[_lib_constants__WEBPACK_IMPORTED_MODULE_6__.NEXT_CACHE_REVALIDATED_TAGS_HEADER].split(\",\");\n        }\n        if (CurCacheHandler) {\n            this.cacheHandler = new CurCacheHandler({\n                dev,\n                fs,\n                flushToDisk,\n                serverDistDir,\n                revalidatedTags,\n                maxMemoryCacheSize,\n                _appDir: !!appDir,\n                _requestHeaders: requestHeaders,\n                fetchCacheKeyPrefix\n            });\n        }\n    }\n    calculateRevalidate(pathname, fromTime, dev) {\n        // in development we don't have a prerender-manifest\n        // and default to always revalidating to allow easier debugging\n        if (dev) return new Date().getTime() - 1000;\n        // if an entry isn't present in routes we fallback to a default\n        // of revalidating after 1 second\n        const { initialRevalidateSeconds } = this.prerenderManifest.routes[toRoute(pathname)] || {\n            initialRevalidateSeconds: 1\n        };\n        const revalidateAfter = typeof initialRevalidateSeconds === \"number\" ? initialRevalidateSeconds * 1000 + fromTime : initialRevalidateSeconds;\n        return revalidateAfter;\n    }\n    _getPathname(pathname, fetchCache) {\n        return fetchCache ? pathname : (0,_shared_lib_page_path_normalize_page_path__WEBPACK_IMPORTED_MODULE_5__.normalizePagePath)(pathname);\n    }\n    async unlock(cacheKey) {\n        const unlock = this.unlocks.get(cacheKey);\n        if (unlock) {\n            unlock();\n            this.locks.delete(cacheKey);\n            this.unlocks.delete(cacheKey);\n        }\n    }\n    async lock(cacheKey) {\n        if (process.env.__NEXT_INCREMENTAL_CACHE_IPC_PORT && process.env.__NEXT_INCREMENTAL_CACHE_IPC_KEY && \"edge\" !== \"edge\") {}\n        let unlockNext = ()=>Promise.resolve();\n        const existingLock = this.locks.get(cacheKey);\n        if (existingLock) {\n            await existingLock;\n        } else {\n            const newLock = new Promise((resolve)=>{\n                unlockNext = async ()=>{\n                    resolve();\n                };\n            });\n            this.locks.set(cacheKey, newLock);\n            this.unlocks.set(cacheKey, unlockNext);\n        }\n        return unlockNext;\n    }\n    async revalidateTag(tag) {\n        var _this_cacheHandler_revalidateTag, _this_cacheHandler;\n        if (process.env.__NEXT_INCREMENTAL_CACHE_IPC_PORT && process.env.__NEXT_INCREMENTAL_CACHE_IPC_KEY && \"edge\" !== \"edge\") {}\n        return (_this_cacheHandler = this.cacheHandler) == null ? void 0 : (_this_cacheHandler_revalidateTag = _this_cacheHandler.revalidateTag) == null ? void 0 : _this_cacheHandler_revalidateTag.call(_this_cacheHandler, tag);\n    }\n    // x-ref: https://github.com/facebook/react/blob/2655c9354d8e1c54ba888444220f63e836925caa/packages/react/src/ReactFetch.js#L23\n    async fetchCacheKey(url, init = {}) {\n        // this should be bumped anytime a fix is made to cache entries\n        // that should bust the cache\n        const MAIN_KEY_PREFIX = \"v3\";\n        let cacheKey;\n        const bodyChunks = [];\n        if (init.body) {\n            // handle ReadableStream body\n            if (typeof init.body.getReader === \"function\") {\n                const readableBody = init.body;\n                const reader = readableBody.getReader();\n                let arrayBuffer = new Uint8Array();\n                function processValue({ done, value }) {\n                    if (done) {\n                        return;\n                    }\n                    if (value) {\n                        try {\n                            bodyChunks.push(typeof value === \"string\" ? value : (0,_shared_lib_base64_arraybuffer__WEBPACK_IMPORTED_MODULE_4__.encode)(value));\n                            const curBuffer = typeof value === \"string\" ? (0,_stream_utils_encode_decode__WEBPACK_IMPORTED_MODULE_3__.encodeText)(value) : new Uint8Array(value);\n                            const prevBuffer = arrayBuffer;\n                            arrayBuffer = new Uint8Array(prevBuffer.byteLength + curBuffer.byteLength);\n                            arrayBuffer.set(prevBuffer);\n                            arrayBuffer.set(curBuffer, prevBuffer.byteLength);\n                        } catch (err) {\n                            console.error(err);\n                        }\n                    }\n                    reader.read().then(processValue);\n                }\n                await reader.read().then(processValue);\n                init._ogBody = arrayBuffer;\n            } else if (typeof init.body.keys === \"function\") {\n                const formData = init.body;\n                init._ogBody = init.body;\n                for (const key of new Set([\n                    ...formData.keys()\n                ])){\n                    const values = formData.getAll(key);\n                    bodyChunks.push(`${key}=${(await Promise.all(values.map(async (val)=>{\n                        if (typeof val === \"string\") {\n                            return val;\n                        } else {\n                            return await val.text();\n                        }\n                    }))).join(\",\")}`);\n                }\n            // handle blob body\n            } else if (typeof init.body.arrayBuffer === \"function\") {\n                const blob = init.body;\n                const arrayBuffer = await blob.arrayBuffer();\n                bodyChunks.push((0,_shared_lib_base64_arraybuffer__WEBPACK_IMPORTED_MODULE_4__.encode)(await init.body.arrayBuffer()));\n                init._ogBody = new Blob([\n                    arrayBuffer\n                ], {\n                    type: blob.type\n                });\n            } else if (typeof init.body === \"string\") {\n                bodyChunks.push(init.body);\n                init._ogBody = init.body;\n            }\n        }\n        const cacheString = JSON.stringify([\n            MAIN_KEY_PREFIX,\n            this.fetchCacheKeyPrefix || \"\",\n            url,\n            init.method,\n            typeof (init.headers || {}).keys === \"function\" ? Object.fromEntries(init.headers) : init.headers,\n            init.mode,\n            init.redirect,\n            init.credentials,\n            init.referrer,\n            init.referrerPolicy,\n            init.integrity,\n            init.cache,\n            bodyChunks\n        ]);\n        if (true) {\n            function bufferToHex(buffer) {\n                return Array.prototype.map.call(new Uint8Array(buffer), (b)=>b.toString(16).padStart(2, \"0\")).join(\"\");\n            }\n            const buffer = (0,_stream_utils_encode_decode__WEBPACK_IMPORTED_MODULE_3__.encodeText)(cacheString);\n            cacheKey = bufferToHex(await crypto.subtle.digest(\"SHA-256\", buffer));\n        } else {}\n        return cacheKey;\n    }\n    // get data from cache if available\n    async get(cacheKey, ctx = {}) {\n        var _this_cacheHandler, _cacheData_value, _this_prerenderManifest_routes_toRoute;\n        if (process.env.__NEXT_INCREMENTAL_CACHE_IPC_PORT && process.env.__NEXT_INCREMENTAL_CACHE_IPC_KEY && \"edge\" !== \"edge\") {}\n        // we don't leverage the prerender cache in dev mode\n        // so that getStaticProps is always called for easier debugging\n        if (this.dev && (!ctx.fetchCache || this.requestHeaders[\"cache-control\"] === \"no-cache\")) {\n            return null;\n        }\n        cacheKey = this._getPathname(cacheKey, ctx.fetchCache);\n        let entry = null;\n        let revalidate = ctx.revalidate;\n        const cacheData = await ((_this_cacheHandler = this.cacheHandler) == null ? void 0 : _this_cacheHandler.get(cacheKey, ctx));\n        if ((cacheData == null ? void 0 : (_cacheData_value = cacheData.value) == null ? void 0 : _cacheData_value.kind) === \"FETCH\") {\n            const combinedTags = [\n                ...ctx.tags || [],\n                ...ctx.softTags || []\n            ];\n            // if a tag was revalidated we don't return stale data\n            if (combinedTags.some((tag)=>{\n                var _this_revalidatedTags;\n                return (_this_revalidatedTags = this.revalidatedTags) == null ? void 0 : _this_revalidatedTags.includes(tag);\n            })) {\n                return null;\n            }\n            revalidate = revalidate || cacheData.value.revalidate;\n            const age = Math.round((Date.now() - (cacheData.lastModified || 0)) / 1000);\n            const isStale = age > revalidate;\n            const data = cacheData.value.data;\n            return {\n                isStale: isStale,\n                value: {\n                    kind: \"FETCH\",\n                    data,\n                    revalidate: revalidate\n                },\n                revalidateAfter: Date.now() + revalidate * 1000\n            };\n        }\n        const curRevalidate = (_this_prerenderManifest_routes_toRoute = this.prerenderManifest.routes[toRoute(cacheKey)]) == null ? void 0 : _this_prerenderManifest_routes_toRoute.initialRevalidateSeconds;\n        let isStale;\n        let revalidateAfter;\n        if ((cacheData == null ? void 0 : cacheData.lastModified) === -1) {\n            isStale = -1;\n            revalidateAfter = -1 * _lib_constants__WEBPACK_IMPORTED_MODULE_6__.CACHE_ONE_YEAR;\n        } else {\n            revalidateAfter = this.calculateRevalidate(cacheKey, (cacheData == null ? void 0 : cacheData.lastModified) || Date.now(), this.dev && !ctx.fetchCache);\n            isStale = revalidateAfter !== false && revalidateAfter < Date.now() ? true : undefined;\n        }\n        if (cacheData) {\n            entry = {\n                isStale,\n                curRevalidate,\n                revalidateAfter,\n                value: cacheData.value\n            };\n        }\n        if (!cacheData && this.prerenderManifest.notFoundRoutes.includes(cacheKey)) {\n            // for the first hit after starting the server the cache\n            // may not have a way to save notFound: true so if\n            // the prerender-manifest marks this as notFound then we\n            // return that entry and trigger a cache set to give it a\n            // chance to update in-memory entries\n            entry = {\n                isStale,\n                value: null,\n                curRevalidate,\n                revalidateAfter\n            };\n            this.set(cacheKey, entry.value, ctx);\n        }\n        return entry;\n    }\n    // populate the incremental cache with new data\n    async set(pathname, data, ctx) {\n        if (process.env.__NEXT_INCREMENTAL_CACHE_IPC_PORT && process.env.__NEXT_INCREMENTAL_CACHE_IPC_KEY && \"edge\" !== \"edge\") {}\n        if (this.dev && !ctx.fetchCache) return;\n        // fetchCache has upper limit of 2MB per-entry currently\n        if (ctx.fetchCache && JSON.stringify(data).length > 2 * 1024 * 1024) {\n            if (this.dev) {\n                throw new Error(`fetch for over 2MB of data can not be cached`);\n            }\n            return;\n        }\n        pathname = this._getPathname(pathname, ctx.fetchCache);\n        try {\n            var _this_cacheHandler;\n            // we use the prerender manifest memory instance\n            // to store revalidate timings for calculating\n            // revalidateAfter values so we update this on set\n            if (typeof ctx.revalidate !== \"undefined\" && !ctx.fetchCache) {\n                this.prerenderManifest.routes[pathname] = {\n                    dataRoute: _shared_lib_isomorphic_path__WEBPACK_IMPORTED_MODULE_2___default().posix.join(\"/_next/data\", `${(0,_shared_lib_page_path_normalize_page_path__WEBPACK_IMPORTED_MODULE_5__.normalizePagePath)(pathname)}.json`),\n                    srcRoute: null,\n                    initialRevalidateSeconds: ctx.revalidate\n                };\n            }\n            await ((_this_cacheHandler = this.cacheHandler) == null ? void 0 : _this_cacheHandler.set(pathname, data, ctx));\n        } catch (error) {\n            console.warn(\"Failed to update prerender cache for\", pathname, error);\n        }\n    }\n} //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/lib/incremental-cache/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/stream-utils/encode-decode.js":
/*!*************************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/stream-utils/encode-decode.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeText: () => (/* binding */ decodeText),\n/* harmony export */   encodeText: () => (/* binding */ encodeText)\n/* harmony export */ });\nfunction encodeText(input) {\n    return new TextEncoder().encode(input);\n}\nfunction decodeText(input, textDecoder) {\n    return textDecoder.decode(input, {\n        stream: true\n    });\n} //# sourceMappingURL=encode-decode.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3N0cmVhbS11dGlscy9lbmNvZGUtZGVjb2RlLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQU8sU0FBU0EsV0FBV0MsS0FBSztJQUM1QixPQUFPLElBQUlDLGNBQWNDLE1BQU0sQ0FBQ0Y7QUFDcEM7QUFDTyxTQUFTRyxXQUFXSCxLQUFLLEVBQUVJLFdBQVc7SUFDekMsT0FBT0EsWUFBWUMsTUFBTSxDQUFDTCxPQUFPO1FBQzdCTSxRQUFRO0lBQ1o7QUFDSixFQUVBLHlDQUF5QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9zZXJ2ZXIvc3RyZWFtLXV0aWxzL2VuY29kZS1kZWNvZGUuanM/OTY3ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gZW5jb2RlVGV4dChpbnB1dCkge1xuICAgIHJldHVybiBuZXcgVGV4dEVuY29kZXIoKS5lbmNvZGUoaW5wdXQpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZVRleHQoaW5wdXQsIHRleHREZWNvZGVyKSB7XG4gICAgcmV0dXJuIHRleHREZWNvZGVyLmRlY29kZShpbnB1dCwge1xuICAgICAgICBzdHJlYW06IHRydWVcbiAgICB9KTtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZW5jb2RlLWRlY29kZS5qcy5tYXAiXSwibmFtZXMiOlsiZW5jb2RlVGV4dCIsImlucHV0IiwiVGV4dEVuY29kZXIiLCJlbmNvZGUiLCJkZWNvZGVUZXh0IiwidGV4dERlY29kZXIiLCJkZWNvZGUiLCJzdHJlYW0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/stream-utils/encode-decode.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/adapter.js":
/*!**********************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/adapter.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   adapter: () => (/* binding */ adapter)\n/* harmony export */ });\n/* harmony import */ var _error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./error */ \"(middleware)/./node_modules/next/dist/esm/server/web/error.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils */ \"(middleware)/./node_modules/next/dist/esm/server/web/utils.js\");\n/* harmony import */ var _spec_extension_fetch_event__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./spec-extension/fetch-event */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/fetch-event.js\");\n/* harmony import */ var _spec_extension_request__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./spec-extension/request */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/request.js\");\n/* harmony import */ var _spec_extension_response__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./spec-extension/response */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/response.js\");\n/* harmony import */ var _shared_lib_router_utils_relativize_url__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../shared/lib/router/utils/relativize-url */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/relativize-url.js\");\n/* harmony import */ var _next_url__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./next-url */ \"(middleware)/./node_modules/next/dist/esm/server/web/next-url.js\");\n/* harmony import */ var _internal_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../internal-utils */ \"(middleware)/./node_modules/next/dist/esm/server/internal-utils.js\");\n/* harmony import */ var _shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../shared/lib/router/utils/app-paths */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/app-paths.js\");\n/* harmony import */ var _client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../client/components/app-router-headers */ \"(middleware)/./node_modules/next/dist/esm/client/components/app-router-headers.js\");\n/* harmony import */ var _lib_constants__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../lib/constants */ \"(middleware)/./node_modules/next/dist/esm/lib/constants.js\");\n/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./globals */ \"(middleware)/./node_modules/next/dist/esm/server/web/globals.js\");\n/* harmony import */ var _async_storage_request_async_storage_wrapper__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../async-storage/request-async-storage-wrapper */ \"(middleware)/./node_modules/next/dist/esm/server/async-storage/request-async-storage-wrapper.js\");\n/* harmony import */ var _client_components_request_async_storage_external__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../client/components/request-async-storage.external */ \"(middleware)/./node_modules/next/dist/esm/client/components/request-async-storage.external.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nclass NextRequestHint extends _spec_extension_request__WEBPACK_IMPORTED_MODULE_3__.NextRequest {\n    constructor(params){\n        super(params.input, params.init);\n        this.sourcePage = params.page;\n    }\n    get request() {\n        throw new _error__WEBPACK_IMPORTED_MODULE_0__.PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n    respondWith() {\n        throw new _error__WEBPACK_IMPORTED_MODULE_0__.PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n    waitUntil() {\n        throw new _error__WEBPACK_IMPORTED_MODULE_0__.PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n}\nconst FLIGHT_PARAMETERS = [\n    [\n        _client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_9__.RSC\n    ],\n    [\n        _client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_9__.NEXT_ROUTER_STATE_TREE\n    ],\n    [\n        _client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_9__.NEXT_ROUTER_PREFETCH\n    ]\n];\nasync function adapter(params) {\n    await (0,_globals__WEBPACK_IMPORTED_MODULE_11__.ensureInstrumentationRegistered)();\n    // TODO-APP: use explicit marker for this\n    const isEdgeRendering = typeof self.__BUILD_MANIFEST !== \"undefined\";\n    const prerenderManifest = typeof self.__PRERENDER_MANIFEST === \"string\" ? JSON.parse(self.__PRERENDER_MANIFEST) : undefined;\n    params.request.url = (0,_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_8__.normalizeRscPath)(params.request.url, true);\n    const requestUrl = new _next_url__WEBPACK_IMPORTED_MODULE_6__.NextURL(params.request.url, {\n        headers: params.request.headers,\n        nextConfig: params.request.nextConfig\n    });\n    // Iterator uses an index to keep track of the current iteration. Because of deleting and appending below we can't just use the iterator.\n    // Instead we use the keys before iteration.\n    const keys = [\n        ...requestUrl.searchParams.keys()\n    ];\n    for (const key of keys){\n        const value = requestUrl.searchParams.getAll(key);\n        if (key !== _lib_constants__WEBPACK_IMPORTED_MODULE_10__.NEXT_QUERY_PARAM_PREFIX && key.startsWith(_lib_constants__WEBPACK_IMPORTED_MODULE_10__.NEXT_QUERY_PARAM_PREFIX)) {\n            const normalizedKey = key.substring(_lib_constants__WEBPACK_IMPORTED_MODULE_10__.NEXT_QUERY_PARAM_PREFIX.length);\n            requestUrl.searchParams.delete(normalizedKey);\n            for (const val of value){\n                requestUrl.searchParams.append(normalizedKey, val);\n            }\n            requestUrl.searchParams.delete(key);\n        }\n    }\n    // Ensure users only see page requests, never data requests.\n    const buildId = requestUrl.buildId;\n    requestUrl.buildId = \"\";\n    const isDataReq = params.request.headers[\"x-nextjs-data\"];\n    if (isDataReq && requestUrl.pathname === \"/index\") {\n        requestUrl.pathname = \"/\";\n    }\n    const requestHeaders = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.fromNodeOutgoingHttpHeaders)(params.request.headers);\n    const flightHeaders = new Map();\n    // Parameters should only be stripped for middleware\n    if (!isEdgeRendering) {\n        for (const param of FLIGHT_PARAMETERS){\n            const key = param.toString().toLowerCase();\n            const value = requestHeaders.get(key);\n            if (value) {\n                flightHeaders.set(key, requestHeaders.get(key));\n                requestHeaders.delete(key);\n            }\n        }\n    }\n    const normalizeUrl =  false ? 0 : requestUrl;\n    const request = new NextRequestHint({\n        page: params.page,\n        // Strip internal query parameters off the request.\n        input: (0,_internal_utils__WEBPACK_IMPORTED_MODULE_7__.stripInternalSearchParams)(normalizeUrl, true).toString(),\n        init: {\n            body: params.request.body,\n            geo: params.request.geo,\n            headers: requestHeaders,\n            ip: params.request.ip,\n            method: params.request.method,\n            nextConfig: params.request.nextConfig,\n            signal: params.request.signal\n        }\n    });\n    /**\n   * This allows to identify the request as a data request. The user doesn't\n   * need to know about this property neither use it. We add it for testing\n   * purposes.\n   */ if (isDataReq) {\n        Object.defineProperty(request, \"__isData\", {\n            enumerable: false,\n            value: true\n        });\n    }\n    if (!globalThis.__incrementalCache && params.IncrementalCache) {\n        globalThis.__incrementalCache = new params.IncrementalCache({\n            appDir: true,\n            fetchCache: true,\n            minimalMode: \"development\" !== \"development\",\n            fetchCacheKeyPrefix: undefined,\n            dev: \"development\" === \"development\",\n            requestHeaders: params.request.headers,\n            requestProtocol: \"https\",\n            getPrerenderManifest: ()=>{\n                return {\n                    version: -1,\n                    routes: {},\n                    dynamicRoutes: {},\n                    notFoundRoutes: [],\n                    preview: {\n                        previewModeId: \"development-id\"\n                    }\n                };\n            }\n        });\n    }\n    const event = new _spec_extension_fetch_event__WEBPACK_IMPORTED_MODULE_2__.NextFetchEvent({\n        request,\n        page: params.page\n    });\n    let response;\n    let cookiesFromResponse;\n    // we only care to make async storage available for middleware\n    const isMiddleware = params.page === \"/middleware\" || params.page === \"/src/middleware\";\n    if (isMiddleware) {\n        response = await _async_storage_request_async_storage_wrapper__WEBPACK_IMPORTED_MODULE_12__.RequestAsyncStorageWrapper.wrap(_client_components_request_async_storage_external__WEBPACK_IMPORTED_MODULE_13__.requestAsyncStorage, {\n            req: request,\n            renderOpts: {\n                onUpdateCookies: (cookies)=>{\n                    cookiesFromResponse = cookies;\n                },\n                // @ts-expect-error: TODO: investigate why previewProps isn't on RenderOpts\n                previewProps: (prerenderManifest == null ? void 0 : prerenderManifest.preview) || {\n                    previewModeId: \"development-id\",\n                    previewModeEncryptionKey: \"\",\n                    previewModeSigningKey: \"\"\n                }\n            }\n        }, ()=>params.handler(request, event));\n    } else {\n        response = await params.handler(request, event);\n    }\n    // check if response is a Response object\n    if (response && !(response instanceof Response)) {\n        throw new TypeError(\"Expected an instance of Response to be returned\");\n    }\n    if (response && cookiesFromResponse) {\n        response.headers.set(\"set-cookie\", cookiesFromResponse);\n    }\n    /**\n   * For rewrites we must always include the locale in the final pathname\n   * so we re-create the NextURL forcing it to include it when the it is\n   * an internal rewrite. Also we make sure the outgoing rewrite URL is\n   * a data URL if the request was a data request.\n   */ const rewrite = response == null ? void 0 : response.headers.get(\"x-middleware-rewrite\");\n    if (response && rewrite) {\n        const rewriteUrl = new _next_url__WEBPACK_IMPORTED_MODULE_6__.NextURL(rewrite, {\n            forceLocale: true,\n            headers: params.request.headers,\n            nextConfig: params.request.nextConfig\n        });\n        if (true) {\n            if (rewriteUrl.host === request.nextUrl.host) {\n                rewriteUrl.buildId = buildId || rewriteUrl.buildId;\n                response.headers.set(\"x-middleware-rewrite\", String(rewriteUrl));\n            }\n        }\n        /**\n     * When the request is a data request we must show if there was a rewrite\n     * with an internal header so the client knows which component to load\n     * from the data request.\n     */ const relativizedRewrite = (0,_shared_lib_router_utils_relativize_url__WEBPACK_IMPORTED_MODULE_5__.relativizeURL)(String(rewriteUrl), String(requestUrl));\n        if (isDataReq && // if the rewrite is external and external rewrite\n        // resolving config is enabled don't add this header\n        // so the upstream app can set it instead\n        !(undefined && 0)) {\n            response.headers.set(\"x-nextjs-rewrite\", relativizedRewrite);\n        }\n    }\n    /**\n   * For redirects we will not include the locale in case when it is the\n   * default and we must also make sure the outgoing URL is a data one if\n   * the incoming request was a data request.\n   */ const redirect = response == null ? void 0 : response.headers.get(\"Location\");\n    if (response && redirect && !isEdgeRendering) {\n        const redirectURL = new _next_url__WEBPACK_IMPORTED_MODULE_6__.NextURL(redirect, {\n            forceLocale: false,\n            headers: params.request.headers,\n            nextConfig: params.request.nextConfig\n        });\n        /**\n     * Responses created from redirects have immutable headers so we have\n     * to clone the response to be able to modify it.\n     */ response = new Response(response.body, response);\n        if (true) {\n            if (redirectURL.host === request.nextUrl.host) {\n                redirectURL.buildId = buildId || redirectURL.buildId;\n                response.headers.set(\"Location\", String(redirectURL));\n            }\n        }\n        /**\n     * When the request is a data request we can't use the location header as\n     * it may end up with CORS error. Instead we map to an internal header so\n     * the client knows the destination.\n     */ if (isDataReq) {\n            response.headers.delete(\"Location\");\n            response.headers.set(\"x-nextjs-redirect\", (0,_shared_lib_router_utils_relativize_url__WEBPACK_IMPORTED_MODULE_5__.relativizeURL)(String(redirectURL), String(requestUrl)));\n        }\n    }\n    const finalResponse = response ? response : _spec_extension_response__WEBPACK_IMPORTED_MODULE_4__.NextResponse.next();\n    // Flight headers are not overridable / removable so they are applied at the end.\n    const middlewareOverrideHeaders = finalResponse.headers.get(\"x-middleware-override-headers\");\n    const overwrittenHeaders = [];\n    if (middlewareOverrideHeaders) {\n        for (const [key, value] of flightHeaders){\n            finalResponse.headers.set(`x-middleware-request-${key}`, value);\n            overwrittenHeaders.push(key);\n        }\n        if (overwrittenHeaders.length > 0) {\n            finalResponse.headers.set(\"x-middleware-override-headers\", middlewareOverrideHeaders + \",\" + overwrittenHeaders.join(\",\"));\n        }\n    }\n    return {\n        response: finalResponse,\n        waitUntil: Promise.all(event[_spec_extension_fetch_event__WEBPACK_IMPORTED_MODULE_2__.waitUntilSymbol]),\n        fetchMetrics: request.fetchMetrics\n    };\n} //# sourceMappingURL=adapter.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/adapter.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/error.js":
/*!********************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/error.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PageSignatureError: () => (/* binding */ PageSignatureError),\n/* harmony export */   RemovedPageError: () => (/* binding */ RemovedPageError),\n/* harmony export */   RemovedUAError: () => (/* binding */ RemovedUAError)\n/* harmony export */ });\nclass PageSignatureError extends Error {\n    constructor({ page }){\n        super(`The middleware \"${page}\" accepts an async API directly with the form:\n  \n  export function middleware(request, event) {\n    return NextResponse.redirect('/new-location')\n  }\n  \n  Read more: https://nextjs.org/docs/messages/middleware-new-signature\n  `);\n    }\n}\nclass RemovedPageError extends Error {\n    constructor(){\n        super(`The request.page has been deprecated in favour of \\`URLPattern\\`.\n  Read more: https://nextjs.org/docs/messages/middleware-request-page\n  `);\n    }\n}\nclass RemovedUAError extends Error {\n    constructor(){\n        super(`The request.ua has been removed in favour of \\`userAgent\\` function.\n  Read more: https://nextjs.org/docs/messages/middleware-parse-user-agent\n  `);\n    }\n} //# sourceMappingURL=error.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9lcnJvci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBTyxNQUFNQSwyQkFBMkJDO0lBQ3BDQyxZQUFZLEVBQUVDLElBQUksRUFBRSxDQUFDO1FBQ2pCLEtBQUssQ0FBQyxDQUFDLGdCQUFnQixFQUFFQSxLQUFLOzs7Ozs7O0VBT3BDLENBQUM7SUFDQztBQUNKO0FBQ08sTUFBTUMseUJBQXlCSDtJQUNsQ0MsYUFBYTtRQUNULEtBQUssQ0FBQyxDQUFDOztFQUViLENBQUM7SUFDQztBQUNKO0FBQ08sTUFBTUcsdUJBQXVCSjtJQUNoQ0MsYUFBYTtRQUNULEtBQUssQ0FBQyxDQUFDOztFQUViLENBQUM7SUFDQztBQUNKLEVBRUEsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NlcnZlci93ZWIvZXJyb3IuanM/ZWFkMyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgUGFnZVNpZ25hdHVyZUVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKHsgcGFnZSB9KXtcbiAgICAgICAgc3VwZXIoYFRoZSBtaWRkbGV3YXJlIFwiJHtwYWdlfVwiIGFjY2VwdHMgYW4gYXN5bmMgQVBJIGRpcmVjdGx5IHdpdGggdGhlIGZvcm06XG4gIFxuICBleHBvcnQgZnVuY3Rpb24gbWlkZGxld2FyZShyZXF1ZXN0LCBldmVudCkge1xuICAgIHJldHVybiBOZXh0UmVzcG9uc2UucmVkaXJlY3QoJy9uZXctbG9jYXRpb24nKVxuICB9XG4gIFxuICBSZWFkIG1vcmU6IGh0dHBzOi8vbmV4dGpzLm9yZy9kb2NzL21lc3NhZ2VzL21pZGRsZXdhcmUtbmV3LXNpZ25hdHVyZVxuICBgKTtcbiAgICB9XG59XG5leHBvcnQgY2xhc3MgUmVtb3ZlZFBhZ2VFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgICBjb25zdHJ1Y3Rvcigpe1xuICAgICAgICBzdXBlcihgVGhlIHJlcXVlc3QucGFnZSBoYXMgYmVlbiBkZXByZWNhdGVkIGluIGZhdm91ciBvZiBcXGBVUkxQYXR0ZXJuXFxgLlxuICBSZWFkIG1vcmU6IGh0dHBzOi8vbmV4dGpzLm9yZy9kb2NzL21lc3NhZ2VzL21pZGRsZXdhcmUtcmVxdWVzdC1wYWdlXG4gIGApO1xuICAgIH1cbn1cbmV4cG9ydCBjbGFzcyBSZW1vdmVkVUFFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgICBjb25zdHJ1Y3Rvcigpe1xuICAgICAgICBzdXBlcihgVGhlIHJlcXVlc3QudWEgaGFzIGJlZW4gcmVtb3ZlZCBpbiBmYXZvdXIgb2YgXFxgdXNlckFnZW50XFxgIGZ1bmN0aW9uLlxuICBSZWFkIG1vcmU6IGh0dHBzOi8vbmV4dGpzLm9yZy9kb2NzL21lc3NhZ2VzL21pZGRsZXdhcmUtcGFyc2UtdXNlci1hZ2VudFxuICBgKTtcbiAgICB9XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWVycm9yLmpzLm1hcCJdLCJuYW1lcyI6WyJQYWdlU2lnbmF0dXJlRXJyb3IiLCJFcnJvciIsImNvbnN0cnVjdG9yIiwicGFnZSIsIlJlbW92ZWRQYWdlRXJyb3IiLCJSZW1vdmVkVUFFcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/error.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/globals.js":
/*!**********************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/globals.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ensureInstrumentationRegistered: () => (/* binding */ ensureInstrumentationRegistered)\n/* harmony export */ });\nasync function registerInstrumentation() {\n    if (\"_ENTRIES\" in globalThis && _ENTRIES.middleware_instrumentation && _ENTRIES.middleware_instrumentation.register) {\n        try {\n            await _ENTRIES.middleware_instrumentation.register();\n        } catch (err) {\n            err.message = `An error occurred while loading instrumentation hook: ${err.message}`;\n            throw err;\n        }\n    }\n}\nlet registerInstrumentationPromise = null;\nfunction ensureInstrumentationRegistered() {\n    if (!registerInstrumentationPromise) {\n        registerInstrumentationPromise = registerInstrumentation();\n    }\n    return registerInstrumentationPromise;\n}\nfunction getUnsupportedModuleErrorMessage(module) {\n    // warning: if you change these messages, you must adjust how react-dev-overlay's middleware detects modules not found\n    return `The edge runtime does not support Node.js '${module}' module.\nLearn More: https://nextjs.org/docs/messages/node-module-in-edge-runtime`;\n}\nfunction __import_unsupported(moduleName) {\n    const proxy = new Proxy(function() {}, {\n        get (_obj, prop) {\n            if (prop === \"then\") {\n                return {};\n            }\n            throw new Error(getUnsupportedModuleErrorMessage(moduleName));\n        },\n        construct () {\n            throw new Error(getUnsupportedModuleErrorMessage(moduleName));\n        },\n        apply (_target, _this, args) {\n            if (typeof args[0] === \"function\") {\n                return args[0](proxy);\n            }\n            throw new Error(getUnsupportedModuleErrorMessage(moduleName));\n        }\n    });\n    return new Proxy({}, {\n        get: ()=>proxy\n    });\n}\nfunction enhanceGlobals() {\n    // The condition is true when the \"process\" module is provided\n    if (process !== __webpack_require__.g.process) {\n        // prefer local process but global.process has correct \"env\"\n        process.env = __webpack_require__.g.process.env;\n        __webpack_require__.g.process = process;\n    }\n    // to allow building code that import but does not use node.js modules,\n    // webpack will expect this function to exist in global scope\n    Object.defineProperty(globalThis, \"__import_unsupported\", {\n        value: __import_unsupported,\n        enumerable: false,\n        configurable: false\n    });\n    // Eagerly fire instrumentation hook to make the startup faster.\n    void ensureInstrumentationRegistered();\n}\nenhanceGlobals(); //# sourceMappingURL=globals.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9nbG9iYWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxlQUFlQTtJQUNYLElBQUksY0FBY0MsY0FBY0MsU0FBU0MsMEJBQTBCLElBQUlELFNBQVNDLDBCQUEwQixDQUFDQyxRQUFRLEVBQUU7UUFDakgsSUFBSTtZQUNBLE1BQU1GLFNBQVNDLDBCQUEwQixDQUFDQyxRQUFRO1FBQ3RELEVBQUUsT0FBT0MsS0FBSztZQUNWQSxJQUFJQyxPQUFPLEdBQUcsQ0FBQyxzREFBc0QsRUFBRUQsSUFBSUMsT0FBTyxDQUFDLENBQUM7WUFDcEYsTUFBTUQ7UUFDVjtJQUNKO0FBQ0o7QUFDQSxJQUFJRSxpQ0FBaUM7QUFDOUIsU0FBU0M7SUFDWixJQUFJLENBQUNELGdDQUFnQztRQUNqQ0EsaUNBQWlDUDtJQUNyQztJQUNBLE9BQU9PO0FBQ1g7QUFDQSxTQUFTRSxpQ0FBaUNDLE1BQU07SUFDNUMsc0hBQXNIO0lBQ3RILE9BQU8sQ0FBQywyQ0FBMkMsRUFBRUEsT0FBTzt3RUFDUSxDQUFDO0FBQ3pFO0FBQ0EsU0FBU0MscUJBQXFCQyxVQUFVO0lBQ3BDLE1BQU1DLFFBQVEsSUFBSUMsTUFBTSxZQUFZLEdBQUc7UUFDbkNDLEtBQUtDLElBQUksRUFBRUMsSUFBSTtZQUNYLElBQUlBLFNBQVMsUUFBUTtnQkFDakIsT0FBTyxDQUFDO1lBQ1o7WUFDQSxNQUFNLElBQUlDLE1BQU1ULGlDQUFpQ0c7UUFDckQ7UUFDQU87WUFDSSxNQUFNLElBQUlELE1BQU1ULGlDQUFpQ0c7UUFDckQ7UUFDQVEsT0FBT0MsT0FBTyxFQUFFQyxLQUFLLEVBQUVDLElBQUk7WUFDdkIsSUFBSSxPQUFPQSxJQUFJLENBQUMsRUFBRSxLQUFLLFlBQVk7Z0JBQy9CLE9BQU9BLElBQUksQ0FBQyxFQUFFLENBQUNWO1lBQ25CO1lBQ0EsTUFBTSxJQUFJSyxNQUFNVCxpQ0FBaUNHO1FBQ3JEO0lBQ0o7SUFDQSxPQUFPLElBQUlFLE1BQU0sQ0FBQyxHQUFHO1FBQ2pCQyxLQUFLLElBQUlGO0lBQ2I7QUFDSjtBQUNBLFNBQVNXO0lBQ0wsOERBQThEO0lBQzlELElBQUlDLFlBQVlDLHFCQUFNQSxDQUFDRCxPQUFPLEVBQUU7UUFDNUIsNERBQTREO1FBQzVEQSxRQUFRRSxHQUFHLEdBQUdELHFCQUFNQSxDQUFDRCxPQUFPLENBQUNFLEdBQUc7UUFDaENELHFCQUFNQSxDQUFDRCxPQUFPLEdBQUdBO0lBQ3JCO0lBQ0EsdUVBQXVFO0lBQ3ZFLDZEQUE2RDtJQUM3REcsT0FBT0MsY0FBYyxDQUFDNUIsWUFBWSx3QkFBd0I7UUFDdEQ2QixPQUFPbkI7UUFDUG9CLFlBQVk7UUFDWkMsY0FBYztJQUNsQjtJQUNBLGdFQUFnRTtJQUNoRSxLQUFLeEI7QUFDVDtBQUNBZ0Isa0JBRUEsbUNBQW1DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NlcnZlci93ZWIvZ2xvYmFscy5qcz81YzZhIl0sInNvdXJjZXNDb250ZW50IjpbImFzeW5jIGZ1bmN0aW9uIHJlZ2lzdGVySW5zdHJ1bWVudGF0aW9uKCkge1xuICAgIGlmIChcIl9FTlRSSUVTXCIgaW4gZ2xvYmFsVGhpcyAmJiBfRU5UUklFUy5taWRkbGV3YXJlX2luc3RydW1lbnRhdGlvbiAmJiBfRU5UUklFUy5taWRkbGV3YXJlX2luc3RydW1lbnRhdGlvbi5yZWdpc3Rlcikge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgYXdhaXQgX0VOVFJJRVMubWlkZGxld2FyZV9pbnN0cnVtZW50YXRpb24ucmVnaXN0ZXIoKTtcbiAgICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICBlcnIubWVzc2FnZSA9IGBBbiBlcnJvciBvY2N1cnJlZCB3aGlsZSBsb2FkaW5nIGluc3RydW1lbnRhdGlvbiBob29rOiAke2Vyci5tZXNzYWdlfWA7XG4gICAgICAgICAgICB0aHJvdyBlcnI7XG4gICAgICAgIH1cbiAgICB9XG59XG5sZXQgcmVnaXN0ZXJJbnN0cnVtZW50YXRpb25Qcm9taXNlID0gbnVsbDtcbmV4cG9ydCBmdW5jdGlvbiBlbnN1cmVJbnN0cnVtZW50YXRpb25SZWdpc3RlcmVkKCkge1xuICAgIGlmICghcmVnaXN0ZXJJbnN0cnVtZW50YXRpb25Qcm9taXNlKSB7XG4gICAgICAgIHJlZ2lzdGVySW5zdHJ1bWVudGF0aW9uUHJvbWlzZSA9IHJlZ2lzdGVySW5zdHJ1bWVudGF0aW9uKCk7XG4gICAgfVxuICAgIHJldHVybiByZWdpc3Rlckluc3RydW1lbnRhdGlvblByb21pc2U7XG59XG5mdW5jdGlvbiBnZXRVbnN1cHBvcnRlZE1vZHVsZUVycm9yTWVzc2FnZShtb2R1bGUpIHtcbiAgICAvLyB3YXJuaW5nOiBpZiB5b3UgY2hhbmdlIHRoZXNlIG1lc3NhZ2VzLCB5b3UgbXVzdCBhZGp1c3QgaG93IHJlYWN0LWRldi1vdmVybGF5J3MgbWlkZGxld2FyZSBkZXRlY3RzIG1vZHVsZXMgbm90IGZvdW5kXG4gICAgcmV0dXJuIGBUaGUgZWRnZSBydW50aW1lIGRvZXMgbm90IHN1cHBvcnQgTm9kZS5qcyAnJHttb2R1bGV9JyBtb2R1bGUuXG5MZWFybiBNb3JlOiBodHRwczovL25leHRqcy5vcmcvZG9jcy9tZXNzYWdlcy9ub2RlLW1vZHVsZS1pbi1lZGdlLXJ1bnRpbWVgO1xufVxuZnVuY3Rpb24gX19pbXBvcnRfdW5zdXBwb3J0ZWQobW9kdWxlTmFtZSkge1xuICAgIGNvbnN0IHByb3h5ID0gbmV3IFByb3h5KGZ1bmN0aW9uKCkge30sIHtcbiAgICAgICAgZ2V0IChfb2JqLCBwcm9wKSB7XG4gICAgICAgICAgICBpZiAocHJvcCA9PT0gXCJ0aGVuXCIpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4ge307XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoZ2V0VW5zdXBwb3J0ZWRNb2R1bGVFcnJvck1lc3NhZ2UobW9kdWxlTmFtZSkpO1xuICAgICAgICB9LFxuICAgICAgICBjb25zdHJ1Y3QgKCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGdldFVuc3VwcG9ydGVkTW9kdWxlRXJyb3JNZXNzYWdlKG1vZHVsZU5hbWUpKTtcbiAgICAgICAgfSxcbiAgICAgICAgYXBwbHkgKF90YXJnZXQsIF90aGlzLCBhcmdzKSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIGFyZ3NbMF0gPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICAgICAgICAgIHJldHVybiBhcmdzWzBdKHByb3h5KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihnZXRVbnN1cHBvcnRlZE1vZHVsZUVycm9yTWVzc2FnZShtb2R1bGVOYW1lKSk7XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gbmV3IFByb3h5KHt9LCB7XG4gICAgICAgIGdldDogKCk9PnByb3h5XG4gICAgfSk7XG59XG5mdW5jdGlvbiBlbmhhbmNlR2xvYmFscygpIHtcbiAgICAvLyBUaGUgY29uZGl0aW9uIGlzIHRydWUgd2hlbiB0aGUgXCJwcm9jZXNzXCIgbW9kdWxlIGlzIHByb3ZpZGVkXG4gICAgaWYgKHByb2Nlc3MgIT09IGdsb2JhbC5wcm9jZXNzKSB7XG4gICAgICAgIC8vIHByZWZlciBsb2NhbCBwcm9jZXNzIGJ1dCBnbG9iYWwucHJvY2VzcyBoYXMgY29ycmVjdCBcImVudlwiXG4gICAgICAgIHByb2Nlc3MuZW52ID0gZ2xvYmFsLnByb2Nlc3MuZW52O1xuICAgICAgICBnbG9iYWwucHJvY2VzcyA9IHByb2Nlc3M7XG4gICAgfVxuICAgIC8vIHRvIGFsbG93IGJ1aWxkaW5nIGNvZGUgdGhhdCBpbXBvcnQgYnV0IGRvZXMgbm90IHVzZSBub2RlLmpzIG1vZHVsZXMsXG4gICAgLy8gd2VicGFjayB3aWxsIGV4cGVjdCB0aGlzIGZ1bmN0aW9uIHRvIGV4aXN0IGluIGdsb2JhbCBzY29wZVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShnbG9iYWxUaGlzLCBcIl9faW1wb3J0X3Vuc3VwcG9ydGVkXCIsIHtcbiAgICAgICAgdmFsdWU6IF9faW1wb3J0X3Vuc3VwcG9ydGVkLFxuICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiBmYWxzZVxuICAgIH0pO1xuICAgIC8vIEVhZ2VybHkgZmlyZSBpbnN0cnVtZW50YXRpb24gaG9vayB0byBtYWtlIHRoZSBzdGFydHVwIGZhc3Rlci5cbiAgICB2b2lkIGVuc3VyZUluc3RydW1lbnRhdGlvblJlZ2lzdGVyZWQoKTtcbn1cbmVuaGFuY2VHbG9iYWxzKCk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdsb2JhbHMuanMubWFwIl0sIm5hbWVzIjpbInJlZ2lzdGVySW5zdHJ1bWVudGF0aW9uIiwiZ2xvYmFsVGhpcyIsIl9FTlRSSUVTIiwibWlkZGxld2FyZV9pbnN0cnVtZW50YXRpb24iLCJyZWdpc3RlciIsImVyciIsIm1lc3NhZ2UiLCJyZWdpc3Rlckluc3RydW1lbnRhdGlvblByb21pc2UiLCJlbnN1cmVJbnN0cnVtZW50YXRpb25SZWdpc3RlcmVkIiwiZ2V0VW5zdXBwb3J0ZWRNb2R1bGVFcnJvck1lc3NhZ2UiLCJtb2R1bGUiLCJfX2ltcG9ydF91bnN1cHBvcnRlZCIsIm1vZHVsZU5hbWUiLCJwcm94eSIsIlByb3h5IiwiZ2V0IiwiX29iaiIsInByb3AiLCJFcnJvciIsImNvbnN0cnVjdCIsImFwcGx5IiwiX3RhcmdldCIsIl90aGlzIiwiYXJncyIsImVuaGFuY2VHbG9iYWxzIiwicHJvY2VzcyIsImdsb2JhbCIsImVudiIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwidmFsdWUiLCJlbnVtZXJhYmxlIiwiY29uZmlndXJhYmxlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/globals.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/next-url.js":
/*!***********************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/next-url.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NextURL: () => (/* binding */ NextURL)\n/* harmony export */ });\n/* harmony import */ var _shared_lib_i18n_detect_domain_locale__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../shared/lib/i18n/detect-domain-locale */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/i18n/detect-domain-locale.js\");\n/* harmony import */ var _shared_lib_router_utils_format_next_pathname_info__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../shared/lib/router/utils/format-next-pathname-info */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/format-next-pathname-info.js\");\n/* harmony import */ var _shared_lib_get_hostname__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../shared/lib/get-hostname */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/get-hostname.js\");\n/* harmony import */ var _shared_lib_router_utils_get_next_pathname_info__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../shared/lib/router/utils/get-next-pathname-info */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/get-next-pathname-info.js\");\n\n\n\n\nconst REGEX_LOCALHOST_HOSTNAME = /(?!^https?:\\/\\/)(127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}|\\[::1\\]|localhost)/;\nfunction parseURL(url, base) {\n    return new URL(String(url).replace(REGEX_LOCALHOST_HOSTNAME, \"localhost\"), base && String(base).replace(REGEX_LOCALHOST_HOSTNAME, \"localhost\"));\n}\nconst Internal = Symbol(\"NextURLInternal\");\nclass NextURL {\n    constructor(input, baseOrOpts, opts){\n        let base;\n        let options;\n        if (typeof baseOrOpts === \"object\" && \"pathname\" in baseOrOpts || typeof baseOrOpts === \"string\") {\n            base = baseOrOpts;\n            options = opts || {};\n        } else {\n            options = opts || baseOrOpts || {};\n        }\n        this[Internal] = {\n            url: parseURL(input, base ?? options.base),\n            options: options,\n            basePath: \"\"\n        };\n        this.analyze();\n    }\n    analyze() {\n        var _this_Internal_options_nextConfig_i18n, _this_Internal_options_nextConfig, _this_Internal_domainLocale, _this_Internal_options_nextConfig_i18n1, _this_Internal_options_nextConfig1;\n        const info = (0,_shared_lib_router_utils_get_next_pathname_info__WEBPACK_IMPORTED_MODULE_3__.getNextPathnameInfo)(this[Internal].url.pathname, {\n            nextConfig: this[Internal].options.nextConfig,\n            parseData: !undefined,\n            i18nProvider: this[Internal].options.i18nProvider\n        });\n        const hostname = (0,_shared_lib_get_hostname__WEBPACK_IMPORTED_MODULE_2__.getHostname)(this[Internal].url, this[Internal].options.headers);\n        this[Internal].domainLocale = this[Internal].options.i18nProvider ? this[Internal].options.i18nProvider.detectDomainLocale(hostname) : (0,_shared_lib_i18n_detect_domain_locale__WEBPACK_IMPORTED_MODULE_0__.detectDomainLocale)((_this_Internal_options_nextConfig = this[Internal].options.nextConfig) == null ? void 0 : (_this_Internal_options_nextConfig_i18n = _this_Internal_options_nextConfig.i18n) == null ? void 0 : _this_Internal_options_nextConfig_i18n.domains, hostname);\n        const defaultLocale = ((_this_Internal_domainLocale = this[Internal].domainLocale) == null ? void 0 : _this_Internal_domainLocale.defaultLocale) || ((_this_Internal_options_nextConfig1 = this[Internal].options.nextConfig) == null ? void 0 : (_this_Internal_options_nextConfig_i18n1 = _this_Internal_options_nextConfig1.i18n) == null ? void 0 : _this_Internal_options_nextConfig_i18n1.defaultLocale);\n        this[Internal].url.pathname = info.pathname;\n        this[Internal].defaultLocale = defaultLocale;\n        this[Internal].basePath = info.basePath ?? \"\";\n        this[Internal].buildId = info.buildId;\n        this[Internal].locale = info.locale ?? defaultLocale;\n        this[Internal].trailingSlash = info.trailingSlash;\n    }\n    formatPathname() {\n        return (0,_shared_lib_router_utils_format_next_pathname_info__WEBPACK_IMPORTED_MODULE_1__.formatNextPathnameInfo)({\n            basePath: this[Internal].basePath,\n            buildId: this[Internal].buildId,\n            defaultLocale: !this[Internal].options.forceLocale ? this[Internal].defaultLocale : undefined,\n            locale: this[Internal].locale,\n            pathname: this[Internal].url.pathname,\n            trailingSlash: this[Internal].trailingSlash\n        });\n    }\n    formatSearch() {\n        return this[Internal].url.search;\n    }\n    get buildId() {\n        return this[Internal].buildId;\n    }\n    set buildId(buildId) {\n        this[Internal].buildId = buildId;\n    }\n    get locale() {\n        return this[Internal].locale ?? \"\";\n    }\n    set locale(locale) {\n        var _this_Internal_options_nextConfig_i18n, _this_Internal_options_nextConfig;\n        if (!this[Internal].locale || !((_this_Internal_options_nextConfig = this[Internal].options.nextConfig) == null ? void 0 : (_this_Internal_options_nextConfig_i18n = _this_Internal_options_nextConfig.i18n) == null ? void 0 : _this_Internal_options_nextConfig_i18n.locales.includes(locale))) {\n            throw new TypeError(`The NextURL configuration includes no locale \"${locale}\"`);\n        }\n        this[Internal].locale = locale;\n    }\n    get defaultLocale() {\n        return this[Internal].defaultLocale;\n    }\n    get domainLocale() {\n        return this[Internal].domainLocale;\n    }\n    get searchParams() {\n        return this[Internal].url.searchParams;\n    }\n    get host() {\n        return this[Internal].url.host;\n    }\n    set host(value) {\n        this[Internal].url.host = value;\n    }\n    get hostname() {\n        return this[Internal].url.hostname;\n    }\n    set hostname(value) {\n        this[Internal].url.hostname = value;\n    }\n    get port() {\n        return this[Internal].url.port;\n    }\n    set port(value) {\n        this[Internal].url.port = value;\n    }\n    get protocol() {\n        return this[Internal].url.protocol;\n    }\n    set protocol(value) {\n        this[Internal].url.protocol = value;\n    }\n    get href() {\n        const pathname = this.formatPathname();\n        const search = this.formatSearch();\n        return `${this.protocol}//${this.host}${pathname}${search}${this.hash}`;\n    }\n    set href(url) {\n        this[Internal].url = parseURL(url);\n        this.analyze();\n    }\n    get origin() {\n        return this[Internal].url.origin;\n    }\n    get pathname() {\n        return this[Internal].url.pathname;\n    }\n    set pathname(value) {\n        this[Internal].url.pathname = value;\n    }\n    get hash() {\n        return this[Internal].url.hash;\n    }\n    set hash(value) {\n        this[Internal].url.hash = value;\n    }\n    get search() {\n        return this[Internal].url.search;\n    }\n    set search(value) {\n        this[Internal].url.search = value;\n    }\n    get password() {\n        return this[Internal].url.password;\n    }\n    set password(value) {\n        this[Internal].url.password = value;\n    }\n    get username() {\n        return this[Internal].url.username;\n    }\n    set username(value) {\n        this[Internal].url.username = value;\n    }\n    get basePath() {\n        return this[Internal].basePath;\n    }\n    set basePath(value) {\n        this[Internal].basePath = value.startsWith(\"/\") ? value : `/${value}`;\n    }\n    toString() {\n        return this.href;\n    }\n    toJSON() {\n        return this.href;\n    }\n    [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n        return {\n            href: this.href,\n            origin: this.origin,\n            protocol: this.protocol,\n            username: this.username,\n            password: this.password,\n            host: this.host,\n            hostname: this.hostname,\n            port: this.port,\n            pathname: this.pathname,\n            search: this.search,\n            searchParams: this.searchParams,\n            hash: this.hash\n        };\n    }\n    clone() {\n        return new NextURL(String(this), this[Internal].options);\n    }\n} //# sourceMappingURL=next-url.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/next-url.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/adapters/headers.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/spec-extension/adapters/headers.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HeadersAdapter: () => (/* binding */ HeadersAdapter),\n/* harmony export */   ReadonlyHeadersError: () => (/* binding */ ReadonlyHeadersError)\n/* harmony export */ });\n/* harmony import */ var _reflect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./reflect */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/adapters/reflect.js\");\n\n/**\n * @internal\n */ class ReadonlyHeadersError extends Error {\n    constructor(){\n        super(\"Headers cannot be modified. Read more: https://nextjs.org/docs/app/api-reference/functions/headers\");\n    }\n    static callable() {\n        throw new ReadonlyHeadersError();\n    }\n}\nclass HeadersAdapter extends Headers {\n    constructor(headers){\n        // We've already overridden the methods that would be called, so we're just\n        // calling the super constructor to ensure that the instanceof check works.\n        super();\n        this.headers = new Proxy(headers, {\n            get (target, prop, receiver) {\n                // Because this is just an object, we expect that all \"get\" operations\n                // are for properties. If it's a \"get\" for a symbol, we'll just return\n                // the symbol.\n                if (typeof prop === \"symbol\") {\n                    return _reflect__WEBPACK_IMPORTED_MODULE_0__.ReflectAdapter.get(target, prop, receiver);\n                }\n                const lowercased = prop.toLowerCase();\n                // Let's find the original casing of the key. This assumes that there is\n                // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n                // headers object.\n                const original = Object.keys(headers).find((o)=>o.toLowerCase() === lowercased);\n                // If the original casing doesn't exist, return undefined.\n                if (typeof original === \"undefined\") return;\n                // If the original casing exists, return the value.\n                return _reflect__WEBPACK_IMPORTED_MODULE_0__.ReflectAdapter.get(target, original, receiver);\n            },\n            set (target, prop, value, receiver) {\n                if (typeof prop === \"symbol\") {\n                    return _reflect__WEBPACK_IMPORTED_MODULE_0__.ReflectAdapter.set(target, prop, value, receiver);\n                }\n                const lowercased = prop.toLowerCase();\n                // Let's find the original casing of the key. This assumes that there is\n                // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n                // headers object.\n                const original = Object.keys(headers).find((o)=>o.toLowerCase() === lowercased);\n                // If the original casing doesn't exist, use the prop as the key.\n                return _reflect__WEBPACK_IMPORTED_MODULE_0__.ReflectAdapter.set(target, original ?? prop, value, receiver);\n            },\n            has (target, prop) {\n                if (typeof prop === \"symbol\") return _reflect__WEBPACK_IMPORTED_MODULE_0__.ReflectAdapter.has(target, prop);\n                const lowercased = prop.toLowerCase();\n                // Let's find the original casing of the key. This assumes that there is\n                // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n                // headers object.\n                const original = Object.keys(headers).find((o)=>o.toLowerCase() === lowercased);\n                // If the original casing doesn't exist, return false.\n                if (typeof original === \"undefined\") return false;\n                // If the original casing exists, return true.\n                return _reflect__WEBPACK_IMPORTED_MODULE_0__.ReflectAdapter.has(target, original);\n            },\n            deleteProperty (target, prop) {\n                if (typeof prop === \"symbol\") return _reflect__WEBPACK_IMPORTED_MODULE_0__.ReflectAdapter.deleteProperty(target, prop);\n                const lowercased = prop.toLowerCase();\n                // Let's find the original casing of the key. This assumes that there is\n                // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n                // headers object.\n                const original = Object.keys(headers).find((o)=>o.toLowerCase() === lowercased);\n                // If the original casing doesn't exist, return true.\n                if (typeof original === \"undefined\") return true;\n                // If the original casing exists, delete the property.\n                return _reflect__WEBPACK_IMPORTED_MODULE_0__.ReflectAdapter.deleteProperty(target, original);\n            }\n        });\n    }\n    /**\n   * Seals a Headers instance to prevent modification by throwing an error when\n   * any mutating method is called.\n   */ static seal(headers) {\n        return new Proxy(headers, {\n            get (target, prop, receiver) {\n                switch(prop){\n                    case \"append\":\n                    case \"delete\":\n                    case \"set\":\n                        return ReadonlyHeadersError.callable;\n                    default:\n                        return _reflect__WEBPACK_IMPORTED_MODULE_0__.ReflectAdapter.get(target, prop, receiver);\n                }\n            }\n        });\n    }\n    /**\n   * Merges a header value into a string. This stores multiple values as an\n   * array, so we need to merge them into a string.\n   *\n   * @param value a header value\n   * @returns a merged header value (a string)\n   */ merge(value) {\n        if (Array.isArray(value)) return value.join(\", \");\n        return value;\n    }\n    /**\n   * Creates a Headers instance from a plain object or a Headers instance.\n   *\n   * @param headers a plain object or a Headers instance\n   * @returns a headers instance\n   */ static from(headers) {\n        if (headers instanceof Headers) return headers;\n        return new HeadersAdapter(headers);\n    }\n    append(name, value) {\n        const existing = this.headers[name];\n        if (typeof existing === \"string\") {\n            this.headers[name] = [\n                existing,\n                value\n            ];\n        } else if (Array.isArray(existing)) {\n            existing.push(value);\n        } else {\n            this.headers[name] = value;\n        }\n    }\n    delete(name) {\n        delete this.headers[name];\n    }\n    get(name) {\n        const value = this.headers[name];\n        if (typeof value !== \"undefined\") return this.merge(value);\n        return null;\n    }\n    has(name) {\n        return typeof this.headers[name] !== \"undefined\";\n    }\n    set(name, value) {\n        this.headers[name] = value;\n    }\n    forEach(callbackfn, thisArg) {\n        for (const [name, value] of this.entries()){\n            callbackfn.call(thisArg, value, name, this);\n        }\n    }\n    *entries() {\n        for (const key of Object.keys(this.headers)){\n            const name = key.toLowerCase();\n            // We assert here that this is a string because we got it from the\n            // Object.keys() call above.\n            const value = this.get(name);\n            yield [\n                name,\n                value\n            ];\n        }\n    }\n    *keys() {\n        for (const key of Object.keys(this.headers)){\n            const name = key.toLowerCase();\n            yield name;\n        }\n    }\n    *values() {\n        for (const key of Object.keys(this.headers)){\n            // We assert here that this is a string because we got it from the\n            // Object.keys() call above.\n            const value = this.get(key);\n            yield value;\n        }\n    }\n    [Symbol.iterator]() {\n        return this.entries();\n    }\n} //# sourceMappingURL=headers.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/adapters/headers.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/adapters/reflect.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/spec-extension/adapters/reflect.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ReflectAdapter: () => (/* binding */ ReflectAdapter)\n/* harmony export */ });\nclass ReflectAdapter {\n    static get(target, prop, receiver) {\n        const value = Reflect.get(target, prop, receiver);\n        if (typeof value === \"function\") {\n            return value.bind(target);\n        }\n        return value;\n    }\n    static set(target, prop, value, receiver) {\n        return Reflect.set(target, prop, value, receiver);\n    }\n    static has(target, prop) {\n        return Reflect.has(target, prop);\n    }\n    static deleteProperty(target, prop) {\n        return Reflect.deleteProperty(target, prop);\n    }\n} //# sourceMappingURL=reflect.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9zcGVjLWV4dGVuc2lvbi9hZGFwdGVycy9yZWZsZWN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTyxNQUFNQTtJQUNULE9BQU9DLElBQUlDLE1BQU0sRUFBRUMsSUFBSSxFQUFFQyxRQUFRLEVBQUU7UUFDL0IsTUFBTUMsUUFBUUMsUUFBUUwsR0FBRyxDQUFDQyxRQUFRQyxNQUFNQztRQUN4QyxJQUFJLE9BQU9DLFVBQVUsWUFBWTtZQUM3QixPQUFPQSxNQUFNRSxJQUFJLENBQUNMO1FBQ3RCO1FBQ0EsT0FBT0c7SUFDWDtJQUNBLE9BQU9HLElBQUlOLE1BQU0sRUFBRUMsSUFBSSxFQUFFRSxLQUFLLEVBQUVELFFBQVEsRUFBRTtRQUN0QyxPQUFPRSxRQUFRRSxHQUFHLENBQUNOLFFBQVFDLE1BQU1FLE9BQU9EO0lBQzVDO0lBQ0EsT0FBT0ssSUFBSVAsTUFBTSxFQUFFQyxJQUFJLEVBQUU7UUFDckIsT0FBT0csUUFBUUcsR0FBRyxDQUFDUCxRQUFRQztJQUMvQjtJQUNBLE9BQU9PLGVBQWVSLE1BQU0sRUFBRUMsSUFBSSxFQUFFO1FBQ2hDLE9BQU9HLFFBQVFJLGNBQWMsQ0FBQ1IsUUFBUUM7SUFDMUM7QUFDSixFQUVBLG1DQUFtQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9zZXJ2ZXIvd2ViL3NwZWMtZXh0ZW5zaW9uL2FkYXB0ZXJzL3JlZmxlY3QuanM/MjA2NyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgUmVmbGVjdEFkYXB0ZXIge1xuICAgIHN0YXRpYyBnZXQodGFyZ2V0LCBwcm9wLCByZWNlaXZlcikge1xuICAgICAgICBjb25zdCB2YWx1ZSA9IFJlZmxlY3QuZ2V0KHRhcmdldCwgcHJvcCwgcmVjZWl2ZXIpO1xuICAgICAgICBpZiAodHlwZW9mIHZhbHVlID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgIHJldHVybiB2YWx1ZS5iaW5kKHRhcmdldCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH1cbiAgICBzdGF0aWMgc2V0KHRhcmdldCwgcHJvcCwgdmFsdWUsIHJlY2VpdmVyKSB7XG4gICAgICAgIHJldHVybiBSZWZsZWN0LnNldCh0YXJnZXQsIHByb3AsIHZhbHVlLCByZWNlaXZlcik7XG4gICAgfVxuICAgIHN0YXRpYyBoYXModGFyZ2V0LCBwcm9wKSB7XG4gICAgICAgIHJldHVybiBSZWZsZWN0Lmhhcyh0YXJnZXQsIHByb3ApO1xuICAgIH1cbiAgICBzdGF0aWMgZGVsZXRlUHJvcGVydHkodGFyZ2V0LCBwcm9wKSB7XG4gICAgICAgIHJldHVybiBSZWZsZWN0LmRlbGV0ZVByb3BlcnR5KHRhcmdldCwgcHJvcCk7XG4gICAgfVxufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZWZsZWN0LmpzLm1hcCJdLCJuYW1lcyI6WyJSZWZsZWN0QWRhcHRlciIsImdldCIsInRhcmdldCIsInByb3AiLCJyZWNlaXZlciIsInZhbHVlIiwiUmVmbGVjdCIsImJpbmQiLCJzZXQiLCJoYXMiLCJkZWxldGVQcm9wZXJ0eSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/adapters/reflect.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/adapters/request-cookies.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/spec-extension/adapters/request-cookies.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MutableRequestCookiesAdapter: () => (/* binding */ MutableRequestCookiesAdapter),\n/* harmony export */   ReadonlyRequestCookiesError: () => (/* binding */ ReadonlyRequestCookiesError),\n/* harmony export */   RequestCookiesAdapter: () => (/* binding */ RequestCookiesAdapter),\n/* harmony export */   appendMutableCookies: () => (/* binding */ appendMutableCookies),\n/* harmony export */   getModifiedCookieValues: () => (/* binding */ getModifiedCookieValues)\n/* harmony export */ });\n/* harmony import */ var _cookies__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cookies */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/cookies.js\");\n/* harmony import */ var _reflect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./reflect */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/adapters/reflect.js\");\n\n\n/**\n * @internal\n */ class ReadonlyRequestCookiesError extends Error {\n    constructor(){\n        super(\"Cookies can only be modified in a Server Action or Route Handler. Read more: https://nextjs.org/docs/app/api-reference/functions/cookies#cookiessetname-value-options\");\n    }\n    static callable() {\n        throw new ReadonlyRequestCookiesError();\n    }\n}\nclass RequestCookiesAdapter {\n    static seal(cookies) {\n        return new Proxy(cookies, {\n            get (target, prop, receiver) {\n                switch(prop){\n                    case \"clear\":\n                    case \"delete\":\n                    case \"set\":\n                        return ReadonlyRequestCookiesError.callable;\n                    default:\n                        return _reflect__WEBPACK_IMPORTED_MODULE_1__.ReflectAdapter.get(target, prop, receiver);\n                }\n            }\n        });\n    }\n}\nconst SYMBOL_MODIFY_COOKIE_VALUES = Symbol.for(\"next.mutated.cookies\");\nfunction getModifiedCookieValues(cookies) {\n    const modified = cookies[SYMBOL_MODIFY_COOKIE_VALUES];\n    if (!modified || !Array.isArray(modified) || modified.length === 0) {\n        return [];\n    }\n    return modified;\n}\nfunction appendMutableCookies(headers, mutableCookies) {\n    const modifiedCookieValues = getModifiedCookieValues(mutableCookies);\n    if (modifiedCookieValues.length === 0) {\n        return false;\n    }\n    // Return a new response that extends the response with\n    // the modified cookies as fallbacks. `res` cookies\n    // will still take precedence.\n    const resCookies = new _cookies__WEBPACK_IMPORTED_MODULE_0__.ResponseCookies(headers);\n    const returnedCookies = resCookies.getAll();\n    // Set the modified cookies as fallbacks.\n    for (const cookie of modifiedCookieValues){\n        resCookies.set(cookie);\n    }\n    // Set the original cookies as the final values.\n    for (const cookie of returnedCookies){\n        resCookies.set(cookie);\n    }\n    return true;\n}\nclass MutableRequestCookiesAdapter {\n    static wrap(cookies, onUpdateCookies) {\n        const responseCookes = new _cookies__WEBPACK_IMPORTED_MODULE_0__.ResponseCookies(new Headers());\n        for (const cookie of cookies.getAll()){\n            responseCookes.set(cookie);\n        }\n        let modifiedValues = [];\n        const modifiedCookies = new Set();\n        const updateResponseCookies = ()=>{\n            var _fetch___nextGetStaticStore;\n            // TODO-APP: change method of getting staticGenerationAsyncStore\n            const staticGenerationAsyncStore = fetch.__nextGetStaticStore == null ? void 0 : (_fetch___nextGetStaticStore = fetch.__nextGetStaticStore.call(fetch)) == null ? void 0 : _fetch___nextGetStaticStore.getStore();\n            if (staticGenerationAsyncStore) {\n                staticGenerationAsyncStore.pathWasRevalidated = true;\n            }\n            const allCookies = responseCookes.getAll();\n            modifiedValues = allCookies.filter((c)=>modifiedCookies.has(c.name));\n            if (onUpdateCookies) {\n                const serializedCookies = [];\n                for (const cookie of modifiedValues){\n                    const tempCookies = new _cookies__WEBPACK_IMPORTED_MODULE_0__.ResponseCookies(new Headers());\n                    tempCookies.set(cookie);\n                    serializedCookies.push(tempCookies.toString());\n                }\n                onUpdateCookies(serializedCookies);\n            }\n        };\n        return new Proxy(responseCookes, {\n            get (target, prop, receiver) {\n                switch(prop){\n                    // A special symbol to get the modified cookie values\n                    case SYMBOL_MODIFY_COOKIE_VALUES:\n                        return modifiedValues;\n                    // TODO: Throw error if trying to set a cookie after the response\n                    // headers have been set.\n                    case \"delete\":\n                        return function(...args) {\n                            modifiedCookies.add(typeof args[0] === \"string\" ? args[0] : args[0].name);\n                            try {\n                                target.delete(...args);\n                            } finally{\n                                updateResponseCookies();\n                            }\n                        };\n                    case \"set\":\n                        return function(...args) {\n                            modifiedCookies.add(typeof args[0] === \"string\" ? args[0] : args[0].name);\n                            try {\n                                return target.set(...args);\n                            } finally{\n                                updateResponseCookies();\n                            }\n                        };\n                    default:\n                        return _reflect__WEBPACK_IMPORTED_MODULE_1__.ReflectAdapter.get(target, prop, receiver);\n                }\n            }\n        });\n    }\n} //# sourceMappingURL=request-cookies.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/adapters/request-cookies.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/cookies.js":
/*!*************************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/spec-extension/cookies.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RequestCookies: () => (/* reexport safe */ next_dist_compiled_edge_runtime_cookies__WEBPACK_IMPORTED_MODULE_0__.RequestCookies),\n/* harmony export */   ResponseCookies: () => (/* reexport safe */ next_dist_compiled_edge_runtime_cookies__WEBPACK_IMPORTED_MODULE_0__.ResponseCookies)\n/* harmony export */ });\n/* harmony import */ var next_dist_compiled_edge_runtime_cookies__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/compiled/@edge-runtime/cookies */ \"(middleware)/./node_modules/next/dist/compiled/@edge-runtime/cookies/index.js\");\n/* harmony import */ var next_dist_compiled_edge_runtime_cookies__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_compiled_edge_runtime_cookies__WEBPACK_IMPORTED_MODULE_0__);\n //# sourceMappingURL=cookies.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9zcGVjLWV4dGVuc2lvbi9jb29raWVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBMkYsQ0FFM0YsbUNBQW1DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NlcnZlci93ZWIvc3BlYy1leHRlbnNpb24vY29va2llcy5qcz84YzkzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7IFJlcXVlc3RDb29raWVzLCBSZXNwb25zZUNvb2tpZXMgfSBmcm9tIFwibmV4dC9kaXN0L2NvbXBpbGVkL0BlZGdlLXJ1bnRpbWUvY29va2llc1wiO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb29raWVzLmpzLm1hcCJdLCJuYW1lcyI6WyJSZXF1ZXN0Q29va2llcyIsIlJlc3BvbnNlQ29va2llcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/cookies.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/fetch-event.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/spec-extension/fetch-event.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NextFetchEvent: () => (/* binding */ NextFetchEvent),\n/* harmony export */   waitUntilSymbol: () => (/* binding */ waitUntilSymbol)\n/* harmony export */ });\n/* harmony import */ var _error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../error */ \"(middleware)/./node_modules/next/dist/esm/server/web/error.js\");\n\nconst responseSymbol = Symbol(\"response\");\nconst passThroughSymbol = Symbol(\"passThrough\");\nconst waitUntilSymbol = Symbol(\"waitUntil\");\nclass FetchEvent {\n    // eslint-disable-next-line @typescript-eslint/no-useless-constructor\n    constructor(_request){\n        this[waitUntilSymbol] = [];\n        this[passThroughSymbol] = false;\n    }\n    respondWith(response) {\n        if (!this[responseSymbol]) {\n            this[responseSymbol] = Promise.resolve(response);\n        }\n    }\n    passThroughOnException() {\n        this[passThroughSymbol] = true;\n    }\n    waitUntil(promise) {\n        this[waitUntilSymbol].push(promise);\n    }\n}\nclass NextFetchEvent extends FetchEvent {\n    constructor(params){\n        super(params.request);\n        this.sourcePage = params.page;\n    }\n    /**\n   * @deprecated The `request` is now the first parameter and the API is now async.\n   *\n   * Read more: https://nextjs.org/docs/messages/middleware-new-signature\n   */ get request() {\n        throw new _error__WEBPACK_IMPORTED_MODULE_0__.PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n    /**\n   * @deprecated Using `respondWith` is no longer needed.\n   *\n   * Read more: https://nextjs.org/docs/messages/middleware-new-signature\n   */ respondWith() {\n        throw new _error__WEBPACK_IMPORTED_MODULE_0__.PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n} //# sourceMappingURL=fetch-event.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9zcGVjLWV4dGVuc2lvbi9mZXRjaC1ldmVudC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBOEM7QUFDOUMsTUFBTUMsaUJBQWlCQyxPQUFPO0FBQzlCLE1BQU1DLG9CQUFvQkQsT0FBTztBQUMxQixNQUFNRSxrQkFBa0JGLE9BQU8sYUFBYTtBQUNuRCxNQUFNRztJQUNGLHFFQUFxRTtJQUNyRUMsWUFBWUMsUUFBUSxDQUFDO1FBQ2pCLElBQUksQ0FBQ0gsZ0JBQWdCLEdBQUcsRUFBRTtRQUMxQixJQUFJLENBQUNELGtCQUFrQixHQUFHO0lBQzlCO0lBQ0FLLFlBQVlDLFFBQVEsRUFBRTtRQUNsQixJQUFJLENBQUMsSUFBSSxDQUFDUixlQUFlLEVBQUU7WUFDdkIsSUFBSSxDQUFDQSxlQUFlLEdBQUdTLFFBQVFDLE9BQU8sQ0FBQ0Y7UUFDM0M7SUFDSjtJQUNBRyx5QkFBeUI7UUFDckIsSUFBSSxDQUFDVCxrQkFBa0IsR0FBRztJQUM5QjtJQUNBVSxVQUFVQyxPQUFPLEVBQUU7UUFDZixJQUFJLENBQUNWLGdCQUFnQixDQUFDVyxJQUFJLENBQUNEO0lBQy9CO0FBQ0o7QUFDTyxNQUFNRSx1QkFBdUJYO0lBQ2hDQyxZQUFZVyxNQUFNLENBQUM7UUFDZixLQUFLLENBQUNBLE9BQU9DLE9BQU87UUFDcEIsSUFBSSxDQUFDQyxVQUFVLEdBQUdGLE9BQU9HLElBQUk7SUFDakM7SUFDQTs7OztHQUlELEdBQUcsSUFBSUYsVUFBVTtRQUNaLE1BQU0sSUFBSWxCLHNEQUFrQkEsQ0FBQztZQUN6Qm9CLE1BQU0sSUFBSSxDQUFDRCxVQUFVO1FBQ3pCO0lBQ0o7SUFDQTs7OztHQUlELEdBQUdYLGNBQWM7UUFDWixNQUFNLElBQUlSLHNEQUFrQkEsQ0FBQztZQUN6Qm9CLE1BQU0sSUFBSSxDQUFDRCxVQUFVO1FBQ3pCO0lBQ0o7QUFDSixFQUVBLHVDQUF1QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9zZXJ2ZXIvd2ViL3NwZWMtZXh0ZW5zaW9uL2ZldGNoLWV2ZW50LmpzPzkyYmIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGFnZVNpZ25hdHVyZUVycm9yIH0gZnJvbSBcIi4uL2Vycm9yXCI7XG5jb25zdCByZXNwb25zZVN5bWJvbCA9IFN5bWJvbChcInJlc3BvbnNlXCIpO1xuY29uc3QgcGFzc1Rocm91Z2hTeW1ib2wgPSBTeW1ib2woXCJwYXNzVGhyb3VnaFwiKTtcbmV4cG9ydCBjb25zdCB3YWl0VW50aWxTeW1ib2wgPSBTeW1ib2woXCJ3YWl0VW50aWxcIik7XG5jbGFzcyBGZXRjaEV2ZW50IHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVzZWxlc3MtY29uc3RydWN0b3JcbiAgICBjb25zdHJ1Y3RvcihfcmVxdWVzdCl7XG4gICAgICAgIHRoaXNbd2FpdFVudGlsU3ltYm9sXSA9IFtdO1xuICAgICAgICB0aGlzW3Bhc3NUaHJvdWdoU3ltYm9sXSA9IGZhbHNlO1xuICAgIH1cbiAgICByZXNwb25kV2l0aChyZXNwb25zZSkge1xuICAgICAgICBpZiAoIXRoaXNbcmVzcG9uc2VTeW1ib2xdKSB7XG4gICAgICAgICAgICB0aGlzW3Jlc3BvbnNlU3ltYm9sXSA9IFByb21pc2UucmVzb2x2ZShyZXNwb25zZSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcGFzc1Rocm91Z2hPbkV4Y2VwdGlvbigpIHtcbiAgICAgICAgdGhpc1twYXNzVGhyb3VnaFN5bWJvbF0gPSB0cnVlO1xuICAgIH1cbiAgICB3YWl0VW50aWwocHJvbWlzZSkge1xuICAgICAgICB0aGlzW3dhaXRVbnRpbFN5bWJvbF0ucHVzaChwcm9taXNlKTtcbiAgICB9XG59XG5leHBvcnQgY2xhc3MgTmV4dEZldGNoRXZlbnQgZXh0ZW5kcyBGZXRjaEV2ZW50IHtcbiAgICBjb25zdHJ1Y3RvcihwYXJhbXMpe1xuICAgICAgICBzdXBlcihwYXJhbXMucmVxdWVzdCk7XG4gICAgICAgIHRoaXMuc291cmNlUGFnZSA9IHBhcmFtcy5wYWdlO1xuICAgIH1cbiAgICAvKipcbiAgICogQGRlcHJlY2F0ZWQgVGhlIGByZXF1ZXN0YCBpcyBub3cgdGhlIGZpcnN0IHBhcmFtZXRlciBhbmQgdGhlIEFQSSBpcyBub3cgYXN5bmMuXG4gICAqXG4gICAqIFJlYWQgbW9yZTogaHR0cHM6Ly9uZXh0anMub3JnL2RvY3MvbWVzc2FnZXMvbWlkZGxld2FyZS1uZXctc2lnbmF0dXJlXG4gICAqLyBnZXQgcmVxdWVzdCgpIHtcbiAgICAgICAgdGhyb3cgbmV3IFBhZ2VTaWduYXR1cmVFcnJvcih7XG4gICAgICAgICAgICBwYWdlOiB0aGlzLnNvdXJjZVBhZ2VcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgKiBAZGVwcmVjYXRlZCBVc2luZyBgcmVzcG9uZFdpdGhgIGlzIG5vIGxvbmdlciBuZWVkZWQuXG4gICAqXG4gICAqIFJlYWQgbW9yZTogaHR0cHM6Ly9uZXh0anMub3JnL2RvY3MvbWVzc2FnZXMvbWlkZGxld2FyZS1uZXctc2lnbmF0dXJlXG4gICAqLyByZXNwb25kV2l0aCgpIHtcbiAgICAgICAgdGhyb3cgbmV3IFBhZ2VTaWduYXR1cmVFcnJvcih7XG4gICAgICAgICAgICBwYWdlOiB0aGlzLnNvdXJjZVBhZ2VcbiAgICAgICAgfSk7XG4gICAgfVxufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1mZXRjaC1ldmVudC5qcy5tYXAiXSwibmFtZXMiOlsiUGFnZVNpZ25hdHVyZUVycm9yIiwicmVzcG9uc2VTeW1ib2wiLCJTeW1ib2wiLCJwYXNzVGhyb3VnaFN5bWJvbCIsIndhaXRVbnRpbFN5bWJvbCIsIkZldGNoRXZlbnQiLCJjb25zdHJ1Y3RvciIsIl9yZXF1ZXN0IiwicmVzcG9uZFdpdGgiLCJyZXNwb25zZSIsIlByb21pc2UiLCJyZXNvbHZlIiwicGFzc1Rocm91Z2hPbkV4Y2VwdGlvbiIsIndhaXRVbnRpbCIsInByb21pc2UiLCJwdXNoIiwiTmV4dEZldGNoRXZlbnQiLCJwYXJhbXMiLCJyZXF1ZXN0Iiwic291cmNlUGFnZSIsInBhZ2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/fetch-event.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/request.js":
/*!*************************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/spec-extension/request.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   INTERNALS: () => (/* binding */ INTERNALS),\n/* harmony export */   NextRequest: () => (/* binding */ NextRequest)\n/* harmony export */ });\n/* harmony import */ var _next_url__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../next-url */ \"(middleware)/./node_modules/next/dist/esm/server/web/next-url.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils */ \"(middleware)/./node_modules/next/dist/esm/server/web/utils.js\");\n/* harmony import */ var _error__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../error */ \"(middleware)/./node_modules/next/dist/esm/server/web/error.js\");\n/* harmony import */ var _cookies__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./cookies */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/cookies.js\");\n\n\n\n\nconst INTERNALS = Symbol(\"internal request\");\nclass NextRequest extends Request {\n    constructor(input, init = {}){\n        const url = typeof input !== \"string\" && \"url\" in input ? input.url : String(input);\n        (0,_utils__WEBPACK_IMPORTED_MODULE_1__.validateURL)(url);\n        if (input instanceof Request) super(input, init);\n        else super(url, init);\n        const nextUrl = new _next_url__WEBPACK_IMPORTED_MODULE_0__.NextURL(url, {\n            headers: (0,_utils__WEBPACK_IMPORTED_MODULE_1__.toNodeOutgoingHttpHeaders)(this.headers),\n            nextConfig: init.nextConfig\n        });\n        this[INTERNALS] = {\n            cookies: new _cookies__WEBPACK_IMPORTED_MODULE_3__.RequestCookies(this.headers),\n            geo: init.geo || {},\n            ip: init.ip,\n            nextUrl,\n            url:  false ? 0 : nextUrl.toString()\n        };\n    }\n    [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n        return {\n            cookies: this.cookies,\n            geo: this.geo,\n            ip: this.ip,\n            nextUrl: this.nextUrl,\n            url: this.url,\n            // rest of props come from Request\n            bodyUsed: this.bodyUsed,\n            cache: this.cache,\n            credentials: this.credentials,\n            destination: this.destination,\n            headers: Object.fromEntries(this.headers),\n            integrity: this.integrity,\n            keepalive: this.keepalive,\n            method: this.method,\n            mode: this.mode,\n            redirect: this.redirect,\n            referrer: this.referrer,\n            referrerPolicy: this.referrerPolicy,\n            signal: this.signal\n        };\n    }\n    get cookies() {\n        return this[INTERNALS].cookies;\n    }\n    get geo() {\n        return this[INTERNALS].geo;\n    }\n    get ip() {\n        return this[INTERNALS].ip;\n    }\n    get nextUrl() {\n        return this[INTERNALS].nextUrl;\n    }\n    /**\n   * @deprecated\n   * `page` has been deprecated in favour of `URLPattern`.\n   * Read more: https://nextjs.org/docs/messages/middleware-request-page\n   */ get page() {\n        throw new _error__WEBPACK_IMPORTED_MODULE_2__.RemovedPageError();\n    }\n    /**\n   * @deprecated\n   * `ua` has been removed in favour of \\`userAgent\\` function.\n   * Read more: https://nextjs.org/docs/messages/middleware-parse-user-agent\n   */ get ua() {\n        throw new _error__WEBPACK_IMPORTED_MODULE_2__.RemovedUAError();\n    }\n    get url() {\n        return this[INTERNALS].url;\n    }\n} //# sourceMappingURL=request.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9zcGVjLWV4dGVuc2lvbi9yZXF1ZXN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFzQztBQUM0QjtBQUNOO0FBQ2pCO0FBQ3BDLE1BQU1NLFlBQVlDLE9BQU8sb0JBQW9CO0FBQzdDLE1BQU1DLG9CQUFvQkM7SUFDN0JDLFlBQVlDLEtBQUssRUFBRUMsT0FBTyxDQUFDLENBQUMsQ0FBQztRQUN6QixNQUFNQyxNQUFNLE9BQU9GLFVBQVUsWUFBWSxTQUFTQSxRQUFRQSxNQUFNRSxHQUFHLEdBQUdDLE9BQU9IO1FBQzdFVCxtREFBV0EsQ0FBQ1c7UUFDWixJQUFJRixpQkFBaUJGLFNBQVMsS0FBSyxDQUFDRSxPQUFPQzthQUN0QyxLQUFLLENBQUNDLEtBQUtEO1FBQ2hCLE1BQU1HLFVBQVUsSUFBSWYsOENBQU9BLENBQUNhLEtBQUs7WUFDN0JHLFNBQVNmLGlFQUF5QkEsQ0FBQyxJQUFJLENBQUNlLE9BQU87WUFDL0NDLFlBQVlMLEtBQUtLLFVBQVU7UUFDL0I7UUFDQSxJQUFJLENBQUNYLFVBQVUsR0FBRztZQUNkWSxTQUFTLElBQUliLG9EQUFjQSxDQUFDLElBQUksQ0FBQ1csT0FBTztZQUN4Q0csS0FBS1AsS0FBS08sR0FBRyxJQUFJLENBQUM7WUFDbEJDLElBQUlSLEtBQUtRLEVBQUU7WUFDWEw7WUFDQUYsS0FBS1EsTUFBOEMsR0FBR1IsQ0FBR0EsR0FBR0UsUUFBUVMsUUFBUTtRQUNoRjtJQUNKO0lBQ0EsQ0FBQ2pCLE9BQU9rQixHQUFHLENBQUMsK0JBQStCLEdBQUc7UUFDMUMsT0FBTztZQUNIUCxTQUFTLElBQUksQ0FBQ0EsT0FBTztZQUNyQkMsS0FBSyxJQUFJLENBQUNBLEdBQUc7WUFDYkMsSUFBSSxJQUFJLENBQUNBLEVBQUU7WUFDWEwsU0FBUyxJQUFJLENBQUNBLE9BQU87WUFDckJGLEtBQUssSUFBSSxDQUFDQSxHQUFHO1lBQ2Isa0NBQWtDO1lBQ2xDYSxVQUFVLElBQUksQ0FBQ0EsUUFBUTtZQUN2QkMsT0FBTyxJQUFJLENBQUNBLEtBQUs7WUFDakJDLGFBQWEsSUFBSSxDQUFDQSxXQUFXO1lBQzdCQyxhQUFhLElBQUksQ0FBQ0EsV0FBVztZQUM3QmIsU0FBU2MsT0FBT0MsV0FBVyxDQUFDLElBQUksQ0FBQ2YsT0FBTztZQUN4Q2dCLFdBQVcsSUFBSSxDQUFDQSxTQUFTO1lBQ3pCQyxXQUFXLElBQUksQ0FBQ0EsU0FBUztZQUN6QkMsUUFBUSxJQUFJLENBQUNBLE1BQU07WUFDbkJDLE1BQU0sSUFBSSxDQUFDQSxJQUFJO1lBQ2ZDLFVBQVUsSUFBSSxDQUFDQSxRQUFRO1lBQ3ZCQyxVQUFVLElBQUksQ0FBQ0EsUUFBUTtZQUN2QkMsZ0JBQWdCLElBQUksQ0FBQ0EsY0FBYztZQUNuQ0MsUUFBUSxJQUFJLENBQUNBLE1BQU07UUFDdkI7SUFDSjtJQUNBLElBQUlyQixVQUFVO1FBQ1YsT0FBTyxJQUFJLENBQUNaLFVBQVUsQ0FBQ1ksT0FBTztJQUNsQztJQUNBLElBQUlDLE1BQU07UUFDTixPQUFPLElBQUksQ0FBQ2IsVUFBVSxDQUFDYSxHQUFHO0lBQzlCO0lBQ0EsSUFBSUMsS0FBSztRQUNMLE9BQU8sSUFBSSxDQUFDZCxVQUFVLENBQUNjLEVBQUU7SUFDN0I7SUFDQSxJQUFJTCxVQUFVO1FBQ1YsT0FBTyxJQUFJLENBQUNULFVBQVUsQ0FBQ1MsT0FBTztJQUNsQztJQUNBOzs7O0dBSUQsR0FBRyxJQUFJeUIsT0FBTztRQUNULE1BQU0sSUFBSXBDLG9EQUFnQkE7SUFDOUI7SUFDQTs7OztHQUlELEdBQUcsSUFBSXFDLEtBQUs7UUFDUCxNQUFNLElBQUl0QyxrREFBY0E7SUFDNUI7SUFDQSxJQUFJVSxNQUFNO1FBQ04sT0FBTyxJQUFJLENBQUNQLFVBQVUsQ0FBQ08sR0FBRztJQUM5QjtBQUNKLEVBRUEsbUNBQW1DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NlcnZlci93ZWIvc3BlYy1leHRlbnNpb24vcmVxdWVzdC5qcz8xNWQwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5leHRVUkwgfSBmcm9tIFwiLi4vbmV4dC11cmxcIjtcbmltcG9ydCB7IHRvTm9kZU91dGdvaW5nSHR0cEhlYWRlcnMsIHZhbGlkYXRlVVJMIH0gZnJvbSBcIi4uL3V0aWxzXCI7XG5pbXBvcnQgeyBSZW1vdmVkVUFFcnJvciwgUmVtb3ZlZFBhZ2VFcnJvciB9IGZyb20gXCIuLi9lcnJvclwiO1xuaW1wb3J0IHsgUmVxdWVzdENvb2tpZXMgfSBmcm9tIFwiLi9jb29raWVzXCI7XG5leHBvcnQgY29uc3QgSU5URVJOQUxTID0gU3ltYm9sKFwiaW50ZXJuYWwgcmVxdWVzdFwiKTtcbmV4cG9ydCBjbGFzcyBOZXh0UmVxdWVzdCBleHRlbmRzIFJlcXVlc3Qge1xuICAgIGNvbnN0cnVjdG9yKGlucHV0LCBpbml0ID0ge30pe1xuICAgICAgICBjb25zdCB1cmwgPSB0eXBlb2YgaW5wdXQgIT09IFwic3RyaW5nXCIgJiYgXCJ1cmxcIiBpbiBpbnB1dCA/IGlucHV0LnVybCA6IFN0cmluZyhpbnB1dCk7XG4gICAgICAgIHZhbGlkYXRlVVJMKHVybCk7XG4gICAgICAgIGlmIChpbnB1dCBpbnN0YW5jZW9mIFJlcXVlc3QpIHN1cGVyKGlucHV0LCBpbml0KTtcbiAgICAgICAgZWxzZSBzdXBlcih1cmwsIGluaXQpO1xuICAgICAgICBjb25zdCBuZXh0VXJsID0gbmV3IE5leHRVUkwodXJsLCB7XG4gICAgICAgICAgICBoZWFkZXJzOiB0b05vZGVPdXRnb2luZ0h0dHBIZWFkZXJzKHRoaXMuaGVhZGVycyksXG4gICAgICAgICAgICBuZXh0Q29uZmlnOiBpbml0Lm5leHRDb25maWdcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXNbSU5URVJOQUxTXSA9IHtcbiAgICAgICAgICAgIGNvb2tpZXM6IG5ldyBSZXF1ZXN0Q29va2llcyh0aGlzLmhlYWRlcnMpLFxuICAgICAgICAgICAgZ2VvOiBpbml0LmdlbyB8fCB7fSxcbiAgICAgICAgICAgIGlwOiBpbml0LmlwLFxuICAgICAgICAgICAgbmV4dFVybCxcbiAgICAgICAgICAgIHVybDogcHJvY2Vzcy5lbnYuX19ORVhUX05PX01JRERMRVdBUkVfVVJMX05PUk1BTElaRSA/IHVybCA6IG5leHRVcmwudG9TdHJpbmcoKVxuICAgICAgICB9O1xuICAgIH1cbiAgICBbU3ltYm9sLmZvcihcImVkZ2UtcnVudGltZS5pbnNwZWN0LmN1c3RvbVwiKV0oKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBjb29raWVzOiB0aGlzLmNvb2tpZXMsXG4gICAgICAgICAgICBnZW86IHRoaXMuZ2VvLFxuICAgICAgICAgICAgaXA6IHRoaXMuaXAsXG4gICAgICAgICAgICBuZXh0VXJsOiB0aGlzLm5leHRVcmwsXG4gICAgICAgICAgICB1cmw6IHRoaXMudXJsLFxuICAgICAgICAgICAgLy8gcmVzdCBvZiBwcm9wcyBjb21lIGZyb20gUmVxdWVzdFxuICAgICAgICAgICAgYm9keVVzZWQ6IHRoaXMuYm9keVVzZWQsXG4gICAgICAgICAgICBjYWNoZTogdGhpcy5jYWNoZSxcbiAgICAgICAgICAgIGNyZWRlbnRpYWxzOiB0aGlzLmNyZWRlbnRpYWxzLFxuICAgICAgICAgICAgZGVzdGluYXRpb246IHRoaXMuZGVzdGluYXRpb24sXG4gICAgICAgICAgICBoZWFkZXJzOiBPYmplY3QuZnJvbUVudHJpZXModGhpcy5oZWFkZXJzKSxcbiAgICAgICAgICAgIGludGVncml0eTogdGhpcy5pbnRlZ3JpdHksXG4gICAgICAgICAgICBrZWVwYWxpdmU6IHRoaXMua2VlcGFsaXZlLFxuICAgICAgICAgICAgbWV0aG9kOiB0aGlzLm1ldGhvZCxcbiAgICAgICAgICAgIG1vZGU6IHRoaXMubW9kZSxcbiAgICAgICAgICAgIHJlZGlyZWN0OiB0aGlzLnJlZGlyZWN0LFxuICAgICAgICAgICAgcmVmZXJyZXI6IHRoaXMucmVmZXJyZXIsXG4gICAgICAgICAgICByZWZlcnJlclBvbGljeTogdGhpcy5yZWZlcnJlclBvbGljeSxcbiAgICAgICAgICAgIHNpZ25hbDogdGhpcy5zaWduYWxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgZ2V0IGNvb2tpZXMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzW0lOVEVSTkFMU10uY29va2llcztcbiAgICB9XG4gICAgZ2V0IGdlbygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXNbSU5URVJOQUxTXS5nZW87XG4gICAgfVxuICAgIGdldCBpcCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXNbSU5URVJOQUxTXS5pcDtcbiAgICB9XG4gICAgZ2V0IG5leHRVcmwoKSB7XG4gICAgICAgIHJldHVybiB0aGlzW0lOVEVSTkFMU10ubmV4dFVybDtcbiAgICB9XG4gICAgLyoqXG4gICAqIEBkZXByZWNhdGVkXG4gICAqIGBwYWdlYCBoYXMgYmVlbiBkZXByZWNhdGVkIGluIGZhdm91ciBvZiBgVVJMUGF0dGVybmAuXG4gICAqIFJlYWQgbW9yZTogaHR0cHM6Ly9uZXh0anMub3JnL2RvY3MvbWVzc2FnZXMvbWlkZGxld2FyZS1yZXF1ZXN0LXBhZ2VcbiAgICovIGdldCBwYWdlKCkge1xuICAgICAgICB0aHJvdyBuZXcgUmVtb3ZlZFBhZ2VFcnJvcigpO1xuICAgIH1cbiAgICAvKipcbiAgICogQGRlcHJlY2F0ZWRcbiAgICogYHVhYCBoYXMgYmVlbiByZW1vdmVkIGluIGZhdm91ciBvZiBcXGB1c2VyQWdlbnRcXGAgZnVuY3Rpb24uXG4gICAqIFJlYWQgbW9yZTogaHR0cHM6Ly9uZXh0anMub3JnL2RvY3MvbWVzc2FnZXMvbWlkZGxld2FyZS1wYXJzZS11c2VyLWFnZW50XG4gICAqLyBnZXQgdWEoKSB7XG4gICAgICAgIHRocm93IG5ldyBSZW1vdmVkVUFFcnJvcigpO1xuICAgIH1cbiAgICBnZXQgdXJsKCkge1xuICAgICAgICByZXR1cm4gdGhpc1tJTlRFUk5BTFNdLnVybDtcbiAgICB9XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlcXVlc3QuanMubWFwIl0sIm5hbWVzIjpbIk5leHRVUkwiLCJ0b05vZGVPdXRnb2luZ0h0dHBIZWFkZXJzIiwidmFsaWRhdGVVUkwiLCJSZW1vdmVkVUFFcnJvciIsIlJlbW92ZWRQYWdlRXJyb3IiLCJSZXF1ZXN0Q29va2llcyIsIklOVEVSTkFMUyIsIlN5bWJvbCIsIk5leHRSZXF1ZXN0IiwiUmVxdWVzdCIsImNvbnN0cnVjdG9yIiwiaW5wdXQiLCJpbml0IiwidXJsIiwiU3RyaW5nIiwibmV4dFVybCIsImhlYWRlcnMiLCJuZXh0Q29uZmlnIiwiY29va2llcyIsImdlbyIsImlwIiwicHJvY2VzcyIsImVudiIsIl9fTkVYVF9OT19NSURETEVXQVJFX1VSTF9OT1JNQUxJWkUiLCJ0b1N0cmluZyIsImZvciIsImJvZHlVc2VkIiwiY2FjaGUiLCJjcmVkZW50aWFscyIsImRlc3RpbmF0aW9uIiwiT2JqZWN0IiwiZnJvbUVudHJpZXMiLCJpbnRlZ3JpdHkiLCJrZWVwYWxpdmUiLCJtZXRob2QiLCJtb2RlIiwicmVkaXJlY3QiLCJyZWZlcnJlciIsInJlZmVycmVyUG9saWN5Iiwic2lnbmFsIiwicGFnZSIsInVhIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/request.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/response.js":
/*!**************************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/spec-extension/response.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NextResponse: () => (/* binding */ NextResponse)\n/* harmony export */ });\n/* harmony import */ var _next_url__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../next-url */ \"(middleware)/./node_modules/next/dist/esm/server/web/next-url.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils */ \"(middleware)/./node_modules/next/dist/esm/server/web/utils.js\");\n/* harmony import */ var _cookies__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cookies */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/cookies.js\");\n\n\n\nconst INTERNALS = Symbol(\"internal response\");\nconst REDIRECTS = new Set([\n    301,\n    302,\n    303,\n    307,\n    308\n]);\nfunction handleMiddlewareField(init, headers) {\n    var _init_request;\n    if (init == null ? void 0 : (_init_request = init.request) == null ? void 0 : _init_request.headers) {\n        if (!(init.request.headers instanceof Headers)) {\n            throw new Error(\"request.headers must be an instance of Headers\");\n        }\n        const keys = [];\n        for (const [key, value] of init.request.headers){\n            headers.set(\"x-middleware-request-\" + key, value);\n            keys.push(key);\n        }\n        headers.set(\"x-middleware-override-headers\", keys.join(\",\"));\n    }\n}\nclass NextResponse extends Response {\n    constructor(body, init = {}){\n        super(body, init);\n        this[INTERNALS] = {\n            cookies: new _cookies__WEBPACK_IMPORTED_MODULE_2__.ResponseCookies(this.headers),\n            url: init.url ? new _next_url__WEBPACK_IMPORTED_MODULE_0__.NextURL(init.url, {\n                headers: (0,_utils__WEBPACK_IMPORTED_MODULE_1__.toNodeOutgoingHttpHeaders)(this.headers),\n                nextConfig: init.nextConfig\n            }) : undefined\n        };\n    }\n    [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n        return {\n            cookies: this.cookies,\n            url: this.url,\n            // rest of props come from Response\n            body: this.body,\n            bodyUsed: this.bodyUsed,\n            headers: Object.fromEntries(this.headers),\n            ok: this.ok,\n            redirected: this.redirected,\n            status: this.status,\n            statusText: this.statusText,\n            type: this.type\n        };\n    }\n    get cookies() {\n        return this[INTERNALS].cookies;\n    }\n    static json(body, init) {\n        const response = Response.json(body, init);\n        return new NextResponse(response.body, response);\n    }\n    static redirect(url, init) {\n        const status = typeof init === \"number\" ? init : (init == null ? void 0 : init.status) ?? 307;\n        if (!REDIRECTS.has(status)) {\n            throw new RangeError('Failed to execute \"redirect\" on \"response\": Invalid status code');\n        }\n        const initObj = typeof init === \"object\" ? init : {};\n        const headers = new Headers(initObj == null ? void 0 : initObj.headers);\n        headers.set(\"Location\", (0,_utils__WEBPACK_IMPORTED_MODULE_1__.validateURL)(url));\n        return new NextResponse(null, {\n            ...initObj,\n            headers,\n            status\n        });\n    }\n    static rewrite(destination, init) {\n        const headers = new Headers(init == null ? void 0 : init.headers);\n        headers.set(\"x-middleware-rewrite\", (0,_utils__WEBPACK_IMPORTED_MODULE_1__.validateURL)(destination));\n        handleMiddlewareField(init, headers);\n        return new NextResponse(null, {\n            ...init,\n            headers\n        });\n    }\n    static next(init) {\n        const headers = new Headers(init == null ? void 0 : init.headers);\n        headers.set(\"x-middleware-next\", \"1\");\n        handleMiddlewareField(init, headers);\n        return new NextResponse(null, {\n            ...init,\n            headers\n        });\n    }\n} //# sourceMappingURL=response.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/response.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/utils.js":
/*!********************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/utils.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fromNodeOutgoingHttpHeaders: () => (/* binding */ fromNodeOutgoingHttpHeaders),\n/* harmony export */   splitCookiesString: () => (/* binding */ splitCookiesString),\n/* harmony export */   toNodeOutgoingHttpHeaders: () => (/* binding */ toNodeOutgoingHttpHeaders),\n/* harmony export */   validateURL: () => (/* binding */ validateURL)\n/* harmony export */ });\n/**\n * Converts a Node.js IncomingHttpHeaders object to a Headers object. Any\n * headers with multiple values will be joined with a comma and space. Any\n * headers that have an undefined value will be ignored and others will be\n * coerced to strings.\n *\n * @param nodeHeaders the headers object to convert\n * @returns the converted headers object\n */ function fromNodeOutgoingHttpHeaders(nodeHeaders) {\n    const headers = new Headers();\n    for (let [key, value] of Object.entries(nodeHeaders)){\n        const values = Array.isArray(value) ? value : [\n            value\n        ];\n        for (let v of values){\n            if (typeof v === \"undefined\") continue;\n            if (typeof v === \"number\") {\n                v = v.toString();\n            }\n            headers.append(key, v);\n        }\n    }\n    return headers;\n}\n/*\n  Set-Cookie header field-values are sometimes comma joined in one string. This splits them without choking on commas\n  that are within a single set-cookie field-value, such as in the Expires portion.\n  This is uncommon, but explicitly allowed - see https://tools.ietf.org/html/rfc2616#section-4.2\n  Node.js does this for every header *except* set-cookie - see https://github.com/nodejs/node/blob/d5e363b77ebaf1caf67cd7528224b651c86815c1/lib/_http_incoming.js#L128\n  React Native's fetch does this for *every* header, including set-cookie.\n  \n  Based on: https://github.com/google/j2objc/commit/16820fdbc8f76ca0c33472810ce0cb03d20efe25\n  Credits to: https://github.com/tomball for original and https://github.com/chrusart for JavaScript implementation\n*/ function splitCookiesString(cookiesString) {\n    var cookiesStrings = [];\n    var pos = 0;\n    var start;\n    var ch;\n    var lastComma;\n    var nextStart;\n    var cookiesSeparatorFound;\n    function skipWhitespace() {\n        while(pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))){\n            pos += 1;\n        }\n        return pos < cookiesString.length;\n    }\n    function notSpecialChar() {\n        ch = cookiesString.charAt(pos);\n        return ch !== \"=\" && ch !== \";\" && ch !== \",\";\n    }\n    while(pos < cookiesString.length){\n        start = pos;\n        cookiesSeparatorFound = false;\n        while(skipWhitespace()){\n            ch = cookiesString.charAt(pos);\n            if (ch === \",\") {\n                // ',' is a cookie separator if we have later first '=', not ';' or ','\n                lastComma = pos;\n                pos += 1;\n                skipWhitespace();\n                nextStart = pos;\n                while(pos < cookiesString.length && notSpecialChar()){\n                    pos += 1;\n                }\n                // currently special character\n                if (pos < cookiesString.length && cookiesString.charAt(pos) === \"=\") {\n                    // we found cookies separator\n                    cookiesSeparatorFound = true;\n                    // pos is inside the next cookie, so back up and return it.\n                    pos = nextStart;\n                    cookiesStrings.push(cookiesString.substring(start, lastComma));\n                    start = pos;\n                } else {\n                    // in param ',' or param separator ';',\n                    // we continue from that comma\n                    pos = lastComma + 1;\n                }\n            } else {\n                pos += 1;\n            }\n        }\n        if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n            cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n        }\n    }\n    return cookiesStrings;\n}\n/**\n * Converts a Headers object to a Node.js OutgoingHttpHeaders object. This is\n * required to support the set-cookie header, which may have multiple values.\n *\n * @param headers the headers object to convert\n * @returns the converted headers object\n */ function toNodeOutgoingHttpHeaders(headers) {\n    const nodeHeaders = {};\n    const cookies = [];\n    if (headers) {\n        for (const [key, value] of headers.entries()){\n            if (key.toLowerCase() === \"set-cookie\") {\n                // We may have gotten a comma joined string of cookies, or multiple\n                // set-cookie headers. We need to merge them into one header array\n                // to represent all the cookies.\n                cookies.push(...splitCookiesString(value));\n                nodeHeaders[key] = cookies.length === 1 ? cookies[0] : cookies;\n            } else {\n                nodeHeaders[key] = value;\n            }\n        }\n    }\n    return nodeHeaders;\n}\n/**\n * Validate the correctness of a user-provided URL.\n */ function validateURL(url) {\n    try {\n        return String(new URL(String(url)));\n    } catch (error) {\n        throw new Error(`URL is malformed \"${String(url)}\". Please use only absolute URLs - https://nextjs.org/docs/messages/middleware-relative-urls`, {\n            cause: error\n        });\n    }\n} //# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/utils.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/base64-arraybuffer.js":
/*!*********************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/base64-arraybuffer.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode)\n/* harmony export */ });\n// original source: https://github.com/niklasvh/base64-arraybuffer/blob/master/src/index.ts\nconst chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === \"undefined\" ? [] : new Uint8Array(256);\nfor(let i = 0; i < chars.length; i++){\n    lookup[chars.charCodeAt(i)] = i;\n}\nconst encode = (arraybuffer)=>{\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = \"\";\n    for(i = 0; i < len; i += 3){\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n        base64 += chars[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + \"=\";\n    } else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + \"==\";\n    }\n    return base64;\n};\nconst decode = (base64)=>{\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === \"=\") {\n        bufferLength--;\n        if (base64[base64.length - 2] === \"=\") {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for(i = 0; i < len; i += 4){\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n    return arraybuffer;\n}; //# sourceMappingURL=base64-arraybuffer.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9iYXNlNjQtYXJyYXlidWZmZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSwyRkFBMkY7QUFDM0YsTUFBTUEsUUFBUTtBQUNkLHdDQUF3QztBQUN4QyxNQUFNQyxTQUFTLE9BQU9DLGVBQWUsY0FBYyxFQUFFLEdBQUcsSUFBSUEsV0FBVztBQUN2RSxJQUFJLElBQUlDLElBQUksR0FBR0EsSUFBSUgsTUFBTUksTUFBTSxFQUFFRCxJQUFJO0lBQ2pDRixNQUFNLENBQUNELE1BQU1LLFVBQVUsQ0FBQ0YsR0FBRyxHQUFHQTtBQUNsQztBQUNPLE1BQU1HLFNBQVMsQ0FBQ0M7SUFDbkIsSUFBSUMsUUFBUSxJQUFJTixXQUFXSyxjQUFjSixHQUFHTSxNQUFNRCxNQUFNSixNQUFNLEVBQUVNLFNBQVM7SUFDekUsSUFBSVAsSUFBSSxHQUFHQSxJQUFJTSxLQUFLTixLQUFLLEVBQUU7UUFDdkJPLFVBQVVWLEtBQUssQ0FBQ1EsS0FBSyxDQUFDTCxFQUFFLElBQUksRUFBRTtRQUM5Qk8sVUFBVVYsS0FBSyxDQUFDLENBQUNRLEtBQUssQ0FBQ0wsRUFBRSxHQUFHLE1BQU0sSUFBSUssS0FBSyxDQUFDTCxJQUFJLEVBQUUsSUFBSSxFQUFFO1FBQ3hETyxVQUFVVixLQUFLLENBQUMsQ0FBQ1EsS0FBSyxDQUFDTCxJQUFJLEVBQUUsR0FBRyxFQUFDLEtBQU0sSUFBSUssS0FBSyxDQUFDTCxJQUFJLEVBQUUsSUFBSSxFQUFFO1FBQzdETyxVQUFVVixLQUFLLENBQUNRLEtBQUssQ0FBQ0wsSUFBSSxFQUFFLEdBQUcsR0FBRztJQUN0QztJQUNBLElBQUlNLE1BQU0sTUFBTSxHQUFHO1FBQ2ZDLFNBQVNBLE9BQU9DLFNBQVMsQ0FBQyxHQUFHRCxPQUFPTixNQUFNLEdBQUcsS0FBSztJQUN0RCxPQUFPLElBQUlLLE1BQU0sTUFBTSxHQUFHO1FBQ3RCQyxTQUFTQSxPQUFPQyxTQUFTLENBQUMsR0FBR0QsT0FBT04sTUFBTSxHQUFHLEtBQUs7SUFDdEQ7SUFDQSxPQUFPTTtBQUNYLEVBQUU7QUFDSyxNQUFNRSxTQUFTLENBQUNGO0lBQ25CLElBQUlHLGVBQWVILE9BQU9OLE1BQU0sR0FBRyxNQUFNSyxNQUFNQyxPQUFPTixNQUFNLEVBQUVELEdBQUdXLElBQUksR0FBR0MsVUFBVUMsVUFBVUMsVUFBVUM7SUFDdEcsSUFBSVIsTUFBTSxDQUFDQSxPQUFPTixNQUFNLEdBQUcsRUFBRSxLQUFLLEtBQUs7UUFDbkNTO1FBQ0EsSUFBSUgsTUFBTSxDQUFDQSxPQUFPTixNQUFNLEdBQUcsRUFBRSxLQUFLLEtBQUs7WUFDbkNTO1FBQ0o7SUFDSjtJQUNBLE1BQU1OLGNBQWMsSUFBSVksWUFBWU4sZUFBZUwsUUFBUSxJQUFJTixXQUFXSztJQUMxRSxJQUFJSixJQUFJLEdBQUdBLElBQUlNLEtBQUtOLEtBQUssRUFBRTtRQUN2QlksV0FBV2QsTUFBTSxDQUFDUyxPQUFPTCxVQUFVLENBQUNGLEdBQUc7UUFDdkNhLFdBQVdmLE1BQU0sQ0FBQ1MsT0FBT0wsVUFBVSxDQUFDRixJQUFJLEdBQUc7UUFDM0NjLFdBQVdoQixNQUFNLENBQUNTLE9BQU9MLFVBQVUsQ0FBQ0YsSUFBSSxHQUFHO1FBQzNDZSxXQUFXakIsTUFBTSxDQUFDUyxPQUFPTCxVQUFVLENBQUNGLElBQUksR0FBRztRQUMzQ0ssS0FBSyxDQUFDTSxJQUFJLEdBQUdDLFlBQVksSUFBSUMsWUFBWTtRQUN6Q1IsS0FBSyxDQUFDTSxJQUFJLEdBQUcsQ0FBQ0UsV0FBVyxFQUFDLEtBQU0sSUFBSUMsWUFBWTtRQUNoRFQsS0FBSyxDQUFDTSxJQUFJLEdBQUcsQ0FBQ0csV0FBVyxNQUFNLElBQUlDLFdBQVc7SUFDbEQ7SUFDQSxPQUFPWDtBQUNYLEVBQUUsQ0FFRiw4Q0FBOEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9iYXNlNjQtYXJyYXlidWZmZXIuanM/MmNkYyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBvcmlnaW5hbCBzb3VyY2U6IGh0dHBzOi8vZ2l0aHViLmNvbS9uaWtsYXN2aC9iYXNlNjQtYXJyYXlidWZmZXIvYmxvYi9tYXN0ZXIvc3JjL2luZGV4LnRzXG5jb25zdCBjaGFycyA9IFwiQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODkrL1wiO1xuLy8gVXNlIGEgbG9va3VwIHRhYmxlIHRvIGZpbmQgdGhlIGluZGV4LlxuY29uc3QgbG9va3VwID0gdHlwZW9mIFVpbnQ4QXJyYXkgPT09IFwidW5kZWZpbmVkXCIgPyBbXSA6IG5ldyBVaW50OEFycmF5KDI1Nik7XG5mb3IobGV0IGkgPSAwOyBpIDwgY2hhcnMubGVuZ3RoOyBpKyspe1xuICAgIGxvb2t1cFtjaGFycy5jaGFyQ29kZUF0KGkpXSA9IGk7XG59XG5leHBvcnQgY29uc3QgZW5jb2RlID0gKGFycmF5YnVmZmVyKT0+e1xuICAgIGxldCBieXRlcyA9IG5ldyBVaW50OEFycmF5KGFycmF5YnVmZmVyKSwgaSwgbGVuID0gYnl0ZXMubGVuZ3RoLCBiYXNlNjQgPSBcIlwiO1xuICAgIGZvcihpID0gMDsgaSA8IGxlbjsgaSArPSAzKXtcbiAgICAgICAgYmFzZTY0ICs9IGNoYXJzW2J5dGVzW2ldID4+IDJdO1xuICAgICAgICBiYXNlNjQgKz0gY2hhcnNbKGJ5dGVzW2ldICYgMykgPDwgNCB8IGJ5dGVzW2kgKyAxXSA+PiA0XTtcbiAgICAgICAgYmFzZTY0ICs9IGNoYXJzWyhieXRlc1tpICsgMV0gJiAxNSkgPDwgMiB8IGJ5dGVzW2kgKyAyXSA+PiA2XTtcbiAgICAgICAgYmFzZTY0ICs9IGNoYXJzW2J5dGVzW2kgKyAyXSAmIDYzXTtcbiAgICB9XG4gICAgaWYgKGxlbiAlIDMgPT09IDIpIHtcbiAgICAgICAgYmFzZTY0ID0gYmFzZTY0LnN1YnN0cmluZygwLCBiYXNlNjQubGVuZ3RoIC0gMSkgKyBcIj1cIjtcbiAgICB9IGVsc2UgaWYgKGxlbiAlIDMgPT09IDEpIHtcbiAgICAgICAgYmFzZTY0ID0gYmFzZTY0LnN1YnN0cmluZygwLCBiYXNlNjQubGVuZ3RoIC0gMikgKyBcIj09XCI7XG4gICAgfVxuICAgIHJldHVybiBiYXNlNjQ7XG59O1xuZXhwb3J0IGNvbnN0IGRlY29kZSA9IChiYXNlNjQpPT57XG4gICAgbGV0IGJ1ZmZlckxlbmd0aCA9IGJhc2U2NC5sZW5ndGggKiAwLjc1LCBsZW4gPSBiYXNlNjQubGVuZ3RoLCBpLCBwID0gMCwgZW5jb2RlZDEsIGVuY29kZWQyLCBlbmNvZGVkMywgZW5jb2RlZDQ7XG4gICAgaWYgKGJhc2U2NFtiYXNlNjQubGVuZ3RoIC0gMV0gPT09IFwiPVwiKSB7XG4gICAgICAgIGJ1ZmZlckxlbmd0aC0tO1xuICAgICAgICBpZiAoYmFzZTY0W2Jhc2U2NC5sZW5ndGggLSAyXSA9PT0gXCI9XCIpIHtcbiAgICAgICAgICAgIGJ1ZmZlckxlbmd0aC0tO1xuICAgICAgICB9XG4gICAgfVxuICAgIGNvbnN0IGFycmF5YnVmZmVyID0gbmV3IEFycmF5QnVmZmVyKGJ1ZmZlckxlbmd0aCksIGJ5dGVzID0gbmV3IFVpbnQ4QXJyYXkoYXJyYXlidWZmZXIpO1xuICAgIGZvcihpID0gMDsgaSA8IGxlbjsgaSArPSA0KXtcbiAgICAgICAgZW5jb2RlZDEgPSBsb29rdXBbYmFzZTY0LmNoYXJDb2RlQXQoaSldO1xuICAgICAgICBlbmNvZGVkMiA9IGxvb2t1cFtiYXNlNjQuY2hhckNvZGVBdChpICsgMSldO1xuICAgICAgICBlbmNvZGVkMyA9IGxvb2t1cFtiYXNlNjQuY2hhckNvZGVBdChpICsgMildO1xuICAgICAgICBlbmNvZGVkNCA9IGxvb2t1cFtiYXNlNjQuY2hhckNvZGVBdChpICsgMyldO1xuICAgICAgICBieXRlc1twKytdID0gZW5jb2RlZDEgPDwgMiB8IGVuY29kZWQyID4+IDQ7XG4gICAgICAgIGJ5dGVzW3ArK10gPSAoZW5jb2RlZDIgJiAxNSkgPDwgNCB8IGVuY29kZWQzID4+IDI7XG4gICAgICAgIGJ5dGVzW3ArK10gPSAoZW5jb2RlZDMgJiAzKSA8PCA2IHwgZW5jb2RlZDQgJiA2MztcbiAgICB9XG4gICAgcmV0dXJuIGFycmF5YnVmZmVyO1xufTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YmFzZTY0LWFycmF5YnVmZmVyLmpzLm1hcCJdLCJuYW1lcyI6WyJjaGFycyIsImxvb2t1cCIsIlVpbnQ4QXJyYXkiLCJpIiwibGVuZ3RoIiwiY2hhckNvZGVBdCIsImVuY29kZSIsImFycmF5YnVmZmVyIiwiYnl0ZXMiLCJsZW4iLCJiYXNlNjQiLCJzdWJzdHJpbmciLCJkZWNvZGUiLCJidWZmZXJMZW5ndGgiLCJwIiwiZW5jb2RlZDEiLCJlbmNvZGVkMiIsImVuY29kZWQzIiwiZW5jb2RlZDQiLCJBcnJheUJ1ZmZlciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/base64-arraybuffer.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/get-hostname.js":
/*!***************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/get-hostname.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getHostname: () => (/* binding */ getHostname)\n/* harmony export */ });\n/**\n * Takes an object with a hostname property (like a parsed URL) and some\n * headers that may contain Host and returns the preferred hostname.\n * @param parsed An object containing a hostname property.\n * @param headers A dictionary with headers containing a `host`.\n */ function getHostname(parsed, headers) {\n    // Get the hostname from the headers if it exists, otherwise use the parsed\n    // hostname.\n    let hostname;\n    if ((headers == null ? void 0 : headers.host) && !Array.isArray(headers.host)) {\n        hostname = headers.host.toString().split(\":\")[0];\n    } else if (parsed.hostname) {\n        hostname = parsed.hostname;\n    } else return;\n    return hostname.toLowerCase();\n} //# sourceMappingURL=get-hostname.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9nZXQtaG9zdG5hbWUuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBOzs7OztDQUtDLEdBQVUsU0FBU0EsWUFBWUMsTUFBTSxFQUFFQyxPQUFPO0lBQzNDLDJFQUEyRTtJQUMzRSxZQUFZO0lBQ1osSUFBSUM7SUFDSixJQUFJLENBQUNELFdBQVcsT0FBTyxLQUFLLElBQUlBLFFBQVFFLElBQUksS0FBSyxDQUFDQyxNQUFNQyxPQUFPLENBQUNKLFFBQVFFLElBQUksR0FBRztRQUMzRUQsV0FBV0QsUUFBUUUsSUFBSSxDQUFDRyxRQUFRLEdBQUdDLEtBQUssQ0FBQyxJQUFJLENBQUMsRUFBRTtJQUNwRCxPQUFPLElBQUlQLE9BQU9FLFFBQVEsRUFBRTtRQUN4QkEsV0FBV0YsT0FBT0UsUUFBUTtJQUM5QixPQUFPO0lBQ1AsT0FBT0EsU0FBU00sV0FBVztBQUMvQixFQUVBLHdDQUF3QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9zaGFyZWQvbGliL2dldC1ob3N0bmFtZS5qcz83NjMxIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVGFrZXMgYW4gb2JqZWN0IHdpdGggYSBob3N0bmFtZSBwcm9wZXJ0eSAobGlrZSBhIHBhcnNlZCBVUkwpIGFuZCBzb21lXG4gKiBoZWFkZXJzIHRoYXQgbWF5IGNvbnRhaW4gSG9zdCBhbmQgcmV0dXJucyB0aGUgcHJlZmVycmVkIGhvc3RuYW1lLlxuICogQHBhcmFtIHBhcnNlZCBBbiBvYmplY3QgY29udGFpbmluZyBhIGhvc3RuYW1lIHByb3BlcnR5LlxuICogQHBhcmFtIGhlYWRlcnMgQSBkaWN0aW9uYXJ5IHdpdGggaGVhZGVycyBjb250YWluaW5nIGEgYGhvc3RgLlxuICovIGV4cG9ydCBmdW5jdGlvbiBnZXRIb3N0bmFtZShwYXJzZWQsIGhlYWRlcnMpIHtcbiAgICAvLyBHZXQgdGhlIGhvc3RuYW1lIGZyb20gdGhlIGhlYWRlcnMgaWYgaXQgZXhpc3RzLCBvdGhlcndpc2UgdXNlIHRoZSBwYXJzZWRcbiAgICAvLyBob3N0bmFtZS5cbiAgICBsZXQgaG9zdG5hbWU7XG4gICAgaWYgKChoZWFkZXJzID09IG51bGwgPyB2b2lkIDAgOiBoZWFkZXJzLmhvc3QpICYmICFBcnJheS5pc0FycmF5KGhlYWRlcnMuaG9zdCkpIHtcbiAgICAgICAgaG9zdG5hbWUgPSBoZWFkZXJzLmhvc3QudG9TdHJpbmcoKS5zcGxpdChcIjpcIilbMF07XG4gICAgfSBlbHNlIGlmIChwYXJzZWQuaG9zdG5hbWUpIHtcbiAgICAgICAgaG9zdG5hbWUgPSBwYXJzZWQuaG9zdG5hbWU7XG4gICAgfSBlbHNlIHJldHVybjtcbiAgICByZXR1cm4gaG9zdG5hbWUudG9Mb3dlckNhc2UoKTtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0LWhvc3RuYW1lLmpzLm1hcCJdLCJuYW1lcyI6WyJnZXRIb3N0bmFtZSIsInBhcnNlZCIsImhlYWRlcnMiLCJob3N0bmFtZSIsImhvc3QiLCJBcnJheSIsImlzQXJyYXkiLCJ0b1N0cmluZyIsInNwbGl0IiwidG9Mb3dlckNhc2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/get-hostname.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/i18n/detect-domain-locale.js":
/*!****************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/i18n/detect-domain-locale.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   detectDomainLocale: () => (/* binding */ detectDomainLocale)\n/* harmony export */ });\nfunction detectDomainLocale(domainItems, hostname, detectedLocale) {\n    if (!domainItems) return;\n    if (detectedLocale) {\n        detectedLocale = detectedLocale.toLowerCase();\n    }\n    for (const item of domainItems){\n        var _item_domain, _item_locales;\n        // remove port if present\n        const domainHostname = (_item_domain = item.domain) == null ? void 0 : _item_domain.split(\":\")[0].toLowerCase();\n        if (hostname === domainHostname || detectedLocale === item.defaultLocale.toLowerCase() || ((_item_locales = item.locales) == null ? void 0 : _item_locales.some((locale)=>locale.toLowerCase() === detectedLocale))) {\n            return item;\n        }\n    }\n} //# sourceMappingURL=detect-domain-locale.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9pMThuL2RldGVjdC1kb21haW4tbG9jYWxlLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTyxTQUFTQSxtQkFBbUJDLFdBQVcsRUFBRUMsUUFBUSxFQUFFQyxjQUFjO0lBQ3BFLElBQUksQ0FBQ0YsYUFBYTtJQUNsQixJQUFJRSxnQkFBZ0I7UUFDaEJBLGlCQUFpQkEsZUFBZUMsV0FBVztJQUMvQztJQUNBLEtBQUssTUFBTUMsUUFBUUosWUFBWTtRQUMzQixJQUFJSyxjQUFjQztRQUNsQix5QkFBeUI7UUFDekIsTUFBTUMsaUJBQWlCLENBQUNGLGVBQWVELEtBQUtJLE1BQU0sS0FBSyxPQUFPLEtBQUssSUFBSUgsYUFBYUksS0FBSyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUNOLFdBQVc7UUFDN0csSUFBSUYsYUFBYU0sa0JBQWtCTCxtQkFBbUJFLEtBQUtNLGFBQWEsQ0FBQ1AsV0FBVyxNQUFPLEVBQUNHLGdCQUFnQkYsS0FBS08sT0FBTyxLQUFLLE9BQU8sS0FBSyxJQUFJTCxjQUFjTSxJQUFJLENBQUMsQ0FBQ0MsU0FBU0EsT0FBT1YsV0FBVyxPQUFPRCxlQUFjLEdBQUk7WUFDak4sT0FBT0U7UUFDWDtJQUNKO0FBQ0osRUFFQSxnREFBZ0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9pMThuL2RldGVjdC1kb21haW4tbG9jYWxlLmpzP2JjYTciXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGRldGVjdERvbWFpbkxvY2FsZShkb21haW5JdGVtcywgaG9zdG5hbWUsIGRldGVjdGVkTG9jYWxlKSB7XG4gICAgaWYgKCFkb21haW5JdGVtcykgcmV0dXJuO1xuICAgIGlmIChkZXRlY3RlZExvY2FsZSkge1xuICAgICAgICBkZXRlY3RlZExvY2FsZSA9IGRldGVjdGVkTG9jYWxlLnRvTG93ZXJDYXNlKCk7XG4gICAgfVxuICAgIGZvciAoY29uc3QgaXRlbSBvZiBkb21haW5JdGVtcyl7XG4gICAgICAgIHZhciBfaXRlbV9kb21haW4sIF9pdGVtX2xvY2FsZXM7XG4gICAgICAgIC8vIHJlbW92ZSBwb3J0IGlmIHByZXNlbnRcbiAgICAgICAgY29uc3QgZG9tYWluSG9zdG5hbWUgPSAoX2l0ZW1fZG9tYWluID0gaXRlbS5kb21haW4pID09IG51bGwgPyB2b2lkIDAgOiBfaXRlbV9kb21haW4uc3BsaXQoXCI6XCIpWzBdLnRvTG93ZXJDYXNlKCk7XG4gICAgICAgIGlmIChob3N0bmFtZSA9PT0gZG9tYWluSG9zdG5hbWUgfHwgZGV0ZWN0ZWRMb2NhbGUgPT09IGl0ZW0uZGVmYXVsdExvY2FsZS50b0xvd2VyQ2FzZSgpIHx8ICgoX2l0ZW1fbG9jYWxlcyA9IGl0ZW0ubG9jYWxlcykgPT0gbnVsbCA/IHZvaWQgMCA6IF9pdGVtX2xvY2FsZXMuc29tZSgobG9jYWxlKT0+bG9jYWxlLnRvTG93ZXJDYXNlKCkgPT09IGRldGVjdGVkTG9jYWxlKSkpIHtcbiAgICAgICAgICAgIHJldHVybiBpdGVtO1xuICAgICAgICB9XG4gICAgfVxufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZXRlY3QtZG9tYWluLWxvY2FsZS5qcy5tYXAiXSwibmFtZXMiOlsiZGV0ZWN0RG9tYWluTG9jYWxlIiwiZG9tYWluSXRlbXMiLCJob3N0bmFtZSIsImRldGVjdGVkTG9jYWxlIiwidG9Mb3dlckNhc2UiLCJpdGVtIiwiX2l0ZW1fZG9tYWluIiwiX2l0ZW1fbG9jYWxlcyIsImRvbWFpbkhvc3RuYW1lIiwiZG9tYWluIiwic3BsaXQiLCJkZWZhdWx0TG9jYWxlIiwibG9jYWxlcyIsInNvbWUiLCJsb2NhbGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/i18n/detect-domain-locale.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/i18n/normalize-locale-path.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/i18n/normalize-locale-path.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   normalizeLocalePath: () => (/* binding */ normalizeLocalePath)\n/* harmony export */ });\n/**\n * For a pathname that may include a locale from a list of locales, it\n * removes the locale from the pathname returning it alongside with the\n * detected locale.\n *\n * @param pathname A pathname that may include a locale.\n * @param locales A list of locales.\n * @returns The detected locale and pathname without locale\n */ function normalizeLocalePath(pathname, locales) {\n    let detectedLocale;\n    // first item will be empty string from splitting at first char\n    const pathnameParts = pathname.split(\"/\");\n    (locales || []).some((locale)=>{\n        if (pathnameParts[1] && pathnameParts[1].toLowerCase() === locale.toLowerCase()) {\n            detectedLocale = locale;\n            pathnameParts.splice(1, 1);\n            pathname = pathnameParts.join(\"/\") || \"/\";\n            return true;\n        }\n        return false;\n    });\n    return {\n        pathname,\n        detectedLocale\n    };\n} //# sourceMappingURL=normalize-locale-path.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9pMThuL25vcm1hbGl6ZS1sb2NhbGUtcGF0aC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7Ozs7Ozs7O0NBUUMsR0FBVSxTQUFTQSxvQkFBb0JDLFFBQVEsRUFBRUMsT0FBTztJQUNyRCxJQUFJQztJQUNKLCtEQUErRDtJQUMvRCxNQUFNQyxnQkFBZ0JILFNBQVNJLEtBQUssQ0FBQztJQUNwQ0gsQ0FBQUEsV0FBVyxFQUFFLEVBQUVJLElBQUksQ0FBQyxDQUFDQztRQUNsQixJQUFJSCxhQUFhLENBQUMsRUFBRSxJQUFJQSxhQUFhLENBQUMsRUFBRSxDQUFDSSxXQUFXLE9BQU9ELE9BQU9DLFdBQVcsSUFBSTtZQUM3RUwsaUJBQWlCSTtZQUNqQkgsY0FBY0ssTUFBTSxDQUFDLEdBQUc7WUFDeEJSLFdBQVdHLGNBQWNNLElBQUksQ0FBQyxRQUFRO1lBQ3RDLE9BQU87UUFDWDtRQUNBLE9BQU87SUFDWDtJQUNBLE9BQU87UUFDSFQ7UUFDQUU7SUFDSjtBQUNKLEVBRUEsaURBQWlEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NoYXJlZC9saWIvaTE4bi9ub3JtYWxpemUtbG9jYWxlLXBhdGguanM/NmY4NiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEZvciBhIHBhdGhuYW1lIHRoYXQgbWF5IGluY2x1ZGUgYSBsb2NhbGUgZnJvbSBhIGxpc3Qgb2YgbG9jYWxlcywgaXRcbiAqIHJlbW92ZXMgdGhlIGxvY2FsZSBmcm9tIHRoZSBwYXRobmFtZSByZXR1cm5pbmcgaXQgYWxvbmdzaWRlIHdpdGggdGhlXG4gKiBkZXRlY3RlZCBsb2NhbGUuXG4gKlxuICogQHBhcmFtIHBhdGhuYW1lIEEgcGF0aG5hbWUgdGhhdCBtYXkgaW5jbHVkZSBhIGxvY2FsZS5cbiAqIEBwYXJhbSBsb2NhbGVzIEEgbGlzdCBvZiBsb2NhbGVzLlxuICogQHJldHVybnMgVGhlIGRldGVjdGVkIGxvY2FsZSBhbmQgcGF0aG5hbWUgd2l0aG91dCBsb2NhbGVcbiAqLyBleHBvcnQgZnVuY3Rpb24gbm9ybWFsaXplTG9jYWxlUGF0aChwYXRobmFtZSwgbG9jYWxlcykge1xuICAgIGxldCBkZXRlY3RlZExvY2FsZTtcbiAgICAvLyBmaXJzdCBpdGVtIHdpbGwgYmUgZW1wdHkgc3RyaW5nIGZyb20gc3BsaXR0aW5nIGF0IGZpcnN0IGNoYXJcbiAgICBjb25zdCBwYXRobmFtZVBhcnRzID0gcGF0aG5hbWUuc3BsaXQoXCIvXCIpO1xuICAgIChsb2NhbGVzIHx8IFtdKS5zb21lKChsb2NhbGUpPT57XG4gICAgICAgIGlmIChwYXRobmFtZVBhcnRzWzFdICYmIHBhdGhuYW1lUGFydHNbMV0udG9Mb3dlckNhc2UoKSA9PT0gbG9jYWxlLnRvTG93ZXJDYXNlKCkpIHtcbiAgICAgICAgICAgIGRldGVjdGVkTG9jYWxlID0gbG9jYWxlO1xuICAgICAgICAgICAgcGF0aG5hbWVQYXJ0cy5zcGxpY2UoMSwgMSk7XG4gICAgICAgICAgICBwYXRobmFtZSA9IHBhdGhuYW1lUGFydHMuam9pbihcIi9cIikgfHwgXCIvXCI7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfSk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgcGF0aG5hbWUsXG4gICAgICAgIGRldGVjdGVkTG9jYWxlXG4gICAgfTtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bm9ybWFsaXplLWxvY2FsZS1wYXRoLmpzLm1hcCJdLCJuYW1lcyI6WyJub3JtYWxpemVMb2NhbGVQYXRoIiwicGF0aG5hbWUiLCJsb2NhbGVzIiwiZGV0ZWN0ZWRMb2NhbGUiLCJwYXRobmFtZVBhcnRzIiwic3BsaXQiLCJzb21lIiwibG9jYWxlIiwidG9Mb3dlckNhc2UiLCJzcGxpY2UiLCJqb2luIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/i18n/normalize-locale-path.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/isomorphic/path.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/isomorphic/path.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("/**\n * This module is for next.js server internal usage of path module.\n * It will use native path module for nodejs runtime.\n * It will use path-browserify polyfill for edge runtime.\n */ \nlet path;\nif (true) {\n    path = __webpack_require__(/*! next/dist/compiled/path-browserify */ \"(middleware)/./node_modules/next/dist/compiled/path-browserify/index.js\");\n} else {}\nmodule.exports = path; //# sourceMappingURL=path.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9pc29tb3JwaGljL3BhdGguanMiLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Q0FJQyxHQUFHO0FBQUEsSUFBSUE7QUFDUixJQUFJQyxJQUFtQyxFQUFFO0lBQ3JDRCxPQUFPSSxtQkFBT0EsQ0FBQyxtSEFBb0M7QUFDdkQsT0FBTyxFQUVOO0FBQ0RDLE9BQU9DLE9BQU8sR0FBR04sTUFFakIsZ0NBQWdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NoYXJlZC9saWIvaXNvbW9ycGhpYy9wYXRoLmpzPzQ0MjYiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBUaGlzIG1vZHVsZSBpcyBmb3IgbmV4dC5qcyBzZXJ2ZXIgaW50ZXJuYWwgdXNhZ2Ugb2YgcGF0aCBtb2R1bGUuXG4gKiBJdCB3aWxsIHVzZSBuYXRpdmUgcGF0aCBtb2R1bGUgZm9yIG5vZGVqcyBydW50aW1lLlxuICogSXQgd2lsbCB1c2UgcGF0aC1icm93c2VyaWZ5IHBvbHlmaWxsIGZvciBlZGdlIHJ1bnRpbWUuXG4gKi8gbGV0IHBhdGg7XG5pZiAocHJvY2Vzcy5lbnYuTkVYVF9SVU5USU1FID09PSBcImVkZ2VcIikge1xuICAgIHBhdGggPSByZXF1aXJlKFwibmV4dC9kaXN0L2NvbXBpbGVkL3BhdGgtYnJvd3NlcmlmeVwiKTtcbn0gZWxzZSB7XG4gICAgcGF0aCA9IHJlcXVpcmUoXCJwYXRoXCIpO1xufVxubW9kdWxlLmV4cG9ydHMgPSBwYXRoO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYXRoLmpzLm1hcCJdLCJuYW1lcyI6WyJwYXRoIiwicHJvY2VzcyIsImVudiIsIk5FWFRfUlVOVElNRSIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/isomorphic/path.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/page-path/ensure-leading-slash.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/page-path/ensure-leading-slash.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ensureLeadingSlash: () => (/* binding */ ensureLeadingSlash)\n/* harmony export */ });\n/**\n * For a given page path, this function ensures that there is a leading slash.\n * If there is not a leading slash, one is added, otherwise it is noop.\n */ function ensureLeadingSlash(path) {\n    return path.startsWith(\"/\") ? path : \"/\" + path;\n} //# sourceMappingURL=ensure-leading-slash.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9wYWdlLXBhdGgvZW5zdXJlLWxlYWRpbmctc2xhc2guanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBOzs7Q0FHQyxHQUFVLFNBQVNBLG1CQUFtQkMsSUFBSTtJQUN2QyxPQUFPQSxLQUFLQyxVQUFVLENBQUMsT0FBT0QsT0FBTyxNQUFNQTtBQUMvQyxFQUVBLGdEQUFnRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9zaGFyZWQvbGliL3BhZ2UtcGF0aC9lbnN1cmUtbGVhZGluZy1zbGFzaC5qcz8wNDY0Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogRm9yIGEgZ2l2ZW4gcGFnZSBwYXRoLCB0aGlzIGZ1bmN0aW9uIGVuc3VyZXMgdGhhdCB0aGVyZSBpcyBhIGxlYWRpbmcgc2xhc2guXG4gKiBJZiB0aGVyZSBpcyBub3QgYSBsZWFkaW5nIHNsYXNoLCBvbmUgaXMgYWRkZWQsIG90aGVyd2lzZSBpdCBpcyBub29wLlxuICovIGV4cG9ydCBmdW5jdGlvbiBlbnN1cmVMZWFkaW5nU2xhc2gocGF0aCkge1xuICAgIHJldHVybiBwYXRoLnN0YXJ0c1dpdGgoXCIvXCIpID8gcGF0aCA6IFwiL1wiICsgcGF0aDtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZW5zdXJlLWxlYWRpbmctc2xhc2guanMubWFwIl0sIm5hbWVzIjpbImVuc3VyZUxlYWRpbmdTbGFzaCIsInBhdGgiLCJzdGFydHNXaXRoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/page-path/ensure-leading-slash.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/page-path/normalize-page-path.js":
/*!********************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/page-path/normalize-page-path.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   normalizePagePath: () => (/* binding */ normalizePagePath)\n/* harmony export */ });\n/* harmony import */ var _ensure_leading_slash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ensure-leading-slash */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/page-path/ensure-leading-slash.js\");\n/* harmony import */ var _router_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../router/utils */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/index.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/utils.js\");\n\n\n\n/**\n * Takes a page and transforms it into its file counterpart ensuring that the\n * output is normalized. Note this function is not idempotent because a page\n * `/index` can be referencing `/index/index.js` and `/index/index` could be\n * referencing `/index/index/index.js`. Examples:\n *  - `/` -> `/index`\n *  - `/index/foo` -> `/index/index/foo`\n *  - `/index` -> `/index/index`\n */ function normalizePagePath(page) {\n    const normalized = /^\\/index(\\/|$)/.test(page) && !(0,_router_utils__WEBPACK_IMPORTED_MODULE_1__.isDynamicRoute)(page) ? \"/index\" + page : page === \"/\" ? \"/index\" : (0,_ensure_leading_slash__WEBPACK_IMPORTED_MODULE_0__.ensureLeadingSlash)(page);\n    if (false) {}\n    return normalized;\n} //# sourceMappingURL=normalize-page-path.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9wYWdlLXBhdGgvbm9ybWFsaXplLXBhZ2UtcGF0aC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQTREO0FBQ1g7QUFDUDtBQUMxQzs7Ozs7Ozs7Q0FRQyxHQUFVLFNBQVNHLGtCQUFrQkMsSUFBSTtJQUN0QyxNQUFNQyxhQUFhLGlCQUFpQkMsSUFBSSxDQUFDRixTQUFTLENBQUNILDZEQUFjQSxDQUFDRyxRQUFRLFdBQVdBLE9BQU9BLFNBQVMsTUFBTSxXQUFXSix5RUFBa0JBLENBQUNJO0lBQ3pJLElBQUlHLEtBQW1DLEVBQUUsRUFNeEM7SUFDRCxPQUFPRjtBQUNYLEVBRUEsK0NBQStDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NoYXJlZC9saWIvcGFnZS1wYXRoL25vcm1hbGl6ZS1wYWdlLXBhdGguanM/M2I4YyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBlbnN1cmVMZWFkaW5nU2xhc2ggfSBmcm9tIFwiLi9lbnN1cmUtbGVhZGluZy1zbGFzaFwiO1xuaW1wb3J0IHsgaXNEeW5hbWljUm91dGUgfSBmcm9tIFwiLi4vcm91dGVyL3V0aWxzXCI7XG5pbXBvcnQgeyBOb3JtYWxpemVFcnJvciB9IGZyb20gXCIuLi91dGlsc1wiO1xuLyoqXG4gKiBUYWtlcyBhIHBhZ2UgYW5kIHRyYW5zZm9ybXMgaXQgaW50byBpdHMgZmlsZSBjb3VudGVycGFydCBlbnN1cmluZyB0aGF0IHRoZVxuICogb3V0cHV0IGlzIG5vcm1hbGl6ZWQuIE5vdGUgdGhpcyBmdW5jdGlvbiBpcyBub3QgaWRlbXBvdGVudCBiZWNhdXNlIGEgcGFnZVxuICogYC9pbmRleGAgY2FuIGJlIHJlZmVyZW5jaW5nIGAvaW5kZXgvaW5kZXguanNgIGFuZCBgL2luZGV4L2luZGV4YCBjb3VsZCBiZVxuICogcmVmZXJlbmNpbmcgYC9pbmRleC9pbmRleC9pbmRleC5qc2AuIEV4YW1wbGVzOlxuICogIC0gYC9gIC0+IGAvaW5kZXhgXG4gKiAgLSBgL2luZGV4L2Zvb2AgLT4gYC9pbmRleC9pbmRleC9mb29gXG4gKiAgLSBgL2luZGV4YCAtPiBgL2luZGV4L2luZGV4YFxuICovIGV4cG9ydCBmdW5jdGlvbiBub3JtYWxpemVQYWdlUGF0aChwYWdlKSB7XG4gICAgY29uc3Qgbm9ybWFsaXplZCA9IC9eXFwvaW5kZXgoXFwvfCQpLy50ZXN0KHBhZ2UpICYmICFpc0R5bmFtaWNSb3V0ZShwYWdlKSA/IFwiL2luZGV4XCIgKyBwYWdlIDogcGFnZSA9PT0gXCIvXCIgPyBcIi9pbmRleFwiIDogZW5zdXJlTGVhZGluZ1NsYXNoKHBhZ2UpO1xuICAgIGlmIChwcm9jZXNzLmVudi5ORVhUX1JVTlRJTUUgIT09IFwiZWRnZVwiKSB7XG4gICAgICAgIGNvbnN0IHsgcG9zaXggfSA9IHJlcXVpcmUoXCJwYXRoXCIpO1xuICAgICAgICBjb25zdCByZXNvbHZlZFBhZ2UgPSBwb3NpeC5ub3JtYWxpemUobm9ybWFsaXplZCk7XG4gICAgICAgIGlmIChyZXNvbHZlZFBhZ2UgIT09IG5vcm1hbGl6ZWQpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBOb3JtYWxpemVFcnJvcihcIlJlcXVlc3RlZCBhbmQgcmVzb2x2ZWQgcGFnZSBtaXNtYXRjaDogXCIgKyBub3JtYWxpemVkICsgXCIgXCIgKyByZXNvbHZlZFBhZ2UpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBub3JtYWxpemVkO1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1ub3JtYWxpemUtcGFnZS1wYXRoLmpzLm1hcCJdLCJuYW1lcyI6WyJlbnN1cmVMZWFkaW5nU2xhc2giLCJpc0R5bmFtaWNSb3V0ZSIsIk5vcm1hbGl6ZUVycm9yIiwibm9ybWFsaXplUGFnZVBhdGgiLCJwYWdlIiwibm9ybWFsaXplZCIsInRlc3QiLCJwcm9jZXNzIiwiZW52IiwiTkVYVF9SVU5USU1FIiwicG9zaXgiLCJyZXF1aXJlIiwicmVzb2x2ZWRQYWdlIiwibm9ybWFsaXplIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/page-path/normalize-page-path.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/add-locale.js":
/*!**************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/router/utils/add-locale.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addLocale: () => (/* binding */ addLocale)\n/* harmony export */ });\n/* harmony import */ var _add_path_prefix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./add-path-prefix */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/add-path-prefix.js\");\n/* harmony import */ var _path_has_prefix__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./path-has-prefix */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/path-has-prefix.js\");\n\n\n/**\n * For a given path and a locale, if the locale is given, it will prefix the\n * locale. The path shouldn't be an API path. If a default locale is given the\n * prefix will be omitted if the locale is already the default locale.\n */ function addLocale(path, locale, defaultLocale, ignorePrefix) {\n    // If no locale was given or the locale is the default locale, we don't need\n    // to prefix the path.\n    if (!locale || locale === defaultLocale) return path;\n    const lower = path.toLowerCase();\n    // If the path is an API path or the path already has the locale prefix, we\n    // don't need to prefix the path.\n    if (!ignorePrefix) {\n        if ((0,_path_has_prefix__WEBPACK_IMPORTED_MODULE_1__.pathHasPrefix)(lower, \"/api\")) return path;\n        if ((0,_path_has_prefix__WEBPACK_IMPORTED_MODULE_1__.pathHasPrefix)(lower, \"/\" + locale.toLowerCase())) return path;\n    }\n    // Add the locale prefix to the path.\n    return (0,_add_path_prefix__WEBPACK_IMPORTED_MODULE_0__.addPathPrefix)(path, \"/\" + locale);\n} //# sourceMappingURL=add-locale.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvYWRkLWxvY2FsZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBa0Q7QUFDQTtBQUNsRDs7OztDQUlDLEdBQVUsU0FBU0UsVUFBVUMsSUFBSSxFQUFFQyxNQUFNLEVBQUVDLGFBQWEsRUFBRUMsWUFBWTtJQUNuRSw0RUFBNEU7SUFDNUUsc0JBQXNCO0lBQ3RCLElBQUksQ0FBQ0YsVUFBVUEsV0FBV0MsZUFBZSxPQUFPRjtJQUNoRCxNQUFNSSxRQUFRSixLQUFLSyxXQUFXO0lBQzlCLDJFQUEyRTtJQUMzRSxpQ0FBaUM7SUFDakMsSUFBSSxDQUFDRixjQUFjO1FBQ2YsSUFBSUwsK0RBQWFBLENBQUNNLE9BQU8sU0FBUyxPQUFPSjtRQUN6QyxJQUFJRiwrREFBYUEsQ0FBQ00sT0FBTyxNQUFNSCxPQUFPSSxXQUFXLEtBQUssT0FBT0w7SUFDakU7SUFDQSxxQ0FBcUM7SUFDckMsT0FBT0gsK0RBQWFBLENBQUNHLE1BQU0sTUFBTUM7QUFDckMsRUFFQSxzQ0FBc0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvYWRkLWxvY2FsZS5qcz9mODMwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGFkZFBhdGhQcmVmaXggfSBmcm9tIFwiLi9hZGQtcGF0aC1wcmVmaXhcIjtcbmltcG9ydCB7IHBhdGhIYXNQcmVmaXggfSBmcm9tIFwiLi9wYXRoLWhhcy1wcmVmaXhcIjtcbi8qKlxuICogRm9yIGEgZ2l2ZW4gcGF0aCBhbmQgYSBsb2NhbGUsIGlmIHRoZSBsb2NhbGUgaXMgZ2l2ZW4sIGl0IHdpbGwgcHJlZml4IHRoZVxuICogbG9jYWxlLiBUaGUgcGF0aCBzaG91bGRuJ3QgYmUgYW4gQVBJIHBhdGguIElmIGEgZGVmYXVsdCBsb2NhbGUgaXMgZ2l2ZW4gdGhlXG4gKiBwcmVmaXggd2lsbCBiZSBvbWl0dGVkIGlmIHRoZSBsb2NhbGUgaXMgYWxyZWFkeSB0aGUgZGVmYXVsdCBsb2NhbGUuXG4gKi8gZXhwb3J0IGZ1bmN0aW9uIGFkZExvY2FsZShwYXRoLCBsb2NhbGUsIGRlZmF1bHRMb2NhbGUsIGlnbm9yZVByZWZpeCkge1xuICAgIC8vIElmIG5vIGxvY2FsZSB3YXMgZ2l2ZW4gb3IgdGhlIGxvY2FsZSBpcyB0aGUgZGVmYXVsdCBsb2NhbGUsIHdlIGRvbid0IG5lZWRcbiAgICAvLyB0byBwcmVmaXggdGhlIHBhdGguXG4gICAgaWYgKCFsb2NhbGUgfHwgbG9jYWxlID09PSBkZWZhdWx0TG9jYWxlKSByZXR1cm4gcGF0aDtcbiAgICBjb25zdCBsb3dlciA9IHBhdGgudG9Mb3dlckNhc2UoKTtcbiAgICAvLyBJZiB0aGUgcGF0aCBpcyBhbiBBUEkgcGF0aCBvciB0aGUgcGF0aCBhbHJlYWR5IGhhcyB0aGUgbG9jYWxlIHByZWZpeCwgd2VcbiAgICAvLyBkb24ndCBuZWVkIHRvIHByZWZpeCB0aGUgcGF0aC5cbiAgICBpZiAoIWlnbm9yZVByZWZpeCkge1xuICAgICAgICBpZiAocGF0aEhhc1ByZWZpeChsb3dlciwgXCIvYXBpXCIpKSByZXR1cm4gcGF0aDtcbiAgICAgICAgaWYgKHBhdGhIYXNQcmVmaXgobG93ZXIsIFwiL1wiICsgbG9jYWxlLnRvTG93ZXJDYXNlKCkpKSByZXR1cm4gcGF0aDtcbiAgICB9XG4gICAgLy8gQWRkIHRoZSBsb2NhbGUgcHJlZml4IHRvIHRoZSBwYXRoLlxuICAgIHJldHVybiBhZGRQYXRoUHJlZml4KHBhdGgsIFwiL1wiICsgbG9jYWxlKTtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YWRkLWxvY2FsZS5qcy5tYXAiXSwibmFtZXMiOlsiYWRkUGF0aFByZWZpeCIsInBhdGhIYXNQcmVmaXgiLCJhZGRMb2NhbGUiLCJwYXRoIiwibG9jYWxlIiwiZGVmYXVsdExvY2FsZSIsImlnbm9yZVByZWZpeCIsImxvd2VyIiwidG9Mb3dlckNhc2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/add-locale.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/add-path-prefix.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/router/utils/add-path-prefix.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addPathPrefix: () => (/* binding */ addPathPrefix)\n/* harmony export */ });\n/* harmony import */ var _parse_path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parse-path */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/parse-path.js\");\n\n/**\n * Adds the provided prefix to the given path. It first ensures that the path\n * is indeed starting with a slash.\n */ function addPathPrefix(path, prefix) {\n    if (!path.startsWith(\"/\") || !prefix) {\n        return path;\n    }\n    const { pathname, query, hash } = (0,_parse_path__WEBPACK_IMPORTED_MODULE_0__.parsePath)(path);\n    return \"\" + prefix + pathname + query + hash;\n} //# sourceMappingURL=add-path-prefix.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvYWRkLXBhdGgtcHJlZml4LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXlDO0FBQ3pDOzs7Q0FHQyxHQUFVLFNBQVNDLGNBQWNDLElBQUksRUFBRUMsTUFBTTtJQUMxQyxJQUFJLENBQUNELEtBQUtFLFVBQVUsQ0FBQyxRQUFRLENBQUNELFFBQVE7UUFDbEMsT0FBT0Q7SUFDWDtJQUNBLE1BQU0sRUFBRUcsUUFBUSxFQUFFQyxLQUFLLEVBQUVDLElBQUksRUFBRSxHQUFHUCxzREFBU0EsQ0FBQ0U7SUFDNUMsT0FBTyxLQUFLQyxTQUFTRSxXQUFXQyxRQUFRQztBQUM1QyxFQUVBLDJDQUEyQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9zaGFyZWQvbGliL3JvdXRlci91dGlscy9hZGQtcGF0aC1wcmVmaXguanM/MTA3ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBwYXJzZVBhdGggfSBmcm9tIFwiLi9wYXJzZS1wYXRoXCI7XG4vKipcbiAqIEFkZHMgdGhlIHByb3ZpZGVkIHByZWZpeCB0byB0aGUgZ2l2ZW4gcGF0aC4gSXQgZmlyc3QgZW5zdXJlcyB0aGF0IHRoZSBwYXRoXG4gKiBpcyBpbmRlZWQgc3RhcnRpbmcgd2l0aCBhIHNsYXNoLlxuICovIGV4cG9ydCBmdW5jdGlvbiBhZGRQYXRoUHJlZml4KHBhdGgsIHByZWZpeCkge1xuICAgIGlmICghcGF0aC5zdGFydHNXaXRoKFwiL1wiKSB8fCAhcHJlZml4KSB7XG4gICAgICAgIHJldHVybiBwYXRoO1xuICAgIH1cbiAgICBjb25zdCB7IHBhdGhuYW1lLCBxdWVyeSwgaGFzaCB9ID0gcGFyc2VQYXRoKHBhdGgpO1xuICAgIHJldHVybiBcIlwiICsgcHJlZml4ICsgcGF0aG5hbWUgKyBxdWVyeSArIGhhc2g7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFkZC1wYXRoLXByZWZpeC5qcy5tYXAiXSwibmFtZXMiOlsicGFyc2VQYXRoIiwiYWRkUGF0aFByZWZpeCIsInBhdGgiLCJwcmVmaXgiLCJzdGFydHNXaXRoIiwicGF0aG5hbWUiLCJxdWVyeSIsImhhc2giXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/add-path-prefix.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/add-path-suffix.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/router/utils/add-path-suffix.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addPathSuffix: () => (/* binding */ addPathSuffix)\n/* harmony export */ });\n/* harmony import */ var _parse_path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parse-path */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/parse-path.js\");\n\n/**\n * Similarly to `addPathPrefix`, this function adds a suffix at the end on the\n * provided path. It also works only for paths ensuring the argument starts\n * with a slash.\n */ function addPathSuffix(path, suffix) {\n    if (!path.startsWith(\"/\") || !suffix) {\n        return path;\n    }\n    const { pathname, query, hash } = (0,_parse_path__WEBPACK_IMPORTED_MODULE_0__.parsePath)(path);\n    return \"\" + pathname + suffix + query + hash;\n} //# sourceMappingURL=add-path-suffix.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvYWRkLXBhdGgtc3VmZml4LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXlDO0FBQ3pDOzs7O0NBSUMsR0FBVSxTQUFTQyxjQUFjQyxJQUFJLEVBQUVDLE1BQU07SUFDMUMsSUFBSSxDQUFDRCxLQUFLRSxVQUFVLENBQUMsUUFBUSxDQUFDRCxRQUFRO1FBQ2xDLE9BQU9EO0lBQ1g7SUFDQSxNQUFNLEVBQUVHLFFBQVEsRUFBRUMsS0FBSyxFQUFFQyxJQUFJLEVBQUUsR0FBR1Asc0RBQVNBLENBQUNFO0lBQzVDLE9BQU8sS0FBS0csV0FBV0YsU0FBU0csUUFBUUM7QUFDNUMsRUFFQSwyQ0FBMkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvYWRkLXBhdGgtc3VmZml4LmpzP2RmY2MiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcGFyc2VQYXRoIH0gZnJvbSBcIi4vcGFyc2UtcGF0aFwiO1xuLyoqXG4gKiBTaW1pbGFybHkgdG8gYGFkZFBhdGhQcmVmaXhgLCB0aGlzIGZ1bmN0aW9uIGFkZHMgYSBzdWZmaXggYXQgdGhlIGVuZCBvbiB0aGVcbiAqIHByb3ZpZGVkIHBhdGguIEl0IGFsc28gd29ya3Mgb25seSBmb3IgcGF0aHMgZW5zdXJpbmcgdGhlIGFyZ3VtZW50IHN0YXJ0c1xuICogd2l0aCBhIHNsYXNoLlxuICovIGV4cG9ydCBmdW5jdGlvbiBhZGRQYXRoU3VmZml4KHBhdGgsIHN1ZmZpeCkge1xuICAgIGlmICghcGF0aC5zdGFydHNXaXRoKFwiL1wiKSB8fCAhc3VmZml4KSB7XG4gICAgICAgIHJldHVybiBwYXRoO1xuICAgIH1cbiAgICBjb25zdCB7IHBhdGhuYW1lLCBxdWVyeSwgaGFzaCB9ID0gcGFyc2VQYXRoKHBhdGgpO1xuICAgIHJldHVybiBcIlwiICsgcGF0aG5hbWUgKyBzdWZmaXggKyBxdWVyeSArIGhhc2g7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFkZC1wYXRoLXN1ZmZpeC5qcy5tYXAiXSwibmFtZXMiOlsicGFyc2VQYXRoIiwiYWRkUGF0aFN1ZmZpeCIsInBhdGgiLCJzdWZmaXgiLCJzdGFydHNXaXRoIiwicGF0aG5hbWUiLCJxdWVyeSIsImhhc2giXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/add-path-suffix.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/app-paths.js":
/*!*************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/router/utils/app-paths.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   normalizeAppPath: () => (/* binding */ normalizeAppPath),\n/* harmony export */   normalizeRscPath: () => (/* binding */ normalizeRscPath)\n/* harmony export */ });\n/* harmony import */ var _page_path_ensure_leading_slash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../page-path/ensure-leading-slash */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/page-path/ensure-leading-slash.js\");\n/* harmony import */ var _segment__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../segment */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/segment.js\");\n\n\n/**\n * Normalizes an app route so it represents the actual request path. Essentially\n * performing the following transformations:\n *\n * - `/(dashboard)/user/[id]/page` to `/user/[id]`\n * - `/(dashboard)/account/page` to `/account`\n * - `/user/[id]/page` to `/user/[id]`\n * - `/account/page` to `/account`\n * - `/page` to `/`\n * - `/(dashboard)/user/[id]/route` to `/user/[id]`\n * - `/(dashboard)/account/route` to `/account`\n * - `/user/[id]/route` to `/user/[id]`\n * - `/account/route` to `/account`\n * - `/route` to `/`\n * - `/` to `/`\n *\n * @param route the app route to normalize\n * @returns the normalized pathname\n */ function normalizeAppPath(route) {\n    return (0,_page_path_ensure_leading_slash__WEBPACK_IMPORTED_MODULE_0__.ensureLeadingSlash)(route.split(\"/\").reduce((pathname, segment, index, segments)=>{\n        // Empty segments are ignored.\n        if (!segment) {\n            return pathname;\n        }\n        // Groups are ignored.\n        if ((0,_segment__WEBPACK_IMPORTED_MODULE_1__.isGroupSegment)(segment)) {\n            return pathname;\n        }\n        // Parallel segments are ignored.\n        if (segment[0] === \"@\") {\n            return pathname;\n        }\n        // The last segment (if it's a leaf) should be ignored.\n        if ((segment === \"page\" || segment === \"route\") && index === segments.length - 1) {\n            return pathname;\n        }\n        return pathname + \"/\" + segment;\n    }, \"\"));\n}\n/**\n * Strips the `.rsc` extension if it's in the pathname.\n * Since this function is used on full urls it checks `?` for searchParams handling.\n */ function normalizeRscPath(pathname, enabled) {\n    return enabled ? pathname.replace(/\\.rsc($|\\?)/, \"$1\") : pathname;\n} //# sourceMappingURL=app-paths.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvYXBwLXBhdGhzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBMEU7QUFDM0I7QUFDL0M7Ozs7Ozs7Ozs7Ozs7Ozs7OztDQWtCQyxHQUFVLFNBQVNFLGlCQUFpQkMsS0FBSztJQUN0QyxPQUFPSCxtRkFBa0JBLENBQUNHLE1BQU1DLEtBQUssQ0FBQyxLQUFLQyxNQUFNLENBQUMsQ0FBQ0MsVUFBVUMsU0FBU0MsT0FBT0M7UUFDekUsOEJBQThCO1FBQzlCLElBQUksQ0FBQ0YsU0FBUztZQUNWLE9BQU9EO1FBQ1g7UUFDQSxzQkFBc0I7UUFDdEIsSUFBSUwsd0RBQWNBLENBQUNNLFVBQVU7WUFDekIsT0FBT0Q7UUFDWDtRQUNBLGlDQUFpQztRQUNqQyxJQUFJQyxPQUFPLENBQUMsRUFBRSxLQUFLLEtBQUs7WUFDcEIsT0FBT0Q7UUFDWDtRQUNBLHVEQUF1RDtRQUN2RCxJQUFJLENBQUNDLFlBQVksVUFBVUEsWUFBWSxPQUFNLEtBQU1DLFVBQVVDLFNBQVNDLE1BQU0sR0FBRyxHQUFHO1lBQzlFLE9BQU9KO1FBQ1g7UUFDQSxPQUFPQSxXQUFXLE1BQU1DO0lBQzVCLEdBQUc7QUFDUDtBQUNBOzs7Q0FHQyxHQUFVLFNBQVNJLGlCQUFpQkwsUUFBUSxFQUFFTSxPQUFPO0lBQ2xELE9BQU9BLFVBQVVOLFNBQVNPLE9BQU8sQ0FBQyxlQUNsQyxRQUFRUDtBQUNaLEVBRUEscUNBQXFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL2FwcC1wYXRocy5qcz9iNjg5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGVuc3VyZUxlYWRpbmdTbGFzaCB9IGZyb20gXCIuLi8uLi9wYWdlLXBhdGgvZW5zdXJlLWxlYWRpbmctc2xhc2hcIjtcbmltcG9ydCB7IGlzR3JvdXBTZWdtZW50IH0gZnJvbSBcIi4uLy4uL3NlZ21lbnRcIjtcbi8qKlxuICogTm9ybWFsaXplcyBhbiBhcHAgcm91dGUgc28gaXQgcmVwcmVzZW50cyB0aGUgYWN0dWFsIHJlcXVlc3QgcGF0aC4gRXNzZW50aWFsbHlcbiAqIHBlcmZvcm1pbmcgdGhlIGZvbGxvd2luZyB0cmFuc2Zvcm1hdGlvbnM6XG4gKlxuICogLSBgLyhkYXNoYm9hcmQpL3VzZXIvW2lkXS9wYWdlYCB0byBgL3VzZXIvW2lkXWBcbiAqIC0gYC8oZGFzaGJvYXJkKS9hY2NvdW50L3BhZ2VgIHRvIGAvYWNjb3VudGBcbiAqIC0gYC91c2VyL1tpZF0vcGFnZWAgdG8gYC91c2VyL1tpZF1gXG4gKiAtIGAvYWNjb3VudC9wYWdlYCB0byBgL2FjY291bnRgXG4gKiAtIGAvcGFnZWAgdG8gYC9gXG4gKiAtIGAvKGRhc2hib2FyZCkvdXNlci9baWRdL3JvdXRlYCB0byBgL3VzZXIvW2lkXWBcbiAqIC0gYC8oZGFzaGJvYXJkKS9hY2NvdW50L3JvdXRlYCB0byBgL2FjY291bnRgXG4gKiAtIGAvdXNlci9baWRdL3JvdXRlYCB0byBgL3VzZXIvW2lkXWBcbiAqIC0gYC9hY2NvdW50L3JvdXRlYCB0byBgL2FjY291bnRgXG4gKiAtIGAvcm91dGVgIHRvIGAvYFxuICogLSBgL2AgdG8gYC9gXG4gKlxuICogQHBhcmFtIHJvdXRlIHRoZSBhcHAgcm91dGUgdG8gbm9ybWFsaXplXG4gKiBAcmV0dXJucyB0aGUgbm9ybWFsaXplZCBwYXRobmFtZVxuICovIGV4cG9ydCBmdW5jdGlvbiBub3JtYWxpemVBcHBQYXRoKHJvdXRlKSB7XG4gICAgcmV0dXJuIGVuc3VyZUxlYWRpbmdTbGFzaChyb3V0ZS5zcGxpdChcIi9cIikucmVkdWNlKChwYXRobmFtZSwgc2VnbWVudCwgaW5kZXgsIHNlZ21lbnRzKT0+e1xuICAgICAgICAvLyBFbXB0eSBzZWdtZW50cyBhcmUgaWdub3JlZC5cbiAgICAgICAgaWYgKCFzZWdtZW50KSB7XG4gICAgICAgICAgICByZXR1cm4gcGF0aG5hbWU7XG4gICAgICAgIH1cbiAgICAgICAgLy8gR3JvdXBzIGFyZSBpZ25vcmVkLlxuICAgICAgICBpZiAoaXNHcm91cFNlZ21lbnQoc2VnbWVudCkpIHtcbiAgICAgICAgICAgIHJldHVybiBwYXRobmFtZTtcbiAgICAgICAgfVxuICAgICAgICAvLyBQYXJhbGxlbCBzZWdtZW50cyBhcmUgaWdub3JlZC5cbiAgICAgICAgaWYgKHNlZ21lbnRbMF0gPT09IFwiQFwiKSB7XG4gICAgICAgICAgICByZXR1cm4gcGF0aG5hbWU7XG4gICAgICAgIH1cbiAgICAgICAgLy8gVGhlIGxhc3Qgc2VnbWVudCAoaWYgaXQncyBhIGxlYWYpIHNob3VsZCBiZSBpZ25vcmVkLlxuICAgICAgICBpZiAoKHNlZ21lbnQgPT09IFwicGFnZVwiIHx8IHNlZ21lbnQgPT09IFwicm91dGVcIikgJiYgaW5kZXggPT09IHNlZ21lbnRzLmxlbmd0aCAtIDEpIHtcbiAgICAgICAgICAgIHJldHVybiBwYXRobmFtZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcGF0aG5hbWUgKyBcIi9cIiArIHNlZ21lbnQ7XG4gICAgfSwgXCJcIikpO1xufVxuLyoqXG4gKiBTdHJpcHMgdGhlIGAucnNjYCBleHRlbnNpb24gaWYgaXQncyBpbiB0aGUgcGF0aG5hbWUuXG4gKiBTaW5jZSB0aGlzIGZ1bmN0aW9uIGlzIHVzZWQgb24gZnVsbCB1cmxzIGl0IGNoZWNrcyBgP2AgZm9yIHNlYXJjaFBhcmFtcyBoYW5kbGluZy5cbiAqLyBleHBvcnQgZnVuY3Rpb24gbm9ybWFsaXplUnNjUGF0aChwYXRobmFtZSwgZW5hYmxlZCkge1xuICAgIHJldHVybiBlbmFibGVkID8gcGF0aG5hbWUucmVwbGFjZSgvXFwucnNjKCR8XFw/KS8sIC8vICQxIGVuc3VyZXMgYD9gIGlzIHByZXNlcnZlZFxuICAgIFwiJDFcIikgOiBwYXRobmFtZTtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXBhdGhzLmpzLm1hcCJdLCJuYW1lcyI6WyJlbnN1cmVMZWFkaW5nU2xhc2giLCJpc0dyb3VwU2VnbWVudCIsIm5vcm1hbGl6ZUFwcFBhdGgiLCJyb3V0ZSIsInNwbGl0IiwicmVkdWNlIiwicGF0aG5hbWUiLCJzZWdtZW50IiwiaW5kZXgiLCJzZWdtZW50cyIsImxlbmd0aCIsIm5vcm1hbGl6ZVJzY1BhdGgiLCJlbmFibGVkIiwicmVwbGFjZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/app-paths.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/format-next-pathname-info.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/router/utils/format-next-pathname-info.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   formatNextPathnameInfo: () => (/* binding */ formatNextPathnameInfo)\n/* harmony export */ });\n/* harmony import */ var _remove_trailing_slash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./remove-trailing-slash */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/remove-trailing-slash.js\");\n/* harmony import */ var _add_path_prefix__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./add-path-prefix */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/add-path-prefix.js\");\n/* harmony import */ var _add_path_suffix__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./add-path-suffix */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/add-path-suffix.js\");\n/* harmony import */ var _add_locale__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./add-locale */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/add-locale.js\");\n\n\n\n\nfunction formatNextPathnameInfo(info) {\n    let pathname = (0,_add_locale__WEBPACK_IMPORTED_MODULE_3__.addLocale)(info.pathname, info.locale, info.buildId ? undefined : info.defaultLocale, info.ignorePrefix);\n    if (info.buildId || !info.trailingSlash) {\n        pathname = (0,_remove_trailing_slash__WEBPACK_IMPORTED_MODULE_0__.removeTrailingSlash)(pathname);\n    }\n    if (info.buildId) {\n        pathname = (0,_add_path_suffix__WEBPACK_IMPORTED_MODULE_2__.addPathSuffix)((0,_add_path_prefix__WEBPACK_IMPORTED_MODULE_1__.addPathPrefix)(pathname, \"/_next/data/\" + info.buildId), info.pathname === \"/\" ? \"index.json\" : \".json\");\n    }\n    pathname = (0,_add_path_prefix__WEBPACK_IMPORTED_MODULE_1__.addPathPrefix)(pathname, info.basePath);\n    return !info.buildId && info.trailingSlash ? !pathname.endsWith(\"/\") ? (0,_add_path_suffix__WEBPACK_IMPORTED_MODULE_2__.addPathSuffix)(pathname, \"/\") : pathname : (0,_remove_trailing_slash__WEBPACK_IMPORTED_MODULE_0__.removeTrailingSlash)(pathname);\n} //# sourceMappingURL=format-next-pathname-info.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvZm9ybWF0LW5leHQtcGF0aG5hbWUtaW5mby5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUE4RDtBQUNaO0FBQ0E7QUFDVDtBQUNsQyxTQUFTSSx1QkFBdUJDLElBQUk7SUFDdkMsSUFBSUMsV0FBV0gsc0RBQVNBLENBQUNFLEtBQUtDLFFBQVEsRUFBRUQsS0FBS0UsTUFBTSxFQUFFRixLQUFLRyxPQUFPLEdBQUdDLFlBQVlKLEtBQUtLLGFBQWEsRUFBRUwsS0FBS00sWUFBWTtJQUNySCxJQUFJTixLQUFLRyxPQUFPLElBQUksQ0FBQ0gsS0FBS08sYUFBYSxFQUFFO1FBQ3JDTixXQUFXTiwyRUFBbUJBLENBQUNNO0lBQ25DO0lBQ0EsSUFBSUQsS0FBS0csT0FBTyxFQUFFO1FBQ2RGLFdBQVdKLCtEQUFhQSxDQUFDRCwrREFBYUEsQ0FBQ0ssVUFBVSxpQkFBaUJELEtBQUtHLE9BQU8sR0FBR0gsS0FBS0MsUUFBUSxLQUFLLE1BQU0sZUFBZTtJQUM1SDtJQUNBQSxXQUFXTCwrREFBYUEsQ0FBQ0ssVUFBVUQsS0FBS1EsUUFBUTtJQUNoRCxPQUFPLENBQUNSLEtBQUtHLE9BQU8sSUFBSUgsS0FBS08sYUFBYSxHQUFHLENBQUNOLFNBQVNRLFFBQVEsQ0FBQyxPQUFPWiwrREFBYUEsQ0FBQ0ksVUFBVSxPQUFPQSxXQUFXTiwyRUFBbUJBLENBQUNNO0FBQ3pJLEVBRUEscURBQXFEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL2Zvcm1hdC1uZXh0LXBhdGhuYW1lLWluZm8uanM/NTQ3YiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyByZW1vdmVUcmFpbGluZ1NsYXNoIH0gZnJvbSBcIi4vcmVtb3ZlLXRyYWlsaW5nLXNsYXNoXCI7XG5pbXBvcnQgeyBhZGRQYXRoUHJlZml4IH0gZnJvbSBcIi4vYWRkLXBhdGgtcHJlZml4XCI7XG5pbXBvcnQgeyBhZGRQYXRoU3VmZml4IH0gZnJvbSBcIi4vYWRkLXBhdGgtc3VmZml4XCI7XG5pbXBvcnQgeyBhZGRMb2NhbGUgfSBmcm9tIFwiLi9hZGQtbG9jYWxlXCI7XG5leHBvcnQgZnVuY3Rpb24gZm9ybWF0TmV4dFBhdGhuYW1lSW5mbyhpbmZvKSB7XG4gICAgbGV0IHBhdGhuYW1lID0gYWRkTG9jYWxlKGluZm8ucGF0aG5hbWUsIGluZm8ubG9jYWxlLCBpbmZvLmJ1aWxkSWQgPyB1bmRlZmluZWQgOiBpbmZvLmRlZmF1bHRMb2NhbGUsIGluZm8uaWdub3JlUHJlZml4KTtcbiAgICBpZiAoaW5mby5idWlsZElkIHx8ICFpbmZvLnRyYWlsaW5nU2xhc2gpIHtcbiAgICAgICAgcGF0aG5hbWUgPSByZW1vdmVUcmFpbGluZ1NsYXNoKHBhdGhuYW1lKTtcbiAgICB9XG4gICAgaWYgKGluZm8uYnVpbGRJZCkge1xuICAgICAgICBwYXRobmFtZSA9IGFkZFBhdGhTdWZmaXgoYWRkUGF0aFByZWZpeChwYXRobmFtZSwgXCIvX25leHQvZGF0YS9cIiArIGluZm8uYnVpbGRJZCksIGluZm8ucGF0aG5hbWUgPT09IFwiL1wiID8gXCJpbmRleC5qc29uXCIgOiBcIi5qc29uXCIpO1xuICAgIH1cbiAgICBwYXRobmFtZSA9IGFkZFBhdGhQcmVmaXgocGF0aG5hbWUsIGluZm8uYmFzZVBhdGgpO1xuICAgIHJldHVybiAhaW5mby5idWlsZElkICYmIGluZm8udHJhaWxpbmdTbGFzaCA/ICFwYXRobmFtZS5lbmRzV2l0aChcIi9cIikgPyBhZGRQYXRoU3VmZml4KHBhdGhuYW1lLCBcIi9cIikgOiBwYXRobmFtZSA6IHJlbW92ZVRyYWlsaW5nU2xhc2gocGF0aG5hbWUpO1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1mb3JtYXQtbmV4dC1wYXRobmFtZS1pbmZvLmpzLm1hcCJdLCJuYW1lcyI6WyJyZW1vdmVUcmFpbGluZ1NsYXNoIiwiYWRkUGF0aFByZWZpeCIsImFkZFBhdGhTdWZmaXgiLCJhZGRMb2NhbGUiLCJmb3JtYXROZXh0UGF0aG5hbWVJbmZvIiwiaW5mbyIsInBhdGhuYW1lIiwibG9jYWxlIiwiYnVpbGRJZCIsInVuZGVmaW5lZCIsImRlZmF1bHRMb2NhbGUiLCJpZ25vcmVQcmVmaXgiLCJ0cmFpbGluZ1NsYXNoIiwiYmFzZVBhdGgiLCJlbmRzV2l0aCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/format-next-pathname-info.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/get-next-pathname-info.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/router/utils/get-next-pathname-info.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getNextPathnameInfo: () => (/* binding */ getNextPathnameInfo)\n/* harmony export */ });\n/* harmony import */ var _i18n_normalize_locale_path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../i18n/normalize-locale-path */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/i18n/normalize-locale-path.js\");\n/* harmony import */ var _remove_path_prefix__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./remove-path-prefix */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/remove-path-prefix.js\");\n/* harmony import */ var _path_has_prefix__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./path-has-prefix */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/path-has-prefix.js\");\n\n\n\nfunction getNextPathnameInfo(pathname, options) {\n    var _options_nextConfig;\n    const { basePath, i18n, trailingSlash } = (_options_nextConfig = options.nextConfig) != null ? _options_nextConfig : {};\n    const info = {\n        pathname,\n        trailingSlash: pathname !== \"/\" ? pathname.endsWith(\"/\") : trailingSlash\n    };\n    if (basePath && (0,_path_has_prefix__WEBPACK_IMPORTED_MODULE_2__.pathHasPrefix)(info.pathname, basePath)) {\n        info.pathname = (0,_remove_path_prefix__WEBPACK_IMPORTED_MODULE_1__.removePathPrefix)(info.pathname, basePath);\n        info.basePath = basePath;\n    }\n    let pathnameNoDataPrefix = info.pathname;\n    if (info.pathname.startsWith(\"/_next/data/\") && info.pathname.endsWith(\".json\")) {\n        const paths = info.pathname.replace(/^\\/_next\\/data\\//, \"\").replace(/\\.json$/, \"\").split(\"/\");\n        const buildId = paths[0];\n        info.buildId = buildId;\n        pathnameNoDataPrefix = paths[1] !== \"index\" ? \"/\" + paths.slice(1).join(\"/\") : \"/\";\n        // update pathname with normalized if enabled although\n        // we use normalized to populate locale info still\n        if (options.parseData === true) {\n            info.pathname = pathnameNoDataPrefix;\n        }\n    }\n    // If provided, use the locale route normalizer to detect the locale instead\n    // of the function below.\n    if (i18n) {\n        let result = options.i18nProvider ? options.i18nProvider.analyze(info.pathname) : (0,_i18n_normalize_locale_path__WEBPACK_IMPORTED_MODULE_0__.normalizeLocalePath)(info.pathname, i18n.locales);\n        info.locale = result.detectedLocale;\n        var _result_pathname;\n        info.pathname = (_result_pathname = result.pathname) != null ? _result_pathname : info.pathname;\n        if (!result.detectedLocale && info.buildId) {\n            result = options.i18nProvider ? options.i18nProvider.analyze(pathnameNoDataPrefix) : (0,_i18n_normalize_locale_path__WEBPACK_IMPORTED_MODULE_0__.normalizeLocalePath)(pathnameNoDataPrefix, i18n.locales);\n            if (result.detectedLocale) {\n                info.locale = result.detectedLocale;\n            }\n        }\n    }\n    return info;\n} //# sourceMappingURL=get-next-pathname-info.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvZ2V0LW5leHQtcGF0aG5hbWUtaW5mby5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQXVFO0FBQ2Y7QUFDTjtBQUMzQyxTQUFTRyxvQkFBb0JDLFFBQVEsRUFBRUMsT0FBTztJQUNqRCxJQUFJQztJQUNKLE1BQU0sRUFBRUMsUUFBUSxFQUFFQyxJQUFJLEVBQUVDLGFBQWEsRUFBRSxHQUFHLENBQUNILHNCQUFzQkQsUUFBUUssVUFBVSxLQUFLLE9BQU9KLHNCQUFzQixDQUFDO0lBQ3RILE1BQU1LLE9BQU87UUFDVFA7UUFDQUssZUFBZUwsYUFBYSxNQUFNQSxTQUFTUSxRQUFRLENBQUMsT0FBT0g7SUFDL0Q7SUFDQSxJQUFJRixZQUFZTCwrREFBYUEsQ0FBQ1MsS0FBS1AsUUFBUSxFQUFFRyxXQUFXO1FBQ3BESSxLQUFLUCxRQUFRLEdBQUdILHFFQUFnQkEsQ0FBQ1UsS0FBS1AsUUFBUSxFQUFFRztRQUNoREksS0FBS0osUUFBUSxHQUFHQTtJQUNwQjtJQUNBLElBQUlNLHVCQUF1QkYsS0FBS1AsUUFBUTtJQUN4QyxJQUFJTyxLQUFLUCxRQUFRLENBQUNVLFVBQVUsQ0FBQyxtQkFBbUJILEtBQUtQLFFBQVEsQ0FBQ1EsUUFBUSxDQUFDLFVBQVU7UUFDN0UsTUFBTUcsUUFBUUosS0FBS1AsUUFBUSxDQUFDWSxPQUFPLENBQUMsb0JBQW9CLElBQUlBLE9BQU8sQ0FBQyxXQUFXLElBQUlDLEtBQUssQ0FBQztRQUN6RixNQUFNQyxVQUFVSCxLQUFLLENBQUMsRUFBRTtRQUN4QkosS0FBS08sT0FBTyxHQUFHQTtRQUNmTCx1QkFBdUJFLEtBQUssQ0FBQyxFQUFFLEtBQUssVUFBVSxNQUFNQSxNQUFNSSxLQUFLLENBQUMsR0FBR0MsSUFBSSxDQUFDLE9BQU87UUFDL0Usc0RBQXNEO1FBQ3RELGtEQUFrRDtRQUNsRCxJQUFJZixRQUFRZ0IsU0FBUyxLQUFLLE1BQU07WUFDNUJWLEtBQUtQLFFBQVEsR0FBR1M7UUFDcEI7SUFDSjtJQUNBLDRFQUE0RTtJQUM1RSx5QkFBeUI7SUFDekIsSUFBSUwsTUFBTTtRQUNOLElBQUljLFNBQVNqQixRQUFRa0IsWUFBWSxHQUFHbEIsUUFBUWtCLFlBQVksQ0FBQ0MsT0FBTyxDQUFDYixLQUFLUCxRQUFRLElBQUlKLGdGQUFtQkEsQ0FBQ1csS0FBS1AsUUFBUSxFQUFFSSxLQUFLaUIsT0FBTztRQUNqSWQsS0FBS2UsTUFBTSxHQUFHSixPQUFPSyxjQUFjO1FBQ25DLElBQUlDO1FBQ0pqQixLQUFLUCxRQUFRLEdBQUcsQ0FBQ3dCLG1CQUFtQk4sT0FBT2xCLFFBQVEsS0FBSyxPQUFPd0IsbUJBQW1CakIsS0FBS1AsUUFBUTtRQUMvRixJQUFJLENBQUNrQixPQUFPSyxjQUFjLElBQUloQixLQUFLTyxPQUFPLEVBQUU7WUFDeENJLFNBQVNqQixRQUFRa0IsWUFBWSxHQUFHbEIsUUFBUWtCLFlBQVksQ0FBQ0MsT0FBTyxDQUFDWCx3QkFBd0JiLGdGQUFtQkEsQ0FBQ2Esc0JBQXNCTCxLQUFLaUIsT0FBTztZQUMzSSxJQUFJSCxPQUFPSyxjQUFjLEVBQUU7Z0JBQ3ZCaEIsS0FBS2UsTUFBTSxHQUFHSixPQUFPSyxjQUFjO1lBQ3ZDO1FBQ0o7SUFDSjtJQUNBLE9BQU9oQjtBQUNYLEVBRUEsa0RBQWtEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL2dldC1uZXh0LXBhdGhuYW1lLWluZm8uanM/MTQ1MCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBub3JtYWxpemVMb2NhbGVQYXRoIH0gZnJvbSBcIi4uLy4uL2kxOG4vbm9ybWFsaXplLWxvY2FsZS1wYXRoXCI7XG5pbXBvcnQgeyByZW1vdmVQYXRoUHJlZml4IH0gZnJvbSBcIi4vcmVtb3ZlLXBhdGgtcHJlZml4XCI7XG5pbXBvcnQgeyBwYXRoSGFzUHJlZml4IH0gZnJvbSBcIi4vcGF0aC1oYXMtcHJlZml4XCI7XG5leHBvcnQgZnVuY3Rpb24gZ2V0TmV4dFBhdGhuYW1lSW5mbyhwYXRobmFtZSwgb3B0aW9ucykge1xuICAgIHZhciBfb3B0aW9uc19uZXh0Q29uZmlnO1xuICAgIGNvbnN0IHsgYmFzZVBhdGgsIGkxOG4sIHRyYWlsaW5nU2xhc2ggfSA9IChfb3B0aW9uc19uZXh0Q29uZmlnID0gb3B0aW9ucy5uZXh0Q29uZmlnKSAhPSBudWxsID8gX29wdGlvbnNfbmV4dENvbmZpZyA6IHt9O1xuICAgIGNvbnN0IGluZm8gPSB7XG4gICAgICAgIHBhdGhuYW1lLFxuICAgICAgICB0cmFpbGluZ1NsYXNoOiBwYXRobmFtZSAhPT0gXCIvXCIgPyBwYXRobmFtZS5lbmRzV2l0aChcIi9cIikgOiB0cmFpbGluZ1NsYXNoXG4gICAgfTtcbiAgICBpZiAoYmFzZVBhdGggJiYgcGF0aEhhc1ByZWZpeChpbmZvLnBhdGhuYW1lLCBiYXNlUGF0aCkpIHtcbiAgICAgICAgaW5mby5wYXRobmFtZSA9IHJlbW92ZVBhdGhQcmVmaXgoaW5mby5wYXRobmFtZSwgYmFzZVBhdGgpO1xuICAgICAgICBpbmZvLmJhc2VQYXRoID0gYmFzZVBhdGg7XG4gICAgfVxuICAgIGxldCBwYXRobmFtZU5vRGF0YVByZWZpeCA9IGluZm8ucGF0aG5hbWU7XG4gICAgaWYgKGluZm8ucGF0aG5hbWUuc3RhcnRzV2l0aChcIi9fbmV4dC9kYXRhL1wiKSAmJiBpbmZvLnBhdGhuYW1lLmVuZHNXaXRoKFwiLmpzb25cIikpIHtcbiAgICAgICAgY29uc3QgcGF0aHMgPSBpbmZvLnBhdGhuYW1lLnJlcGxhY2UoL15cXC9fbmV4dFxcL2RhdGFcXC8vLCBcIlwiKS5yZXBsYWNlKC9cXC5qc29uJC8sIFwiXCIpLnNwbGl0KFwiL1wiKTtcbiAgICAgICAgY29uc3QgYnVpbGRJZCA9IHBhdGhzWzBdO1xuICAgICAgICBpbmZvLmJ1aWxkSWQgPSBidWlsZElkO1xuICAgICAgICBwYXRobmFtZU5vRGF0YVByZWZpeCA9IHBhdGhzWzFdICE9PSBcImluZGV4XCIgPyBcIi9cIiArIHBhdGhzLnNsaWNlKDEpLmpvaW4oXCIvXCIpIDogXCIvXCI7XG4gICAgICAgIC8vIHVwZGF0ZSBwYXRobmFtZSB3aXRoIG5vcm1hbGl6ZWQgaWYgZW5hYmxlZCBhbHRob3VnaFxuICAgICAgICAvLyB3ZSB1c2Ugbm9ybWFsaXplZCB0byBwb3B1bGF0ZSBsb2NhbGUgaW5mbyBzdGlsbFxuICAgICAgICBpZiAob3B0aW9ucy5wYXJzZURhdGEgPT09IHRydWUpIHtcbiAgICAgICAgICAgIGluZm8ucGF0aG5hbWUgPSBwYXRobmFtZU5vRGF0YVByZWZpeDtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvLyBJZiBwcm92aWRlZCwgdXNlIHRoZSBsb2NhbGUgcm91dGUgbm9ybWFsaXplciB0byBkZXRlY3QgdGhlIGxvY2FsZSBpbnN0ZWFkXG4gICAgLy8gb2YgdGhlIGZ1bmN0aW9uIGJlbG93LlxuICAgIGlmIChpMThuKSB7XG4gICAgICAgIGxldCByZXN1bHQgPSBvcHRpb25zLmkxOG5Qcm92aWRlciA/IG9wdGlvbnMuaTE4blByb3ZpZGVyLmFuYWx5emUoaW5mby5wYXRobmFtZSkgOiBub3JtYWxpemVMb2NhbGVQYXRoKGluZm8ucGF0aG5hbWUsIGkxOG4ubG9jYWxlcyk7XG4gICAgICAgIGluZm8ubG9jYWxlID0gcmVzdWx0LmRldGVjdGVkTG9jYWxlO1xuICAgICAgICB2YXIgX3Jlc3VsdF9wYXRobmFtZTtcbiAgICAgICAgaW5mby5wYXRobmFtZSA9IChfcmVzdWx0X3BhdGhuYW1lID0gcmVzdWx0LnBhdGhuYW1lKSAhPSBudWxsID8gX3Jlc3VsdF9wYXRobmFtZSA6IGluZm8ucGF0aG5hbWU7XG4gICAgICAgIGlmICghcmVzdWx0LmRldGVjdGVkTG9jYWxlICYmIGluZm8uYnVpbGRJZCkge1xuICAgICAgICAgICAgcmVzdWx0ID0gb3B0aW9ucy5pMThuUHJvdmlkZXIgPyBvcHRpb25zLmkxOG5Qcm92aWRlci5hbmFseXplKHBhdGhuYW1lTm9EYXRhUHJlZml4KSA6IG5vcm1hbGl6ZUxvY2FsZVBhdGgocGF0aG5hbWVOb0RhdGFQcmVmaXgsIGkxOG4ubG9jYWxlcyk7XG4gICAgICAgICAgICBpZiAocmVzdWx0LmRldGVjdGVkTG9jYWxlKSB7XG4gICAgICAgICAgICAgICAgaW5mby5sb2NhbGUgPSByZXN1bHQuZGV0ZWN0ZWRMb2NhbGU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGluZm87XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldC1uZXh0LXBhdGhuYW1lLWluZm8uanMubWFwIl0sIm5hbWVzIjpbIm5vcm1hbGl6ZUxvY2FsZVBhdGgiLCJyZW1vdmVQYXRoUHJlZml4IiwicGF0aEhhc1ByZWZpeCIsImdldE5leHRQYXRobmFtZUluZm8iLCJwYXRobmFtZSIsIm9wdGlvbnMiLCJfb3B0aW9uc19uZXh0Q29uZmlnIiwiYmFzZVBhdGgiLCJpMThuIiwidHJhaWxpbmdTbGFzaCIsIm5leHRDb25maWciLCJpbmZvIiwiZW5kc1dpdGgiLCJwYXRobmFtZU5vRGF0YVByZWZpeCIsInN0YXJ0c1dpdGgiLCJwYXRocyIsInJlcGxhY2UiLCJzcGxpdCIsImJ1aWxkSWQiLCJzbGljZSIsImpvaW4iLCJwYXJzZURhdGEiLCJyZXN1bHQiLCJpMThuUHJvdmlkZXIiLCJhbmFseXplIiwibG9jYWxlcyIsImxvY2FsZSIsImRldGVjdGVkTG9jYWxlIiwiX3Jlc3VsdF9wYXRobmFtZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/get-next-pathname-info.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/router/utils/index.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getSortedRoutes: () => (/* reexport safe */ _sorted_routes__WEBPACK_IMPORTED_MODULE_0__.getSortedRoutes),\n/* harmony export */   isDynamicRoute: () => (/* reexport safe */ _is_dynamic__WEBPACK_IMPORTED_MODULE_1__.isDynamicRoute)\n/* harmony export */ });\n/* harmony import */ var _sorted_routes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sorted-routes */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/sorted-routes.js\");\n/* harmony import */ var _is_dynamic__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./is-dynamic */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/is-dynamic.js\");\n\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFrRDtBQUNKLENBRTlDLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9zaGFyZWQvbGliL3JvdXRlci91dGlscy9pbmRleC5qcz9lMzlkIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7IGdldFNvcnRlZFJvdXRlcyB9IGZyb20gXCIuL3NvcnRlZC1yb3V0ZXNcIjtcbmV4cG9ydCB7IGlzRHluYW1pY1JvdXRlIH0gZnJvbSBcIi4vaXMtZHluYW1pY1wiO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOlsiZ2V0U29ydGVkUm91dGVzIiwiaXNEeW5hbWljUm91dGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/is-dynamic.js":
/*!**************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/router/utils/is-dynamic.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isDynamicRoute: () => (/* binding */ isDynamicRoute)\n/* harmony export */ });\n// Identify /[param]/ in route string\nconst TEST_ROUTE = /\\/\\[[^/]+?\\](?=\\/|$)/;\nfunction isDynamicRoute(route) {\n    return TEST_ROUTE.test(route);\n} //# sourceMappingURL=is-dynamic.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvaXMtZHluYW1pYy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEscUNBQXFDO0FBQ3JDLE1BQU1BLGFBQWE7QUFDWixTQUFTQyxlQUFlQyxLQUFLO0lBQ2hDLE9BQU9GLFdBQVdHLElBQUksQ0FBQ0Q7QUFDM0IsRUFFQSxzQ0FBc0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvaXMtZHluYW1pYy5qcz9kNTY2Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIElkZW50aWZ5IC9bcGFyYW1dLyBpbiByb3V0ZSBzdHJpbmdcbmNvbnN0IFRFU1RfUk9VVEUgPSAvXFwvXFxbW14vXSs/XFxdKD89XFwvfCQpLztcbmV4cG9ydCBmdW5jdGlvbiBpc0R5bmFtaWNSb3V0ZShyb3V0ZSkge1xuICAgIHJldHVybiBURVNUX1JPVVRFLnRlc3Qocm91dGUpO1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1pcy1keW5hbWljLmpzLm1hcCJdLCJuYW1lcyI6WyJURVNUX1JPVVRFIiwiaXNEeW5hbWljUm91dGUiLCJyb3V0ZSIsInRlc3QiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/is-dynamic.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/parse-path.js":
/*!**************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/router/utils/parse-path.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parsePath: () => (/* binding */ parsePath)\n/* harmony export */ });\n/**\n * Given a path this function will find the pathname, query and hash and return\n * them. This is useful to parse full paths on the client side.\n * @param path A path to parse e.g. /foo/bar?id=1#hash\n */ function parsePath(path) {\n    const hashIndex = path.indexOf(\"#\");\n    const queryIndex = path.indexOf(\"?\");\n    const hasQuery = queryIndex > -1 && (hashIndex < 0 || queryIndex < hashIndex);\n    if (hasQuery || hashIndex > -1) {\n        return {\n            pathname: path.substring(0, hasQuery ? queryIndex : hashIndex),\n            query: hasQuery ? path.substring(queryIndex, hashIndex > -1 ? hashIndex : undefined) : \"\",\n            hash: hashIndex > -1 ? path.slice(hashIndex) : \"\"\n        };\n    }\n    return {\n        pathname: path,\n        query: \"\",\n        hash: \"\"\n    };\n} //# sourceMappingURL=parse-path.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvcGFyc2UtcGF0aC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7Ozs7Q0FJQyxHQUFVLFNBQVNBLFVBQVVDLElBQUk7SUFDOUIsTUFBTUMsWUFBWUQsS0FBS0UsT0FBTyxDQUFDO0lBQy9CLE1BQU1DLGFBQWFILEtBQUtFLE9BQU8sQ0FBQztJQUNoQyxNQUFNRSxXQUFXRCxhQUFhLENBQUMsS0FBTUYsQ0FBQUEsWUFBWSxLQUFLRSxhQUFhRixTQUFRO0lBQzNFLElBQUlHLFlBQVlILFlBQVksQ0FBQyxHQUFHO1FBQzVCLE9BQU87WUFDSEksVUFBVUwsS0FBS00sU0FBUyxDQUFDLEdBQUdGLFdBQVdELGFBQWFGO1lBQ3BETSxPQUFPSCxXQUFXSixLQUFLTSxTQUFTLENBQUNILFlBQVlGLFlBQVksQ0FBQyxJQUFJQSxZQUFZTyxhQUFhO1lBQ3ZGQyxNQUFNUixZQUFZLENBQUMsSUFBSUQsS0FBS1UsS0FBSyxDQUFDVCxhQUFhO1FBQ25EO0lBQ0o7SUFDQSxPQUFPO1FBQ0hJLFVBQVVMO1FBQ1ZPLE9BQU87UUFDUEUsTUFBTTtJQUNWO0FBQ0osRUFFQSxzQ0FBc0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvcGFyc2UtcGF0aC5qcz9iM2M0Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogR2l2ZW4gYSBwYXRoIHRoaXMgZnVuY3Rpb24gd2lsbCBmaW5kIHRoZSBwYXRobmFtZSwgcXVlcnkgYW5kIGhhc2ggYW5kIHJldHVyblxuICogdGhlbS4gVGhpcyBpcyB1c2VmdWwgdG8gcGFyc2UgZnVsbCBwYXRocyBvbiB0aGUgY2xpZW50IHNpZGUuXG4gKiBAcGFyYW0gcGF0aCBBIHBhdGggdG8gcGFyc2UgZS5nLiAvZm9vL2Jhcj9pZD0xI2hhc2hcbiAqLyBleHBvcnQgZnVuY3Rpb24gcGFyc2VQYXRoKHBhdGgpIHtcbiAgICBjb25zdCBoYXNoSW5kZXggPSBwYXRoLmluZGV4T2YoXCIjXCIpO1xuICAgIGNvbnN0IHF1ZXJ5SW5kZXggPSBwYXRoLmluZGV4T2YoXCI/XCIpO1xuICAgIGNvbnN0IGhhc1F1ZXJ5ID0gcXVlcnlJbmRleCA+IC0xICYmIChoYXNoSW5kZXggPCAwIHx8IHF1ZXJ5SW5kZXggPCBoYXNoSW5kZXgpO1xuICAgIGlmIChoYXNRdWVyeSB8fCBoYXNoSW5kZXggPiAtMSkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgcGF0aG5hbWU6IHBhdGguc3Vic3RyaW5nKDAsIGhhc1F1ZXJ5ID8gcXVlcnlJbmRleCA6IGhhc2hJbmRleCksXG4gICAgICAgICAgICBxdWVyeTogaGFzUXVlcnkgPyBwYXRoLnN1YnN0cmluZyhxdWVyeUluZGV4LCBoYXNoSW5kZXggPiAtMSA/IGhhc2hJbmRleCA6IHVuZGVmaW5lZCkgOiBcIlwiLFxuICAgICAgICAgICAgaGFzaDogaGFzaEluZGV4ID4gLTEgPyBwYXRoLnNsaWNlKGhhc2hJbmRleCkgOiBcIlwiXG4gICAgICAgIH07XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIHBhdGhuYW1lOiBwYXRoLFxuICAgICAgICBxdWVyeTogXCJcIixcbiAgICAgICAgaGFzaDogXCJcIlxuICAgIH07XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhcnNlLXBhdGguanMubWFwIl0sIm5hbWVzIjpbInBhcnNlUGF0aCIsInBhdGgiLCJoYXNoSW5kZXgiLCJpbmRleE9mIiwicXVlcnlJbmRleCIsImhhc1F1ZXJ5IiwicGF0aG5hbWUiLCJzdWJzdHJpbmciLCJxdWVyeSIsInVuZGVmaW5lZCIsImhhc2giLCJzbGljZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/parse-path.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/path-has-prefix.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/router/utils/path-has-prefix.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   pathHasPrefix: () => (/* binding */ pathHasPrefix)\n/* harmony export */ });\n/* harmony import */ var _parse_path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parse-path */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/parse-path.js\");\n\n/**\n * Checks if a given path starts with a given prefix. It ensures it matches\n * exactly without containing extra chars. e.g. prefix /docs should replace\n * for /docs, /docs/, /docs/a but not /docsss\n * @param path The path to check.\n * @param prefix The prefix to check against.\n */ function pathHasPrefix(path, prefix) {\n    if (typeof path !== \"string\") {\n        return false;\n    }\n    const { pathname } = (0,_parse_path__WEBPACK_IMPORTED_MODULE_0__.parsePath)(path);\n    return pathname === prefix || pathname.startsWith(prefix + \"/\");\n} //# sourceMappingURL=path-has-prefix.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvcGF0aC1oYXMtcHJlZml4LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXlDO0FBQ3pDOzs7Ozs7Q0FNQyxHQUFVLFNBQVNDLGNBQWNDLElBQUksRUFBRUMsTUFBTTtJQUMxQyxJQUFJLE9BQU9ELFNBQVMsVUFBVTtRQUMxQixPQUFPO0lBQ1g7SUFDQSxNQUFNLEVBQUVFLFFBQVEsRUFBRSxHQUFHSixzREFBU0EsQ0FBQ0U7SUFDL0IsT0FBT0UsYUFBYUQsVUFBVUMsU0FBU0MsVUFBVSxDQUFDRixTQUFTO0FBQy9ELEVBRUEsMkNBQTJDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL3BhdGgtaGFzLXByZWZpeC5qcz82NGJlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHBhcnNlUGF0aCB9IGZyb20gXCIuL3BhcnNlLXBhdGhcIjtcbi8qKlxuICogQ2hlY2tzIGlmIGEgZ2l2ZW4gcGF0aCBzdGFydHMgd2l0aCBhIGdpdmVuIHByZWZpeC4gSXQgZW5zdXJlcyBpdCBtYXRjaGVzXG4gKiBleGFjdGx5IHdpdGhvdXQgY29udGFpbmluZyBleHRyYSBjaGFycy4gZS5nLiBwcmVmaXggL2RvY3Mgc2hvdWxkIHJlcGxhY2VcbiAqIGZvciAvZG9jcywgL2RvY3MvLCAvZG9jcy9hIGJ1dCBub3QgL2RvY3Nzc1xuICogQHBhcmFtIHBhdGggVGhlIHBhdGggdG8gY2hlY2suXG4gKiBAcGFyYW0gcHJlZml4IFRoZSBwcmVmaXggdG8gY2hlY2sgYWdhaW5zdC5cbiAqLyBleHBvcnQgZnVuY3Rpb24gcGF0aEhhc1ByZWZpeChwYXRoLCBwcmVmaXgpIHtcbiAgICBpZiAodHlwZW9mIHBhdGggIT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBjb25zdCB7IHBhdGhuYW1lIH0gPSBwYXJzZVBhdGgocGF0aCk7XG4gICAgcmV0dXJuIHBhdGhuYW1lID09PSBwcmVmaXggfHwgcGF0aG5hbWUuc3RhcnRzV2l0aChwcmVmaXggKyBcIi9cIik7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhdGgtaGFzLXByZWZpeC5qcy5tYXAiXSwibmFtZXMiOlsicGFyc2VQYXRoIiwicGF0aEhhc1ByZWZpeCIsInBhdGgiLCJwcmVmaXgiLCJwYXRobmFtZSIsInN0YXJ0c1dpdGgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/path-has-prefix.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/relativize-url.js":
/*!******************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/router/utils/relativize-url.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   relativizeURL: () => (/* binding */ relativizeURL)\n/* harmony export */ });\n/**\n * Given a URL as a string and a base URL it will make the URL relative\n * if the parsed protocol and host is the same as the one in the base\n * URL. Otherwise it returns the same URL string.\n */ function relativizeURL(url, base) {\n    const baseURL = typeof base === \"string\" ? new URL(base) : base;\n    const relative = new URL(url, base);\n    const origin = baseURL.protocol + \"//\" + baseURL.host;\n    return relative.protocol + \"//\" + relative.host === origin ? relative.toString().replace(origin, \"\") : relative.toString();\n} //# sourceMappingURL=relativize-url.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvcmVsYXRpdml6ZS11cmwuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBOzs7O0NBSUMsR0FBVSxTQUFTQSxjQUFjQyxHQUFHLEVBQUVDLElBQUk7SUFDdkMsTUFBTUMsVUFBVSxPQUFPRCxTQUFTLFdBQVcsSUFBSUUsSUFBSUYsUUFBUUE7SUFDM0QsTUFBTUcsV0FBVyxJQUFJRCxJQUFJSCxLQUFLQztJQUM5QixNQUFNSSxTQUFTSCxRQUFRSSxRQUFRLEdBQUcsT0FBT0osUUFBUUssSUFBSTtJQUNyRCxPQUFPSCxTQUFTRSxRQUFRLEdBQUcsT0FBT0YsU0FBU0csSUFBSSxLQUFLRixTQUFTRCxTQUFTSSxRQUFRLEdBQUdDLE9BQU8sQ0FBQ0osUUFBUSxNQUFNRCxTQUFTSSxRQUFRO0FBQzVILEVBRUEsMENBQTBDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL3JlbGF0aXZpemUtdXJsLmpzPzczZDIiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBHaXZlbiBhIFVSTCBhcyBhIHN0cmluZyBhbmQgYSBiYXNlIFVSTCBpdCB3aWxsIG1ha2UgdGhlIFVSTCByZWxhdGl2ZVxuICogaWYgdGhlIHBhcnNlZCBwcm90b2NvbCBhbmQgaG9zdCBpcyB0aGUgc2FtZSBhcyB0aGUgb25lIGluIHRoZSBiYXNlXG4gKiBVUkwuIE90aGVyd2lzZSBpdCByZXR1cm5zIHRoZSBzYW1lIFVSTCBzdHJpbmcuXG4gKi8gZXhwb3J0IGZ1bmN0aW9uIHJlbGF0aXZpemVVUkwodXJsLCBiYXNlKSB7XG4gICAgY29uc3QgYmFzZVVSTCA9IHR5cGVvZiBiYXNlID09PSBcInN0cmluZ1wiID8gbmV3IFVSTChiYXNlKSA6IGJhc2U7XG4gICAgY29uc3QgcmVsYXRpdmUgPSBuZXcgVVJMKHVybCwgYmFzZSk7XG4gICAgY29uc3Qgb3JpZ2luID0gYmFzZVVSTC5wcm90b2NvbCArIFwiLy9cIiArIGJhc2VVUkwuaG9zdDtcbiAgICByZXR1cm4gcmVsYXRpdmUucHJvdG9jb2wgKyBcIi8vXCIgKyByZWxhdGl2ZS5ob3N0ID09PSBvcmlnaW4gPyByZWxhdGl2ZS50b1N0cmluZygpLnJlcGxhY2Uob3JpZ2luLCBcIlwiKSA6IHJlbGF0aXZlLnRvU3RyaW5nKCk7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlbGF0aXZpemUtdXJsLmpzLm1hcCJdLCJuYW1lcyI6WyJyZWxhdGl2aXplVVJMIiwidXJsIiwiYmFzZSIsImJhc2VVUkwiLCJVUkwiLCJyZWxhdGl2ZSIsIm9yaWdpbiIsInByb3RvY29sIiwiaG9zdCIsInRvU3RyaW5nIiwicmVwbGFjZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/relativize-url.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/remove-path-prefix.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/router/utils/remove-path-prefix.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   removePathPrefix: () => (/* binding */ removePathPrefix)\n/* harmony export */ });\n/* harmony import */ var _path_has_prefix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./path-has-prefix */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/path-has-prefix.js\");\n\n/**\n * Given a path and a prefix it will remove the prefix when it exists in the\n * given path. It ensures it matches exactly without containing extra chars\n * and if the prefix is not there it will be noop.\n *\n * @param path The path to remove the prefix from.\n * @param prefix The prefix to be removed.\n */ function removePathPrefix(path, prefix) {\n    // If the path doesn't start with the prefix we can return it as is. This\n    // protects us from situations where the prefix is a substring of the path\n    // prefix such as:\n    //\n    // For prefix: /blog\n    //\n    //   /blog -> true\n    //   /blog/ -> true\n    //   /blog/1 -> true\n    //   /blogging -> false\n    //   /blogging/ -> false\n    //   /blogging/1 -> false\n    if (!(0,_path_has_prefix__WEBPACK_IMPORTED_MODULE_0__.pathHasPrefix)(path, prefix)) {\n        return path;\n    }\n    // Remove the prefix from the path via slicing.\n    const withoutPrefix = path.slice(prefix.length);\n    // If the path without the prefix starts with a `/` we can return it as is.\n    if (withoutPrefix.startsWith(\"/\")) {\n        return withoutPrefix;\n    }\n    // If the path without the prefix doesn't start with a `/` we need to add it\n    // back to the path to make sure it's a valid path.\n    return \"/\" + withoutPrefix;\n} //# sourceMappingURL=remove-path-prefix.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvcmVtb3ZlLXBhdGgtcHJlZml4LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWtEO0FBQ2xEOzs7Ozs7O0NBT0MsR0FBVSxTQUFTQyxpQkFBaUJDLElBQUksRUFBRUMsTUFBTTtJQUM3Qyx5RUFBeUU7SUFDekUsMEVBQTBFO0lBQzFFLGtCQUFrQjtJQUNsQixFQUFFO0lBQ0Ysb0JBQW9CO0lBQ3BCLEVBQUU7SUFDRixrQkFBa0I7SUFDbEIsbUJBQW1CO0lBQ25CLG9CQUFvQjtJQUNwQix1QkFBdUI7SUFDdkIsd0JBQXdCO0lBQ3hCLHlCQUF5QjtJQUN6QixJQUFJLENBQUNILCtEQUFhQSxDQUFDRSxNQUFNQyxTQUFTO1FBQzlCLE9BQU9EO0lBQ1g7SUFDQSwrQ0FBK0M7SUFDL0MsTUFBTUUsZ0JBQWdCRixLQUFLRyxLQUFLLENBQUNGLE9BQU9HLE1BQU07SUFDOUMsMkVBQTJFO0lBQzNFLElBQUlGLGNBQWNHLFVBQVUsQ0FBQyxNQUFNO1FBQy9CLE9BQU9IO0lBQ1g7SUFDQSw0RUFBNEU7SUFDNUUsbURBQW1EO0lBQ25ELE9BQU8sTUFBTUE7QUFDakIsRUFFQSw4Q0FBOEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvcmVtb3ZlLXBhdGgtcHJlZml4LmpzPzExYTkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcGF0aEhhc1ByZWZpeCB9IGZyb20gXCIuL3BhdGgtaGFzLXByZWZpeFwiO1xuLyoqXG4gKiBHaXZlbiBhIHBhdGggYW5kIGEgcHJlZml4IGl0IHdpbGwgcmVtb3ZlIHRoZSBwcmVmaXggd2hlbiBpdCBleGlzdHMgaW4gdGhlXG4gKiBnaXZlbiBwYXRoLiBJdCBlbnN1cmVzIGl0IG1hdGNoZXMgZXhhY3RseSB3aXRob3V0IGNvbnRhaW5pbmcgZXh0cmEgY2hhcnNcbiAqIGFuZCBpZiB0aGUgcHJlZml4IGlzIG5vdCB0aGVyZSBpdCB3aWxsIGJlIG5vb3AuXG4gKlxuICogQHBhcmFtIHBhdGggVGhlIHBhdGggdG8gcmVtb3ZlIHRoZSBwcmVmaXggZnJvbS5cbiAqIEBwYXJhbSBwcmVmaXggVGhlIHByZWZpeCB0byBiZSByZW1vdmVkLlxuICovIGV4cG9ydCBmdW5jdGlvbiByZW1vdmVQYXRoUHJlZml4KHBhdGgsIHByZWZpeCkge1xuICAgIC8vIElmIHRoZSBwYXRoIGRvZXNuJ3Qgc3RhcnQgd2l0aCB0aGUgcHJlZml4IHdlIGNhbiByZXR1cm4gaXQgYXMgaXMuIFRoaXNcbiAgICAvLyBwcm90ZWN0cyB1cyBmcm9tIHNpdHVhdGlvbnMgd2hlcmUgdGhlIHByZWZpeCBpcyBhIHN1YnN0cmluZyBvZiB0aGUgcGF0aFxuICAgIC8vIHByZWZpeCBzdWNoIGFzOlxuICAgIC8vXG4gICAgLy8gRm9yIHByZWZpeDogL2Jsb2dcbiAgICAvL1xuICAgIC8vICAgL2Jsb2cgLT4gdHJ1ZVxuICAgIC8vICAgL2Jsb2cvIC0+IHRydWVcbiAgICAvLyAgIC9ibG9nLzEgLT4gdHJ1ZVxuICAgIC8vICAgL2Jsb2dnaW5nIC0+IGZhbHNlXG4gICAgLy8gICAvYmxvZ2dpbmcvIC0+IGZhbHNlXG4gICAgLy8gICAvYmxvZ2dpbmcvMSAtPiBmYWxzZVxuICAgIGlmICghcGF0aEhhc1ByZWZpeChwYXRoLCBwcmVmaXgpKSB7XG4gICAgICAgIHJldHVybiBwYXRoO1xuICAgIH1cbiAgICAvLyBSZW1vdmUgdGhlIHByZWZpeCBmcm9tIHRoZSBwYXRoIHZpYSBzbGljaW5nLlxuICAgIGNvbnN0IHdpdGhvdXRQcmVmaXggPSBwYXRoLnNsaWNlKHByZWZpeC5sZW5ndGgpO1xuICAgIC8vIElmIHRoZSBwYXRoIHdpdGhvdXQgdGhlIHByZWZpeCBzdGFydHMgd2l0aCBhIGAvYCB3ZSBjYW4gcmV0dXJuIGl0IGFzIGlzLlxuICAgIGlmICh3aXRob3V0UHJlZml4LnN0YXJ0c1dpdGgoXCIvXCIpKSB7XG4gICAgICAgIHJldHVybiB3aXRob3V0UHJlZml4O1xuICAgIH1cbiAgICAvLyBJZiB0aGUgcGF0aCB3aXRob3V0IHRoZSBwcmVmaXggZG9lc24ndCBzdGFydCB3aXRoIGEgYC9gIHdlIG5lZWQgdG8gYWRkIGl0XG4gICAgLy8gYmFjayB0byB0aGUgcGF0aCB0byBtYWtlIHN1cmUgaXQncyBhIHZhbGlkIHBhdGguXG4gICAgcmV0dXJuIFwiL1wiICsgd2l0aG91dFByZWZpeDtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVtb3ZlLXBhdGgtcHJlZml4LmpzLm1hcCJdLCJuYW1lcyI6WyJwYXRoSGFzUHJlZml4IiwicmVtb3ZlUGF0aFByZWZpeCIsInBhdGgiLCJwcmVmaXgiLCJ3aXRob3V0UHJlZml4Iiwic2xpY2UiLCJsZW5ndGgiLCJzdGFydHNXaXRoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/remove-path-prefix.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/remove-trailing-slash.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/router/utils/remove-trailing-slash.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   removeTrailingSlash: () => (/* binding */ removeTrailingSlash)\n/* harmony export */ });\n/**\n * Removes the trailing slash for a given route or page path. Preserves the\n * root page. Examples:\n *   - `/foo/bar/` -> `/foo/bar`\n *   - `/foo/bar` -> `/foo/bar`\n *   - `/` -> `/`\n */ function removeTrailingSlash(route) {\n    return route.replace(/\\/$/, \"\") || \"/\";\n} //# sourceMappingURL=remove-trailing-slash.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvcmVtb3ZlLXRyYWlsaW5nLXNsYXNoLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7Ozs7O0NBTUMsR0FBVSxTQUFTQSxvQkFBb0JDLEtBQUs7SUFDekMsT0FBT0EsTUFBTUMsT0FBTyxDQUFDLE9BQU8sT0FBTztBQUN2QyxFQUVBLGlEQUFpRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9zaGFyZWQvbGliL3JvdXRlci91dGlscy9yZW1vdmUtdHJhaWxpbmctc2xhc2guanM/ODJmNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFJlbW92ZXMgdGhlIHRyYWlsaW5nIHNsYXNoIGZvciBhIGdpdmVuIHJvdXRlIG9yIHBhZ2UgcGF0aC4gUHJlc2VydmVzIHRoZVxuICogcm9vdCBwYWdlLiBFeGFtcGxlczpcbiAqICAgLSBgL2Zvby9iYXIvYCAtPiBgL2Zvby9iYXJgXG4gKiAgIC0gYC9mb28vYmFyYCAtPiBgL2Zvby9iYXJgXG4gKiAgIC0gYC9gIC0+IGAvYFxuICovIGV4cG9ydCBmdW5jdGlvbiByZW1vdmVUcmFpbGluZ1NsYXNoKHJvdXRlKSB7XG4gICAgcmV0dXJuIHJvdXRlLnJlcGxhY2UoL1xcLyQvLCBcIlwiKSB8fCBcIi9cIjtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVtb3ZlLXRyYWlsaW5nLXNsYXNoLmpzLm1hcCJdLCJuYW1lcyI6WyJyZW1vdmVUcmFpbGluZ1NsYXNoIiwicm91dGUiLCJyZXBsYWNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/remove-trailing-slash.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/sorted-routes.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/router/utils/sorted-routes.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getSortedRoutes: () => (/* binding */ getSortedRoutes)\n/* harmony export */ });\nclass UrlNode {\n    insert(urlPath) {\n        this._insert(urlPath.split(\"/\").filter(Boolean), [], false);\n    }\n    smoosh() {\n        return this._smoosh();\n    }\n    _smoosh(prefix) {\n        if (prefix === void 0) prefix = \"/\";\n        const childrenPaths = [\n            ...this.children.keys()\n        ].sort();\n        if (this.slugName !== null) {\n            childrenPaths.splice(childrenPaths.indexOf(\"[]\"), 1);\n        }\n        if (this.restSlugName !== null) {\n            childrenPaths.splice(childrenPaths.indexOf(\"[...]\"), 1);\n        }\n        if (this.optionalRestSlugName !== null) {\n            childrenPaths.splice(childrenPaths.indexOf(\"[[...]]\"), 1);\n        }\n        const routes = childrenPaths.map((c)=>this.children.get(c)._smoosh(\"\" + prefix + c + \"/\")).reduce((prev, curr)=>[\n                ...prev,\n                ...curr\n            ], []);\n        if (this.slugName !== null) {\n            routes.push(...this.children.get(\"[]\")._smoosh(prefix + \"[\" + this.slugName + \"]/\"));\n        }\n        if (!this.placeholder) {\n            const r = prefix === \"/\" ? \"/\" : prefix.slice(0, -1);\n            if (this.optionalRestSlugName != null) {\n                throw new Error('You cannot define a route with the same specificity as a optional catch-all route (\"' + r + '\" and \"' + r + \"[[...\" + this.optionalRestSlugName + ']]\").');\n            }\n            routes.unshift(r);\n        }\n        if (this.restSlugName !== null) {\n            routes.push(...this.children.get(\"[...]\")._smoosh(prefix + \"[...\" + this.restSlugName + \"]/\"));\n        }\n        if (this.optionalRestSlugName !== null) {\n            routes.push(...this.children.get(\"[[...]]\")._smoosh(prefix + \"[[...\" + this.optionalRestSlugName + \"]]/\"));\n        }\n        return routes;\n    }\n    _insert(urlPaths, slugNames, isCatchAll) {\n        if (urlPaths.length === 0) {\n            this.placeholder = false;\n            return;\n        }\n        if (isCatchAll) {\n            throw new Error(\"Catch-all must be the last part of the URL.\");\n        }\n        // The next segment in the urlPaths list\n        let nextSegment = urlPaths[0];\n        // Check if the segment matches `[something]`\n        if (nextSegment.startsWith(\"[\") && nextSegment.endsWith(\"]\")) {\n            // Strip `[` and `]`, leaving only `something`\n            let segmentName = nextSegment.slice(1, -1);\n            let isOptional = false;\n            if (segmentName.startsWith(\"[\") && segmentName.endsWith(\"]\")) {\n                // Strip optional `[` and `]`, leaving only `something`\n                segmentName = segmentName.slice(1, -1);\n                isOptional = true;\n            }\n            if (segmentName.startsWith(\"...\")) {\n                // Strip `...`, leaving only `something`\n                segmentName = segmentName.substring(3);\n                isCatchAll = true;\n            }\n            if (segmentName.startsWith(\"[\") || segmentName.endsWith(\"]\")) {\n                throw new Error(\"Segment names may not start or end with extra brackets ('\" + segmentName + \"').\");\n            }\n            if (segmentName.startsWith(\".\")) {\n                throw new Error(\"Segment names may not start with erroneous periods ('\" + segmentName + \"').\");\n            }\n            function handleSlug(previousSlug, nextSlug) {\n                if (previousSlug !== null) {\n                    // If the specific segment already has a slug but the slug is not `something`\n                    // This prevents collisions like:\n                    // pages/[post]/index.js\n                    // pages/[id]/index.js\n                    // Because currently multiple dynamic params on the same segment level are not supported\n                    if (previousSlug !== nextSlug) {\n                        // TODO: This error seems to be confusing for users, needs an error link, the description can be based on above comment.\n                        throw new Error(\"You cannot use different slug names for the same dynamic path ('\" + previousSlug + \"' !== '\" + nextSlug + \"').\");\n                    }\n                }\n                slugNames.forEach((slug)=>{\n                    if (slug === nextSlug) {\n                        throw new Error('You cannot have the same slug name \"' + nextSlug + '\" repeat within a single dynamic path');\n                    }\n                    if (slug.replace(/\\W/g, \"\") === nextSegment.replace(/\\W/g, \"\")) {\n                        throw new Error('You cannot have the slug names \"' + slug + '\" and \"' + nextSlug + '\" differ only by non-word symbols within a single dynamic path');\n                    }\n                });\n                slugNames.push(nextSlug);\n            }\n            if (isCatchAll) {\n                if (isOptional) {\n                    if (this.restSlugName != null) {\n                        throw new Error('You cannot use both an required and optional catch-all route at the same level (\"[...' + this.restSlugName + ']\" and \"' + urlPaths[0] + '\" ).');\n                    }\n                    handleSlug(this.optionalRestSlugName, segmentName);\n                    // slugName is kept as it can only be one particular slugName\n                    this.optionalRestSlugName = segmentName;\n                    // nextSegment is overwritten to [[...]] so that it can later be sorted specifically\n                    nextSegment = \"[[...]]\";\n                } else {\n                    if (this.optionalRestSlugName != null) {\n                        throw new Error('You cannot use both an optional and required catch-all route at the same level (\"[[...' + this.optionalRestSlugName + ']]\" and \"' + urlPaths[0] + '\").');\n                    }\n                    handleSlug(this.restSlugName, segmentName);\n                    // slugName is kept as it can only be one particular slugName\n                    this.restSlugName = segmentName;\n                    // nextSegment is overwritten to [...] so that it can later be sorted specifically\n                    nextSegment = \"[...]\";\n                }\n            } else {\n                if (isOptional) {\n                    throw new Error('Optional route parameters are not yet supported (\"' + urlPaths[0] + '\").');\n                }\n                handleSlug(this.slugName, segmentName);\n                // slugName is kept as it can only be one particular slugName\n                this.slugName = segmentName;\n                // nextSegment is overwritten to [] so that it can later be sorted specifically\n                nextSegment = \"[]\";\n            }\n        }\n        // If this UrlNode doesn't have the nextSegment yet we create a new child UrlNode\n        if (!this.children.has(nextSegment)) {\n            this.children.set(nextSegment, new UrlNode());\n        }\n        this.children.get(nextSegment)._insert(urlPaths.slice(1), slugNames, isCatchAll);\n    }\n    constructor(){\n        this.placeholder = true;\n        this.children = new Map();\n        this.slugName = null;\n        this.restSlugName = null;\n        this.optionalRestSlugName = null;\n    }\n}\nfunction getSortedRoutes(normalizedPages) {\n    // First the UrlNode is created, and every UrlNode can have only 1 dynamic segment\n    // Eg you can't have pages/[post]/abc.js and pages/[hello]/something-else.js\n    // Only 1 dynamic segment per nesting level\n    // So in the case that is test/integration/dynamic-routing it'll be this:\n    // pages/[post]/comments.js\n    // pages/blog/[post]/comment/[id].js\n    // Both are fine because `pages/[post]` and `pages/blog` are on the same level\n    // So in this case `UrlNode` created here has `this.slugName === 'post'`\n    // And since your PR passed through `slugName` as an array basically it'd including it in too many possibilities\n    // Instead what has to be passed through is the upwards path's dynamic names\n    const root = new UrlNode();\n    // Here the `root` gets injected multiple paths, and insert will break them up into sublevels\n    normalizedPages.forEach((pagePath)=>root.insert(pagePath));\n    // Smoosh will then sort those sublevels up to the point where you get the correct route definition priority\n    return root.smoosh();\n} //# sourceMappingURL=sorted-routes.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/sorted-routes.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/segment.js":
/*!**********************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/segment.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isGroupSegment: () => (/* binding */ isGroupSegment)\n/* harmony export */ });\nfunction isGroupSegment(segment) {\n    // Use array[0] for performant purpose\n    return segment[0] === \"(\" && segment.endsWith(\")\");\n} //# sourceMappingURL=segment.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9zZWdtZW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTyxTQUFTQSxlQUFlQyxPQUFPO0lBQ2xDLHNDQUFzQztJQUN0QyxPQUFPQSxPQUFPLENBQUMsRUFBRSxLQUFLLE9BQU9BLFFBQVFDLFFBQVEsQ0FBQztBQUNsRCxFQUVBLG1DQUFtQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9zaGFyZWQvbGliL3NlZ21lbnQuanM/ZmNkNiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gaXNHcm91cFNlZ21lbnQoc2VnbWVudCkge1xuICAgIC8vIFVzZSBhcnJheVswXSBmb3IgcGVyZm9ybWFudCBwdXJwb3NlXG4gICAgcmV0dXJuIHNlZ21lbnRbMF0gPT09IFwiKFwiICYmIHNlZ21lbnQuZW5kc1dpdGgoXCIpXCIpO1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1zZWdtZW50LmpzLm1hcCJdLCJuYW1lcyI6WyJpc0dyb3VwU2VnbWVudCIsInNlZ21lbnQiLCJlbmRzV2l0aCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/segment.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/utils.js":
/*!********************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/utils.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DecodeError: () => (/* binding */ DecodeError),\n/* harmony export */   MiddlewareNotFoundError: () => (/* binding */ MiddlewareNotFoundError),\n/* harmony export */   MissingStaticPage: () => (/* binding */ MissingStaticPage),\n/* harmony export */   NormalizeError: () => (/* binding */ NormalizeError),\n/* harmony export */   PageNotFoundError: () => (/* binding */ PageNotFoundError),\n/* harmony export */   SP: () => (/* binding */ SP),\n/* harmony export */   ST: () => (/* binding */ ST),\n/* harmony export */   WEB_VITALS: () => (/* binding */ WEB_VITALS),\n/* harmony export */   execOnce: () => (/* binding */ execOnce),\n/* harmony export */   getDisplayName: () => (/* binding */ getDisplayName),\n/* harmony export */   getLocationOrigin: () => (/* binding */ getLocationOrigin),\n/* harmony export */   getURL: () => (/* binding */ getURL),\n/* harmony export */   isAbsoluteUrl: () => (/* binding */ isAbsoluteUrl),\n/* harmony export */   isResSent: () => (/* binding */ isResSent),\n/* harmony export */   loadGetInitialProps: () => (/* binding */ loadGetInitialProps),\n/* harmony export */   normalizeRepeatedSlashes: () => (/* binding */ normalizeRepeatedSlashes),\n/* harmony export */   stringifyError: () => (/* binding */ stringifyError)\n/* harmony export */ });\n/**\n * Web vitals provided to _app.reportWebVitals by Core Web Vitals plugin developed by Google Chrome team.\n * https://nextjs.org/blog/next-9-4#integrated-web-vitals-reporting\n */ const WEB_VITALS = [\n    \"CLS\",\n    \"FCP\",\n    \"FID\",\n    \"INP\",\n    \"LCP\",\n    \"TTFB\"\n];\n/**\n * Utils\n */ function execOnce(fn) {\n    let used = false;\n    let result;\n    return function() {\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        if (!used) {\n            used = true;\n            result = fn(...args);\n        }\n        return result;\n    };\n}\n// Scheme: https://tools.ietf.org/html/rfc3986#section-3.1\n// Absolute URL: https://tools.ietf.org/html/rfc3986#section-4.3\nconst ABSOLUTE_URL_REGEX = /^[a-zA-Z][a-zA-Z\\d+\\-.]*?:/;\nconst isAbsoluteUrl = (url)=>ABSOLUTE_URL_REGEX.test(url);\nfunction getLocationOrigin() {\n    const { protocol, hostname, port } = window.location;\n    return protocol + \"//\" + hostname + (port ? \":\" + port : \"\");\n}\nfunction getURL() {\n    const { href } = window.location;\n    const origin = getLocationOrigin();\n    return href.substring(origin.length);\n}\nfunction getDisplayName(Component) {\n    return typeof Component === \"string\" ? Component : Component.displayName || Component.name || \"Unknown\";\n}\nfunction isResSent(res) {\n    return res.finished || res.headersSent;\n}\nfunction normalizeRepeatedSlashes(url) {\n    const urlParts = url.split(\"?\");\n    const urlNoQuery = urlParts[0];\n    return urlNoQuery // first we replace any non-encoded backslashes with forward\n    // then normalize repeated forward slashes\n    .replace(/\\\\/g, \"/\").replace(/\\/\\/+/g, \"/\") + (urlParts[1] ? \"?\" + urlParts.slice(1).join(\"?\") : \"\");\n}\nasync function loadGetInitialProps(App, ctx) {\n    if (true) {\n        var _App_prototype;\n        if ((_App_prototype = App.prototype) == null ? void 0 : _App_prototype.getInitialProps) {\n            const message = '\"' + getDisplayName(App) + '.getInitialProps()\" is defined as an instance method - visit https://nextjs.org/docs/messages/get-initial-props-as-an-instance-method for more information.';\n            throw new Error(message);\n        }\n    }\n    // when called from _app `ctx` is nested in `ctx`\n    const res = ctx.res || ctx.ctx && ctx.ctx.res;\n    if (!App.getInitialProps) {\n        if (ctx.ctx && ctx.Component) {\n            // @ts-ignore pageProps default\n            return {\n                pageProps: await loadGetInitialProps(ctx.Component, ctx.ctx)\n            };\n        }\n        return {};\n    }\n    const props = await App.getInitialProps(ctx);\n    if (res && isResSent(res)) {\n        return props;\n    }\n    if (!props) {\n        const message = '\"' + getDisplayName(App) + '.getInitialProps()\" should resolve to an object. But found \"' + props + '\" instead.';\n        throw new Error(message);\n    }\n    if (true) {\n        if (Object.keys(props).length === 0 && !ctx.ctx) {\n            console.warn(\"\" + getDisplayName(App) + \" returned an empty object from `getInitialProps`. This de-optimizes and prevents automatic static optimization. https://nextjs.org/docs/messages/empty-object-getInitialProps\");\n        }\n    }\n    return props;\n}\nconst SP = typeof performance !== \"undefined\";\nconst ST = SP && [\n    \"mark\",\n    \"measure\",\n    \"getEntriesByName\"\n].every((method)=>typeof performance[method] === \"function\");\nclass DecodeError extends Error {\n}\nclass NormalizeError extends Error {\n}\nclass PageNotFoundError extends Error {\n    constructor(page){\n        super();\n        this.code = \"ENOENT\";\n        this.name = \"PageNotFoundError\";\n        this.message = \"Cannot find module for page: \" + page;\n    }\n}\nclass MissingStaticPage extends Error {\n    constructor(page, message){\n        super();\n        this.message = \"Failed to load static file for page: \" + page + \" \" + message;\n    }\n}\nclass MiddlewareNotFoundError extends Error {\n    constructor(){\n        super();\n        this.code = \"ENOENT\";\n        this.message = \"Cannot find the middleware module\";\n    }\n}\nfunction stringifyError(error) {\n    return JSON.stringify({\n        message: error.message,\n        stack: error.stack\n    });\n} //# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/utils.js\n");

/***/ }),

/***/ "(middleware)/./pages/api/chat.ts":
/*!***************************!*\
  !*** ./pages/api/chat.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var openai__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! openai */ \"(middleware)/../../node_modules/openai/index.mjs\");\n\nconst config = {\n    runtime: \"edge\"\n};\nconst openai = new openai__WEBPACK_IMPORTED_MODULE_0__.OpenAI({\n    apiKey: process.env.OPENAI_API_KEY\n});\nasync function handler(req) {\n    try {\n        const { messages } = await req.json();\n        const response = await openai.chat.completions.create({\n            model: \"gpt-4\",\n            stream: false,\n            messages\n        });\n        const reply = response.choices?.[0]?.message?.content || \"Sorry, something went wrong.\";\n        return new Response(JSON.stringify({\n            reply\n        }), {\n            status: 200\n        });\n    } catch (err) {\n        console.error(\"OpenAI error:\", err.message);\n        return new Response(JSON.stringify({\n            reply: \"Sorry, something went wrong.\"\n        }), {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vcGFnZXMvYXBpL2NoYXQudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQ2dDO0FBRXpCLE1BQU1DLFNBQVM7SUFDcEJDLFNBQVM7QUFDWCxFQUFFO0FBRUYsTUFBTUMsU0FBUyxJQUFJSCwwQ0FBTUEsQ0FBQztJQUN4QkksUUFBUUMsUUFBUUMsR0FBRyxDQUFDQyxjQUFjO0FBQ3BDO0FBRWUsZUFBZUMsUUFBUUMsR0FBZ0I7SUFDcEQsSUFBSTtRQUNGLE1BQU0sRUFBRUMsUUFBUSxFQUFFLEdBQUcsTUFBTUQsSUFBSUUsSUFBSTtRQUVuQyxNQUFNQyxXQUFXLE1BQU1ULE9BQU9VLElBQUksQ0FBQ0MsV0FBVyxDQUFDQyxNQUFNLENBQUM7WUFDcERDLE9BQU87WUFDUEMsUUFBUTtZQUNSUDtRQUNGO1FBRUEsTUFBTVEsUUFBUU4sU0FBU08sT0FBTyxFQUFFLENBQUMsRUFBRSxFQUFFQyxTQUFTQyxXQUFXO1FBRXpELE9BQU8sSUFBSUMsU0FBU0MsS0FBS0MsU0FBUyxDQUFDO1lBQUVOO1FBQU0sSUFBSTtZQUM3Q08sUUFBUTtRQUNWO0lBQ0YsRUFBRSxPQUFPQyxLQUFVO1FBQ2pCQyxRQUFRQyxLQUFLLENBQUMsaUJBQWlCRixJQUFJTixPQUFPO1FBQzFDLE9BQU8sSUFBSUUsU0FBU0MsS0FBS0MsU0FBUyxDQUFDO1lBQUVOLE9BQU87UUFBK0IsSUFBSTtZQUM3RU8sUUFBUTtRQUNWO0lBQ0Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9wYWdlcy9hcGkvY2hhdC50cz9jNTc3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5leHRSZXF1ZXN0IH0gZnJvbSBcIm5leHQvc2VydmVyXCI7XG5pbXBvcnQgeyBPcGVuQUkgfSBmcm9tIFwib3BlbmFpXCI7XG5cbmV4cG9ydCBjb25zdCBjb25maWcgPSB7XG4gIHJ1bnRpbWU6IFwiZWRnZVwiLFxufTtcblxuY29uc3Qgb3BlbmFpID0gbmV3IE9wZW5BSSh7XG4gIGFwaUtleTogcHJvY2Vzcy5lbnYuT1BFTkFJX0FQSV9LRVksXG59KTtcblxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgZnVuY3Rpb24gaGFuZGxlcihyZXE6IE5leHRSZXF1ZXN0KSB7XG4gIHRyeSB7XG4gICAgY29uc3QgeyBtZXNzYWdlcyB9ID0gYXdhaXQgcmVxLmpzb24oKTtcblxuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgb3BlbmFpLmNoYXQuY29tcGxldGlvbnMuY3JlYXRlKHtcbiAgICAgIG1vZGVsOiBcImdwdC00XCIsIC8vIGZhbGxiYWNrIHRvIFwiZ3B0LTMuNS10dXJib1wiIGlmIG5lZWRlZFxuICAgICAgc3RyZWFtOiBmYWxzZSxcbiAgICAgIG1lc3NhZ2VzLFxuICAgIH0pO1xuXG4gICAgY29uc3QgcmVwbHkgPSByZXNwb25zZS5jaG9pY2VzPy5bMF0/Lm1lc3NhZ2U/LmNvbnRlbnQgfHwgXCJTb3JyeSwgc29tZXRoaW5nIHdlbnQgd3JvbmcuXCI7XG5cbiAgICByZXR1cm4gbmV3IFJlc3BvbnNlKEpTT04uc3RyaW5naWZ5KHsgcmVwbHkgfSksIHtcbiAgICAgIHN0YXR1czogMjAwLFxuICAgIH0pO1xuICB9IGNhdGNoIChlcnI6IGFueSkge1xuICAgIGNvbnNvbGUuZXJyb3IoXCJPcGVuQUkgZXJyb3I6XCIsIGVyci5tZXNzYWdlKTtcbiAgICByZXR1cm4gbmV3IFJlc3BvbnNlKEpTT04uc3RyaW5naWZ5KHsgcmVwbHk6IFwiU29ycnksIHNvbWV0aGluZyB3ZW50IHdyb25nLlwiIH0pLCB7XG4gICAgICBzdGF0dXM6IDUwMCxcbiAgICB9KTtcbiAgfVxufSJdLCJuYW1lcyI6WyJPcGVuQUkiLCJjb25maWciLCJydW50aW1lIiwib3BlbmFpIiwiYXBpS2V5IiwicHJvY2VzcyIsImVudiIsIk9QRU5BSV9BUElfS0VZIiwiaGFuZGxlciIsInJlcSIsIm1lc3NhZ2VzIiwianNvbiIsInJlc3BvbnNlIiwiY2hhdCIsImNvbXBsZXRpb25zIiwiY3JlYXRlIiwibW9kZWwiLCJzdHJlYW0iLCJyZXBseSIsImNob2ljZXMiLCJtZXNzYWdlIiwiY29udGVudCIsIlJlc3BvbnNlIiwiSlNPTiIsInN0cmluZ2lmeSIsInN0YXR1cyIsImVyciIsImNvbnNvbGUiLCJlcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./pages/api/chat.ts\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/_vendor/partial-json-parser/parser.mjs":
/*!************************************************************************!*\
  !*** ../../node_modules/openai/_vendor/partial-json-parser/parser.mjs ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MalformedJSON: () => (/* binding */ MalformedJSON),\n/* harmony export */   PartialJSON: () => (/* binding */ PartialJSON),\n/* harmony export */   partialParse: () => (/* binding */ partialParse)\n/* harmony export */ });\nconst STR = 1;\nconst NUM = 2;\nconst ARR = 4;\nconst OBJ = 8;\nconst NULL = 16;\nconst BOOL = 32;\nconst NAN = 64;\nconst INFINITY = 128;\nconst MINUS_INFINITY = 256;\nconst INF = INFINITY | MINUS_INFINITY;\nconst SPECIAL = NULL | BOOL | INF | NAN;\nconst ATOM = STR | NUM | SPECIAL;\nconst COLLECTION = ARR | OBJ;\nconst ALL = ATOM | COLLECTION;\nconst Allow = {\n    STR,\n    NUM,\n    ARR,\n    OBJ,\n    NULL,\n    BOOL,\n    NAN,\n    INFINITY,\n    MINUS_INFINITY,\n    INF,\n    SPECIAL,\n    ATOM,\n    COLLECTION,\n    ALL\n};\n// The JSON string segment was unable to be parsed completely\nclass PartialJSON extends Error {\n}\nclass MalformedJSON extends Error {\n}\n/**\n * Parse incomplete JSON\n * @param {string} jsonString Partial JSON to be parsed\n * @param {number} allowPartial Specify what types are allowed to be partial, see {@link Allow} for details\n * @returns The parsed JSON\n * @throws {PartialJSON} If the JSON is incomplete (related to the `allow` parameter)\n * @throws {MalformedJSON} If the JSON is malformed\n */ function parseJSON(jsonString, allowPartial = Allow.ALL) {\n    if (typeof jsonString !== \"string\") {\n        throw new TypeError(`expecting str, got ${typeof jsonString}`);\n    }\n    if (!jsonString.trim()) {\n        throw new Error(`${jsonString} is empty`);\n    }\n    return _parseJSON(jsonString.trim(), allowPartial);\n}\nconst _parseJSON = (jsonString, allow)=>{\n    const length = jsonString.length;\n    let index = 0;\n    const markPartialJSON = (msg)=>{\n        throw new PartialJSON(`${msg} at position ${index}`);\n    };\n    const throwMalformedError = (msg)=>{\n        throw new MalformedJSON(`${msg} at position ${index}`);\n    };\n    const parseAny = ()=>{\n        skipBlank();\n        if (index >= length) markPartialJSON(\"Unexpected end of input\");\n        if (jsonString[index] === '\"') return parseStr();\n        if (jsonString[index] === \"{\") return parseObj();\n        if (jsonString[index] === \"[\") return parseArr();\n        if (jsonString.substring(index, index + 4) === \"null\" || Allow.NULL & allow && length - index < 4 && \"null\".startsWith(jsonString.substring(index))) {\n            index += 4;\n            return null;\n        }\n        if (jsonString.substring(index, index + 4) === \"true\" || Allow.BOOL & allow && length - index < 4 && \"true\".startsWith(jsonString.substring(index))) {\n            index += 4;\n            return true;\n        }\n        if (jsonString.substring(index, index + 5) === \"false\" || Allow.BOOL & allow && length - index < 5 && \"false\".startsWith(jsonString.substring(index))) {\n            index += 5;\n            return false;\n        }\n        if (jsonString.substring(index, index + 8) === \"Infinity\" || Allow.INFINITY & allow && length - index < 8 && \"Infinity\".startsWith(jsonString.substring(index))) {\n            index += 8;\n            return Infinity;\n        }\n        if (jsonString.substring(index, index + 9) === \"-Infinity\" || Allow.MINUS_INFINITY & allow && 1 < length - index && length - index < 9 && \"-Infinity\".startsWith(jsonString.substring(index))) {\n            index += 9;\n            return -Infinity;\n        }\n        if (jsonString.substring(index, index + 3) === \"NaN\" || Allow.NAN & allow && length - index < 3 && \"NaN\".startsWith(jsonString.substring(index))) {\n            index += 3;\n            return NaN;\n        }\n        return parseNum();\n    };\n    const parseStr = ()=>{\n        const start = index;\n        let escape = false;\n        index++; // skip initial quote\n        while(index < length && (jsonString[index] !== '\"' || escape && jsonString[index - 1] === \"\\\\\")){\n            escape = jsonString[index] === \"\\\\\" ? !escape : false;\n            index++;\n        }\n        if (jsonString.charAt(index) == '\"') {\n            try {\n                return JSON.parse(jsonString.substring(start, ++index - Number(escape)));\n            } catch (e) {\n                throwMalformedError(String(e));\n            }\n        } else if (Allow.STR & allow) {\n            try {\n                return JSON.parse(jsonString.substring(start, index - Number(escape)) + '\"');\n            } catch (e) {\n                // SyntaxError: Invalid escape sequence\n                return JSON.parse(jsonString.substring(start, jsonString.lastIndexOf(\"\\\\\")) + '\"');\n            }\n        }\n        markPartialJSON(\"Unterminated string literal\");\n    };\n    const parseObj = ()=>{\n        index++; // skip initial brace\n        skipBlank();\n        const obj = {};\n        try {\n            while(jsonString[index] !== \"}\"){\n                skipBlank();\n                if (index >= length && Allow.OBJ & allow) return obj;\n                const key = parseStr();\n                skipBlank();\n                index++; // skip colon\n                try {\n                    const value = parseAny();\n                    Object.defineProperty(obj, key, {\n                        value,\n                        writable: true,\n                        enumerable: true,\n                        configurable: true\n                    });\n                } catch (e) {\n                    if (Allow.OBJ & allow) return obj;\n                    else throw e;\n                }\n                skipBlank();\n                if (jsonString[index] === \",\") index++; // skip comma\n            }\n        } catch (e) {\n            if (Allow.OBJ & allow) return obj;\n            else markPartialJSON(\"Expected '}' at end of object\");\n        }\n        index++; // skip final brace\n        return obj;\n    };\n    const parseArr = ()=>{\n        index++; // skip initial bracket\n        const arr = [];\n        try {\n            while(jsonString[index] !== \"]\"){\n                arr.push(parseAny());\n                skipBlank();\n                if (jsonString[index] === \",\") {\n                    index++; // skip comma\n                }\n            }\n        } catch (e) {\n            if (Allow.ARR & allow) {\n                return arr;\n            }\n            markPartialJSON(\"Expected ']' at end of array\");\n        }\n        index++; // skip final bracket\n        return arr;\n    };\n    const parseNum = ()=>{\n        if (index === 0) {\n            if (jsonString === \"-\" && Allow.NUM & allow) markPartialJSON(\"Not sure what '-' is\");\n            try {\n                return JSON.parse(jsonString);\n            } catch (e) {\n                if (Allow.NUM & allow) {\n                    try {\n                        if (\".\" === jsonString[jsonString.length - 1]) return JSON.parse(jsonString.substring(0, jsonString.lastIndexOf(\".\")));\n                        return JSON.parse(jsonString.substring(0, jsonString.lastIndexOf(\"e\")));\n                    } catch (e) {}\n                }\n                throwMalformedError(String(e));\n            }\n        }\n        const start = index;\n        if (jsonString[index] === \"-\") index++;\n        while(jsonString[index] && !\",]}\".includes(jsonString[index]))index++;\n        if (index == length && !(Allow.NUM & allow)) markPartialJSON(\"Unterminated number literal\");\n        try {\n            return JSON.parse(jsonString.substring(start, index));\n        } catch (e) {\n            if (jsonString.substring(start, index) === \"-\" && Allow.NUM & allow) markPartialJSON(\"Not sure what '-' is\");\n            try {\n                return JSON.parse(jsonString.substring(start, jsonString.lastIndexOf(\"e\")));\n            } catch (e) {\n                throwMalformedError(String(e));\n            }\n        }\n    };\n    const skipBlank = ()=>{\n        while(index < length && \" \\n\\r\t\".includes(jsonString[index])){\n            index++;\n        }\n    };\n    return parseAny();\n};\n// using this function with malformed JSON is undefined behavior\nconst partialParse = (input)=>parseJSON(input, Allow.ALL ^ Allow.NUM);\n //# sourceMappingURL=parser.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/_vendor/partial-json-parser/parser.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/azure.mjs":
/*!*******************************************!*\
  !*** ../../node_modules/openai/azure.mjs ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AzureOpenAI: () => (/* binding */ AzureOpenAI)\n/* harmony export */ });\n/* harmony import */ var _error_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./error.mjs */ \"(middleware)/../../node_modules/openai/error.mjs\");\n/* harmony import */ var _internal_utils_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./internal/utils.mjs */ \"(middleware)/../../node_modules/openai/internal/utils.mjs\");\n/* harmony import */ var _client_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./client.mjs */ \"(middleware)/../../node_modules/openai/client.mjs\");\n/* harmony import */ var _internal_headers_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./internal/headers.mjs */ \"(middleware)/../../node_modules/openai/internal/headers.mjs\");\n\n\n\n\n/** API Client for interfacing with the Azure OpenAI API. */ class AzureOpenAI extends _client_mjs__WEBPACK_IMPORTED_MODULE_2__.OpenAI {\n    /**\n     * API Client for interfacing with the Azure OpenAI API.\n     *\n     * @param {string | undefined} [opts.apiVersion=process.env['OPENAI_API_VERSION'] ?? undefined]\n     * @param {string | undefined} [opts.endpoint=process.env['AZURE_OPENAI_ENDPOINT'] ?? undefined] - Your Azure endpoint, including the resource, e.g. `https://example-resource.azure.openai.com/`\n     * @param {string | undefined} [opts.apiKey=process.env['AZURE_OPENAI_API_KEY'] ?? undefined]\n     * @param {string | undefined} opts.deployment - A model deployment, if given, sets the base client URL to include `/deployments/{deployment}`.\n     * @param {string | null | undefined} [opts.organization=process.env['OPENAI_ORG_ID'] ?? null]\n     * @param {string} [opts.baseURL=process.env['OPENAI_BASE_URL']] - Sets the base URL for the API, e.g. `https://example-resource.azure.openai.com/openai/`.\n     * @param {number} [opts.timeout=10 minutes] - The maximum amount of time (in milliseconds) the client will wait for a response before timing out.\n     * @param {number} [opts.httpAgent] - An HTTP agent used to manage HTTP(s) connections.\n     * @param {Fetch} [opts.fetch] - Specify a custom `fetch` function implementation.\n     * @param {number} [opts.maxRetries=2] - The maximum number of times the client will retry a request.\n     * @param {Headers} opts.defaultHeaders - Default headers to include with every request to the API.\n     * @param {DefaultQuery} opts.defaultQuery - Default query parameters to include with every request to the API.\n     * @param {boolean} [opts.dangerouslyAllowBrowser=false] - By default, client-side use of this library is not allowed, as it risks exposing your secret API credentials to attackers.\n     */ constructor({ baseURL = (0,_internal_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.readEnv)(\"OPENAI_BASE_URL\"), apiKey = (0,_internal_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.readEnv)(\"AZURE_OPENAI_API_KEY\"), apiVersion = (0,_internal_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.readEnv)(\"OPENAI_API_VERSION\"), endpoint, deployment, azureADTokenProvider, dangerouslyAllowBrowser, ...opts } = {}){\n        if (!apiVersion) {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_0__.OpenAIError(\"The OPENAI_API_VERSION environment variable is missing or empty; either provide it, or instantiate the AzureOpenAI client with an apiVersion option, like new AzureOpenAI({ apiVersion: 'My API Version' }).\");\n        }\n        if (typeof azureADTokenProvider === \"function\") {\n            dangerouslyAllowBrowser = true;\n        }\n        if (!azureADTokenProvider && !apiKey) {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_0__.OpenAIError(\"Missing credentials. Please pass one of `apiKey` and `azureADTokenProvider`, or set the `AZURE_OPENAI_API_KEY` environment variable.\");\n        }\n        if (azureADTokenProvider && apiKey) {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_0__.OpenAIError(\"The `apiKey` and `azureADTokenProvider` arguments are mutually exclusive; only one can be passed at a time.\");\n        }\n        // define a sentinel value to avoid any typing issues\n        apiKey ?? (apiKey = API_KEY_SENTINEL);\n        opts.defaultQuery = {\n            ...opts.defaultQuery,\n            \"api-version\": apiVersion\n        };\n        if (!baseURL) {\n            if (!endpoint) {\n                endpoint = process.env[\"AZURE_OPENAI_ENDPOINT\"];\n            }\n            if (!endpoint) {\n                throw new _error_mjs__WEBPACK_IMPORTED_MODULE_0__.OpenAIError(\"Must provide one of the `baseURL` or `endpoint` arguments, or the `AZURE_OPENAI_ENDPOINT` environment variable\");\n            }\n            baseURL = `${endpoint}/openai`;\n        } else {\n            if (endpoint) {\n                throw new _error_mjs__WEBPACK_IMPORTED_MODULE_0__.OpenAIError(\"baseURL and endpoint are mutually exclusive\");\n            }\n        }\n        super({\n            apiKey,\n            baseURL,\n            ...opts,\n            ...dangerouslyAllowBrowser !== undefined ? {\n                dangerouslyAllowBrowser\n            } : {}\n        });\n        this.apiVersion = \"\";\n        this._azureADTokenProvider = azureADTokenProvider;\n        this.apiVersion = apiVersion;\n        this.deploymentName = deployment;\n    }\n    buildRequest(options, props = {}) {\n        if (_deployments_endpoints.has(options.path) && options.method === \"post\" && options.body !== undefined) {\n            if (!(0,_internal_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.isObj)(options.body)) {\n                throw new Error(\"Expected request body to be an object\");\n            }\n            const model = this.deploymentName || options.body[\"model\"] || options.__metadata?.[\"model\"];\n            if (model !== undefined && !this.baseURL.includes(\"/deployments\")) {\n                options.path = `/deployments/${model}${options.path}`;\n            }\n        }\n        return super.buildRequest(options, props);\n    }\n    async _getAzureADToken() {\n        if (typeof this._azureADTokenProvider === \"function\") {\n            const token = await this._azureADTokenProvider();\n            if (!token || typeof token !== \"string\") {\n                throw new _error_mjs__WEBPACK_IMPORTED_MODULE_0__.OpenAIError(`Expected 'azureADTokenProvider' argument to return a string but it returned ${token}`);\n            }\n            return token;\n        }\n        return undefined;\n    }\n    authHeaders(opts) {\n        return;\n    }\n    async prepareOptions(opts) {\n        opts.headers = (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_3__.buildHeaders)([\n            opts.headers\n        ]);\n        /**\n         * The user should provide a bearer token provider if they want\n         * to use Azure AD authentication. The user shouldn't set the\n         * Authorization header manually because the header is overwritten\n         * with the Azure AD token if a bearer token provider is provided.\n         */ if (opts.headers.values.get(\"Authorization\") || opts.headers.values.get(\"api-key\")) {\n            return super.prepareOptions(opts);\n        }\n        const token = await this._getAzureADToken();\n        if (token) {\n            opts.headers.values.set(\"Authorization\", `Bearer ${token}`);\n        } else if (this.apiKey !== API_KEY_SENTINEL) {\n            opts.headers.values.set(\"api-key\", this.apiKey);\n        } else {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_0__.OpenAIError(\"Unable to handle auth\");\n        }\n        return super.prepareOptions(opts);\n    }\n}\nconst _deployments_endpoints = new Set([\n    \"/completions\",\n    \"/chat/completions\",\n    \"/embeddings\",\n    \"/audio/transcriptions\",\n    \"/audio/translations\",\n    \"/audio/speech\",\n    \"/images/generations\",\n    \"/batches\",\n    \"/images/edits\"\n]);\nconst API_KEY_SENTINEL = \"<Missing Key>\"; //# sourceMappingURL=azure.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/azure.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/client.mjs":
/*!********************************************!*\
  !*** ../../node_modules/openai/client.mjs ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OpenAI: () => (/* binding */ OpenAI)\n/* harmony export */ });\n/* harmony import */ var _internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./internal/tslib.mjs */ \"(middleware)/../../node_modules/openai/internal/tslib.mjs\");\n/* harmony import */ var _internal_utils_uuid_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./internal/utils/uuid.mjs */ \"(middleware)/../../node_modules/openai/internal/utils/uuid.mjs\");\n/* harmony import */ var _internal_utils_values_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./internal/utils/values.mjs */ \"(middleware)/../../node_modules/openai/internal/utils/values.mjs\");\n/* harmony import */ var _internal_utils_sleep_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./internal/utils/sleep.mjs */ \"(middleware)/../../node_modules/openai/internal/utils/sleep.mjs\");\n/* harmony import */ var _internal_utils_log_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./internal/utils/log.mjs */ \"(middleware)/../../node_modules/openai/internal/utils/log.mjs\");\n/* harmony import */ var _internal_errors_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./internal/errors.mjs */ \"(middleware)/../../node_modules/openai/internal/errors.mjs\");\n/* harmony import */ var _internal_detect_platform_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./internal/detect-platform.mjs */ \"(middleware)/../../node_modules/openai/internal/detect-platform.mjs\");\n/* harmony import */ var _internal_shims_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./internal/shims.mjs */ \"(middleware)/../../node_modules/openai/internal/shims.mjs\");\n/* harmony import */ var _internal_request_options_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./internal/request-options.mjs */ \"(middleware)/../../node_modules/openai/internal/request-options.mjs\");\n/* harmony import */ var _internal_qs_index_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./internal/qs/index.mjs */ \"(middleware)/../../node_modules/openai/internal/qs/index.mjs\");\n/* harmony import */ var _version_mjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./version.mjs */ \"(middleware)/../../node_modules/openai/version.mjs\");\n/* harmony import */ var _core_error_mjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./core/error.mjs */ \"(middleware)/../../node_modules/openai/core/error.mjs\");\n/* harmony import */ var _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./core/pagination.mjs */ \"(middleware)/../../node_modules/openai/core/pagination.mjs\");\n/* harmony import */ var _core_uploads_mjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./core/uploads.mjs */ \"(middleware)/../../node_modules/openai/core/uploads.mjs\");\n/* harmony import */ var _resources_index_mjs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./resources/index.mjs */ \"(middleware)/../../node_modules/openai/resources/index.mjs\");\n/* harmony import */ var _core_api_promise_mjs__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./core/api-promise.mjs */ \"(middleware)/../../node_modules/openai/core/api-promise.mjs\");\n/* harmony import */ var _internal_headers_mjs__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./internal/headers.mjs */ \"(middleware)/../../node_modules/openai/internal/headers.mjs\");\n/* harmony import */ var _resources_batches_mjs__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./resources/batches.mjs */ \"(middleware)/../../node_modules/openai/resources/batches.mjs\");\n/* harmony import */ var _resources_completions_mjs__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./resources/completions.mjs */ \"(middleware)/../../node_modules/openai/resources/completions.mjs\");\n/* harmony import */ var _resources_embeddings_mjs__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./resources/embeddings.mjs */ \"(middleware)/../../node_modules/openai/resources/embeddings.mjs\");\n/* harmony import */ var _resources_files_mjs__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./resources/files.mjs */ \"(middleware)/../../node_modules/openai/resources/files.mjs\");\n/* harmony import */ var _resources_images_mjs__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./resources/images.mjs */ \"(middleware)/../../node_modules/openai/resources/images.mjs\");\n/* harmony import */ var _resources_models_mjs__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./resources/models.mjs */ \"(middleware)/../../node_modules/openai/resources/models.mjs\");\n/* harmony import */ var _resources_moderations_mjs__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./resources/moderations.mjs */ \"(middleware)/../../node_modules/openai/resources/moderations.mjs\");\n/* harmony import */ var _internal_utils_env_mjs__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./internal/utils/env.mjs */ \"(middleware)/../../node_modules/openai/internal/utils/env.mjs\");\n/* harmony import */ var _resources_audio_audio_mjs__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./resources/audio/audio.mjs */ \"(middleware)/../../node_modules/openai/resources/audio/audio.mjs\");\n/* harmony import */ var _resources_beta_beta_mjs__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./resources/beta/beta.mjs */ \"(middleware)/../../node_modules/openai/resources/beta/beta.mjs\");\n/* harmony import */ var _resources_chat_chat_mjs__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./resources/chat/chat.mjs */ \"(middleware)/../../node_modules/openai/resources/chat/chat.mjs\");\n/* harmony import */ var _resources_containers_containers_mjs__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./resources/containers/containers.mjs */ \"(middleware)/../../node_modules/openai/resources/containers/containers.mjs\");\n/* harmony import */ var _resources_evals_evals_mjs__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./resources/evals/evals.mjs */ \"(middleware)/../../node_modules/openai/resources/evals/evals.mjs\");\n/* harmony import */ var _resources_fine_tuning_fine_tuning_mjs__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./resources/fine-tuning/fine-tuning.mjs */ \"(middleware)/../../node_modules/openai/resources/fine-tuning/fine-tuning.mjs\");\n/* harmony import */ var _resources_graders_graders_mjs__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./resources/graders/graders.mjs */ \"(middleware)/../../node_modules/openai/resources/graders/graders.mjs\");\n/* harmony import */ var _resources_responses_responses_mjs__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./resources/responses/responses.mjs */ \"(middleware)/../../node_modules/openai/resources/responses/responses.mjs\");\n/* harmony import */ var _resources_uploads_uploads_mjs__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./resources/uploads/uploads.mjs */ \"(middleware)/../../node_modules/openai/resources/uploads/uploads.mjs\");\n/* harmony import */ var _resources_vector_stores_vector_stores_mjs__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./resources/vector-stores/vector-stores.mjs */ \"(middleware)/../../node_modules/openai/resources/vector-stores/vector-stores.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nvar _a, _OpenAI_encoder;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * API Client for interfacing with the OpenAI API.\n */ class OpenAI {\n    /**\n     * API Client for interfacing with the OpenAI API.\n     *\n     * @param {string | undefined} [opts.apiKey=process.env['OPENAI_API_KEY'] ?? undefined]\n     * @param {string | null | undefined} [opts.organization=process.env['OPENAI_ORG_ID'] ?? null]\n     * @param {string | null | undefined} [opts.project=process.env['OPENAI_PROJECT_ID'] ?? null]\n     * @param {string} [opts.baseURL=process.env['OPENAI_BASE_URL'] ?? https://api.openai.com/v1] - Override the default base URL for the API.\n     * @param {number} [opts.timeout=10 minutes] - The maximum amount of time (in milliseconds) the client will wait for a response before timing out.\n     * @param {MergedRequestInit} [opts.fetchOptions] - Additional `RequestInit` options to be passed to `fetch` calls.\n     * @param {Fetch} [opts.fetch] - Specify a custom `fetch` function implementation.\n     * @param {number} [opts.maxRetries=2] - The maximum number of times the client will retry a request.\n     * @param {HeadersLike} opts.defaultHeaders - Default headers to include with every request to the API.\n     * @param {Record<string, string | undefined>} opts.defaultQuery - Default query parameters to include with every request to the API.\n     * @param {boolean} [opts.dangerouslyAllowBrowser=false] - By default, client-side use of this library is not allowed, as it risks exposing your secret API credentials to attackers.\n     */ constructor({ baseURL = (0,_internal_utils_env_mjs__WEBPACK_IMPORTED_MODULE_24__.readEnv)(\"OPENAI_BASE_URL\"), apiKey = (0,_internal_utils_env_mjs__WEBPACK_IMPORTED_MODULE_24__.readEnv)(\"OPENAI_API_KEY\"), organization = (0,_internal_utils_env_mjs__WEBPACK_IMPORTED_MODULE_24__.readEnv)(\"OPENAI_ORG_ID\") ?? null, project = (0,_internal_utils_env_mjs__WEBPACK_IMPORTED_MODULE_24__.readEnv)(\"OPENAI_PROJECT_ID\") ?? null, ...opts } = {}){\n        _OpenAI_encoder.set(this, void 0);\n        this.completions = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_14__.Completions(this);\n        this.chat = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_14__.Chat(this);\n        this.embeddings = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_14__.Embeddings(this);\n        this.files = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_14__.Files(this);\n        this.images = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_14__.Images(this);\n        this.audio = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_14__.Audio(this);\n        this.moderations = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_14__.Moderations(this);\n        this.models = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_14__.Models(this);\n        this.fineTuning = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_14__.FineTuning(this);\n        this.graders = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_14__.Graders(this);\n        this.vectorStores = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_14__.VectorStores(this);\n        this.beta = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_14__.Beta(this);\n        this.batches = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_14__.Batches(this);\n        this.uploads = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_14__.Uploads(this);\n        this.responses = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_14__.Responses(this);\n        this.evals = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_14__.Evals(this);\n        this.containers = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_14__.Containers(this);\n        if (apiKey === undefined) {\n            throw new _core_error_mjs__WEBPACK_IMPORTED_MODULE_11__.OpenAIError(\"The OPENAI_API_KEY environment variable is missing or empty; either provide it, or instantiate the OpenAI client with an apiKey option, like new OpenAI({ apiKey: 'My API Key' }).\");\n        }\n        const options = {\n            apiKey,\n            organization,\n            project,\n            ...opts,\n            baseURL: baseURL || `https://api.openai.com/v1`\n        };\n        if (!options.dangerouslyAllowBrowser && (0,_internal_detect_platform_mjs__WEBPACK_IMPORTED_MODULE_6__.isRunningInBrowser)()) {\n            throw new _core_error_mjs__WEBPACK_IMPORTED_MODULE_11__.OpenAIError(\"It looks like you're running in a browser-like environment.\\n\\nThis is disabled by default, as it risks exposing your secret API credentials to attackers.\\nIf you understand the risks and have appropriate mitigations in place,\\nyou can set the `dangerouslyAllowBrowser` option to `true`, e.g.,\\n\\nnew OpenAI({ apiKey, dangerouslyAllowBrowser: true });\\n\\nhttps://help.openai.com/en/articles/5112595-best-practices-for-api-key-safety\\n\");\n        }\n        this.baseURL = options.baseURL;\n        this.timeout = options.timeout ?? _a.DEFAULT_TIMEOUT /* 10 minutes */ ;\n        this.logger = options.logger ?? console;\n        const defaultLogLevel = \"warn\";\n        // Set default logLevel early so that we can log a warning in parseLogLevel.\n        this.logLevel = defaultLogLevel;\n        this.logLevel = (0,_internal_utils_log_mjs__WEBPACK_IMPORTED_MODULE_4__.parseLogLevel)(options.logLevel, \"ClientOptions.logLevel\", this) ?? (0,_internal_utils_log_mjs__WEBPACK_IMPORTED_MODULE_4__.parseLogLevel)((0,_internal_utils_env_mjs__WEBPACK_IMPORTED_MODULE_24__.readEnv)(\"OPENAI_LOG\"), \"process.env['OPENAI_LOG']\", this) ?? defaultLogLevel;\n        this.fetchOptions = options.fetchOptions;\n        this.maxRetries = options.maxRetries ?? 2;\n        this.fetch = options.fetch ?? _internal_shims_mjs__WEBPACK_IMPORTED_MODULE_7__.getDefaultFetch();\n        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _OpenAI_encoder, _internal_request_options_mjs__WEBPACK_IMPORTED_MODULE_8__.FallbackEncoder, \"f\");\n        this._options = options;\n        this.apiKey = apiKey;\n        this.organization = organization;\n        this.project = project;\n    }\n    /**\n     * Create a new client instance re-using the same options given to the current client with optional overriding.\n     */ withOptions(options) {\n        return new this.constructor({\n            ...this._options,\n            baseURL: this.baseURL,\n            maxRetries: this.maxRetries,\n            timeout: this.timeout,\n            logger: this.logger,\n            logLevel: this.logLevel,\n            fetchOptions: this.fetchOptions,\n            apiKey: this.apiKey,\n            organization: this.organization,\n            project: this.project,\n            ...options\n        });\n    }\n    defaultQuery() {\n        return this._options.defaultQuery;\n    }\n    validateHeaders({ values, nulls }) {\n        return;\n    }\n    authHeaders(opts) {\n        return (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_16__.buildHeaders)([\n            {\n                Authorization: `Bearer ${this.apiKey}`\n            }\n        ]);\n    }\n    stringifyQuery(query) {\n        return _internal_qs_index_mjs__WEBPACK_IMPORTED_MODULE_9__.stringify(query, {\n            arrayFormat: \"brackets\"\n        });\n    }\n    getUserAgent() {\n        return `${this.constructor.name}/JS ${_version_mjs__WEBPACK_IMPORTED_MODULE_10__.VERSION}`;\n    }\n    defaultIdempotencyKey() {\n        return `stainless-node-retry-${(0,_internal_utils_uuid_mjs__WEBPACK_IMPORTED_MODULE_1__.uuid4)()}`;\n    }\n    makeStatusError(status, error, message, headers) {\n        return _core_error_mjs__WEBPACK_IMPORTED_MODULE_11__.APIError.generate(status, error, message, headers);\n    }\n    buildURL(path, query) {\n        const url = (0,_internal_utils_values_mjs__WEBPACK_IMPORTED_MODULE_2__.isAbsoluteURL)(path) ? new URL(path) : new URL(this.baseURL + (this.baseURL.endsWith(\"/\") && path.startsWith(\"/\") ? path.slice(1) : path));\n        const defaultQuery = this.defaultQuery();\n        if (!(0,_internal_utils_values_mjs__WEBPACK_IMPORTED_MODULE_2__.isEmptyObj)(defaultQuery)) {\n            query = {\n                ...defaultQuery,\n                ...query\n            };\n        }\n        if (typeof query === \"object\" && query && !Array.isArray(query)) {\n            url.search = this.stringifyQuery(query);\n        }\n        return url.toString();\n    }\n    /**\n     * Used as a callback for mutating the given `FinalRequestOptions` object.\n     */ async prepareOptions(options) {}\n    /**\n     * Used as a callback for mutating the given `RequestInit` object.\n     *\n     * This is useful for cases where you want to add certain headers based off of\n     * the request properties, e.g. `method` or `url`.\n     */ async prepareRequest(request, { url, options }) {}\n    get(path, opts) {\n        return this.methodRequest(\"get\", path, opts);\n    }\n    post(path, opts) {\n        return this.methodRequest(\"post\", path, opts);\n    }\n    patch(path, opts) {\n        return this.methodRequest(\"patch\", path, opts);\n    }\n    put(path, opts) {\n        return this.methodRequest(\"put\", path, opts);\n    }\n    delete(path, opts) {\n        return this.methodRequest(\"delete\", path, opts);\n    }\n    methodRequest(method, path, opts) {\n        return this.request(Promise.resolve(opts).then((opts)=>{\n            return {\n                method,\n                path,\n                ...opts\n            };\n        }));\n    }\n    request(options, remainingRetries = null) {\n        return new _core_api_promise_mjs__WEBPACK_IMPORTED_MODULE_15__.APIPromise(this, this.makeRequest(options, remainingRetries, undefined));\n    }\n    async makeRequest(optionsInput, retriesRemaining, retryOfRequestLogID) {\n        const options = await optionsInput;\n        const maxRetries = options.maxRetries ?? this.maxRetries;\n        if (retriesRemaining == null) {\n            retriesRemaining = maxRetries;\n        }\n        await this.prepareOptions(options);\n        const { req, url, timeout } = this.buildRequest(options, {\n            retryCount: maxRetries - retriesRemaining\n        });\n        await this.prepareRequest(req, {\n            url,\n            options\n        });\n        /** Not an API request ID, just for correlating local log entries. */ const requestLogID = \"log_\" + (Math.random() * (1 << 24) | 0).toString(16).padStart(6, \"0\");\n        const retryLogStr = retryOfRequestLogID === undefined ? \"\" : `, retryOf: ${retryOfRequestLogID}`;\n        const startTime = Date.now();\n        (0,_internal_utils_log_mjs__WEBPACK_IMPORTED_MODULE_4__.loggerFor)(this).debug(`[${requestLogID}] sending request`, (0,_internal_utils_log_mjs__WEBPACK_IMPORTED_MODULE_4__.formatRequestDetails)({\n            retryOfRequestLogID,\n            method: options.method,\n            url,\n            options,\n            headers: req.headers\n        }));\n        if (options.signal?.aborted) {\n            throw new _core_error_mjs__WEBPACK_IMPORTED_MODULE_11__.APIUserAbortError();\n        }\n        const controller = new AbortController();\n        const response = await this.fetchWithTimeout(url, req, timeout, controller).catch(_internal_errors_mjs__WEBPACK_IMPORTED_MODULE_5__.castToError);\n        const headersTime = Date.now();\n        if (response instanceof Error) {\n            const retryMessage = `retrying, ${retriesRemaining} attempts remaining`;\n            if (options.signal?.aborted) {\n                throw new _core_error_mjs__WEBPACK_IMPORTED_MODULE_11__.APIUserAbortError();\n            }\n            // detect native connection timeout errors\n            // deno throws \"TypeError: error sending request for url (https://example/): client error (Connect): tcp connect error: Operation timed out (os error 60): Operation timed out (os error 60)\"\n            // undici throws \"TypeError: fetch failed\" with cause \"ConnectTimeoutError: Connect Timeout Error (attempted address: example:443, timeout: 1ms)\"\n            // others do not provide enough information to distinguish timeouts from other connection errors\n            const isTimeout = (0,_internal_errors_mjs__WEBPACK_IMPORTED_MODULE_5__.isAbortError)(response) || /timed? ?out/i.test(String(response) + (\"cause\" in response ? String(response.cause) : \"\"));\n            if (retriesRemaining) {\n                (0,_internal_utils_log_mjs__WEBPACK_IMPORTED_MODULE_4__.loggerFor)(this).info(`[${requestLogID}] connection ${isTimeout ? \"timed out\" : \"failed\"} - ${retryMessage}`);\n                (0,_internal_utils_log_mjs__WEBPACK_IMPORTED_MODULE_4__.loggerFor)(this).debug(`[${requestLogID}] connection ${isTimeout ? \"timed out\" : \"failed\"} (${retryMessage})`, (0,_internal_utils_log_mjs__WEBPACK_IMPORTED_MODULE_4__.formatRequestDetails)({\n                    retryOfRequestLogID,\n                    url,\n                    durationMs: headersTime - startTime,\n                    message: response.message\n                }));\n                return this.retryRequest(options, retriesRemaining, retryOfRequestLogID ?? requestLogID);\n            }\n            (0,_internal_utils_log_mjs__WEBPACK_IMPORTED_MODULE_4__.loggerFor)(this).info(`[${requestLogID}] connection ${isTimeout ? \"timed out\" : \"failed\"} - error; no more retries left`);\n            (0,_internal_utils_log_mjs__WEBPACK_IMPORTED_MODULE_4__.loggerFor)(this).debug(`[${requestLogID}] connection ${isTimeout ? \"timed out\" : \"failed\"} (error; no more retries left)`, (0,_internal_utils_log_mjs__WEBPACK_IMPORTED_MODULE_4__.formatRequestDetails)({\n                retryOfRequestLogID,\n                url,\n                durationMs: headersTime - startTime,\n                message: response.message\n            }));\n            if (isTimeout) {\n                throw new _core_error_mjs__WEBPACK_IMPORTED_MODULE_11__.APIConnectionTimeoutError();\n            }\n            throw new _core_error_mjs__WEBPACK_IMPORTED_MODULE_11__.APIConnectionError({\n                cause: response\n            });\n        }\n        const specialHeaders = [\n            ...response.headers.entries()\n        ].filter(([name])=>name === \"x-request-id\").map(([name, value])=>\", \" + name + \": \" + JSON.stringify(value)).join(\"\");\n        const responseInfo = `[${requestLogID}${retryLogStr}${specialHeaders}] ${req.method} ${url} ${response.ok ? \"succeeded\" : \"failed\"} with status ${response.status} in ${headersTime - startTime}ms`;\n        if (!response.ok) {\n            const shouldRetry = this.shouldRetry(response);\n            if (retriesRemaining && shouldRetry) {\n                const retryMessage = `retrying, ${retriesRemaining} attempts remaining`;\n                // We don't need the body of this response.\n                await _internal_shims_mjs__WEBPACK_IMPORTED_MODULE_7__.CancelReadableStream(response.body);\n                (0,_internal_utils_log_mjs__WEBPACK_IMPORTED_MODULE_4__.loggerFor)(this).info(`${responseInfo} - ${retryMessage}`);\n                (0,_internal_utils_log_mjs__WEBPACK_IMPORTED_MODULE_4__.loggerFor)(this).debug(`[${requestLogID}] response error (${retryMessage})`, (0,_internal_utils_log_mjs__WEBPACK_IMPORTED_MODULE_4__.formatRequestDetails)({\n                    retryOfRequestLogID,\n                    url: response.url,\n                    status: response.status,\n                    headers: response.headers,\n                    durationMs: headersTime - startTime\n                }));\n                return this.retryRequest(options, retriesRemaining, retryOfRequestLogID ?? requestLogID, response.headers);\n            }\n            const retryMessage = shouldRetry ? `error; no more retries left` : `error; not retryable`;\n            (0,_internal_utils_log_mjs__WEBPACK_IMPORTED_MODULE_4__.loggerFor)(this).info(`${responseInfo} - ${retryMessage}`);\n            const errText = await response.text().catch((err)=>(0,_internal_errors_mjs__WEBPACK_IMPORTED_MODULE_5__.castToError)(err).message);\n            const errJSON = (0,_internal_utils_values_mjs__WEBPACK_IMPORTED_MODULE_2__.safeJSON)(errText);\n            const errMessage = errJSON ? undefined : errText;\n            (0,_internal_utils_log_mjs__WEBPACK_IMPORTED_MODULE_4__.loggerFor)(this).debug(`[${requestLogID}] response error (${retryMessage})`, (0,_internal_utils_log_mjs__WEBPACK_IMPORTED_MODULE_4__.formatRequestDetails)({\n                retryOfRequestLogID,\n                url: response.url,\n                status: response.status,\n                headers: response.headers,\n                message: errMessage,\n                durationMs: Date.now() - startTime\n            }));\n            const err = this.makeStatusError(response.status, errJSON, errMessage, response.headers);\n            throw err;\n        }\n        (0,_internal_utils_log_mjs__WEBPACK_IMPORTED_MODULE_4__.loggerFor)(this).info(responseInfo);\n        (0,_internal_utils_log_mjs__WEBPACK_IMPORTED_MODULE_4__.loggerFor)(this).debug(`[${requestLogID}] response start`, (0,_internal_utils_log_mjs__WEBPACK_IMPORTED_MODULE_4__.formatRequestDetails)({\n            retryOfRequestLogID,\n            url: response.url,\n            status: response.status,\n            headers: response.headers,\n            durationMs: headersTime - startTime\n        }));\n        return {\n            response,\n            options,\n            controller,\n            requestLogID,\n            retryOfRequestLogID,\n            startTime\n        };\n    }\n    getAPIList(path, Page, opts) {\n        return this.requestAPIList(Page, {\n            method: \"get\",\n            path,\n            ...opts\n        });\n    }\n    requestAPIList(Page, options) {\n        const request = this.makeRequest(options, null, undefined);\n        return new _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_12__.PagePromise(this, request, Page);\n    }\n    async fetchWithTimeout(url, init, ms, controller) {\n        const { signal, method, ...options } = init || {};\n        if (signal) signal.addEventListener(\"abort\", ()=>controller.abort());\n        const timeout = setTimeout(()=>controller.abort(), ms);\n        const isReadableBody = globalThis.ReadableStream && options.body instanceof globalThis.ReadableStream || typeof options.body === \"object\" && options.body !== null && Symbol.asyncIterator in options.body;\n        const fetchOptions = {\n            signal: controller.signal,\n            ...isReadableBody ? {\n                duplex: \"half\"\n            } : {},\n            method: \"GET\",\n            ...options\n        };\n        if (method) {\n            // Custom methods like 'patch' need to be uppercased\n            // See https://github.com/nodejs/undici/issues/2294\n            fetchOptions.method = method.toUpperCase();\n        }\n        try {\n            // use undefined this binding; fetch errors if bound to something else in browser/cloudflare\n            return await this.fetch.call(undefined, url, fetchOptions);\n        } finally{\n            clearTimeout(timeout);\n        }\n    }\n    shouldRetry(response) {\n        // Note this is not a standard header.\n        const shouldRetryHeader = response.headers.get(\"x-should-retry\");\n        // If the server explicitly says whether or not to retry, obey.\n        if (shouldRetryHeader === \"true\") return true;\n        if (shouldRetryHeader === \"false\") return false;\n        // Retry on request timeouts.\n        if (response.status === 408) return true;\n        // Retry on lock timeouts.\n        if (response.status === 409) return true;\n        // Retry on rate limits.\n        if (response.status === 429) return true;\n        // Retry internal errors.\n        if (response.status >= 500) return true;\n        return false;\n    }\n    async retryRequest(options, retriesRemaining, requestLogID, responseHeaders) {\n        let timeoutMillis;\n        // Note the `retry-after-ms` header may not be standard, but is a good idea and we'd like proactive support for it.\n        const retryAfterMillisHeader = responseHeaders?.get(\"retry-after-ms\");\n        if (retryAfterMillisHeader) {\n            const timeoutMs = parseFloat(retryAfterMillisHeader);\n            if (!Number.isNaN(timeoutMs)) {\n                timeoutMillis = timeoutMs;\n            }\n        }\n        // About the Retry-After header: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After\n        const retryAfterHeader = responseHeaders?.get(\"retry-after\");\n        if (retryAfterHeader && !timeoutMillis) {\n            const timeoutSeconds = parseFloat(retryAfterHeader);\n            if (!Number.isNaN(timeoutSeconds)) {\n                timeoutMillis = timeoutSeconds * 1000;\n            } else {\n                timeoutMillis = Date.parse(retryAfterHeader) - Date.now();\n            }\n        }\n        // If the API asks us to wait a certain amount of time (and it's a reasonable amount),\n        // just do what it says, but otherwise calculate a default\n        if (!(timeoutMillis && 0 <= timeoutMillis && timeoutMillis < 60 * 1000)) {\n            const maxRetries = options.maxRetries ?? this.maxRetries;\n            timeoutMillis = this.calculateDefaultRetryTimeoutMillis(retriesRemaining, maxRetries);\n        }\n        await (0,_internal_utils_sleep_mjs__WEBPACK_IMPORTED_MODULE_3__.sleep)(timeoutMillis);\n        return this.makeRequest(options, retriesRemaining - 1, requestLogID);\n    }\n    calculateDefaultRetryTimeoutMillis(retriesRemaining, maxRetries) {\n        const initialRetryDelay = 0.5;\n        const maxRetryDelay = 8.0;\n        const numRetries = maxRetries - retriesRemaining;\n        // Apply exponential backoff, but not more than the max.\n        const sleepSeconds = Math.min(initialRetryDelay * Math.pow(2, numRetries), maxRetryDelay);\n        // Apply some jitter, take up to at most 25 percent of the retry time.\n        const jitter = 1 - Math.random() * 0.25;\n        return sleepSeconds * jitter * 1000;\n    }\n    buildRequest(inputOptions, { retryCount = 0 } = {}) {\n        const options = {\n            ...inputOptions\n        };\n        const { method, path, query } = options;\n        const url = this.buildURL(path, query);\n        if (\"timeout\" in options) (0,_internal_utils_values_mjs__WEBPACK_IMPORTED_MODULE_2__.validatePositiveInteger)(\"timeout\", options.timeout);\n        options.timeout = options.timeout ?? this.timeout;\n        const { bodyHeaders, body } = this.buildBody({\n            options\n        });\n        const reqHeaders = this.buildHeaders({\n            options: inputOptions,\n            method,\n            bodyHeaders,\n            retryCount\n        });\n        const req = {\n            method,\n            headers: reqHeaders,\n            ...options.signal && {\n                signal: options.signal\n            },\n            ...globalThis.ReadableStream && body instanceof globalThis.ReadableStream && {\n                duplex: \"half\"\n            },\n            ...body && {\n                body\n            },\n            ...this.fetchOptions ?? {},\n            ...options.fetchOptions ?? {}\n        };\n        return {\n            req,\n            url,\n            timeout: options.timeout\n        };\n    }\n    buildHeaders({ options, method, bodyHeaders, retryCount }) {\n        let idempotencyHeaders = {};\n        if (this.idempotencyHeader && method !== \"get\") {\n            if (!options.idempotencyKey) options.idempotencyKey = this.defaultIdempotencyKey();\n            idempotencyHeaders[this.idempotencyHeader] = options.idempotencyKey;\n        }\n        const headers = (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_16__.buildHeaders)([\n            idempotencyHeaders,\n            {\n                Accept: \"application/json\",\n                \"User-Agent\": this.getUserAgent(),\n                \"X-Stainless-Retry-Count\": String(retryCount),\n                ...options.timeout ? {\n                    \"X-Stainless-Timeout\": String(Math.trunc(options.timeout / 1000))\n                } : {},\n                ...(0,_internal_detect_platform_mjs__WEBPACK_IMPORTED_MODULE_6__.getPlatformHeaders)(),\n                \"OpenAI-Organization\": this.organization,\n                \"OpenAI-Project\": this.project\n            },\n            this.authHeaders(options),\n            this._options.defaultHeaders,\n            bodyHeaders,\n            options.headers\n        ]);\n        this.validateHeaders(headers);\n        return headers.values;\n    }\n    buildBody({ options: { body, headers: rawHeaders } }) {\n        if (!body) {\n            return {\n                bodyHeaders: undefined,\n                body: undefined\n            };\n        }\n        const headers = (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_16__.buildHeaders)([\n            rawHeaders\n        ]);\n        if (// Pass raw type verbatim\n        ArrayBuffer.isView(body) || body instanceof ArrayBuffer || body instanceof DataView || typeof body === \"string\" && // Preserve legacy string encoding behavior for now\n        headers.values.has(\"content-type\") || // `Blob` is superset of `File`\n        body instanceof Blob || // `FormData` -> `multipart/form-data`\n        body instanceof FormData || // `URLSearchParams` -> `application/x-www-form-urlencoded`\n        body instanceof URLSearchParams || // Send chunked stream (each chunk has own `length`)\n        globalThis.ReadableStream && body instanceof globalThis.ReadableStream) {\n            return {\n                bodyHeaders: undefined,\n                body: body\n            };\n        } else if (typeof body === \"object\" && (Symbol.asyncIterator in body || Symbol.iterator in body && \"next\" in body && typeof body.next === \"function\")) {\n            return {\n                bodyHeaders: undefined,\n                body: _internal_shims_mjs__WEBPACK_IMPORTED_MODULE_7__.ReadableStreamFrom(body)\n            };\n        } else {\n            return (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _OpenAI_encoder, \"f\").call(this, {\n                body,\n                headers\n            });\n        }\n    }\n}\n_a = OpenAI, _OpenAI_encoder = new WeakMap();\nOpenAI.OpenAI = _a;\nOpenAI.DEFAULT_TIMEOUT = 600000; // 10 minutes\nOpenAI.OpenAIError = _core_error_mjs__WEBPACK_IMPORTED_MODULE_11__.OpenAIError;\nOpenAI.APIError = _core_error_mjs__WEBPACK_IMPORTED_MODULE_11__.APIError;\nOpenAI.APIConnectionError = _core_error_mjs__WEBPACK_IMPORTED_MODULE_11__.APIConnectionError;\nOpenAI.APIConnectionTimeoutError = _core_error_mjs__WEBPACK_IMPORTED_MODULE_11__.APIConnectionTimeoutError;\nOpenAI.APIUserAbortError = _core_error_mjs__WEBPACK_IMPORTED_MODULE_11__.APIUserAbortError;\nOpenAI.NotFoundError = _core_error_mjs__WEBPACK_IMPORTED_MODULE_11__.NotFoundError;\nOpenAI.ConflictError = _core_error_mjs__WEBPACK_IMPORTED_MODULE_11__.ConflictError;\nOpenAI.RateLimitError = _core_error_mjs__WEBPACK_IMPORTED_MODULE_11__.RateLimitError;\nOpenAI.BadRequestError = _core_error_mjs__WEBPACK_IMPORTED_MODULE_11__.BadRequestError;\nOpenAI.AuthenticationError = _core_error_mjs__WEBPACK_IMPORTED_MODULE_11__.AuthenticationError;\nOpenAI.InternalServerError = _core_error_mjs__WEBPACK_IMPORTED_MODULE_11__.InternalServerError;\nOpenAI.PermissionDeniedError = _core_error_mjs__WEBPACK_IMPORTED_MODULE_11__.PermissionDeniedError;\nOpenAI.UnprocessableEntityError = _core_error_mjs__WEBPACK_IMPORTED_MODULE_11__.UnprocessableEntityError;\nOpenAI.toFile = _core_uploads_mjs__WEBPACK_IMPORTED_MODULE_13__.toFile;\nOpenAI.Completions = _resources_completions_mjs__WEBPACK_IMPORTED_MODULE_18__.Completions;\nOpenAI.Chat = _resources_chat_chat_mjs__WEBPACK_IMPORTED_MODULE_27__.Chat;\nOpenAI.Embeddings = _resources_embeddings_mjs__WEBPACK_IMPORTED_MODULE_19__.Embeddings;\nOpenAI.Files = _resources_files_mjs__WEBPACK_IMPORTED_MODULE_20__.Files;\nOpenAI.Images = _resources_images_mjs__WEBPACK_IMPORTED_MODULE_21__.Images;\nOpenAI.Audio = _resources_audio_audio_mjs__WEBPACK_IMPORTED_MODULE_25__.Audio;\nOpenAI.Moderations = _resources_moderations_mjs__WEBPACK_IMPORTED_MODULE_23__.Moderations;\nOpenAI.Models = _resources_models_mjs__WEBPACK_IMPORTED_MODULE_22__.Models;\nOpenAI.FineTuning = _resources_fine_tuning_fine_tuning_mjs__WEBPACK_IMPORTED_MODULE_30__.FineTuning;\nOpenAI.Graders = _resources_graders_graders_mjs__WEBPACK_IMPORTED_MODULE_31__.Graders;\nOpenAI.VectorStores = _resources_vector_stores_vector_stores_mjs__WEBPACK_IMPORTED_MODULE_34__.VectorStores;\nOpenAI.Beta = _resources_beta_beta_mjs__WEBPACK_IMPORTED_MODULE_26__.Beta;\nOpenAI.Batches = _resources_batches_mjs__WEBPACK_IMPORTED_MODULE_17__.Batches;\nOpenAI.Uploads = _resources_uploads_uploads_mjs__WEBPACK_IMPORTED_MODULE_33__.Uploads;\nOpenAI.Responses = _resources_responses_responses_mjs__WEBPACK_IMPORTED_MODULE_32__.Responses;\nOpenAI.Evals = _resources_evals_evals_mjs__WEBPACK_IMPORTED_MODULE_29__.Evals;\nOpenAI.Containers = _resources_containers_containers_mjs__WEBPACK_IMPORTED_MODULE_28__.Containers; //# sourceMappingURL=client.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/client.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/core/api-promise.mjs":
/*!******************************************************!*\
  !*** ../../node_modules/openai/core/api-promise.mjs ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   APIPromise: () => (/* binding */ APIPromise)\n/* harmony export */ });\n/* harmony import */ var _internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../internal/tslib.mjs */ \"(middleware)/../../node_modules/openai/internal/tslib.mjs\");\n/* harmony import */ var _internal_parse_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../internal/parse.mjs */ \"(middleware)/../../node_modules/openai/internal/parse.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nvar _APIPromise_client;\n\n\n/**\n * A subclass of `Promise` providing additional helper methods\n * for interacting with the SDK.\n */ class APIPromise extends Promise {\n    constructor(client, responsePromise, parseResponse = _internal_parse_mjs__WEBPACK_IMPORTED_MODULE_1__.defaultParseResponse){\n        super((resolve)=>{\n            // this is maybe a bit weird but this has to be a no-op to not implicitly\n            // parse the response body; instead .then, .catch, .finally are overridden\n            // to parse the response\n            resolve(null);\n        });\n        this.responsePromise = responsePromise;\n        this.parseResponse = parseResponse;\n        _APIPromise_client.set(this, void 0);\n        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _APIPromise_client, client, \"f\");\n    }\n    _thenUnwrap(transform) {\n        return new APIPromise((0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _APIPromise_client, \"f\"), this.responsePromise, async (client, props)=>(0,_internal_parse_mjs__WEBPACK_IMPORTED_MODULE_1__.addRequestID)(transform(await this.parseResponse(client, props), props), props.response));\n    }\n    /**\n     * Gets the raw `Response` instance instead of parsing the response\n     * data.\n     *\n     * If you want to parse the response body but still get the `Response`\n     * instance, you can use {@link withResponse()}.\n     *\n     * 👋 Getting the wrong TypeScript type for `Response`?\n     * Try setting `\"moduleResolution\": \"NodeNext\"` or add `\"lib\": [\"DOM\"]`\n     * to your `tsconfig.json`.\n     */ asResponse() {\n        return this.responsePromise.then((p)=>p.response);\n    }\n    /**\n     * Gets the parsed response data, the raw `Response` instance and the ID of the request,\n     * returned via the X-Request-ID header which is useful for debugging requests and reporting\n     * issues to OpenAI.\n     *\n     * If you just want to get the raw `Response` instance without parsing it,\n     * you can use {@link asResponse()}.\n     *\n     * 👋 Getting the wrong TypeScript type for `Response`?\n     * Try setting `\"moduleResolution\": \"NodeNext\"` or add `\"lib\": [\"DOM\"]`\n     * to your `tsconfig.json`.\n     */ async withResponse() {\n        const [data, response] = await Promise.all([\n            this.parse(),\n            this.asResponse()\n        ]);\n        return {\n            data,\n            response,\n            request_id: response.headers.get(\"x-request-id\")\n        };\n    }\n    parse() {\n        if (!this.parsedPromise) {\n            this.parsedPromise = this.responsePromise.then((data)=>this.parseResponse((0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _APIPromise_client, \"f\"), data));\n        }\n        return this.parsedPromise;\n    }\n    then(onfulfilled, onrejected) {\n        return this.parse().then(onfulfilled, onrejected);\n    }\n    catch(onrejected) {\n        return this.parse().catch(onrejected);\n    }\n    finally(onfinally) {\n        return this.parse().finally(onfinally);\n    }\n}\n_APIPromise_client = new WeakMap(); //# sourceMappingURL=api-promise.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvY29yZS9hcGktcHJvbWlzZS5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsc0ZBQXNGO0FBQ3RGLElBQUlBO0FBQ21GO0FBQ1g7QUFDNUU7OztDQUdDLEdBQ00sTUFBTUssbUJBQW1CQztJQUM1QkMsWUFBWUMsTUFBTSxFQUFFQyxlQUFlLEVBQUVDLGdCQUFnQlAscUVBQW9CLENBQUU7UUFDdkUsS0FBSyxDQUFDLENBQUNRO1lBQ0gseUVBQXlFO1lBQ3pFLDBFQUEwRTtZQUMxRSx3QkFBd0I7WUFDeEJBLFFBQVE7UUFDWjtRQUNBLElBQUksQ0FBQ0YsZUFBZSxHQUFHQTtRQUN2QixJQUFJLENBQUNDLGFBQWEsR0FBR0E7UUFDckJWLG1CQUFtQlksR0FBRyxDQUFDLElBQUksRUFBRSxLQUFLO1FBQ2xDViwyRUFBc0JBLENBQUMsSUFBSSxFQUFFRixvQkFBb0JRLFFBQVE7SUFDN0Q7SUFDQUssWUFBWUMsU0FBUyxFQUFFO1FBQ25CLE9BQU8sSUFBSVQsV0FBV0osMkVBQXNCQSxDQUFDLElBQUksRUFBRUQsb0JBQW9CLE1BQU0sSUFBSSxDQUFDUyxlQUFlLEVBQUUsT0FBT0QsUUFBUU8sUUFBVVgsaUVBQVlBLENBQUNVLFVBQVUsTUFBTSxJQUFJLENBQUNKLGFBQWEsQ0FBQ0YsUUFBUU8sUUFBUUEsUUFBUUEsTUFBTUMsUUFBUTtJQUN0TjtJQUNBOzs7Ozs7Ozs7O0tBVUMsR0FDREMsYUFBYTtRQUNULE9BQU8sSUFBSSxDQUFDUixlQUFlLENBQUNTLElBQUksQ0FBQyxDQUFDQyxJQUFNQSxFQUFFSCxRQUFRO0lBQ3REO0lBQ0E7Ozs7Ozs7Ozs7O0tBV0MsR0FDRCxNQUFNSSxlQUFlO1FBQ2pCLE1BQU0sQ0FBQ0MsTUFBTUwsU0FBUyxHQUFHLE1BQU1WLFFBQVFnQixHQUFHLENBQUM7WUFBQyxJQUFJLENBQUNDLEtBQUs7WUFBSSxJQUFJLENBQUNOLFVBQVU7U0FBRztRQUM1RSxPQUFPO1lBQUVJO1lBQU1MO1lBQVVRLFlBQVlSLFNBQVNTLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDO1FBQWdCO0lBQzlFO0lBQ0FILFFBQVE7UUFDSixJQUFJLENBQUMsSUFBSSxDQUFDSSxhQUFhLEVBQUU7WUFDckIsSUFBSSxDQUFDQSxhQUFhLEdBQUcsSUFBSSxDQUFDbEIsZUFBZSxDQUFDUyxJQUFJLENBQUMsQ0FBQ0csT0FBUyxJQUFJLENBQUNYLGFBQWEsQ0FBQ1QsMkVBQXNCQSxDQUFDLElBQUksRUFBRUQsb0JBQW9CLE1BQU1xQjtRQUN2STtRQUNBLE9BQU8sSUFBSSxDQUFDTSxhQUFhO0lBQzdCO0lBQ0FULEtBQUtVLFdBQVcsRUFBRUMsVUFBVSxFQUFFO1FBQzFCLE9BQU8sSUFBSSxDQUFDTixLQUFLLEdBQUdMLElBQUksQ0FBQ1UsYUFBYUM7SUFDMUM7SUFDQUMsTUFBTUQsVUFBVSxFQUFFO1FBQ2QsT0FBTyxJQUFJLENBQUNOLEtBQUssR0FBR08sS0FBSyxDQUFDRDtJQUM5QjtJQUNBRSxRQUFRQyxTQUFTLEVBQUU7UUFDZixPQUFPLElBQUksQ0FBQ1QsS0FBSyxHQUFHUSxPQUFPLENBQUNDO0lBQ2hDO0FBQ0o7QUFDQWhDLHFCQUFxQixJQUFJaUMsV0FDekIsd0NBQXdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi9ub2RlX21vZHVsZXMvb3BlbmFpL2NvcmUvYXBpLXByb21pc2UubWpzP2M2NDciXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbnZhciBfQVBJUHJvbWlzZV9jbGllbnQ7XG5pbXBvcnQgeyBfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0LCBfX2NsYXNzUHJpdmF0ZUZpZWxkU2V0IH0gZnJvbSBcIi4uL2ludGVybmFsL3RzbGliLm1qc1wiO1xuaW1wb3J0IHsgZGVmYXVsdFBhcnNlUmVzcG9uc2UsIGFkZFJlcXVlc3RJRCwgfSBmcm9tIFwiLi4vaW50ZXJuYWwvcGFyc2UubWpzXCI7XG4vKipcbiAqIEEgc3ViY2xhc3Mgb2YgYFByb21pc2VgIHByb3ZpZGluZyBhZGRpdGlvbmFsIGhlbHBlciBtZXRob2RzXG4gKiBmb3IgaW50ZXJhY3Rpbmcgd2l0aCB0aGUgU0RLLlxuICovXG5leHBvcnQgY2xhc3MgQVBJUHJvbWlzZSBleHRlbmRzIFByb21pc2Uge1xuICAgIGNvbnN0cnVjdG9yKGNsaWVudCwgcmVzcG9uc2VQcm9taXNlLCBwYXJzZVJlc3BvbnNlID0gZGVmYXVsdFBhcnNlUmVzcG9uc2UpIHtcbiAgICAgICAgc3VwZXIoKHJlc29sdmUpID0+IHtcbiAgICAgICAgICAgIC8vIHRoaXMgaXMgbWF5YmUgYSBiaXQgd2VpcmQgYnV0IHRoaXMgaGFzIHRvIGJlIGEgbm8tb3AgdG8gbm90IGltcGxpY2l0bHlcbiAgICAgICAgICAgIC8vIHBhcnNlIHRoZSByZXNwb25zZSBib2R5OyBpbnN0ZWFkIC50aGVuLCAuY2F0Y2gsIC5maW5hbGx5IGFyZSBvdmVycmlkZGVuXG4gICAgICAgICAgICAvLyB0byBwYXJzZSB0aGUgcmVzcG9uc2VcbiAgICAgICAgICAgIHJlc29sdmUobnVsbCk7XG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLnJlc3BvbnNlUHJvbWlzZSA9IHJlc3BvbnNlUHJvbWlzZTtcbiAgICAgICAgdGhpcy5wYXJzZVJlc3BvbnNlID0gcGFyc2VSZXNwb25zZTtcbiAgICAgICAgX0FQSVByb21pc2VfY2xpZW50LnNldCh0aGlzLCB2b2lkIDApO1xuICAgICAgICBfX2NsYXNzUHJpdmF0ZUZpZWxkU2V0KHRoaXMsIF9BUElQcm9taXNlX2NsaWVudCwgY2xpZW50LCBcImZcIik7XG4gICAgfVxuICAgIF90aGVuVW53cmFwKHRyYW5zZm9ybSkge1xuICAgICAgICByZXR1cm4gbmV3IEFQSVByb21pc2UoX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfQVBJUHJvbWlzZV9jbGllbnQsIFwiZlwiKSwgdGhpcy5yZXNwb25zZVByb21pc2UsIGFzeW5jIChjbGllbnQsIHByb3BzKSA9PiBhZGRSZXF1ZXN0SUQodHJhbnNmb3JtKGF3YWl0IHRoaXMucGFyc2VSZXNwb25zZShjbGllbnQsIHByb3BzKSwgcHJvcHMpLCBwcm9wcy5yZXNwb25zZSkpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXRzIHRoZSByYXcgYFJlc3BvbnNlYCBpbnN0YW5jZSBpbnN0ZWFkIG9mIHBhcnNpbmcgdGhlIHJlc3BvbnNlXG4gICAgICogZGF0YS5cbiAgICAgKlxuICAgICAqIElmIHlvdSB3YW50IHRvIHBhcnNlIHRoZSByZXNwb25zZSBib2R5IGJ1dCBzdGlsbCBnZXQgdGhlIGBSZXNwb25zZWBcbiAgICAgKiBpbnN0YW5jZSwgeW91IGNhbiB1c2Uge0BsaW5rIHdpdGhSZXNwb25zZSgpfS5cbiAgICAgKlxuICAgICAqIPCfkYsgR2V0dGluZyB0aGUgd3JvbmcgVHlwZVNjcmlwdCB0eXBlIGZvciBgUmVzcG9uc2VgP1xuICAgICAqIFRyeSBzZXR0aW5nIGBcIm1vZHVsZVJlc29sdXRpb25cIjogXCJOb2RlTmV4dFwiYCBvciBhZGQgYFwibGliXCI6IFtcIkRPTVwiXWBcbiAgICAgKiB0byB5b3VyIGB0c2NvbmZpZy5qc29uYC5cbiAgICAgKi9cbiAgICBhc1Jlc3BvbnNlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5yZXNwb25zZVByb21pc2UudGhlbigocCkgPT4gcC5yZXNwb25zZSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldHMgdGhlIHBhcnNlZCByZXNwb25zZSBkYXRhLCB0aGUgcmF3IGBSZXNwb25zZWAgaW5zdGFuY2UgYW5kIHRoZSBJRCBvZiB0aGUgcmVxdWVzdCxcbiAgICAgKiByZXR1cm5lZCB2aWEgdGhlIFgtUmVxdWVzdC1JRCBoZWFkZXIgd2hpY2ggaXMgdXNlZnVsIGZvciBkZWJ1Z2dpbmcgcmVxdWVzdHMgYW5kIHJlcG9ydGluZ1xuICAgICAqIGlzc3VlcyB0byBPcGVuQUkuXG4gICAgICpcbiAgICAgKiBJZiB5b3UganVzdCB3YW50IHRvIGdldCB0aGUgcmF3IGBSZXNwb25zZWAgaW5zdGFuY2Ugd2l0aG91dCBwYXJzaW5nIGl0LFxuICAgICAqIHlvdSBjYW4gdXNlIHtAbGluayBhc1Jlc3BvbnNlKCl9LlxuICAgICAqXG4gICAgICog8J+RiyBHZXR0aW5nIHRoZSB3cm9uZyBUeXBlU2NyaXB0IHR5cGUgZm9yIGBSZXNwb25zZWA/XG4gICAgICogVHJ5IHNldHRpbmcgYFwibW9kdWxlUmVzb2x1dGlvblwiOiBcIk5vZGVOZXh0XCJgIG9yIGFkZCBgXCJsaWJcIjogW1wiRE9NXCJdYFxuICAgICAqIHRvIHlvdXIgYHRzY29uZmlnLmpzb25gLlxuICAgICAqL1xuICAgIGFzeW5jIHdpdGhSZXNwb25zZSgpIHtcbiAgICAgICAgY29uc3QgW2RhdGEsIHJlc3BvbnNlXSA9IGF3YWl0IFByb21pc2UuYWxsKFt0aGlzLnBhcnNlKCksIHRoaXMuYXNSZXNwb25zZSgpXSk7XG4gICAgICAgIHJldHVybiB7IGRhdGEsIHJlc3BvbnNlLCByZXF1ZXN0X2lkOiByZXNwb25zZS5oZWFkZXJzLmdldCgneC1yZXF1ZXN0LWlkJykgfTtcbiAgICB9XG4gICAgcGFyc2UoKSB7XG4gICAgICAgIGlmICghdGhpcy5wYXJzZWRQcm9taXNlKSB7XG4gICAgICAgICAgICB0aGlzLnBhcnNlZFByb21pc2UgPSB0aGlzLnJlc3BvbnNlUHJvbWlzZS50aGVuKChkYXRhKSA9PiB0aGlzLnBhcnNlUmVzcG9uc2UoX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfQVBJUHJvbWlzZV9jbGllbnQsIFwiZlwiKSwgZGF0YSkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLnBhcnNlZFByb21pc2U7XG4gICAgfVxuICAgIHRoZW4ob25mdWxmaWxsZWQsIG9ucmVqZWN0ZWQpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucGFyc2UoKS50aGVuKG9uZnVsZmlsbGVkLCBvbnJlamVjdGVkKTtcbiAgICB9XG4gICAgY2F0Y2gob25yZWplY3RlZCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wYXJzZSgpLmNhdGNoKG9ucmVqZWN0ZWQpO1xuICAgIH1cbiAgICBmaW5hbGx5KG9uZmluYWxseSkge1xuICAgICAgICByZXR1cm4gdGhpcy5wYXJzZSgpLmZpbmFsbHkob25maW5hbGx5KTtcbiAgICB9XG59XG5fQVBJUHJvbWlzZV9jbGllbnQgPSBuZXcgV2Vha01hcCgpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBpLXByb21pc2UubWpzLm1hcCJdLCJuYW1lcyI6WyJfQVBJUHJvbWlzZV9jbGllbnQiLCJfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0IiwiX19jbGFzc1ByaXZhdGVGaWVsZFNldCIsImRlZmF1bHRQYXJzZVJlc3BvbnNlIiwiYWRkUmVxdWVzdElEIiwiQVBJUHJvbWlzZSIsIlByb21pc2UiLCJjb25zdHJ1Y3RvciIsImNsaWVudCIsInJlc3BvbnNlUHJvbWlzZSIsInBhcnNlUmVzcG9uc2UiLCJyZXNvbHZlIiwic2V0IiwiX3RoZW5VbndyYXAiLCJ0cmFuc2Zvcm0iLCJwcm9wcyIsInJlc3BvbnNlIiwiYXNSZXNwb25zZSIsInRoZW4iLCJwIiwid2l0aFJlc3BvbnNlIiwiZGF0YSIsImFsbCIsInBhcnNlIiwicmVxdWVzdF9pZCIsImhlYWRlcnMiLCJnZXQiLCJwYXJzZWRQcm9taXNlIiwib25mdWxmaWxsZWQiLCJvbnJlamVjdGVkIiwiY2F0Y2giLCJmaW5hbGx5Iiwib25maW5hbGx5IiwiV2Vha01hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/core/api-promise.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/core/error.mjs":
/*!************************************************!*\
  !*** ../../node_modules/openai/core/error.mjs ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   APIConnectionError: () => (/* binding */ APIConnectionError),\n/* harmony export */   APIConnectionTimeoutError: () => (/* binding */ APIConnectionTimeoutError),\n/* harmony export */   APIError: () => (/* binding */ APIError),\n/* harmony export */   APIUserAbortError: () => (/* binding */ APIUserAbortError),\n/* harmony export */   AuthenticationError: () => (/* binding */ AuthenticationError),\n/* harmony export */   BadRequestError: () => (/* binding */ BadRequestError),\n/* harmony export */   ConflictError: () => (/* binding */ ConflictError),\n/* harmony export */   ContentFilterFinishReasonError: () => (/* binding */ ContentFilterFinishReasonError),\n/* harmony export */   InternalServerError: () => (/* binding */ InternalServerError),\n/* harmony export */   LengthFinishReasonError: () => (/* binding */ LengthFinishReasonError),\n/* harmony export */   NotFoundError: () => (/* binding */ NotFoundError),\n/* harmony export */   OpenAIError: () => (/* binding */ OpenAIError),\n/* harmony export */   PermissionDeniedError: () => (/* binding */ PermissionDeniedError),\n/* harmony export */   RateLimitError: () => (/* binding */ RateLimitError),\n/* harmony export */   UnprocessableEntityError: () => (/* binding */ UnprocessableEntityError)\n/* harmony export */ });\n/* harmony import */ var _internal_errors_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../internal/errors.mjs */ \"(middleware)/../../node_modules/openai/internal/errors.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nclass OpenAIError extends Error {\n}\nclass APIError extends OpenAIError {\n    constructor(status, error, message, headers){\n        super(`${APIError.makeMessage(status, error, message)}`);\n        this.status = status;\n        this.headers = headers;\n        this.requestID = headers?.get(\"x-request-id\");\n        this.error = error;\n        const data = error;\n        this.code = data?.[\"code\"];\n        this.param = data?.[\"param\"];\n        this.type = data?.[\"type\"];\n    }\n    static makeMessage(status, error, message) {\n        const msg = error?.message ? typeof error.message === \"string\" ? error.message : JSON.stringify(error.message) : error ? JSON.stringify(error) : message;\n        if (status && msg) {\n            return `${status} ${msg}`;\n        }\n        if (status) {\n            return `${status} status code (no body)`;\n        }\n        if (msg) {\n            return msg;\n        }\n        return \"(no status code or body)\";\n    }\n    static generate(status, errorResponse, message, headers) {\n        if (!status || !headers) {\n            return new APIConnectionError({\n                message,\n                cause: (0,_internal_errors_mjs__WEBPACK_IMPORTED_MODULE_0__.castToError)(errorResponse)\n            });\n        }\n        const error = errorResponse?.[\"error\"];\n        if (status === 400) {\n            return new BadRequestError(status, error, message, headers);\n        }\n        if (status === 401) {\n            return new AuthenticationError(status, error, message, headers);\n        }\n        if (status === 403) {\n            return new PermissionDeniedError(status, error, message, headers);\n        }\n        if (status === 404) {\n            return new NotFoundError(status, error, message, headers);\n        }\n        if (status === 409) {\n            return new ConflictError(status, error, message, headers);\n        }\n        if (status === 422) {\n            return new UnprocessableEntityError(status, error, message, headers);\n        }\n        if (status === 429) {\n            return new RateLimitError(status, error, message, headers);\n        }\n        if (status >= 500) {\n            return new InternalServerError(status, error, message, headers);\n        }\n        return new APIError(status, error, message, headers);\n    }\n}\nclass APIUserAbortError extends APIError {\n    constructor({ message } = {}){\n        super(undefined, undefined, message || \"Request was aborted.\", undefined);\n    }\n}\nclass APIConnectionError extends APIError {\n    constructor({ message, cause }){\n        super(undefined, undefined, message || \"Connection error.\", undefined);\n        // in some environments the 'cause' property is already declared\n        // @ts-ignore\n        if (cause) this.cause = cause;\n    }\n}\nclass APIConnectionTimeoutError extends APIConnectionError {\n    constructor({ message } = {}){\n        super({\n            message: message ?? \"Request timed out.\"\n        });\n    }\n}\nclass BadRequestError extends APIError {\n}\nclass AuthenticationError extends APIError {\n}\nclass PermissionDeniedError extends APIError {\n}\nclass NotFoundError extends APIError {\n}\nclass ConflictError extends APIError {\n}\nclass UnprocessableEntityError extends APIError {\n}\nclass RateLimitError extends APIError {\n}\nclass InternalServerError extends APIError {\n}\nclass LengthFinishReasonError extends OpenAIError {\n    constructor(){\n        super(`Could not parse response content as the length limit was reached`);\n    }\n}\nclass ContentFilterFinishReasonError extends OpenAIError {\n    constructor(){\n        super(`Could not parse response content as the request was rejected by the content filter`);\n    }\n} //# sourceMappingURL=error.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/core/error.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/core/pagination.mjs":
/*!*****************************************************!*\
  !*** ../../node_modules/openai/core/pagination.mjs ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AbstractPage: () => (/* binding */ AbstractPage),\n/* harmony export */   CursorPage: () => (/* binding */ CursorPage),\n/* harmony export */   Page: () => (/* binding */ Page),\n/* harmony export */   PagePromise: () => (/* binding */ PagePromise)\n/* harmony export */ });\n/* harmony import */ var _internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../internal/tslib.mjs */ \"(middleware)/../../node_modules/openai/internal/tslib.mjs\");\n/* harmony import */ var _error_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./error.mjs */ \"(middleware)/../../node_modules/openai/core/error.mjs\");\n/* harmony import */ var _internal_parse_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../internal/parse.mjs */ \"(middleware)/../../node_modules/openai/internal/parse.mjs\");\n/* harmony import */ var _api_promise_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./api-promise.mjs */ \"(middleware)/../../node_modules/openai/core/api-promise.mjs\");\n/* harmony import */ var _internal_utils_values_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../internal/utils/values.mjs */ \"(middleware)/../../node_modules/openai/internal/utils/values.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nvar _AbstractPage_client;\n\n\n\n\n\nclass AbstractPage {\n    constructor(client, response, body, options){\n        _AbstractPage_client.set(this, void 0);\n        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _AbstractPage_client, client, \"f\");\n        this.options = options;\n        this.response = response;\n        this.body = body;\n    }\n    hasNextPage() {\n        const items = this.getPaginatedItems();\n        if (!items.length) return false;\n        return this.nextPageRequestOptions() != null;\n    }\n    async getNextPage() {\n        const nextOptions = this.nextPageRequestOptions();\n        if (!nextOptions) {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(\"No next page expected; please check `.hasNextPage()` before calling `.getNextPage()`.\");\n        }\n        return await (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AbstractPage_client, \"f\").requestAPIList(this.constructor, nextOptions);\n    }\n    async *iterPages() {\n        let page = this;\n        yield page;\n        while(page.hasNextPage()){\n            page = await page.getNextPage();\n            yield page;\n        }\n    }\n    async *[(_AbstractPage_client = new WeakMap(), Symbol.asyncIterator)]() {\n        for await (const page of this.iterPages()){\n            for (const item of page.getPaginatedItems()){\n                yield item;\n            }\n        }\n    }\n}\n/**\n * This subclass of Promise will resolve to an instantiated Page once the request completes.\n *\n * It also implements AsyncIterable to allow auto-paginating iteration on an unawaited list call, eg:\n *\n *    for await (const item of client.items.list()) {\n *      console.log(item)\n *    }\n */ class PagePromise extends _api_promise_mjs__WEBPACK_IMPORTED_MODULE_3__.APIPromise {\n    constructor(client, request, Page){\n        super(client, request, async (client, props)=>new Page(client, props.response, await (0,_internal_parse_mjs__WEBPACK_IMPORTED_MODULE_2__.defaultParseResponse)(client, props), props.options));\n    }\n    /**\n     * Allow auto-paginating iteration on an unawaited list call, eg:\n     *\n     *    for await (const item of client.items.list()) {\n     *      console.log(item)\n     *    }\n     */ async *[Symbol.asyncIterator]() {\n        const page = await this;\n        for await (const item of page){\n            yield item;\n        }\n    }\n}\n/**\n * Note: no pagination actually occurs yet, this is for forwards-compatibility.\n */ class Page extends AbstractPage {\n    constructor(client, response, body, options){\n        super(client, response, body, options);\n        this.data = body.data || [];\n        this.object = body.object;\n    }\n    getPaginatedItems() {\n        return this.data ?? [];\n    }\n    nextPageRequestOptions() {\n        return null;\n    }\n}\nclass CursorPage extends AbstractPage {\n    constructor(client, response, body, options){\n        super(client, response, body, options);\n        this.data = body.data || [];\n        this.has_more = body.has_more || false;\n    }\n    getPaginatedItems() {\n        return this.data ?? [];\n    }\n    hasNextPage() {\n        if (this.has_more === false) {\n            return false;\n        }\n        return super.hasNextPage();\n    }\n    nextPageRequestOptions() {\n        const data = this.getPaginatedItems();\n        const id = data[data.length - 1]?.id;\n        if (!id) {\n            return null;\n        }\n        return {\n            ...this.options,\n            query: {\n                ...(0,_internal_utils_values_mjs__WEBPACK_IMPORTED_MODULE_4__.maybeObj)(this.options.query),\n                after: id\n            }\n        };\n    }\n} //# sourceMappingURL=pagination.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/core/pagination.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/core/resource.mjs":
/*!***************************************************!*\
  !*** ../../node_modules/openai/core/resource.mjs ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   APIResource: () => (/* binding */ APIResource)\n/* harmony export */ });\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nclass APIResource {\n    constructor(client){\n        this._client = client;\n    }\n} //# sourceMappingURL=resource.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvY29yZS9yZXNvdXJjZS5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLHNGQUFzRjtBQUMvRSxNQUFNQTtJQUNUQyxZQUFZQyxNQUFNLENBQUU7UUFDaEIsSUFBSSxDQUFDQyxPQUFPLEdBQUdEO0lBQ25CO0FBQ0osRUFDQSxxQ0FBcUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvY29yZS9yZXNvdXJjZS5tanM/NTEwZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlIGdlbmVyYXRlZCBmcm9tIG91ciBPcGVuQVBJIHNwZWMgYnkgU3RhaW5sZXNzLiBTZWUgQ09OVFJJQlVUSU5HLm1kIGZvciBkZXRhaWxzLlxuZXhwb3J0IGNsYXNzIEFQSVJlc291cmNlIHtcbiAgICBjb25zdHJ1Y3RvcihjbGllbnQpIHtcbiAgICAgICAgdGhpcy5fY2xpZW50ID0gY2xpZW50O1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlc291cmNlLm1qcy5tYXAiXSwibmFtZXMiOlsiQVBJUmVzb3VyY2UiLCJjb25zdHJ1Y3RvciIsImNsaWVudCIsIl9jbGllbnQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/core/resource.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/core/streaming.mjs":
/*!****************************************************!*\
  !*** ../../node_modules/openai/core/streaming.mjs ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Stream: () => (/* binding */ Stream),\n/* harmony export */   _iterSSEMessages: () => (/* binding */ _iterSSEMessages)\n/* harmony export */ });\n/* harmony import */ var _error_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./error.mjs */ \"(middleware)/../../node_modules/openai/core/error.mjs\");\n/* harmony import */ var _internal_shims_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../internal/shims.mjs */ \"(middleware)/../../node_modules/openai/internal/shims.mjs\");\n/* harmony import */ var _internal_decoders_line_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../internal/decoders/line.mjs */ \"(middleware)/../../node_modules/openai/internal/decoders/line.mjs\");\n/* harmony import */ var _internal_errors_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../internal/errors.mjs */ \"(middleware)/../../node_modules/openai/internal/errors.mjs\");\n/* harmony import */ var _internal_utils_bytes_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../internal/utils/bytes.mjs */ \"(middleware)/../../node_modules/openai/internal/utils/bytes.mjs\");\n\n\n\n\n\n\n\nclass Stream {\n    constructor(iterator, controller){\n        this.iterator = iterator;\n        this.controller = controller;\n    }\n    static fromSSEResponse(response, controller) {\n        let consumed = false;\n        async function* iterator() {\n            if (consumed) {\n                throw new _error_mjs__WEBPACK_IMPORTED_MODULE_0__.OpenAIError(\"Cannot iterate over a consumed stream, use `.tee()` to split the stream.\");\n            }\n            consumed = true;\n            let done = false;\n            try {\n                for await (const sse of _iterSSEMessages(response, controller)){\n                    if (done) continue;\n                    if (sse.data.startsWith(\"[DONE]\")) {\n                        done = true;\n                        continue;\n                    }\n                    if (sse.event === null || sse.event.startsWith(\"response.\") || sse.event.startsWith(\"transcript.\")) {\n                        let data;\n                        try {\n                            data = JSON.parse(sse.data);\n                        } catch (e) {\n                            console.error(`Could not parse message into JSON:`, sse.data);\n                            console.error(`From chunk:`, sse.raw);\n                            throw e;\n                        }\n                        if (data && data.error) {\n                            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_0__.APIError(undefined, data.error, undefined, response.headers);\n                        }\n                        yield data;\n                    } else {\n                        let data;\n                        try {\n                            data = JSON.parse(sse.data);\n                        } catch (e) {\n                            console.error(`Could not parse message into JSON:`, sse.data);\n                            console.error(`From chunk:`, sse.raw);\n                            throw e;\n                        }\n                        // TODO: Is this where the error should be thrown?\n                        if (sse.event == \"error\") {\n                            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_0__.APIError(undefined, data.error, data.message, undefined);\n                        }\n                        yield {\n                            event: sse.event,\n                            data: data\n                        };\n                    }\n                }\n                done = true;\n            } catch (e) {\n                // If the user calls `stream.controller.abort()`, we should exit without throwing.\n                if ((0,_internal_errors_mjs__WEBPACK_IMPORTED_MODULE_3__.isAbortError)(e)) return;\n                throw e;\n            } finally{\n                // If the user `break`s, abort the ongoing request.\n                if (!done) controller.abort();\n            }\n        }\n        return new Stream(iterator, controller);\n    }\n    /**\n     * Generates a Stream from a newline-separated ReadableStream\n     * where each item is a JSON value.\n     */ static fromReadableStream(readableStream, controller) {\n        let consumed = false;\n        async function* iterLines() {\n            const lineDecoder = new _internal_decoders_line_mjs__WEBPACK_IMPORTED_MODULE_2__.LineDecoder();\n            const iter = (0,_internal_shims_mjs__WEBPACK_IMPORTED_MODULE_1__.ReadableStreamToAsyncIterable)(readableStream);\n            for await (const chunk of iter){\n                for (const line of lineDecoder.decode(chunk)){\n                    yield line;\n                }\n            }\n            for (const line of lineDecoder.flush()){\n                yield line;\n            }\n        }\n        async function* iterator() {\n            if (consumed) {\n                throw new _error_mjs__WEBPACK_IMPORTED_MODULE_0__.OpenAIError(\"Cannot iterate over a consumed stream, use `.tee()` to split the stream.\");\n            }\n            consumed = true;\n            let done = false;\n            try {\n                for await (const line of iterLines()){\n                    if (done) continue;\n                    if (line) yield JSON.parse(line);\n                }\n                done = true;\n            } catch (e) {\n                // If the user calls `stream.controller.abort()`, we should exit without throwing.\n                if ((0,_internal_errors_mjs__WEBPACK_IMPORTED_MODULE_3__.isAbortError)(e)) return;\n                throw e;\n            } finally{\n                // If the user `break`s, abort the ongoing request.\n                if (!done) controller.abort();\n            }\n        }\n        return new Stream(iterator, controller);\n    }\n    [Symbol.asyncIterator]() {\n        return this.iterator();\n    }\n    /**\n     * Splits the stream into two streams which can be\n     * independently read from at different speeds.\n     */ tee() {\n        const left = [];\n        const right = [];\n        const iterator = this.iterator();\n        const teeIterator = (queue)=>{\n            return {\n                next: ()=>{\n                    if (queue.length === 0) {\n                        const result = iterator.next();\n                        left.push(result);\n                        right.push(result);\n                    }\n                    return queue.shift();\n                }\n            };\n        };\n        return [\n            new Stream(()=>teeIterator(left), this.controller),\n            new Stream(()=>teeIterator(right), this.controller)\n        ];\n    }\n    /**\n     * Converts this stream to a newline-separated ReadableStream of\n     * JSON stringified values in the stream\n     * which can be turned back into a Stream with `Stream.fromReadableStream()`.\n     */ toReadableStream() {\n        const self = this;\n        let iter;\n        return (0,_internal_shims_mjs__WEBPACK_IMPORTED_MODULE_1__.makeReadableStream)({\n            async start () {\n                iter = self[Symbol.asyncIterator]();\n            },\n            async pull (ctrl) {\n                try {\n                    const { value, done } = await iter.next();\n                    if (done) return ctrl.close();\n                    const bytes = (0,_internal_utils_bytes_mjs__WEBPACK_IMPORTED_MODULE_4__.encodeUTF8)(JSON.stringify(value) + \"\\n\");\n                    ctrl.enqueue(bytes);\n                } catch (err) {\n                    ctrl.error(err);\n                }\n            },\n            async cancel () {\n                await iter.return?.();\n            }\n        });\n    }\n}\nasync function* _iterSSEMessages(response, controller) {\n    if (!response.body) {\n        controller.abort();\n        if (typeof globalThis.navigator !== \"undefined\" && globalThis.navigator.product === \"ReactNative\") {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_0__.OpenAIError(`The default react-native fetch implementation does not support streaming. Please use expo/fetch: https://docs.expo.dev/versions/latest/sdk/expo/#expofetch-api`);\n        }\n        throw new _error_mjs__WEBPACK_IMPORTED_MODULE_0__.OpenAIError(`Attempted to iterate over a response with no body`);\n    }\n    const sseDecoder = new SSEDecoder();\n    const lineDecoder = new _internal_decoders_line_mjs__WEBPACK_IMPORTED_MODULE_2__.LineDecoder();\n    const iter = (0,_internal_shims_mjs__WEBPACK_IMPORTED_MODULE_1__.ReadableStreamToAsyncIterable)(response.body);\n    for await (const sseChunk of iterSSEChunks(iter)){\n        for (const line of lineDecoder.decode(sseChunk)){\n            const sse = sseDecoder.decode(line);\n            if (sse) yield sse;\n        }\n    }\n    for (const line of lineDecoder.flush()){\n        const sse = sseDecoder.decode(line);\n        if (sse) yield sse;\n    }\n}\n/**\n * Given an async iterable iterator, iterates over it and yields full\n * SSE chunks, i.e. yields when a double new-line is encountered.\n */ async function* iterSSEChunks(iterator) {\n    let data = new Uint8Array();\n    for await (const chunk of iterator){\n        if (chunk == null) {\n            continue;\n        }\n        const binaryChunk = chunk instanceof ArrayBuffer ? new Uint8Array(chunk) : typeof chunk === \"string\" ? (0,_internal_utils_bytes_mjs__WEBPACK_IMPORTED_MODULE_4__.encodeUTF8)(chunk) : chunk;\n        let newData = new Uint8Array(data.length + binaryChunk.length);\n        newData.set(data);\n        newData.set(binaryChunk, data.length);\n        data = newData;\n        let patternIndex;\n        while((patternIndex = (0,_internal_decoders_line_mjs__WEBPACK_IMPORTED_MODULE_2__.findDoubleNewlineIndex)(data)) !== -1){\n            yield data.slice(0, patternIndex);\n            data = data.slice(patternIndex);\n        }\n    }\n    if (data.length > 0) {\n        yield data;\n    }\n}\nclass SSEDecoder {\n    constructor(){\n        this.event = null;\n        this.data = [];\n        this.chunks = [];\n    }\n    decode(line) {\n        if (line.endsWith(\"\\r\")) {\n            line = line.substring(0, line.length - 1);\n        }\n        if (!line) {\n            // empty line and we didn't previously encounter any messages\n            if (!this.event && !this.data.length) return null;\n            const sse = {\n                event: this.event,\n                data: this.data.join(\"\\n\"),\n                raw: this.chunks\n            };\n            this.event = null;\n            this.data = [];\n            this.chunks = [];\n            return sse;\n        }\n        this.chunks.push(line);\n        if (line.startsWith(\":\")) {\n            return null;\n        }\n        let [fieldname, _, value] = partition(line, \":\");\n        if (value.startsWith(\" \")) {\n            value = value.substring(1);\n        }\n        if (fieldname === \"event\") {\n            this.event = value;\n        } else if (fieldname === \"data\") {\n            this.data.push(value);\n        }\n        return null;\n    }\n}\nfunction partition(str, delimiter) {\n    const index = str.indexOf(delimiter);\n    if (index !== -1) {\n        return [\n            str.substring(0, index),\n            delimiter,\n            str.substring(index + delimiter.length)\n        ];\n    }\n    return [\n        str,\n        \"\",\n        \"\"\n    ];\n} //# sourceMappingURL=streaming.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/core/streaming.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/core/uploads.mjs":
/*!**************************************************!*\
  !*** ../../node_modules/openai/core/uploads.mjs ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   toFile: () => (/* reexport safe */ _internal_to_file_mjs__WEBPACK_IMPORTED_MODULE_0__.toFile)\n/* harmony export */ });\n/* harmony import */ var _internal_to_file_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../internal/to-file.mjs */ \"(middleware)/../../node_modules/openai/internal/to-file.mjs\");\n //# sourceMappingURL=uploads.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvY29yZS91cGxvYWRzLm1qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFpRCxDQUNqRCxvQ0FBb0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvY29yZS91cGxvYWRzLm1qcz81NDAxIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7IHRvRmlsZSB9IGZyb20gXCIuLi9pbnRlcm5hbC90by1maWxlLm1qc1wiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXBsb2Fkcy5tanMubWFwIl0sIm5hbWVzIjpbInRvRmlsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/core/uploads.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/error.mjs":
/*!*******************************************!*\
  !*** ../../node_modules/openai/error.mjs ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _core_error_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core/error.mjs */ \"(middleware)/../../node_modules/openai/core/error.mjs\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _core_error_mjs__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _core_error_mjs__WEBPACK_IMPORTED_MODULE_0__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n //# sourceMappingURL=error.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvZXJyb3IubWpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWlDLENBQ2pDLGtDQUFrQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vbm9kZV9tb2R1bGVzL29wZW5haS9lcnJvci5tanM/YWYwMCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tIFwiLi9jb3JlL2Vycm9yLm1qc1wiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZXJyb3IubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/error.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/index.mjs":
/*!*******************************************!*\
  !*** ../../node_modules/openai/index.mjs ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   APIConnectionError: () => (/* reexport safe */ _core_error_mjs__WEBPACK_IMPORTED_MODULE_4__.APIConnectionError),\n/* harmony export */   APIConnectionTimeoutError: () => (/* reexport safe */ _core_error_mjs__WEBPACK_IMPORTED_MODULE_4__.APIConnectionTimeoutError),\n/* harmony export */   APIError: () => (/* reexport safe */ _core_error_mjs__WEBPACK_IMPORTED_MODULE_4__.APIError),\n/* harmony export */   APIPromise: () => (/* reexport safe */ _core_api_promise_mjs__WEBPACK_IMPORTED_MODULE_2__.APIPromise),\n/* harmony export */   APIUserAbortError: () => (/* reexport safe */ _core_error_mjs__WEBPACK_IMPORTED_MODULE_4__.APIUserAbortError),\n/* harmony export */   AuthenticationError: () => (/* reexport safe */ _core_error_mjs__WEBPACK_IMPORTED_MODULE_4__.AuthenticationError),\n/* harmony export */   AzureOpenAI: () => (/* reexport safe */ _azure_mjs__WEBPACK_IMPORTED_MODULE_5__.AzureOpenAI),\n/* harmony export */   BadRequestError: () => (/* reexport safe */ _core_error_mjs__WEBPACK_IMPORTED_MODULE_4__.BadRequestError),\n/* harmony export */   ConflictError: () => (/* reexport safe */ _core_error_mjs__WEBPACK_IMPORTED_MODULE_4__.ConflictError),\n/* harmony export */   InternalServerError: () => (/* reexport safe */ _core_error_mjs__WEBPACK_IMPORTED_MODULE_4__.InternalServerError),\n/* harmony export */   NotFoundError: () => (/* reexport safe */ _core_error_mjs__WEBPACK_IMPORTED_MODULE_4__.NotFoundError),\n/* harmony export */   OpenAI: () => (/* reexport safe */ _client_mjs__WEBPACK_IMPORTED_MODULE_0__.OpenAI),\n/* harmony export */   OpenAIError: () => (/* reexport safe */ _core_error_mjs__WEBPACK_IMPORTED_MODULE_4__.OpenAIError),\n/* harmony export */   PagePromise: () => (/* reexport safe */ _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_3__.PagePromise),\n/* harmony export */   PermissionDeniedError: () => (/* reexport safe */ _core_error_mjs__WEBPACK_IMPORTED_MODULE_4__.PermissionDeniedError),\n/* harmony export */   RateLimitError: () => (/* reexport safe */ _core_error_mjs__WEBPACK_IMPORTED_MODULE_4__.RateLimitError),\n/* harmony export */   UnprocessableEntityError: () => (/* reexport safe */ _core_error_mjs__WEBPACK_IMPORTED_MODULE_4__.UnprocessableEntityError),\n/* harmony export */   \"default\": () => (/* reexport safe */ _client_mjs__WEBPACK_IMPORTED_MODULE_0__.OpenAI),\n/* harmony export */   toFile: () => (/* reexport safe */ _core_uploads_mjs__WEBPACK_IMPORTED_MODULE_1__.toFile)\n/* harmony export */ });\n/* harmony import */ var _client_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./client.mjs */ \"(middleware)/../../node_modules/openai/client.mjs\");\n/* harmony import */ var _core_uploads_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./core/uploads.mjs */ \"(middleware)/../../node_modules/openai/core/uploads.mjs\");\n/* harmony import */ var _core_api_promise_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./core/api-promise.mjs */ \"(middleware)/../../node_modules/openai/core/api-promise.mjs\");\n/* harmony import */ var _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./core/pagination.mjs */ \"(middleware)/../../node_modules/openai/core/pagination.mjs\");\n/* harmony import */ var _core_error_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./core/error.mjs */ \"(middleware)/../../node_modules/openai/core/error.mjs\");\n/* harmony import */ var _azure_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./azure.mjs */ \"(middleware)/../../node_modules/openai/azure.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\n\n\n //# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxzRkFBc0Y7QUFDckM7QUFDTDtBQUNRO0FBQ2Q7QUFDYztBQUNrTztBQUM1TyxDQUMxQyxrQ0FBa0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvaW5kZXgubWpzPzc5NDQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmV4cG9ydCB7IE9wZW5BSSBhcyBkZWZhdWx0IH0gZnJvbSBcIi4vY2xpZW50Lm1qc1wiO1xuZXhwb3J0IHsgdG9GaWxlIH0gZnJvbSBcIi4vY29yZS91cGxvYWRzLm1qc1wiO1xuZXhwb3J0IHsgQVBJUHJvbWlzZSB9IGZyb20gXCIuL2NvcmUvYXBpLXByb21pc2UubWpzXCI7XG5leHBvcnQgeyBPcGVuQUkgfSBmcm9tIFwiLi9jbGllbnQubWpzXCI7XG5leHBvcnQgeyBQYWdlUHJvbWlzZSB9IGZyb20gXCIuL2NvcmUvcGFnaW5hdGlvbi5tanNcIjtcbmV4cG9ydCB7IE9wZW5BSUVycm9yLCBBUElFcnJvciwgQVBJQ29ubmVjdGlvbkVycm9yLCBBUElDb25uZWN0aW9uVGltZW91dEVycm9yLCBBUElVc2VyQWJvcnRFcnJvciwgTm90Rm91bmRFcnJvciwgQ29uZmxpY3RFcnJvciwgUmF0ZUxpbWl0RXJyb3IsIEJhZFJlcXVlc3RFcnJvciwgQXV0aGVudGljYXRpb25FcnJvciwgSW50ZXJuYWxTZXJ2ZXJFcnJvciwgUGVybWlzc2lvbkRlbmllZEVycm9yLCBVbnByb2Nlc3NhYmxlRW50aXR5RXJyb3IsIH0gZnJvbSBcIi4vY29yZS9lcnJvci5tanNcIjtcbmV4cG9ydCB7IEF6dXJlT3BlbkFJIH0gZnJvbSBcIi4vYXp1cmUubWpzXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5tanMubWFwIl0sIm5hbWVzIjpbIk9wZW5BSSIsImRlZmF1bHQiLCJ0b0ZpbGUiLCJBUElQcm9taXNlIiwiUGFnZVByb21pc2UiLCJPcGVuQUlFcnJvciIsIkFQSUVycm9yIiwiQVBJQ29ubmVjdGlvbkVycm9yIiwiQVBJQ29ubmVjdGlvblRpbWVvdXRFcnJvciIsIkFQSVVzZXJBYm9ydEVycm9yIiwiTm90Rm91bmRFcnJvciIsIkNvbmZsaWN0RXJyb3IiLCJSYXRlTGltaXRFcnJvciIsIkJhZFJlcXVlc3RFcnJvciIsIkF1dGhlbnRpY2F0aW9uRXJyb3IiLCJJbnRlcm5hbFNlcnZlckVycm9yIiwiUGVybWlzc2lvbkRlbmllZEVycm9yIiwiVW5wcm9jZXNzYWJsZUVudGl0eUVycm9yIiwiQXp1cmVPcGVuQUkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/index.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/internal/decoders/line.mjs":
/*!************************************************************!*\
  !*** ../../node_modules/openai/internal/decoders/line.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LineDecoder: () => (/* binding */ LineDecoder),\n/* harmony export */   findDoubleNewlineIndex: () => (/* binding */ findDoubleNewlineIndex)\n/* harmony export */ });\n/* harmony import */ var _tslib_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tslib.mjs */ \"(middleware)/../../node_modules/openai/internal/tslib.mjs\");\n/* harmony import */ var _utils_bytes_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/bytes.mjs */ \"(middleware)/../../node_modules/openai/internal/utils/bytes.mjs\");\nvar _LineDecoder_buffer, _LineDecoder_carriageReturnIndex;\n\n\n/**\n * A re-implementation of httpx's `LineDecoder` in Python that handles incrementally\n * reading lines from text.\n *\n * https://github.com/encode/httpx/blob/920333ea98118e9cf617f246905d7b202510941c/httpx/_decoders.py#L258\n */ class LineDecoder {\n    constructor(){\n        _LineDecoder_buffer.set(this, void 0);\n        _LineDecoder_carriageReturnIndex.set(this, void 0);\n        (0,_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _LineDecoder_buffer, new Uint8Array(), \"f\");\n        (0,_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _LineDecoder_carriageReturnIndex, null, \"f\");\n    }\n    decode(chunk) {\n        if (chunk == null) {\n            return [];\n        }\n        const binaryChunk = chunk instanceof ArrayBuffer ? new Uint8Array(chunk) : typeof chunk === \"string\" ? (0,_utils_bytes_mjs__WEBPACK_IMPORTED_MODULE_1__.encodeUTF8)(chunk) : chunk;\n        (0,_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _LineDecoder_buffer, (0,_utils_bytes_mjs__WEBPACK_IMPORTED_MODULE_1__.concatBytes)([\n            (0,_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _LineDecoder_buffer, \"f\"),\n            binaryChunk\n        ]), \"f\");\n        const lines = [];\n        let patternIndex;\n        while((patternIndex = findNewlineIndex((0,_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _LineDecoder_buffer, \"f\"), (0,_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _LineDecoder_carriageReturnIndex, \"f\"))) != null){\n            if (patternIndex.carriage && (0,_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _LineDecoder_carriageReturnIndex, \"f\") == null) {\n                // skip until we either get a corresponding `\\n`, a new `\\r` or nothing\n                (0,_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _LineDecoder_carriageReturnIndex, patternIndex.index, \"f\");\n                continue;\n            }\n            // we got double \\r or \\rtext\\n\n            if ((0,_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _LineDecoder_carriageReturnIndex, \"f\") != null && (patternIndex.index !== (0,_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _LineDecoder_carriageReturnIndex, \"f\") + 1 || patternIndex.carriage)) {\n                lines.push((0,_utils_bytes_mjs__WEBPACK_IMPORTED_MODULE_1__.decodeUTF8)((0,_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _LineDecoder_buffer, \"f\").subarray(0, (0,_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _LineDecoder_carriageReturnIndex, \"f\") - 1)));\n                (0,_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _LineDecoder_buffer, (0,_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _LineDecoder_buffer, \"f\").subarray((0,_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _LineDecoder_carriageReturnIndex, \"f\")), \"f\");\n                (0,_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _LineDecoder_carriageReturnIndex, null, \"f\");\n                continue;\n            }\n            const endIndex = (0,_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _LineDecoder_carriageReturnIndex, \"f\") !== null ? patternIndex.preceding - 1 : patternIndex.preceding;\n            const line = (0,_utils_bytes_mjs__WEBPACK_IMPORTED_MODULE_1__.decodeUTF8)((0,_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _LineDecoder_buffer, \"f\").subarray(0, endIndex));\n            lines.push(line);\n            (0,_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _LineDecoder_buffer, (0,_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _LineDecoder_buffer, \"f\").subarray(patternIndex.index), \"f\");\n            (0,_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _LineDecoder_carriageReturnIndex, null, \"f\");\n        }\n        return lines;\n    }\n    flush() {\n        if (!(0,_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _LineDecoder_buffer, \"f\").length) {\n            return [];\n        }\n        return this.decode(\"\\n\");\n    }\n}\n_LineDecoder_buffer = new WeakMap(), _LineDecoder_carriageReturnIndex = new WeakMap();\n// prettier-ignore\nLineDecoder.NEWLINE_CHARS = new Set([\n    \"\\n\",\n    \"\\r\"\n]);\nLineDecoder.NEWLINE_REGEXP = /\\r\\n|[\\n\\r]/g;\n/**\n * This function searches the buffer for the end patterns, (\\r or \\n)\n * and returns an object with the index preceding the matched newline and the\n * index after the newline char. `null` is returned if no new line is found.\n *\n * ```ts\n * findNewLineIndex('abc\\ndef') -> { preceding: 2, index: 3 }\n * ```\n */ function findNewlineIndex(buffer, startIndex) {\n    const newline = 0x0a; // \\n\n    const carriage = 0x0d; // \\r\n    for(let i = startIndex ?? 0; i < buffer.length; i++){\n        if (buffer[i] === newline) {\n            return {\n                preceding: i,\n                index: i + 1,\n                carriage: false\n            };\n        }\n        if (buffer[i] === carriage) {\n            return {\n                preceding: i,\n                index: i + 1,\n                carriage: true\n            };\n        }\n    }\n    return null;\n}\nfunction findDoubleNewlineIndex(buffer) {\n    // This function searches the buffer for the end patterns (\\r\\r, \\n\\n, \\r\\n\\r\\n)\n    // and returns the index right after the first occurrence of any pattern,\n    // or -1 if none of the patterns are found.\n    const newline = 0x0a; // \\n\n    const carriage = 0x0d; // \\r\n    for(let i = 0; i < buffer.length - 1; i++){\n        if (buffer[i] === newline && buffer[i + 1] === newline) {\n            // \\n\\n\n            return i + 2;\n        }\n        if (buffer[i] === carriage && buffer[i + 1] === carriage) {\n            // \\r\\r\n            return i + 2;\n        }\n        if (buffer[i] === carriage && buffer[i + 1] === newline && i + 3 < buffer.length && buffer[i + 2] === carriage && buffer[i + 3] === newline) {\n            // \\r\\n\\r\\n\n            return i + 4;\n        }\n    }\n    return -1;\n} //# sourceMappingURL=line.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvaW50ZXJuYWwvZGVjb2RlcnMvbGluZS5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLElBQUlBLHFCQUFxQkM7QUFDcUQ7QUFDTDtBQUN6RTs7Ozs7Q0FLQyxHQUNNLE1BQU1NO0lBQ1RDLGFBQWM7UUFDVlIsb0JBQW9CUyxHQUFHLENBQUMsSUFBSSxFQUFFLEtBQUs7UUFDbkNSLGlDQUFpQ1EsR0FBRyxDQUFDLElBQUksRUFBRSxLQUFLO1FBQ2hETixrRUFBc0JBLENBQUMsSUFBSSxFQUFFSCxxQkFBcUIsSUFBSVUsY0FBYztRQUNwRVAsa0VBQXNCQSxDQUFDLElBQUksRUFBRUYsa0NBQWtDLE1BQU07SUFDekU7SUFDQVUsT0FBT0MsS0FBSyxFQUFFO1FBQ1YsSUFBSUEsU0FBUyxNQUFNO1lBQ2YsT0FBTyxFQUFFO1FBQ2I7UUFDQSxNQUFNQyxjQUFjRCxpQkFBaUJFLGNBQWMsSUFBSUosV0FBV0UsU0FDNUQsT0FBT0EsVUFBVSxXQUFXTiw0REFBVUEsQ0FBQ00sU0FDbkNBO1FBQ1ZULGtFQUFzQkEsQ0FBQyxJQUFJLEVBQUVILHFCQUFxQkksNkRBQVdBLENBQUM7WUFBQ0Ysa0VBQXNCQSxDQUFDLElBQUksRUFBRUYscUJBQXFCO1lBQU1hO1NBQVksR0FBRztRQUN0SSxNQUFNRSxRQUFRLEVBQUU7UUFDaEIsSUFBSUM7UUFDSixNQUFPLENBQUNBLGVBQWVDLGlCQUFpQmYsa0VBQXNCQSxDQUFDLElBQUksRUFBRUYscUJBQXFCLE1BQU1FLGtFQUFzQkEsQ0FBQyxJQUFJLEVBQUVELGtDQUFrQyxLQUFJLEtBQU0sS0FBTTtZQUMzSyxJQUFJZSxhQUFhRSxRQUFRLElBQUloQixrRUFBc0JBLENBQUMsSUFBSSxFQUFFRCxrQ0FBa0MsUUFBUSxNQUFNO2dCQUN0Ryx1RUFBdUU7Z0JBQ3ZFRSxrRUFBc0JBLENBQUMsSUFBSSxFQUFFRixrQ0FBa0NlLGFBQWFHLEtBQUssRUFBRTtnQkFDbkY7WUFDSjtZQUNBLCtCQUErQjtZQUMvQixJQUFJakIsa0VBQXNCQSxDQUFDLElBQUksRUFBRUQsa0NBQWtDLFFBQVEsUUFDdEVlLENBQUFBLGFBQWFHLEtBQUssS0FBS2pCLGtFQUFzQkEsQ0FBQyxJQUFJLEVBQUVELGtDQUFrQyxPQUFPLEtBQUtlLGFBQWFFLFFBQVEsR0FBRztnQkFDM0hILE1BQU1LLElBQUksQ0FBQ2YsNERBQVVBLENBQUNILGtFQUFzQkEsQ0FBQyxJQUFJLEVBQUVGLHFCQUFxQixLQUFLcUIsUUFBUSxDQUFDLEdBQUduQixrRUFBc0JBLENBQUMsSUFBSSxFQUFFRCxrQ0FBa0MsT0FBTztnQkFDL0pFLGtFQUFzQkEsQ0FBQyxJQUFJLEVBQUVILHFCQUFxQkUsa0VBQXNCQSxDQUFDLElBQUksRUFBRUYscUJBQXFCLEtBQUtxQixRQUFRLENBQUNuQixrRUFBc0JBLENBQUMsSUFBSSxFQUFFRCxrQ0FBa0MsT0FBTztnQkFDeExFLGtFQUFzQkEsQ0FBQyxJQUFJLEVBQUVGLGtDQUFrQyxNQUFNO2dCQUNyRTtZQUNKO1lBQ0EsTUFBTXFCLFdBQVdwQixrRUFBc0JBLENBQUMsSUFBSSxFQUFFRCxrQ0FBa0MsU0FBUyxPQUFPZSxhQUFhTyxTQUFTLEdBQUcsSUFBSVAsYUFBYU8sU0FBUztZQUNuSixNQUFNQyxPQUFPbkIsNERBQVVBLENBQUNILGtFQUFzQkEsQ0FBQyxJQUFJLEVBQUVGLHFCQUFxQixLQUFLcUIsUUFBUSxDQUFDLEdBQUdDO1lBQzNGUCxNQUFNSyxJQUFJLENBQUNJO1lBQ1hyQixrRUFBc0JBLENBQUMsSUFBSSxFQUFFSCxxQkFBcUJFLGtFQUFzQkEsQ0FBQyxJQUFJLEVBQUVGLHFCQUFxQixLQUFLcUIsUUFBUSxDQUFDTCxhQUFhRyxLQUFLLEdBQUc7WUFDdkloQixrRUFBc0JBLENBQUMsSUFBSSxFQUFFRixrQ0FBa0MsTUFBTTtRQUN6RTtRQUNBLE9BQU9jO0lBQ1g7SUFDQVUsUUFBUTtRQUNKLElBQUksQ0FBQ3ZCLGtFQUFzQkEsQ0FBQyxJQUFJLEVBQUVGLHFCQUFxQixLQUFLMEIsTUFBTSxFQUFFO1lBQ2hFLE9BQU8sRUFBRTtRQUNiO1FBQ0EsT0FBTyxJQUFJLENBQUNmLE1BQU0sQ0FBQztJQUN2QjtBQUNKO0FBQ0FYLHNCQUFzQixJQUFJMkIsV0FBVzFCLG1DQUFtQyxJQUFJMEI7QUFDNUUsa0JBQWtCO0FBQ2xCcEIsWUFBWXFCLGFBQWEsR0FBRyxJQUFJQyxJQUFJO0lBQUM7SUFBTTtDQUFLO0FBQ2hEdEIsWUFBWXVCLGNBQWMsR0FBRztBQUM3Qjs7Ozs7Ozs7Q0FRQyxHQUNELFNBQVNiLGlCQUFpQmMsTUFBTSxFQUFFQyxVQUFVO0lBQ3hDLE1BQU1DLFVBQVUsTUFBTSxLQUFLO0lBQzNCLE1BQU1mLFdBQVcsTUFBTSxLQUFLO0lBQzVCLElBQUssSUFBSWdCLElBQUlGLGNBQWMsR0FBR0UsSUFBSUgsT0FBT0wsTUFBTSxFQUFFUSxJQUFLO1FBQ2xELElBQUlILE1BQU0sQ0FBQ0csRUFBRSxLQUFLRCxTQUFTO1lBQ3ZCLE9BQU87Z0JBQUVWLFdBQVdXO2dCQUFHZixPQUFPZSxJQUFJO2dCQUFHaEIsVUFBVTtZQUFNO1FBQ3pEO1FBQ0EsSUFBSWEsTUFBTSxDQUFDRyxFQUFFLEtBQUtoQixVQUFVO1lBQ3hCLE9BQU87Z0JBQUVLLFdBQVdXO2dCQUFHZixPQUFPZSxJQUFJO2dCQUFHaEIsVUFBVTtZQUFLO1FBQ3hEO0lBQ0o7SUFDQSxPQUFPO0FBQ1g7QUFDTyxTQUFTaUIsdUJBQXVCSixNQUFNO0lBQ3pDLGdGQUFnRjtJQUNoRix5RUFBeUU7SUFDekUsMkNBQTJDO0lBQzNDLE1BQU1FLFVBQVUsTUFBTSxLQUFLO0lBQzNCLE1BQU1mLFdBQVcsTUFBTSxLQUFLO0lBQzVCLElBQUssSUFBSWdCLElBQUksR0FBR0EsSUFBSUgsT0FBT0wsTUFBTSxHQUFHLEdBQUdRLElBQUs7UUFDeEMsSUFBSUgsTUFBTSxDQUFDRyxFQUFFLEtBQUtELFdBQVdGLE1BQU0sQ0FBQ0csSUFBSSxFQUFFLEtBQUtELFNBQVM7WUFDcEQsT0FBTztZQUNQLE9BQU9DLElBQUk7UUFDZjtRQUNBLElBQUlILE1BQU0sQ0FBQ0csRUFBRSxLQUFLaEIsWUFBWWEsTUFBTSxDQUFDRyxJQUFJLEVBQUUsS0FBS2hCLFVBQVU7WUFDdEQsT0FBTztZQUNQLE9BQU9nQixJQUFJO1FBQ2Y7UUFDQSxJQUFJSCxNQUFNLENBQUNHLEVBQUUsS0FBS2hCLFlBQ2RhLE1BQU0sQ0FBQ0csSUFBSSxFQUFFLEtBQUtELFdBQ2xCQyxJQUFJLElBQUlILE9BQU9MLE1BQU0sSUFDckJLLE1BQU0sQ0FBQ0csSUFBSSxFQUFFLEtBQUtoQixZQUNsQmEsTUFBTSxDQUFDRyxJQUFJLEVBQUUsS0FBS0QsU0FBUztZQUMzQixXQUFXO1lBQ1gsT0FBT0MsSUFBSTtRQUNmO0lBQ0o7SUFDQSxPQUFPLENBQUM7QUFDWixFQUNBLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vbm9kZV9tb2R1bGVzL29wZW5haS9pbnRlcm5hbC9kZWNvZGVycy9saW5lLm1qcz8zMThmIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBfTGluZURlY29kZXJfYnVmZmVyLCBfTGluZURlY29kZXJfY2FycmlhZ2VSZXR1cm5JbmRleDtcbmltcG9ydCB7IF9fY2xhc3NQcml2YXRlRmllbGRHZXQsIF9fY2xhc3NQcml2YXRlRmllbGRTZXQgfSBmcm9tIFwiLi4vdHNsaWIubWpzXCI7XG5pbXBvcnQgeyBjb25jYXRCeXRlcywgZGVjb2RlVVRGOCwgZW5jb2RlVVRGOCB9IGZyb20gXCIuLi91dGlscy9ieXRlcy5tanNcIjtcbi8qKlxuICogQSByZS1pbXBsZW1lbnRhdGlvbiBvZiBodHRweCdzIGBMaW5lRGVjb2RlcmAgaW4gUHl0aG9uIHRoYXQgaGFuZGxlcyBpbmNyZW1lbnRhbGx5XG4gKiByZWFkaW5nIGxpbmVzIGZyb20gdGV4dC5cbiAqXG4gKiBodHRwczovL2dpdGh1Yi5jb20vZW5jb2RlL2h0dHB4L2Jsb2IvOTIwMzMzZWE5ODExOGU5Y2Y2MTdmMjQ2OTA1ZDdiMjAyNTEwOTQxYy9odHRweC9fZGVjb2RlcnMucHkjTDI1OFxuICovXG5leHBvcnQgY2xhc3MgTGluZURlY29kZXIge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBfTGluZURlY29kZXJfYnVmZmVyLnNldCh0aGlzLCB2b2lkIDApO1xuICAgICAgICBfTGluZURlY29kZXJfY2FycmlhZ2VSZXR1cm5JbmRleC5zZXQodGhpcywgdm9pZCAwKTtcbiAgICAgICAgX19jbGFzc1ByaXZhdGVGaWVsZFNldCh0aGlzLCBfTGluZURlY29kZXJfYnVmZmVyLCBuZXcgVWludDhBcnJheSgpLCBcImZcIik7XG4gICAgICAgIF9fY2xhc3NQcml2YXRlRmllbGRTZXQodGhpcywgX0xpbmVEZWNvZGVyX2NhcnJpYWdlUmV0dXJuSW5kZXgsIG51bGwsIFwiZlwiKTtcbiAgICB9XG4gICAgZGVjb2RlKGNodW5rKSB7XG4gICAgICAgIGlmIChjaHVuayA9PSBudWxsKSB7XG4gICAgICAgICAgICByZXR1cm4gW107XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgYmluYXJ5Q2h1bmsgPSBjaHVuayBpbnN0YW5jZW9mIEFycmF5QnVmZmVyID8gbmV3IFVpbnQ4QXJyYXkoY2h1bmspXG4gICAgICAgICAgICA6IHR5cGVvZiBjaHVuayA9PT0gJ3N0cmluZycgPyBlbmNvZGVVVEY4KGNodW5rKVxuICAgICAgICAgICAgICAgIDogY2h1bms7XG4gICAgICAgIF9fY2xhc3NQcml2YXRlRmllbGRTZXQodGhpcywgX0xpbmVEZWNvZGVyX2J1ZmZlciwgY29uY2F0Qnl0ZXMoW19fY2xhc3NQcml2YXRlRmllbGRHZXQodGhpcywgX0xpbmVEZWNvZGVyX2J1ZmZlciwgXCJmXCIpLCBiaW5hcnlDaHVua10pLCBcImZcIik7XG4gICAgICAgIGNvbnN0IGxpbmVzID0gW107XG4gICAgICAgIGxldCBwYXR0ZXJuSW5kZXg7XG4gICAgICAgIHdoaWxlICgocGF0dGVybkluZGV4ID0gZmluZE5ld2xpbmVJbmRleChfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KHRoaXMsIF9MaW5lRGVjb2Rlcl9idWZmZXIsIFwiZlwiKSwgX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfTGluZURlY29kZXJfY2FycmlhZ2VSZXR1cm5JbmRleCwgXCJmXCIpKSkgIT0gbnVsbCkge1xuICAgICAgICAgICAgaWYgKHBhdHRlcm5JbmRleC5jYXJyaWFnZSAmJiBfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KHRoaXMsIF9MaW5lRGVjb2Rlcl9jYXJyaWFnZVJldHVybkluZGV4LCBcImZcIikgPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIC8vIHNraXAgdW50aWwgd2UgZWl0aGVyIGdldCBhIGNvcnJlc3BvbmRpbmcgYFxcbmAsIGEgbmV3IGBcXHJgIG9yIG5vdGhpbmdcbiAgICAgICAgICAgICAgICBfX2NsYXNzUHJpdmF0ZUZpZWxkU2V0KHRoaXMsIF9MaW5lRGVjb2Rlcl9jYXJyaWFnZVJldHVybkluZGV4LCBwYXR0ZXJuSW5kZXguaW5kZXgsIFwiZlwiKTtcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIHdlIGdvdCBkb3VibGUgXFxyIG9yIFxccnRleHRcXG5cbiAgICAgICAgICAgIGlmIChfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KHRoaXMsIF9MaW5lRGVjb2Rlcl9jYXJyaWFnZVJldHVybkluZGV4LCBcImZcIikgIT0gbnVsbCAmJlxuICAgICAgICAgICAgICAgIChwYXR0ZXJuSW5kZXguaW5kZXggIT09IF9fY2xhc3NQcml2YXRlRmllbGRHZXQodGhpcywgX0xpbmVEZWNvZGVyX2NhcnJpYWdlUmV0dXJuSW5kZXgsIFwiZlwiKSArIDEgfHwgcGF0dGVybkluZGV4LmNhcnJpYWdlKSkge1xuICAgICAgICAgICAgICAgIGxpbmVzLnB1c2goZGVjb2RlVVRGOChfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KHRoaXMsIF9MaW5lRGVjb2Rlcl9idWZmZXIsIFwiZlwiKS5zdWJhcnJheSgwLCBfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KHRoaXMsIF9MaW5lRGVjb2Rlcl9jYXJyaWFnZVJldHVybkluZGV4LCBcImZcIikgLSAxKSkpO1xuICAgICAgICAgICAgICAgIF9fY2xhc3NQcml2YXRlRmllbGRTZXQodGhpcywgX0xpbmVEZWNvZGVyX2J1ZmZlciwgX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfTGluZURlY29kZXJfYnVmZmVyLCBcImZcIikuc3ViYXJyYXkoX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfTGluZURlY29kZXJfY2FycmlhZ2VSZXR1cm5JbmRleCwgXCJmXCIpKSwgXCJmXCIpO1xuICAgICAgICAgICAgICAgIF9fY2xhc3NQcml2YXRlRmllbGRTZXQodGhpcywgX0xpbmVEZWNvZGVyX2NhcnJpYWdlUmV0dXJuSW5kZXgsIG51bGwsIFwiZlwiKTtcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IGVuZEluZGV4ID0gX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfTGluZURlY29kZXJfY2FycmlhZ2VSZXR1cm5JbmRleCwgXCJmXCIpICE9PSBudWxsID8gcGF0dGVybkluZGV4LnByZWNlZGluZyAtIDEgOiBwYXR0ZXJuSW5kZXgucHJlY2VkaW5nO1xuICAgICAgICAgICAgY29uc3QgbGluZSA9IGRlY29kZVVURjgoX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfTGluZURlY29kZXJfYnVmZmVyLCBcImZcIikuc3ViYXJyYXkoMCwgZW5kSW5kZXgpKTtcbiAgICAgICAgICAgIGxpbmVzLnB1c2gobGluZSk7XG4gICAgICAgICAgICBfX2NsYXNzUHJpdmF0ZUZpZWxkU2V0KHRoaXMsIF9MaW5lRGVjb2Rlcl9idWZmZXIsIF9fY2xhc3NQcml2YXRlRmllbGRHZXQodGhpcywgX0xpbmVEZWNvZGVyX2J1ZmZlciwgXCJmXCIpLnN1YmFycmF5KHBhdHRlcm5JbmRleC5pbmRleCksIFwiZlwiKTtcbiAgICAgICAgICAgIF9fY2xhc3NQcml2YXRlRmllbGRTZXQodGhpcywgX0xpbmVEZWNvZGVyX2NhcnJpYWdlUmV0dXJuSW5kZXgsIG51bGwsIFwiZlwiKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbGluZXM7XG4gICAgfVxuICAgIGZsdXNoKCkge1xuICAgICAgICBpZiAoIV9fY2xhc3NQcml2YXRlRmllbGRHZXQodGhpcywgX0xpbmVEZWNvZGVyX2J1ZmZlciwgXCJmXCIpLmxlbmd0aCkge1xuICAgICAgICAgICAgcmV0dXJuIFtdO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLmRlY29kZSgnXFxuJyk7XG4gICAgfVxufVxuX0xpbmVEZWNvZGVyX2J1ZmZlciA9IG5ldyBXZWFrTWFwKCksIF9MaW5lRGVjb2Rlcl9jYXJyaWFnZVJldHVybkluZGV4ID0gbmV3IFdlYWtNYXAoKTtcbi8vIHByZXR0aWVyLWlnbm9yZVxuTGluZURlY29kZXIuTkVXTElORV9DSEFSUyA9IG5ldyBTZXQoWydcXG4nLCAnXFxyJ10pO1xuTGluZURlY29kZXIuTkVXTElORV9SRUdFWFAgPSAvXFxyXFxufFtcXG5cXHJdL2c7XG4vKipcbiAqIFRoaXMgZnVuY3Rpb24gc2VhcmNoZXMgdGhlIGJ1ZmZlciBmb3IgdGhlIGVuZCBwYXR0ZXJucywgKFxcciBvciBcXG4pXG4gKiBhbmQgcmV0dXJucyBhbiBvYmplY3Qgd2l0aCB0aGUgaW5kZXggcHJlY2VkaW5nIHRoZSBtYXRjaGVkIG5ld2xpbmUgYW5kIHRoZVxuICogaW5kZXggYWZ0ZXIgdGhlIG5ld2xpbmUgY2hhci4gYG51bGxgIGlzIHJldHVybmVkIGlmIG5vIG5ldyBsaW5lIGlzIGZvdW5kLlxuICpcbiAqIGBgYHRzXG4gKiBmaW5kTmV3TGluZUluZGV4KCdhYmNcXG5kZWYnKSAtPiB7IHByZWNlZGluZzogMiwgaW5kZXg6IDMgfVxuICogYGBgXG4gKi9cbmZ1bmN0aW9uIGZpbmROZXdsaW5lSW5kZXgoYnVmZmVyLCBzdGFydEluZGV4KSB7XG4gICAgY29uc3QgbmV3bGluZSA9IDB4MGE7IC8vIFxcblxuICAgIGNvbnN0IGNhcnJpYWdlID0gMHgwZDsgLy8gXFxyXG4gICAgZm9yIChsZXQgaSA9IHN0YXJ0SW5kZXggPz8gMDsgaSA8IGJ1ZmZlci5sZW5ndGg7IGkrKykge1xuICAgICAgICBpZiAoYnVmZmVyW2ldID09PSBuZXdsaW5lKSB7XG4gICAgICAgICAgICByZXR1cm4geyBwcmVjZWRpbmc6IGksIGluZGV4OiBpICsgMSwgY2FycmlhZ2U6IGZhbHNlIH07XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGJ1ZmZlcltpXSA9PT0gY2FycmlhZ2UpIHtcbiAgICAgICAgICAgIHJldHVybiB7IHByZWNlZGluZzogaSwgaW5kZXg6IGkgKyAxLCBjYXJyaWFnZTogdHJ1ZSB9O1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBudWxsO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGZpbmREb3VibGVOZXdsaW5lSW5kZXgoYnVmZmVyKSB7XG4gICAgLy8gVGhpcyBmdW5jdGlvbiBzZWFyY2hlcyB0aGUgYnVmZmVyIGZvciB0aGUgZW5kIHBhdHRlcm5zIChcXHJcXHIsIFxcblxcbiwgXFxyXFxuXFxyXFxuKVxuICAgIC8vIGFuZCByZXR1cm5zIHRoZSBpbmRleCByaWdodCBhZnRlciB0aGUgZmlyc3Qgb2NjdXJyZW5jZSBvZiBhbnkgcGF0dGVybixcbiAgICAvLyBvciAtMSBpZiBub25lIG9mIHRoZSBwYXR0ZXJucyBhcmUgZm91bmQuXG4gICAgY29uc3QgbmV3bGluZSA9IDB4MGE7IC8vIFxcblxuICAgIGNvbnN0IGNhcnJpYWdlID0gMHgwZDsgLy8gXFxyXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBidWZmZXIubGVuZ3RoIC0gMTsgaSsrKSB7XG4gICAgICAgIGlmIChidWZmZXJbaV0gPT09IG5ld2xpbmUgJiYgYnVmZmVyW2kgKyAxXSA9PT0gbmV3bGluZSkge1xuICAgICAgICAgICAgLy8gXFxuXFxuXG4gICAgICAgICAgICByZXR1cm4gaSArIDI7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGJ1ZmZlcltpXSA9PT0gY2FycmlhZ2UgJiYgYnVmZmVyW2kgKyAxXSA9PT0gY2FycmlhZ2UpIHtcbiAgICAgICAgICAgIC8vIFxcclxcclxuICAgICAgICAgICAgcmV0dXJuIGkgKyAyO1xuICAgICAgICB9XG4gICAgICAgIGlmIChidWZmZXJbaV0gPT09IGNhcnJpYWdlICYmXG4gICAgICAgICAgICBidWZmZXJbaSArIDFdID09PSBuZXdsaW5lICYmXG4gICAgICAgICAgICBpICsgMyA8IGJ1ZmZlci5sZW5ndGggJiZcbiAgICAgICAgICAgIGJ1ZmZlcltpICsgMl0gPT09IGNhcnJpYWdlICYmXG4gICAgICAgICAgICBidWZmZXJbaSArIDNdID09PSBuZXdsaW5lKSB7XG4gICAgICAgICAgICAvLyBcXHJcXG5cXHJcXG5cbiAgICAgICAgICAgIHJldHVybiBpICsgNDtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gLTE7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1saW5lLm1qcy5tYXAiXSwibmFtZXMiOlsiX0xpbmVEZWNvZGVyX2J1ZmZlciIsIl9MaW5lRGVjb2Rlcl9jYXJyaWFnZVJldHVybkluZGV4IiwiX19jbGFzc1ByaXZhdGVGaWVsZEdldCIsIl9fY2xhc3NQcml2YXRlRmllbGRTZXQiLCJjb25jYXRCeXRlcyIsImRlY29kZVVURjgiLCJlbmNvZGVVVEY4IiwiTGluZURlY29kZXIiLCJjb25zdHJ1Y3RvciIsInNldCIsIlVpbnQ4QXJyYXkiLCJkZWNvZGUiLCJjaHVuayIsImJpbmFyeUNodW5rIiwiQXJyYXlCdWZmZXIiLCJsaW5lcyIsInBhdHRlcm5JbmRleCIsImZpbmROZXdsaW5lSW5kZXgiLCJjYXJyaWFnZSIsImluZGV4IiwicHVzaCIsInN1YmFycmF5IiwiZW5kSW5kZXgiLCJwcmVjZWRpbmciLCJsaW5lIiwiZmx1c2giLCJsZW5ndGgiLCJXZWFrTWFwIiwiTkVXTElORV9DSEFSUyIsIlNldCIsIk5FV0xJTkVfUkVHRVhQIiwiYnVmZmVyIiwic3RhcnRJbmRleCIsIm5ld2xpbmUiLCJpIiwiZmluZERvdWJsZU5ld2xpbmVJbmRleCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/internal/decoders/line.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/internal/detect-platform.mjs":
/*!**************************************************************!*\
  !*** ../../node_modules/openai/internal/detect-platform.mjs ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getPlatformHeaders: () => (/* binding */ getPlatformHeaders),\n/* harmony export */   isRunningInBrowser: () => (/* binding */ isRunningInBrowser)\n/* harmony export */ });\n/* harmony import */ var _version_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../version.mjs */ \"(middleware)/../../node_modules/openai/version.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nconst isRunningInBrowser = ()=>{\n    return(// @ts-ignore\n     false && // @ts-ignore\n    0);\n};\n/**\n * Note this does not detect 'browser'; for that, use getBrowserInfo().\n */ function getDetectedPlatform() {\n    if (typeof Deno !== \"undefined\" && Deno.build != null) {\n        return \"deno\";\n    }\n    if (true) {\n        return \"edge\";\n    }\n    if (Object.prototype.toString.call(typeof globalThis.process !== \"undefined\" ? globalThis.process : 0) === \"[object process]\") {\n        return \"node\";\n    }\n    return \"unknown\";\n}\nconst getPlatformProperties = ()=>{\n    const detectedPlatform = getDetectedPlatform();\n    if (detectedPlatform === \"deno\") {\n        return {\n            \"X-Stainless-Lang\": \"js\",\n            \"X-Stainless-Package-Version\": _version_mjs__WEBPACK_IMPORTED_MODULE_0__.VERSION,\n            \"X-Stainless-OS\": normalizePlatform(Deno.build.os),\n            \"X-Stainless-Arch\": normalizeArch(Deno.build.arch),\n            \"X-Stainless-Runtime\": \"deno\",\n            \"X-Stainless-Runtime-Version\": typeof Deno.version === \"string\" ? Deno.version : Deno.version?.deno ?? \"unknown\"\n        };\n    }\n    if (true) {\n        return {\n            \"X-Stainless-Lang\": \"js\",\n            \"X-Stainless-Package-Version\": _version_mjs__WEBPACK_IMPORTED_MODULE_0__.VERSION,\n            \"X-Stainless-OS\": \"Unknown\",\n            \"X-Stainless-Arch\": `other:${\"edge-runtime\"}`,\n            \"X-Stainless-Runtime\": \"edge\",\n            \"X-Stainless-Runtime-Version\": globalThis.process.version\n        };\n    }\n    // Check if Node.js\n    if (detectedPlatform === \"node\") {\n        return {\n            \"X-Stainless-Lang\": \"js\",\n            \"X-Stainless-Package-Version\": _version_mjs__WEBPACK_IMPORTED_MODULE_0__.VERSION,\n            \"X-Stainless-OS\": normalizePlatform(globalThis.process.platform ?? \"unknown\"),\n            \"X-Stainless-Arch\": normalizeArch(globalThis.process.arch ?? \"unknown\"),\n            \"X-Stainless-Runtime\": \"node\",\n            \"X-Stainless-Runtime-Version\": globalThis.process.version ?? \"unknown\"\n        };\n    }\n    const browserInfo = getBrowserInfo();\n    if (browserInfo) {\n        return {\n            \"X-Stainless-Lang\": \"js\",\n            \"X-Stainless-Package-Version\": _version_mjs__WEBPACK_IMPORTED_MODULE_0__.VERSION,\n            \"X-Stainless-OS\": \"Unknown\",\n            \"X-Stainless-Arch\": \"unknown\",\n            \"X-Stainless-Runtime\": `browser:${browserInfo.browser}`,\n            \"X-Stainless-Runtime-Version\": browserInfo.version\n        };\n    }\n    // TODO add support for Cloudflare workers, etc.\n    return {\n        \"X-Stainless-Lang\": \"js\",\n        \"X-Stainless-Package-Version\": _version_mjs__WEBPACK_IMPORTED_MODULE_0__.VERSION,\n        \"X-Stainless-OS\": \"Unknown\",\n        \"X-Stainless-Arch\": \"unknown\",\n        \"X-Stainless-Runtime\": \"unknown\",\n        \"X-Stainless-Runtime-Version\": \"unknown\"\n    };\n};\n// Note: modified from https://github.com/JS-DevTools/host-environment/blob/b1ab79ecde37db5d6e163c050e54fe7d287d7c92/src/isomorphic.browser.ts\nfunction getBrowserInfo() {\n    if (typeof navigator === \"undefined\" || !navigator) {\n        return null;\n    }\n    // NOTE: The order matters here!\n    const browserPatterns = [\n        {\n            key: \"edge\",\n            pattern: /Edge(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/\n        },\n        {\n            key: \"ie\",\n            pattern: /MSIE(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/\n        },\n        {\n            key: \"ie\",\n            pattern: /Trident(?:.*rv\\:(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/\n        },\n        {\n            key: \"chrome\",\n            pattern: /Chrome(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/\n        },\n        {\n            key: \"firefox\",\n            pattern: /Firefox(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/\n        },\n        {\n            key: \"safari\",\n            pattern: /(?:Version\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?(?:\\W+Mobile\\S*)?\\W+Safari/\n        }\n    ];\n    // Find the FIRST matching browser\n    for (const { key, pattern } of browserPatterns){\n        const match = pattern.exec(navigator.userAgent);\n        if (match) {\n            const major = match[1] || 0;\n            const minor = match[2] || 0;\n            const patch = match[3] || 0;\n            return {\n                browser: key,\n                version: `${major}.${minor}.${patch}`\n            };\n        }\n    }\n    return null;\n}\nconst normalizeArch = (arch)=>{\n    // Node docs:\n    // - https://nodejs.org/api/process.html#processarch\n    // Deno docs:\n    // - https://doc.deno.land/deno/stable/~/Deno.build\n    if (arch === \"x32\") return \"x32\";\n    if (arch === \"x86_64\" || arch === \"x64\") return \"x64\";\n    if (arch === \"arm\") return \"arm\";\n    if (arch === \"aarch64\" || arch === \"arm64\") return \"arm64\";\n    if (arch) return `other:${arch}`;\n    return \"unknown\";\n};\nconst normalizePlatform = (platform)=>{\n    // Node platforms:\n    // - https://nodejs.org/api/process.html#processplatform\n    // Deno platforms:\n    // - https://doc.deno.land/deno/stable/~/Deno.build\n    // - https://github.com/denoland/deno/issues/14799\n    platform = platform.toLowerCase();\n    // NOTE: this iOS check is untested and may not work\n    // Node does not work natively on IOS, there is a fork at\n    // https://github.com/nodejs-mobile/nodejs-mobile\n    // however it is unknown at the time of writing how to detect if it is running\n    if (platform.includes(\"ios\")) return \"iOS\";\n    if (platform === \"android\") return \"Android\";\n    if (platform === \"darwin\") return \"MacOS\";\n    if (platform === \"win32\") return \"Windows\";\n    if (platform === \"freebsd\") return \"FreeBSD\";\n    if (platform === \"openbsd\") return \"OpenBSD\";\n    if (platform === \"linux\") return \"Linux\";\n    if (platform) return `Other:${platform}`;\n    return \"Unknown\";\n};\nlet _platformHeaders;\nconst getPlatformHeaders = ()=>{\n    return _platformHeaders ?? (_platformHeaders = getPlatformProperties());\n}; //# sourceMappingURL=detect-platform.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/internal/detect-platform.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/internal/errors.mjs":
/*!*****************************************************!*\
  !*** ../../node_modules/openai/internal/errors.mjs ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   castToError: () => (/* binding */ castToError),\n/* harmony export */   isAbortError: () => (/* binding */ isAbortError)\n/* harmony export */ });\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nfunction isAbortError(err) {\n    return typeof err === \"object\" && err !== null && // Spec-compliant fetch implementations\n    (\"name\" in err && err.name === \"AbortError\" || // Expo fetch\n    \"message\" in err && String(err.message).includes(\"FetchRequestCanceledException\"));\n}\nconst castToError = (err)=>{\n    if (err instanceof Error) return err;\n    if (typeof err === \"object\" && err !== null) {\n        try {\n            if (Object.prototype.toString.call(err) === \"[object Error]\") {\n                // @ts-ignore - not all envs have native support for cause yet\n                const error = new Error(err.message, err.cause ? {\n                    cause: err.cause\n                } : {});\n                if (err.stack) error.stack = err.stack;\n                // @ts-ignore - not all envs have native support for cause yet\n                if (err.cause && !error.cause) error.cause = err.cause;\n                if (err.name) error.name = err.name;\n                return error;\n            }\n        } catch  {}\n        try {\n            return new Error(JSON.stringify(err));\n        } catch  {}\n    }\n    return new Error(err);\n}; //# sourceMappingURL=errors.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvaW50ZXJuYWwvZXJyb3JzLm1qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLHNGQUFzRjtBQUMvRSxTQUFTQSxhQUFhQyxHQUFHO0lBQzVCLE9BQVEsT0FBT0EsUUFBUSxZQUNuQkEsUUFBUSxRQUNSLHVDQUF1QztJQUN0QyxXQUFXQSxPQUFPQSxJQUFJQyxJQUFJLEtBQUssZ0JBQzVCLGFBQWE7SUFDWixhQUFhRCxPQUFPRSxPQUFPRixJQUFJRyxPQUFPLEVBQUVDLFFBQVEsQ0FBQyxnQ0FBZ0M7QUFDOUY7QUFDTyxNQUFNQyxjQUFjLENBQUNMO0lBQ3hCLElBQUlBLGVBQWVNLE9BQ2YsT0FBT047SUFDWCxJQUFJLE9BQU9BLFFBQVEsWUFBWUEsUUFBUSxNQUFNO1FBQ3pDLElBQUk7WUFDQSxJQUFJTyxPQUFPQyxTQUFTLENBQUNDLFFBQVEsQ0FBQ0MsSUFBSSxDQUFDVixTQUFTLGtCQUFrQjtnQkFDMUQsOERBQThEO2dCQUM5RCxNQUFNVyxRQUFRLElBQUlMLE1BQU1OLElBQUlHLE9BQU8sRUFBRUgsSUFBSVksS0FBSyxHQUFHO29CQUFFQSxPQUFPWixJQUFJWSxLQUFLO2dCQUFDLElBQUksQ0FBQztnQkFDekUsSUFBSVosSUFBSWEsS0FBSyxFQUNURixNQUFNRSxLQUFLLEdBQUdiLElBQUlhLEtBQUs7Z0JBQzNCLDhEQUE4RDtnQkFDOUQsSUFBSWIsSUFBSVksS0FBSyxJQUFJLENBQUNELE1BQU1DLEtBQUssRUFDekJELE1BQU1DLEtBQUssR0FBR1osSUFBSVksS0FBSztnQkFDM0IsSUFBSVosSUFBSUMsSUFBSSxFQUNSVSxNQUFNVixJQUFJLEdBQUdELElBQUlDLElBQUk7Z0JBQ3pCLE9BQU9VO1lBQ1g7UUFDSixFQUNBLE9BQU0sQ0FBRTtRQUNSLElBQUk7WUFDQSxPQUFPLElBQUlMLE1BQU1RLEtBQUtDLFNBQVMsQ0FBQ2Y7UUFDcEMsRUFDQSxPQUFNLENBQUU7SUFDWjtJQUNBLE9BQU8sSUFBSU0sTUFBTU47QUFDckIsRUFBRSxDQUNGLG1DQUFtQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vbm9kZV9tb2R1bGVzL29wZW5haS9pbnRlcm5hbC9lcnJvcnMubWpzPzRjYmQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmV4cG9ydCBmdW5jdGlvbiBpc0Fib3J0RXJyb3IoZXJyKSB7XG4gICAgcmV0dXJuICh0eXBlb2YgZXJyID09PSAnb2JqZWN0JyAmJlxuICAgICAgICBlcnIgIT09IG51bGwgJiZcbiAgICAgICAgLy8gU3BlYy1jb21wbGlhbnQgZmV0Y2ggaW1wbGVtZW50YXRpb25zXG4gICAgICAgICgoJ25hbWUnIGluIGVyciAmJiBlcnIubmFtZSA9PT0gJ0Fib3J0RXJyb3InKSB8fFxuICAgICAgICAgICAgLy8gRXhwbyBmZXRjaFxuICAgICAgICAgICAgKCdtZXNzYWdlJyBpbiBlcnIgJiYgU3RyaW5nKGVyci5tZXNzYWdlKS5pbmNsdWRlcygnRmV0Y2hSZXF1ZXN0Q2FuY2VsZWRFeGNlcHRpb24nKSkpKTtcbn1cbmV4cG9ydCBjb25zdCBjYXN0VG9FcnJvciA9IChlcnIpID0+IHtcbiAgICBpZiAoZXJyIGluc3RhbmNlb2YgRXJyb3IpXG4gICAgICAgIHJldHVybiBlcnI7XG4gICAgaWYgKHR5cGVvZiBlcnIgPT09ICdvYmplY3QnICYmIGVyciAhPT0gbnVsbCkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChlcnIpID09PSAnW29iamVjdCBFcnJvcl0nKSB7XG4gICAgICAgICAgICAgICAgLy8gQHRzLWlnbm9yZSAtIG5vdCBhbGwgZW52cyBoYXZlIG5hdGl2ZSBzdXBwb3J0IGZvciBjYXVzZSB5ZXRcbiAgICAgICAgICAgICAgICBjb25zdCBlcnJvciA9IG5ldyBFcnJvcihlcnIubWVzc2FnZSwgZXJyLmNhdXNlID8geyBjYXVzZTogZXJyLmNhdXNlIH0gOiB7fSk7XG4gICAgICAgICAgICAgICAgaWYgKGVyci5zdGFjaylcbiAgICAgICAgICAgICAgICAgICAgZXJyb3Iuc3RhY2sgPSBlcnIuc3RhY2s7XG4gICAgICAgICAgICAgICAgLy8gQHRzLWlnbm9yZSAtIG5vdCBhbGwgZW52cyBoYXZlIG5hdGl2ZSBzdXBwb3J0IGZvciBjYXVzZSB5ZXRcbiAgICAgICAgICAgICAgICBpZiAoZXJyLmNhdXNlICYmICFlcnJvci5jYXVzZSlcbiAgICAgICAgICAgICAgICAgICAgZXJyb3IuY2F1c2UgPSBlcnIuY2F1c2U7XG4gICAgICAgICAgICAgICAgaWYgKGVyci5uYW1lKVxuICAgICAgICAgICAgICAgICAgICBlcnJvci5uYW1lID0gZXJyLm5hbWU7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGVycm9yO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGNhdGNoIHsgfVxuICAgICAgICB0cnkge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBFcnJvcihKU09OLnN0cmluZ2lmeShlcnIpKTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCB7IH1cbiAgICB9XG4gICAgcmV0dXJuIG5ldyBFcnJvcihlcnIpO1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWVycm9ycy5tanMubWFwIl0sIm5hbWVzIjpbImlzQWJvcnRFcnJvciIsImVyciIsIm5hbWUiLCJTdHJpbmciLCJtZXNzYWdlIiwiaW5jbHVkZXMiLCJjYXN0VG9FcnJvciIsIkVycm9yIiwiT2JqZWN0IiwicHJvdG90eXBlIiwidG9TdHJpbmciLCJjYWxsIiwiZXJyb3IiLCJjYXVzZSIsInN0YWNrIiwiSlNPTiIsInN0cmluZ2lmeSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/internal/errors.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/internal/headers.mjs":
/*!******************************************************!*\
  !*** ../../node_modules/openai/internal/headers.mjs ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buildHeaders: () => (/* binding */ buildHeaders),\n/* harmony export */   isEmptyHeaders: () => (/* binding */ isEmptyHeaders)\n/* harmony export */ });\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nconst brand_privateNullableHeaders = Symbol(\"brand.privateNullableHeaders\");\nconst isArray = Array.isArray;\nfunction* iterateHeaders(headers) {\n    if (!headers) return;\n    if (brand_privateNullableHeaders in headers) {\n        const { values, nulls } = headers;\n        yield* values.entries();\n        for (const name of nulls){\n            yield [\n                name,\n                null\n            ];\n        }\n        return;\n    }\n    let shouldClear = false;\n    let iter;\n    if (headers instanceof Headers) {\n        iter = headers.entries();\n    } else if (isArray(headers)) {\n        iter = headers;\n    } else {\n        shouldClear = true;\n        iter = Object.entries(headers ?? {});\n    }\n    for (let row of iter){\n        const name = row[0];\n        if (typeof name !== \"string\") throw new TypeError(\"expected header name to be a string\");\n        const values = isArray(row[1]) ? row[1] : [\n            row[1]\n        ];\n        let didClear = false;\n        for (const value of values){\n            if (value === undefined) continue;\n            // Objects keys always overwrite older headers, they never append.\n            // Yield a null to clear the header before adding the new values.\n            if (shouldClear && !didClear) {\n                didClear = true;\n                yield [\n                    name,\n                    null\n                ];\n            }\n            yield [\n                name,\n                value\n            ];\n        }\n    }\n}\nconst buildHeaders = (newHeaders)=>{\n    const targetHeaders = new Headers();\n    const nullHeaders = new Set();\n    for (const headers of newHeaders){\n        const seenHeaders = new Set();\n        for (const [name, value] of iterateHeaders(headers)){\n            const lowerName = name.toLowerCase();\n            if (!seenHeaders.has(lowerName)) {\n                targetHeaders.delete(name);\n                seenHeaders.add(lowerName);\n            }\n            if (value === null) {\n                targetHeaders.delete(name);\n                nullHeaders.add(lowerName);\n            } else {\n                targetHeaders.append(name, value);\n                nullHeaders.delete(lowerName);\n            }\n        }\n    }\n    return {\n        [brand_privateNullableHeaders]: true,\n        values: targetHeaders,\n        nulls: nullHeaders\n    };\n};\nconst isEmptyHeaders = (headers)=>{\n    for (const _ of iterateHeaders(headers))return false;\n    return true;\n}; //# sourceMappingURL=headers.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvaW50ZXJuYWwvaGVhZGVycy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxzRkFBc0Y7QUFDdEYsTUFBTUEsK0JBQStCQyxPQUFPO0FBQzVDLE1BQU1DLFVBQVVDLE1BQU1ELE9BQU87QUFDN0IsVUFBVUUsZUFBZUMsT0FBTztJQUM1QixJQUFJLENBQUNBLFNBQ0Q7SUFDSixJQUFJTCxnQ0FBZ0NLLFNBQVM7UUFDekMsTUFBTSxFQUFFQyxNQUFNLEVBQUVDLEtBQUssRUFBRSxHQUFHRjtRQUMxQixPQUFPQyxPQUFPRSxPQUFPO1FBQ3JCLEtBQUssTUFBTUMsUUFBUUYsTUFBTztZQUN0QixNQUFNO2dCQUFDRTtnQkFBTTthQUFLO1FBQ3RCO1FBQ0E7SUFDSjtJQUNBLElBQUlDLGNBQWM7SUFDbEIsSUFBSUM7SUFDSixJQUFJTixtQkFBbUJPLFNBQVM7UUFDNUJELE9BQU9OLFFBQVFHLE9BQU87SUFDMUIsT0FDSyxJQUFJTixRQUFRRyxVQUFVO1FBQ3ZCTSxPQUFPTjtJQUNYLE9BQ0s7UUFDREssY0FBYztRQUNkQyxPQUFPRSxPQUFPTCxPQUFPLENBQUNILFdBQVcsQ0FBQztJQUN0QztJQUNBLEtBQUssSUFBSVMsT0FBT0gsS0FBTTtRQUNsQixNQUFNRixPQUFPSyxHQUFHLENBQUMsRUFBRTtRQUNuQixJQUFJLE9BQU9MLFNBQVMsVUFDaEIsTUFBTSxJQUFJTSxVQUFVO1FBQ3hCLE1BQU1ULFNBQVNKLFFBQVFZLEdBQUcsQ0FBQyxFQUFFLElBQUlBLEdBQUcsQ0FBQyxFQUFFLEdBQUc7WUFBQ0EsR0FBRyxDQUFDLEVBQUU7U0FBQztRQUNsRCxJQUFJRSxXQUFXO1FBQ2YsS0FBSyxNQUFNQyxTQUFTWCxPQUFRO1lBQ3hCLElBQUlXLFVBQVVDLFdBQ1Y7WUFDSixrRUFBa0U7WUFDbEUsaUVBQWlFO1lBQ2pFLElBQUlSLGVBQWUsQ0FBQ00sVUFBVTtnQkFDMUJBLFdBQVc7Z0JBQ1gsTUFBTTtvQkFBQ1A7b0JBQU07aUJBQUs7WUFDdEI7WUFDQSxNQUFNO2dCQUFDQTtnQkFBTVE7YUFBTTtRQUN2QjtJQUNKO0FBQ0o7QUFDTyxNQUFNRSxlQUFlLENBQUNDO0lBQ3pCLE1BQU1DLGdCQUFnQixJQUFJVDtJQUMxQixNQUFNVSxjQUFjLElBQUlDO0lBQ3hCLEtBQUssTUFBTWxCLFdBQVdlLFdBQVk7UUFDOUIsTUFBTUksY0FBYyxJQUFJRDtRQUN4QixLQUFLLE1BQU0sQ0FBQ2QsTUFBTVEsTUFBTSxJQUFJYixlQUFlQyxTQUFVO1lBQ2pELE1BQU1vQixZQUFZaEIsS0FBS2lCLFdBQVc7WUFDbEMsSUFBSSxDQUFDRixZQUFZRyxHQUFHLENBQUNGLFlBQVk7Z0JBQzdCSixjQUFjTyxNQUFNLENBQUNuQjtnQkFDckJlLFlBQVlLLEdBQUcsQ0FBQ0o7WUFDcEI7WUFDQSxJQUFJUixVQUFVLE1BQU07Z0JBQ2hCSSxjQUFjTyxNQUFNLENBQUNuQjtnQkFDckJhLFlBQVlPLEdBQUcsQ0FBQ0o7WUFDcEIsT0FDSztnQkFDREosY0FBY1MsTUFBTSxDQUFDckIsTUFBTVE7Z0JBQzNCSyxZQUFZTSxNQUFNLENBQUNIO1lBQ3ZCO1FBQ0o7SUFDSjtJQUNBLE9BQU87UUFBRSxDQUFDekIsNkJBQTZCLEVBQUU7UUFBTU0sUUFBUWU7UUFBZWQsT0FBT2U7SUFBWTtBQUM3RixFQUFFO0FBQ0ssTUFBTVMsaUJBQWlCLENBQUMxQjtJQUMzQixLQUFLLE1BQU0yQixLQUFLNUIsZUFBZUMsU0FDM0IsT0FBTztJQUNYLE9BQU87QUFDWCxFQUFFLENBQ0Ysb0NBQW9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi9ub2RlX21vZHVsZXMvb3BlbmFpL2ludGVybmFsL2hlYWRlcnMubWpzPzVkNTYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmNvbnN0IGJyYW5kX3ByaXZhdGVOdWxsYWJsZUhlYWRlcnMgPSBTeW1ib2woJ2JyYW5kLnByaXZhdGVOdWxsYWJsZUhlYWRlcnMnKTtcbmNvbnN0IGlzQXJyYXkgPSBBcnJheS5pc0FycmF5O1xuZnVuY3Rpb24qIGl0ZXJhdGVIZWFkZXJzKGhlYWRlcnMpIHtcbiAgICBpZiAoIWhlYWRlcnMpXG4gICAgICAgIHJldHVybjtcbiAgICBpZiAoYnJhbmRfcHJpdmF0ZU51bGxhYmxlSGVhZGVycyBpbiBoZWFkZXJzKSB7XG4gICAgICAgIGNvbnN0IHsgdmFsdWVzLCBudWxscyB9ID0gaGVhZGVycztcbiAgICAgICAgeWllbGQqIHZhbHVlcy5lbnRyaWVzKCk7XG4gICAgICAgIGZvciAoY29uc3QgbmFtZSBvZiBudWxscykge1xuICAgICAgICAgICAgeWllbGQgW25hbWUsIG51bGxdO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgbGV0IHNob3VsZENsZWFyID0gZmFsc2U7XG4gICAgbGV0IGl0ZXI7XG4gICAgaWYgKGhlYWRlcnMgaW5zdGFuY2VvZiBIZWFkZXJzKSB7XG4gICAgICAgIGl0ZXIgPSBoZWFkZXJzLmVudHJpZXMoKTtcbiAgICB9XG4gICAgZWxzZSBpZiAoaXNBcnJheShoZWFkZXJzKSkge1xuICAgICAgICBpdGVyID0gaGVhZGVycztcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHNob3VsZENsZWFyID0gdHJ1ZTtcbiAgICAgICAgaXRlciA9IE9iamVjdC5lbnRyaWVzKGhlYWRlcnMgPz8ge30pO1xuICAgIH1cbiAgICBmb3IgKGxldCByb3cgb2YgaXRlcikge1xuICAgICAgICBjb25zdCBuYW1lID0gcm93WzBdO1xuICAgICAgICBpZiAodHlwZW9mIG5hbWUgIT09ICdzdHJpbmcnKVxuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignZXhwZWN0ZWQgaGVhZGVyIG5hbWUgdG8gYmUgYSBzdHJpbmcnKTtcbiAgICAgICAgY29uc3QgdmFsdWVzID0gaXNBcnJheShyb3dbMV0pID8gcm93WzFdIDogW3Jvd1sxXV07XG4gICAgICAgIGxldCBkaWRDbGVhciA9IGZhbHNlO1xuICAgICAgICBmb3IgKGNvbnN0IHZhbHVlIG9mIHZhbHVlcykge1xuICAgICAgICAgICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpXG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICAvLyBPYmplY3RzIGtleXMgYWx3YXlzIG92ZXJ3cml0ZSBvbGRlciBoZWFkZXJzLCB0aGV5IG5ldmVyIGFwcGVuZC5cbiAgICAgICAgICAgIC8vIFlpZWxkIGEgbnVsbCB0byBjbGVhciB0aGUgaGVhZGVyIGJlZm9yZSBhZGRpbmcgdGhlIG5ldyB2YWx1ZXMuXG4gICAgICAgICAgICBpZiAoc2hvdWxkQ2xlYXIgJiYgIWRpZENsZWFyKSB7XG4gICAgICAgICAgICAgICAgZGlkQ2xlYXIgPSB0cnVlO1xuICAgICAgICAgICAgICAgIHlpZWxkIFtuYW1lLCBudWxsXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHlpZWxkIFtuYW1lLCB2YWx1ZV07XG4gICAgICAgIH1cbiAgICB9XG59XG5leHBvcnQgY29uc3QgYnVpbGRIZWFkZXJzID0gKG5ld0hlYWRlcnMpID0+IHtcbiAgICBjb25zdCB0YXJnZXRIZWFkZXJzID0gbmV3IEhlYWRlcnMoKTtcbiAgICBjb25zdCBudWxsSGVhZGVycyA9IG5ldyBTZXQoKTtcbiAgICBmb3IgKGNvbnN0IGhlYWRlcnMgb2YgbmV3SGVhZGVycykge1xuICAgICAgICBjb25zdCBzZWVuSGVhZGVycyA9IG5ldyBTZXQoKTtcbiAgICAgICAgZm9yIChjb25zdCBbbmFtZSwgdmFsdWVdIG9mIGl0ZXJhdGVIZWFkZXJzKGhlYWRlcnMpKSB7XG4gICAgICAgICAgICBjb25zdCBsb3dlck5hbWUgPSBuYW1lLnRvTG93ZXJDYXNlKCk7XG4gICAgICAgICAgICBpZiAoIXNlZW5IZWFkZXJzLmhhcyhsb3dlck5hbWUpKSB7XG4gICAgICAgICAgICAgICAgdGFyZ2V0SGVhZGVycy5kZWxldGUobmFtZSk7XG4gICAgICAgICAgICAgICAgc2VlbkhlYWRlcnMuYWRkKGxvd2VyTmFtZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAodmFsdWUgPT09IG51bGwpIHtcbiAgICAgICAgICAgICAgICB0YXJnZXRIZWFkZXJzLmRlbGV0ZShuYW1lKTtcbiAgICAgICAgICAgICAgICBudWxsSGVhZGVycy5hZGQobG93ZXJOYW1lKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHRhcmdldEhlYWRlcnMuYXBwZW5kKG5hbWUsIHZhbHVlKTtcbiAgICAgICAgICAgICAgICBudWxsSGVhZGVycy5kZWxldGUobG93ZXJOYW1lKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4geyBbYnJhbmRfcHJpdmF0ZU51bGxhYmxlSGVhZGVyc106IHRydWUsIHZhbHVlczogdGFyZ2V0SGVhZGVycywgbnVsbHM6IG51bGxIZWFkZXJzIH07XG59O1xuZXhwb3J0IGNvbnN0IGlzRW1wdHlIZWFkZXJzID0gKGhlYWRlcnMpID0+IHtcbiAgICBmb3IgKGNvbnN0IF8gb2YgaXRlcmF0ZUhlYWRlcnMoaGVhZGVycykpXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICByZXR1cm4gdHJ1ZTtcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1oZWFkZXJzLm1qcy5tYXAiXSwibmFtZXMiOlsiYnJhbmRfcHJpdmF0ZU51bGxhYmxlSGVhZGVycyIsIlN5bWJvbCIsImlzQXJyYXkiLCJBcnJheSIsIml0ZXJhdGVIZWFkZXJzIiwiaGVhZGVycyIsInZhbHVlcyIsIm51bGxzIiwiZW50cmllcyIsIm5hbWUiLCJzaG91bGRDbGVhciIsIml0ZXIiLCJIZWFkZXJzIiwiT2JqZWN0Iiwicm93IiwiVHlwZUVycm9yIiwiZGlkQ2xlYXIiLCJ2YWx1ZSIsInVuZGVmaW5lZCIsImJ1aWxkSGVhZGVycyIsIm5ld0hlYWRlcnMiLCJ0YXJnZXRIZWFkZXJzIiwibnVsbEhlYWRlcnMiLCJTZXQiLCJzZWVuSGVhZGVycyIsImxvd2VyTmFtZSIsInRvTG93ZXJDYXNlIiwiaGFzIiwiZGVsZXRlIiwiYWRkIiwiYXBwZW5kIiwiaXNFbXB0eUhlYWRlcnMiLCJfIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/internal/headers.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/internal/parse.mjs":
/*!****************************************************!*\
  !*** ../../node_modules/openai/internal/parse.mjs ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addRequestID: () => (/* binding */ addRequestID),\n/* harmony export */   defaultParseResponse: () => (/* binding */ defaultParseResponse)\n/* harmony export */ });\n/* harmony import */ var _core_streaming_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/streaming.mjs */ \"(middleware)/../../node_modules/openai/core/streaming.mjs\");\n/* harmony import */ var _utils_log_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/log.mjs */ \"(middleware)/../../node_modules/openai/internal/utils/log.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\nasync function defaultParseResponse(client, props) {\n    const { response, requestLogID, retryOfRequestLogID, startTime } = props;\n    const body = await (async ()=>{\n        if (props.options.stream) {\n            (0,_utils_log_mjs__WEBPACK_IMPORTED_MODULE_1__.loggerFor)(client).debug(\"response\", response.status, response.url, response.headers, response.body);\n            // Note: there is an invariant here that isn't represented in the type system\n            // that if you set `stream: true` the response type must also be `Stream<T>`\n            if (props.options.__streamClass) {\n                return props.options.__streamClass.fromSSEResponse(response, props.controller);\n            }\n            return _core_streaming_mjs__WEBPACK_IMPORTED_MODULE_0__.Stream.fromSSEResponse(response, props.controller);\n        }\n        // fetch refuses to read the body when the status code is 204.\n        if (response.status === 204) {\n            return null;\n        }\n        if (props.options.__binaryResponse) {\n            return response;\n        }\n        const contentType = response.headers.get(\"content-type\");\n        const mediaType = contentType?.split(\";\")[0]?.trim();\n        const isJSON = mediaType?.includes(\"application/json\") || mediaType?.endsWith(\"+json\");\n        if (isJSON) {\n            const json = await response.json();\n            return addRequestID(json, response);\n        }\n        const text = await response.text();\n        return text;\n    })();\n    (0,_utils_log_mjs__WEBPACK_IMPORTED_MODULE_1__.loggerFor)(client).debug(`[${requestLogID}] response parsed`, (0,_utils_log_mjs__WEBPACK_IMPORTED_MODULE_1__.formatRequestDetails)({\n        retryOfRequestLogID,\n        url: response.url,\n        status: response.status,\n        body,\n        durationMs: Date.now() - startTime\n    }));\n    return body;\n}\nfunction addRequestID(value, response) {\n    if (!value || typeof value !== \"object\" || Array.isArray(value)) {\n        return value;\n    }\n    return Object.defineProperty(value, \"_request_id\", {\n        value: response.headers.get(\"x-request-id\"),\n        enumerable: false\n    });\n} //# sourceMappingURL=parse.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvaW50ZXJuYWwvcGFyc2UubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSxzRkFBc0Y7QUFDdkM7QUFDbUI7QUFDM0QsZUFBZUcscUJBQXFCQyxNQUFNLEVBQUVDLEtBQUs7SUFDcEQsTUFBTSxFQUFFQyxRQUFRLEVBQUVDLFlBQVksRUFBRUMsbUJBQW1CLEVBQUVDLFNBQVMsRUFBRSxHQUFHSjtJQUNuRSxNQUFNSyxPQUFPLE1BQU0sQ0FBQztRQUNoQixJQUFJTCxNQUFNTSxPQUFPLENBQUNDLE1BQU0sRUFBRTtZQUN0QlYseURBQVNBLENBQUNFLFFBQVFTLEtBQUssQ0FBQyxZQUFZUCxTQUFTUSxNQUFNLEVBQUVSLFNBQVNTLEdBQUcsRUFBRVQsU0FBU1UsT0FBTyxFQUFFVixTQUFTSSxJQUFJO1lBQ2xHLDZFQUE2RTtZQUM3RSw0RUFBNEU7WUFDNUUsSUFBSUwsTUFBTU0sT0FBTyxDQUFDTSxhQUFhLEVBQUU7Z0JBQzdCLE9BQU9aLE1BQU1NLE9BQU8sQ0FBQ00sYUFBYSxDQUFDQyxlQUFlLENBQUNaLFVBQVVELE1BQU1jLFVBQVU7WUFDakY7WUFDQSxPQUFPbkIsdURBQU1BLENBQUNrQixlQUFlLENBQUNaLFVBQVVELE1BQU1jLFVBQVU7UUFDNUQ7UUFDQSw4REFBOEQ7UUFDOUQsSUFBSWIsU0FBU1EsTUFBTSxLQUFLLEtBQUs7WUFDekIsT0FBTztRQUNYO1FBQ0EsSUFBSVQsTUFBTU0sT0FBTyxDQUFDUyxnQkFBZ0IsRUFBRTtZQUNoQyxPQUFPZDtRQUNYO1FBQ0EsTUFBTWUsY0FBY2YsU0FBU1UsT0FBTyxDQUFDTSxHQUFHLENBQUM7UUFDekMsTUFBTUMsWUFBWUYsYUFBYUcsTUFBTSxJQUFJLENBQUMsRUFBRSxFQUFFQztRQUM5QyxNQUFNQyxTQUFTSCxXQUFXSSxTQUFTLHVCQUF1QkosV0FBV0ssU0FBUztRQUM5RSxJQUFJRixRQUFRO1lBQ1IsTUFBTUcsT0FBTyxNQUFNdkIsU0FBU3VCLElBQUk7WUFDaEMsT0FBT0MsYUFBYUQsTUFBTXZCO1FBQzlCO1FBQ0EsTUFBTXlCLE9BQU8sTUFBTXpCLFNBQVN5QixJQUFJO1FBQ2hDLE9BQU9BO0lBQ1g7SUFDQTdCLHlEQUFTQSxDQUFDRSxRQUFRUyxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQUVOLGFBQWEsaUJBQWlCLENBQUMsRUFBRU4sb0VBQW9CQSxDQUFDO1FBQzlFTztRQUNBTyxLQUFLVCxTQUFTUyxHQUFHO1FBQ2pCRCxRQUFRUixTQUFTUSxNQUFNO1FBQ3ZCSjtRQUNBc0IsWUFBWUMsS0FBS0MsR0FBRyxLQUFLekI7SUFDN0I7SUFDQSxPQUFPQztBQUNYO0FBQ08sU0FBU29CLGFBQWFLLEtBQUssRUFBRTdCLFFBQVE7SUFDeEMsSUFBSSxDQUFDNkIsU0FBUyxPQUFPQSxVQUFVLFlBQVlDLE1BQU1DLE9BQU8sQ0FBQ0YsUUFBUTtRQUM3RCxPQUFPQTtJQUNYO0lBQ0EsT0FBT0csT0FBT0MsY0FBYyxDQUFDSixPQUFPLGVBQWU7UUFDL0NBLE9BQU83QixTQUFTVSxPQUFPLENBQUNNLEdBQUcsQ0FBQztRQUM1QmtCLFlBQVk7SUFDaEI7QUFDSixFQUNBLGtDQUFrQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vbm9kZV9tb2R1bGVzL29wZW5haS9pbnRlcm5hbC9wYXJzZS5tanM/NzBhOCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlIGdlbmVyYXRlZCBmcm9tIG91ciBPcGVuQVBJIHNwZWMgYnkgU3RhaW5sZXNzLiBTZWUgQ09OVFJJQlVUSU5HLm1kIGZvciBkZXRhaWxzLlxuaW1wb3J0IHsgU3RyZWFtIH0gZnJvbSBcIi4uL2NvcmUvc3RyZWFtaW5nLm1qc1wiO1xuaW1wb3J0IHsgZm9ybWF0UmVxdWVzdERldGFpbHMsIGxvZ2dlckZvciB9IGZyb20gXCIuL3V0aWxzL2xvZy5tanNcIjtcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBkZWZhdWx0UGFyc2VSZXNwb25zZShjbGllbnQsIHByb3BzKSB7XG4gICAgY29uc3QgeyByZXNwb25zZSwgcmVxdWVzdExvZ0lELCByZXRyeU9mUmVxdWVzdExvZ0lELCBzdGFydFRpbWUgfSA9IHByb3BzO1xuICAgIGNvbnN0IGJvZHkgPSBhd2FpdCAoYXN5bmMgKCkgPT4ge1xuICAgICAgICBpZiAocHJvcHMub3B0aW9ucy5zdHJlYW0pIHtcbiAgICAgICAgICAgIGxvZ2dlckZvcihjbGllbnQpLmRlYnVnKCdyZXNwb25zZScsIHJlc3BvbnNlLnN0YXR1cywgcmVzcG9uc2UudXJsLCByZXNwb25zZS5oZWFkZXJzLCByZXNwb25zZS5ib2R5KTtcbiAgICAgICAgICAgIC8vIE5vdGU6IHRoZXJlIGlzIGFuIGludmFyaWFudCBoZXJlIHRoYXQgaXNuJ3QgcmVwcmVzZW50ZWQgaW4gdGhlIHR5cGUgc3lzdGVtXG4gICAgICAgICAgICAvLyB0aGF0IGlmIHlvdSBzZXQgYHN0cmVhbTogdHJ1ZWAgdGhlIHJlc3BvbnNlIHR5cGUgbXVzdCBhbHNvIGJlIGBTdHJlYW08VD5gXG4gICAgICAgICAgICBpZiAocHJvcHMub3B0aW9ucy5fX3N0cmVhbUNsYXNzKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHByb3BzLm9wdGlvbnMuX19zdHJlYW1DbGFzcy5mcm9tU1NFUmVzcG9uc2UocmVzcG9uc2UsIHByb3BzLmNvbnRyb2xsZXIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIFN0cmVhbS5mcm9tU1NFUmVzcG9uc2UocmVzcG9uc2UsIHByb3BzLmNvbnRyb2xsZXIpO1xuICAgICAgICB9XG4gICAgICAgIC8vIGZldGNoIHJlZnVzZXMgdG8gcmVhZCB0aGUgYm9keSB3aGVuIHRoZSBzdGF0dXMgY29kZSBpcyAyMDQuXG4gICAgICAgIGlmIChyZXNwb25zZS5zdGF0dXMgPT09IDIwNCkge1xuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHByb3BzLm9wdGlvbnMuX19iaW5hcnlSZXNwb25zZSkge1xuICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGNvbnRlbnRUeXBlID0gcmVzcG9uc2UuaGVhZGVycy5nZXQoJ2NvbnRlbnQtdHlwZScpO1xuICAgICAgICBjb25zdCBtZWRpYVR5cGUgPSBjb250ZW50VHlwZT8uc3BsaXQoJzsnKVswXT8udHJpbSgpO1xuICAgICAgICBjb25zdCBpc0pTT04gPSBtZWRpYVR5cGU/LmluY2x1ZGVzKCdhcHBsaWNhdGlvbi9qc29uJykgfHwgbWVkaWFUeXBlPy5lbmRzV2l0aCgnK2pzb24nKTtcbiAgICAgICAgaWYgKGlzSlNPTikge1xuICAgICAgICAgICAgY29uc3QganNvbiA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcbiAgICAgICAgICAgIHJldHVybiBhZGRSZXF1ZXN0SUQoanNvbiwgcmVzcG9uc2UpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHRleHQgPSBhd2FpdCByZXNwb25zZS50ZXh0KCk7XG4gICAgICAgIHJldHVybiB0ZXh0O1xuICAgIH0pKCk7XG4gICAgbG9nZ2VyRm9yKGNsaWVudCkuZGVidWcoYFske3JlcXVlc3RMb2dJRH1dIHJlc3BvbnNlIHBhcnNlZGAsIGZvcm1hdFJlcXVlc3REZXRhaWxzKHtcbiAgICAgICAgcmV0cnlPZlJlcXVlc3RMb2dJRCxcbiAgICAgICAgdXJsOiByZXNwb25zZS51cmwsXG4gICAgICAgIHN0YXR1czogcmVzcG9uc2Uuc3RhdHVzLFxuICAgICAgICBib2R5LFxuICAgICAgICBkdXJhdGlvbk1zOiBEYXRlLm5vdygpIC0gc3RhcnRUaW1lLFxuICAgIH0pKTtcbiAgICByZXR1cm4gYm9keTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBhZGRSZXF1ZXN0SUQodmFsdWUsIHJlc3BvbnNlKSB7XG4gICAgaWYgKCF2YWx1ZSB8fCB0eXBlb2YgdmFsdWUgIT09ICdvYmplY3QnIHx8IEFycmF5LmlzQXJyYXkodmFsdWUpKSB7XG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9XG4gICAgcmV0dXJuIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh2YWx1ZSwgJ19yZXF1ZXN0X2lkJywge1xuICAgICAgICB2YWx1ZTogcmVzcG9uc2UuaGVhZGVycy5nZXQoJ3gtcmVxdWVzdC1pZCcpLFxuICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICB9KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhcnNlLm1qcy5tYXAiXSwibmFtZXMiOlsiU3RyZWFtIiwiZm9ybWF0UmVxdWVzdERldGFpbHMiLCJsb2dnZXJGb3IiLCJkZWZhdWx0UGFyc2VSZXNwb25zZSIsImNsaWVudCIsInByb3BzIiwicmVzcG9uc2UiLCJyZXF1ZXN0TG9nSUQiLCJyZXRyeU9mUmVxdWVzdExvZ0lEIiwic3RhcnRUaW1lIiwiYm9keSIsIm9wdGlvbnMiLCJzdHJlYW0iLCJkZWJ1ZyIsInN0YXR1cyIsInVybCIsImhlYWRlcnMiLCJfX3N0cmVhbUNsYXNzIiwiZnJvbVNTRVJlc3BvbnNlIiwiY29udHJvbGxlciIsIl9fYmluYXJ5UmVzcG9uc2UiLCJjb250ZW50VHlwZSIsImdldCIsIm1lZGlhVHlwZSIsInNwbGl0IiwidHJpbSIsImlzSlNPTiIsImluY2x1ZGVzIiwiZW5kc1dpdGgiLCJqc29uIiwiYWRkUmVxdWVzdElEIiwidGV4dCIsImR1cmF0aW9uTXMiLCJEYXRlIiwibm93IiwidmFsdWUiLCJBcnJheSIsImlzQXJyYXkiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/internal/parse.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/internal/qs/formats.mjs":
/*!*********************************************************!*\
  !*** ../../node_modules/openai/internal/qs/formats.mjs ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RFC1738: () => (/* binding */ RFC1738),\n/* harmony export */   RFC3986: () => (/* binding */ RFC3986),\n/* harmony export */   default_format: () => (/* binding */ default_format),\n/* harmony export */   formatters: () => (/* binding */ formatters)\n/* harmony export */ });\nconst default_format = \"RFC3986\";\nconst formatters = {\n    RFC1738: (v)=>String(v).replace(/%20/g, \"+\"),\n    RFC3986: (v)=>String(v)\n};\nconst RFC1738 = \"RFC1738\";\nconst RFC3986 = \"RFC3986\"; //# sourceMappingURL=formats.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvaW50ZXJuYWwvcXMvZm9ybWF0cy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFPLE1BQU1BLGlCQUFpQixVQUFVO0FBQ2pDLE1BQU1DLGFBQWE7SUFDdEJDLFNBQVMsQ0FBQ0MsSUFBTUMsT0FBT0QsR0FBR0UsT0FBTyxDQUFDLFFBQVE7SUFDMUNDLFNBQVMsQ0FBQ0gsSUFBTUMsT0FBT0Q7QUFDM0IsRUFBRTtBQUNLLE1BQU1ELFVBQVUsVUFBVTtBQUMxQixNQUFNSSxVQUFVLFVBQVUsQ0FDakMsb0NBQW9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi9ub2RlX21vZHVsZXMvb3BlbmFpL2ludGVybmFsL3FzL2Zvcm1hdHMubWpzP2E5ZWMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IGRlZmF1bHRfZm9ybWF0ID0gJ1JGQzM5ODYnO1xuZXhwb3J0IGNvbnN0IGZvcm1hdHRlcnMgPSB7XG4gICAgUkZDMTczODogKHYpID0+IFN0cmluZyh2KS5yZXBsYWNlKC8lMjAvZywgJysnKSxcbiAgICBSRkMzOTg2OiAodikgPT4gU3RyaW5nKHYpLFxufTtcbmV4cG9ydCBjb25zdCBSRkMxNzM4ID0gJ1JGQzE3MzgnO1xuZXhwb3J0IGNvbnN0IFJGQzM5ODYgPSAnUkZDMzk4Nic7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1mb3JtYXRzLm1qcy5tYXAiXSwibmFtZXMiOlsiZGVmYXVsdF9mb3JtYXQiLCJmb3JtYXR0ZXJzIiwiUkZDMTczOCIsInYiLCJTdHJpbmciLCJyZXBsYWNlIiwiUkZDMzk4NiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/internal/qs/formats.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/internal/qs/index.mjs":
/*!*******************************************************!*\
  !*** ../../node_modules/openai/internal/qs/index.mjs ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   formats: () => (/* binding */ formats),\n/* harmony export */   stringify: () => (/* reexport safe */ _stringify_mjs__WEBPACK_IMPORTED_MODULE_1__.stringify)\n/* harmony export */ });\n/* harmony import */ var _formats_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./formats.mjs */ \"(middleware)/../../node_modules/openai/internal/qs/formats.mjs\");\n/* harmony import */ var _stringify_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./stringify.mjs */ \"(middleware)/../../node_modules/openai/internal/qs/stringify.mjs\");\n\nconst formats = {\n    formatters: _formats_mjs__WEBPACK_IMPORTED_MODULE_0__.formatters,\n    RFC1738: _formats_mjs__WEBPACK_IMPORTED_MODULE_0__.RFC1738,\n    RFC3986: _formats_mjs__WEBPACK_IMPORTED_MODULE_0__.RFC3986,\n    default: _formats_mjs__WEBPACK_IMPORTED_MODULE_0__.default_format\n};\n\n //# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvaW50ZXJuYWwvcXMvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBNkU7QUFDN0UsTUFBTUksVUFBVTtJQUNaSCxVQUFVQSxzREFBQUE7SUFDVkMsT0FBT0EsbURBQUFBO0lBQ1BDLE9BQU9BLG1EQUFBQTtJQUNQRSxTQUFTTCx3REFBY0E7QUFDM0I7QUFDNEM7QUFDekIsQ0FDbkIsa0NBQWtDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi9ub2RlX21vZHVsZXMvb3BlbmFpL2ludGVybmFsL3FzL2luZGV4Lm1qcz82YmU5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGRlZmF1bHRfZm9ybWF0LCBmb3JtYXR0ZXJzLCBSRkMxNzM4LCBSRkMzOTg2IH0gZnJvbSBcIi4vZm9ybWF0cy5tanNcIjtcbmNvbnN0IGZvcm1hdHMgPSB7XG4gICAgZm9ybWF0dGVycyxcbiAgICBSRkMxNzM4LFxuICAgIFJGQzM5ODYsXG4gICAgZGVmYXVsdDogZGVmYXVsdF9mb3JtYXQsXG59O1xuZXhwb3J0IHsgc3RyaW5naWZ5IH0gZnJvbSBcIi4vc3RyaW5naWZ5Lm1qc1wiO1xuZXhwb3J0IHsgZm9ybWF0cyB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXgubWpzLm1hcCJdLCJuYW1lcyI6WyJkZWZhdWx0X2Zvcm1hdCIsImZvcm1hdHRlcnMiLCJSRkMxNzM4IiwiUkZDMzk4NiIsImZvcm1hdHMiLCJkZWZhdWx0Iiwic3RyaW5naWZ5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/internal/qs/index.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/internal/qs/stringify.mjs":
/*!***********************************************************!*\
  !*** ../../node_modules/openai/internal/qs/stringify.mjs ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   stringify: () => (/* binding */ stringify)\n/* harmony export */ });\n/* harmony import */ var _utils_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.mjs */ \"(middleware)/../../node_modules/openai/internal/qs/utils.mjs\");\n/* harmony import */ var _formats_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./formats.mjs */ \"(middleware)/../../node_modules/openai/internal/qs/formats.mjs\");\n\n\nconst has = Object.prototype.hasOwnProperty;\nconst array_prefix_generators = {\n    brackets (prefix) {\n        return String(prefix) + \"[]\";\n    },\n    comma: \"comma\",\n    indices (prefix, key) {\n        return String(prefix) + \"[\" + key + \"]\";\n    },\n    repeat (prefix) {\n        return String(prefix);\n    }\n};\nconst is_array = Array.isArray;\nconst push = Array.prototype.push;\nconst push_to_array = function(arr, value_or_array) {\n    push.apply(arr, is_array(value_or_array) ? value_or_array : [\n        value_or_array\n    ]);\n};\nconst to_ISO = Date.prototype.toISOString;\nconst defaults = {\n    addQueryPrefix: false,\n    allowDots: false,\n    allowEmptyArrays: false,\n    arrayFormat: \"indices\",\n    charset: \"utf-8\",\n    charsetSentinel: false,\n    delimiter: \"&\",\n    encode: true,\n    encodeDotInKeys: false,\n    encoder: _utils_mjs__WEBPACK_IMPORTED_MODULE_0__.encode,\n    encodeValuesOnly: false,\n    format: _formats_mjs__WEBPACK_IMPORTED_MODULE_1__.default_format,\n    formatter: _formats_mjs__WEBPACK_IMPORTED_MODULE_1__.formatters[_formats_mjs__WEBPACK_IMPORTED_MODULE_1__.default_format],\n    /** @deprecated */ indices: false,\n    serializeDate (date) {\n        return to_ISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false\n};\nfunction is_non_nullish_primitive(v) {\n    return typeof v === \"string\" || typeof v === \"number\" || typeof v === \"boolean\" || typeof v === \"symbol\" || typeof v === \"bigint\";\n}\nconst sentinel = {};\nfunction inner_stringify(object, prefix, generateArrayPrefix, commaRoundTrip, allowEmptyArrays, strictNullHandling, skipNulls, encodeDotInKeys, encoder, filter, sort, allowDots, serializeDate, format, formatter, encodeValuesOnly, charset, sideChannel) {\n    let obj = object;\n    let tmp_sc = sideChannel;\n    let step = 0;\n    let find_flag = false;\n    while((tmp_sc = tmp_sc.get(sentinel)) !== void undefined && !find_flag){\n        // Where object last appeared in the ref tree\n        const pos = tmp_sc.get(object);\n        step += 1;\n        if (typeof pos !== \"undefined\") {\n            if (pos === step) {\n                throw new RangeError(\"Cyclic object value\");\n            } else {\n                find_flag = true; // Break while\n            }\n        }\n        if (typeof tmp_sc.get(sentinel) === \"undefined\") {\n            step = 0;\n        }\n    }\n    if (typeof filter === \"function\") {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate?.(obj);\n    } else if (generateArrayPrefix === \"comma\" && is_array(obj)) {\n        obj = (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_0__.maybe_map)(obj, function(value) {\n            if (value instanceof Date) {\n                return serializeDate?.(value);\n            }\n            return value;\n        });\n    }\n    if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ? // @ts-expect-error\n            encoder(prefix, defaults.encoder, charset, \"key\", format) : prefix;\n        }\n        obj = \"\";\n    }\n    if (is_non_nullish_primitive(obj) || (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_0__.is_buffer)(obj)) {\n        if (encoder) {\n            const key_value = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset, \"key\", format);\n            return [\n                formatter?.(key_value) + \"=\" + // @ts-expect-error\n                formatter?.(encoder(obj, defaults.encoder, charset, \"value\", format))\n            ];\n        }\n        return [\n            formatter?.(prefix) + \"=\" + formatter?.(String(obj))\n        ];\n    }\n    const values = [];\n    if (typeof obj === \"undefined\") {\n        return values;\n    }\n    let obj_keys;\n    if (generateArrayPrefix === \"comma\" && is_array(obj)) {\n        // we need to join elements in\n        if (encodeValuesOnly && encoder) {\n            // @ts-expect-error values only\n            obj = (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_0__.maybe_map)(obj, encoder);\n        }\n        obj_keys = [\n            {\n                value: obj.length > 0 ? obj.join(\",\") || null : void undefined\n            }\n        ];\n    } else if (is_array(filter)) {\n        obj_keys = filter;\n    } else {\n        const keys = Object.keys(obj);\n        obj_keys = sort ? keys.sort(sort) : keys;\n    }\n    const encoded_prefix = encodeDotInKeys ? String(prefix).replace(/\\./g, \"%2E\") : String(prefix);\n    const adjusted_prefix = commaRoundTrip && is_array(obj) && obj.length === 1 ? encoded_prefix + \"[]\" : encoded_prefix;\n    if (allowEmptyArrays && is_array(obj) && obj.length === 0) {\n        return adjusted_prefix + \"[]\";\n    }\n    for(let j = 0; j < obj_keys.length; ++j){\n        const key = obj_keys[j];\n        const value = // @ts-ignore\n        typeof key === \"object\" && typeof key.value !== \"undefined\" ? key.value : obj[key];\n        if (skipNulls && value === null) {\n            continue;\n        }\n        // @ts-ignore\n        const encoded_key = allowDots && encodeDotInKeys ? key.replace(/\\./g, \"%2E\") : key;\n        const key_prefix = is_array(obj) ? typeof generateArrayPrefix === \"function\" ? generateArrayPrefix(adjusted_prefix, encoded_key) : adjusted_prefix : adjusted_prefix + (allowDots ? \".\" + encoded_key : \"[\" + encoded_key + \"]\");\n        sideChannel.set(object, step);\n        const valueSideChannel = new WeakMap();\n        valueSideChannel.set(sentinel, sideChannel);\n        push_to_array(values, inner_stringify(value, key_prefix, generateArrayPrefix, commaRoundTrip, allowEmptyArrays, strictNullHandling, skipNulls, encodeDotInKeys, // @ts-ignore\n        generateArrayPrefix === \"comma\" && encodeValuesOnly && is_array(obj) ? null : encoder, filter, sort, allowDots, serializeDate, format, formatter, encodeValuesOnly, charset, valueSideChannel));\n    }\n    return values;\n}\nfunction normalize_stringify_options(opts = defaults) {\n    if (typeof opts.allowEmptyArrays !== \"undefined\" && typeof opts.allowEmptyArrays !== \"boolean\") {\n        throw new TypeError(\"`allowEmptyArrays` option can only be `true` or `false`, when provided\");\n    }\n    if (typeof opts.encodeDotInKeys !== \"undefined\" && typeof opts.encodeDotInKeys !== \"boolean\") {\n        throw new TypeError(\"`encodeDotInKeys` option can only be `true` or `false`, when provided\");\n    }\n    if (opts.encoder !== null && typeof opts.encoder !== \"undefined\" && typeof opts.encoder !== \"function\") {\n        throw new TypeError(\"Encoder has to be a function.\");\n    }\n    const charset = opts.charset || defaults.charset;\n    if (typeof opts.charset !== \"undefined\" && opts.charset !== \"utf-8\" && opts.charset !== \"iso-8859-1\") {\n        throw new TypeError(\"The charset option must be either utf-8, iso-8859-1, or undefined\");\n    }\n    let format = _formats_mjs__WEBPACK_IMPORTED_MODULE_1__.default_format;\n    if (typeof opts.format !== \"undefined\") {\n        if (!has.call(_formats_mjs__WEBPACK_IMPORTED_MODULE_1__.formatters, opts.format)) {\n            throw new TypeError(\"Unknown format option provided.\");\n        }\n        format = opts.format;\n    }\n    const formatter = _formats_mjs__WEBPACK_IMPORTED_MODULE_1__.formatters[format];\n    let filter = defaults.filter;\n    if (typeof opts.filter === \"function\" || is_array(opts.filter)) {\n        filter = opts.filter;\n    }\n    let arrayFormat;\n    if (opts.arrayFormat && opts.arrayFormat in array_prefix_generators) {\n        arrayFormat = opts.arrayFormat;\n    } else if (\"indices\" in opts) {\n        arrayFormat = opts.indices ? \"indices\" : \"repeat\";\n    } else {\n        arrayFormat = defaults.arrayFormat;\n    }\n    if (\"commaRoundTrip\" in opts && typeof opts.commaRoundTrip !== \"boolean\") {\n        throw new TypeError(\"`commaRoundTrip` must be a boolean, or absent\");\n    }\n    const allowDots = typeof opts.allowDots === \"undefined\" ? !!opts.encodeDotInKeys === true ? true : defaults.allowDots : !!opts.allowDots;\n    return {\n        addQueryPrefix: typeof opts.addQueryPrefix === \"boolean\" ? opts.addQueryPrefix : defaults.addQueryPrefix,\n        // @ts-ignore\n        allowDots: allowDots,\n        allowEmptyArrays: typeof opts.allowEmptyArrays === \"boolean\" ? !!opts.allowEmptyArrays : defaults.allowEmptyArrays,\n        arrayFormat: arrayFormat,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === \"boolean\" ? opts.charsetSentinel : defaults.charsetSentinel,\n        commaRoundTrip: !!opts.commaRoundTrip,\n        delimiter: typeof opts.delimiter === \"undefined\" ? defaults.delimiter : opts.delimiter,\n        encode: typeof opts.encode === \"boolean\" ? opts.encode : defaults.encode,\n        encodeDotInKeys: typeof opts.encodeDotInKeys === \"boolean\" ? opts.encodeDotInKeys : defaults.encodeDotInKeys,\n        encoder: typeof opts.encoder === \"function\" ? opts.encoder : defaults.encoder,\n        encodeValuesOnly: typeof opts.encodeValuesOnly === \"boolean\" ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\n        filter: filter,\n        format: format,\n        formatter: formatter,\n        serializeDate: typeof opts.serializeDate === \"function\" ? opts.serializeDate : defaults.serializeDate,\n        skipNulls: typeof opts.skipNulls === \"boolean\" ? opts.skipNulls : defaults.skipNulls,\n        // @ts-ignore\n        sort: typeof opts.sort === \"function\" ? opts.sort : null,\n        strictNullHandling: typeof opts.strictNullHandling === \"boolean\" ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n}\nfunction stringify(object, opts = {}) {\n    let obj = object;\n    const options = normalize_stringify_options(opts);\n    let obj_keys;\n    let filter;\n    if (typeof options.filter === \"function\") {\n        filter = options.filter;\n        obj = filter(\"\", obj);\n    } else if (is_array(options.filter)) {\n        filter = options.filter;\n        obj_keys = filter;\n    }\n    const keys = [];\n    if (typeof obj !== \"object\" || obj === null) {\n        return \"\";\n    }\n    const generateArrayPrefix = array_prefix_generators[options.arrayFormat];\n    const commaRoundTrip = generateArrayPrefix === \"comma\" && options.commaRoundTrip;\n    if (!obj_keys) {\n        obj_keys = Object.keys(obj);\n    }\n    if (options.sort) {\n        obj_keys.sort(options.sort);\n    }\n    const sideChannel = new WeakMap();\n    for(let i = 0; i < obj_keys.length; ++i){\n        const key = obj_keys[i];\n        if (options.skipNulls && obj[key] === null) {\n            continue;\n        }\n        push_to_array(keys, inner_stringify(obj[key], key, // @ts-expect-error\n        generateArrayPrefix, commaRoundTrip, options.allowEmptyArrays, options.strictNullHandling, options.skipNulls, options.encodeDotInKeys, options.encode ? options.encoder : null, options.filter, options.sort, options.allowDots, options.serializeDate, options.format, options.formatter, options.encodeValuesOnly, options.charset, sideChannel));\n    }\n    const joined = keys.join(options.delimiter);\n    let prefix = options.addQueryPrefix === true ? \"?\" : \"\";\n    if (options.charsetSentinel) {\n        if (options.charset === \"iso-8859-1\") {\n            // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\n            prefix += \"utf8=%26%2310003%3B&\";\n        } else {\n            // encodeURIComponent('✓')\n            prefix += \"utf8=%E2%9C%93&\";\n        }\n    }\n    return joined.length > 0 ? prefix + joined : \"\";\n} //# sourceMappingURL=stringify.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/internal/qs/stringify.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/internal/qs/utils.mjs":
/*!*******************************************************!*\
  !*** ../../node_modules/openai/internal/qs/utils.mjs ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assign_single_source: () => (/* binding */ assign_single_source),\n/* harmony export */   combine: () => (/* binding */ combine),\n/* harmony export */   compact: () => (/* binding */ compact),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   is_buffer: () => (/* binding */ is_buffer),\n/* harmony export */   is_regexp: () => (/* binding */ is_regexp),\n/* harmony export */   maybe_map: () => (/* binding */ maybe_map),\n/* harmony export */   merge: () => (/* binding */ merge)\n/* harmony export */ });\n/* harmony import */ var _formats_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./formats.mjs */ \"(middleware)/../../node_modules/openai/internal/qs/formats.mjs\");\n\nconst has = Object.prototype.hasOwnProperty;\nconst is_array = Array.isArray;\nconst hex_table = (()=>{\n    const array = [];\n    for(let i = 0; i < 256; ++i){\n        array.push(\"%\" + ((i < 16 ? \"0\" : \"\") + i.toString(16)).toUpperCase());\n    }\n    return array;\n})();\nfunction compact_queue(queue) {\n    while(queue.length > 1){\n        const item = queue.pop();\n        if (!item) continue;\n        const obj = item.obj[item.prop];\n        if (is_array(obj)) {\n            const compacted = [];\n            for(let j = 0; j < obj.length; ++j){\n                if (typeof obj[j] !== \"undefined\") {\n                    compacted.push(obj[j]);\n                }\n            }\n            // @ts-ignore\n            item.obj[item.prop] = compacted;\n        }\n    }\n}\nfunction array_to_object(source, options) {\n    const obj = options && options.plainObjects ? Object.create(null) : {};\n    for(let i = 0; i < source.length; ++i){\n        if (typeof source[i] !== \"undefined\") {\n            obj[i] = source[i];\n        }\n    }\n    return obj;\n}\nfunction merge(target, source, options = {}) {\n    if (!source) {\n        return target;\n    }\n    if (typeof source !== \"object\") {\n        if (is_array(target)) {\n            target.push(source);\n        } else if (target && typeof target === \"object\") {\n            if (options && (options.plainObjects || options.allowPrototypes) || !has.call(Object.prototype, source)) {\n                target[source] = true;\n            }\n        } else {\n            return [\n                target,\n                source\n            ];\n        }\n        return target;\n    }\n    if (!target || typeof target !== \"object\") {\n        return [\n            target\n        ].concat(source);\n    }\n    let mergeTarget = target;\n    if (is_array(target) && !is_array(source)) {\n        // @ts-ignore\n        mergeTarget = array_to_object(target, options);\n    }\n    if (is_array(target) && is_array(source)) {\n        source.forEach(function(item, i) {\n            if (has.call(target, i)) {\n                const targetItem = target[i];\n                if (targetItem && typeof targetItem === \"object\" && item && typeof item === \"object\") {\n                    target[i] = merge(targetItem, item, options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n    return Object.keys(source).reduce(function(acc, key) {\n        const value = source[key];\n        if (has.call(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n}\nfunction assign_single_source(target, source) {\n    return Object.keys(source).reduce(function(acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n}\nfunction decode(str, _, charset) {\n    const strWithoutPlus = str.replace(/\\+/g, \" \");\n    if (charset === \"iso-8859-1\") {\n        // unescape never throws, no try...catch needed:\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\n    }\n    // utf-8\n    try {\n        return decodeURIComponent(strWithoutPlus);\n    } catch (e) {\n        return strWithoutPlus;\n    }\n}\nconst limit = 1024;\nconst encode = (str, _defaultEncoder, charset, _kind, format)=>{\n    // This code was originally written by Brian White for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n    let string = str;\n    if (typeof str === \"symbol\") {\n        string = Symbol.prototype.toString.call(str);\n    } else if (typeof str !== \"string\") {\n        string = String(str);\n    }\n    if (charset === \"iso-8859-1\") {\n        return escape(string).replace(/%u[0-9a-f]{4}/gi, function($0) {\n            return \"%26%23\" + parseInt($0.slice(2), 16) + \"%3B\";\n        });\n    }\n    let out = \"\";\n    for(let j = 0; j < string.length; j += limit){\n        const segment = string.length >= limit ? string.slice(j, j + limit) : string;\n        const arr = [];\n        for(let i = 0; i < segment.length; ++i){\n            let c = segment.charCodeAt(i);\n            if (c === 0x2d || // -\n            c === 0x2e || // .\n            c === 0x5f || // _\n            c === 0x7e || // ~\n            c >= 0x30 && c <= 0x39 || // 0-9\n            c >= 0x41 && c <= 0x5a || // a-z\n            c >= 0x61 && c <= 0x7a || // A-Z\n            format === _formats_mjs__WEBPACK_IMPORTED_MODULE_0__.RFC1738 && (c === 0x28 || c === 0x29) // ( )\n            ) {\n                arr[arr.length] = segment.charAt(i);\n                continue;\n            }\n            if (c < 0x80) {\n                arr[arr.length] = hex_table[c];\n                continue;\n            }\n            if (c < 0x800) {\n                arr[arr.length] = hex_table[0xc0 | c >> 6] + hex_table[0x80 | c & 0x3f];\n                continue;\n            }\n            if (c < 0xd800 || c >= 0xe000) {\n                arr[arr.length] = hex_table[0xe0 | c >> 12] + hex_table[0x80 | c >> 6 & 0x3f] + hex_table[0x80 | c & 0x3f];\n                continue;\n            }\n            i += 1;\n            c = 0x10000 + ((c & 0x3ff) << 10 | segment.charCodeAt(i) & 0x3ff);\n            arr[arr.length] = hex_table[0xf0 | c >> 18] + hex_table[0x80 | c >> 12 & 0x3f] + hex_table[0x80 | c >> 6 & 0x3f] + hex_table[0x80 | c & 0x3f];\n        }\n        out += arr.join(\"\");\n    }\n    return out;\n};\nfunction compact(value) {\n    const queue = [\n        {\n            obj: {\n                o: value\n            },\n            prop: \"o\"\n        }\n    ];\n    const refs = [];\n    for(let i = 0; i < queue.length; ++i){\n        const item = queue[i];\n        // @ts-ignore\n        const obj = item.obj[item.prop];\n        const keys = Object.keys(obj);\n        for(let j = 0; j < keys.length; ++j){\n            const key = keys[j];\n            const val = obj[key];\n            if (typeof val === \"object\" && val !== null && refs.indexOf(val) === -1) {\n                queue.push({\n                    obj: obj,\n                    prop: key\n                });\n                refs.push(val);\n            }\n        }\n    }\n    compact_queue(queue);\n    return value;\n}\nfunction is_regexp(obj) {\n    return Object.prototype.toString.call(obj) === \"[object RegExp]\";\n}\nfunction is_buffer(obj) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n}\nfunction combine(a, b) {\n    return [].concat(a, b);\n}\nfunction maybe_map(val, fn) {\n    if (is_array(val)) {\n        const mapped = [];\n        for(let i = 0; i < val.length; i += 1){\n            mapped.push(fn(val[i]));\n        }\n        return mapped;\n    }\n    return fn(val);\n} //# sourceMappingURL=utils.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvaW50ZXJuYWwvcXMvdXRpbHMubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBd0M7QUFDeEMsTUFBTUMsTUFBTUMsT0FBT0MsU0FBUyxDQUFDQyxjQUFjO0FBQzNDLE1BQU1DLFdBQVdDLE1BQU1DLE9BQU87QUFDOUIsTUFBTUMsWUFBWSxDQUFDO0lBQ2YsTUFBTUMsUUFBUSxFQUFFO0lBQ2hCLElBQUssSUFBSUMsSUFBSSxHQUFHQSxJQUFJLEtBQUssRUFBRUEsRUFBRztRQUMxQkQsTUFBTUUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDRCxJQUFJLEtBQUssTUFBTSxFQUFDLElBQUtBLEVBQUVFLFFBQVEsQ0FBQyxHQUFFLEVBQUdDLFdBQVc7SUFDdkU7SUFDQSxPQUFPSjtBQUNYO0FBQ0EsU0FBU0ssY0FBY0MsS0FBSztJQUN4QixNQUFPQSxNQUFNQyxNQUFNLEdBQUcsRUFBRztRQUNyQixNQUFNQyxPQUFPRixNQUFNRyxHQUFHO1FBQ3RCLElBQUksQ0FBQ0QsTUFDRDtRQUNKLE1BQU1FLE1BQU1GLEtBQUtFLEdBQUcsQ0FBQ0YsS0FBS0csSUFBSSxDQUFDO1FBQy9CLElBQUlmLFNBQVNjLE1BQU07WUFDZixNQUFNRSxZQUFZLEVBQUU7WUFDcEIsSUFBSyxJQUFJQyxJQUFJLEdBQUdBLElBQUlILElBQUlILE1BQU0sRUFBRSxFQUFFTSxFQUFHO2dCQUNqQyxJQUFJLE9BQU9ILEdBQUcsQ0FBQ0csRUFBRSxLQUFLLGFBQWE7b0JBQy9CRCxVQUFVVixJQUFJLENBQUNRLEdBQUcsQ0FBQ0csRUFBRTtnQkFDekI7WUFDSjtZQUNBLGFBQWE7WUFDYkwsS0FBS0UsR0FBRyxDQUFDRixLQUFLRyxJQUFJLENBQUMsR0FBR0M7UUFDMUI7SUFDSjtBQUNKO0FBQ0EsU0FBU0UsZ0JBQWdCQyxNQUFNLEVBQUVDLE9BQU87SUFDcEMsTUFBTU4sTUFBTU0sV0FBV0EsUUFBUUMsWUFBWSxHQUFHeEIsT0FBT3lCLE1BQU0sQ0FBQyxRQUFRLENBQUM7SUFDckUsSUFBSyxJQUFJakIsSUFBSSxHQUFHQSxJQUFJYyxPQUFPUixNQUFNLEVBQUUsRUFBRU4sRUFBRztRQUNwQyxJQUFJLE9BQU9jLE1BQU0sQ0FBQ2QsRUFBRSxLQUFLLGFBQWE7WUFDbENTLEdBQUcsQ0FBQ1QsRUFBRSxHQUFHYyxNQUFNLENBQUNkLEVBQUU7UUFDdEI7SUFDSjtJQUNBLE9BQU9TO0FBQ1g7QUFDTyxTQUFTUyxNQUFNQyxNQUFNLEVBQUVMLE1BQU0sRUFBRUMsVUFBVSxDQUFDLENBQUM7SUFDOUMsSUFBSSxDQUFDRCxRQUFRO1FBQ1QsT0FBT0s7SUFDWDtJQUNBLElBQUksT0FBT0wsV0FBVyxVQUFVO1FBQzVCLElBQUluQixTQUFTd0IsU0FBUztZQUNsQkEsT0FBT2xCLElBQUksQ0FBQ2E7UUFDaEIsT0FDSyxJQUFJSyxVQUFVLE9BQU9BLFdBQVcsVUFBVTtZQUMzQyxJQUFJLFdBQWFKLENBQUFBLFFBQVFDLFlBQVksSUFBSUQsUUFBUUssZUFBZSxLQUM1RCxDQUFDN0IsSUFBSThCLElBQUksQ0FBQzdCLE9BQU9DLFNBQVMsRUFBRXFCLFNBQVM7Z0JBQ3JDSyxNQUFNLENBQUNMLE9BQU8sR0FBRztZQUNyQjtRQUNKLE9BQ0s7WUFDRCxPQUFPO2dCQUFDSztnQkFBUUw7YUFBTztRQUMzQjtRQUNBLE9BQU9LO0lBQ1g7SUFDQSxJQUFJLENBQUNBLFVBQVUsT0FBT0EsV0FBVyxVQUFVO1FBQ3ZDLE9BQU87WUFBQ0E7U0FBTyxDQUFDRyxNQUFNLENBQUNSO0lBQzNCO0lBQ0EsSUFBSVMsY0FBY0o7SUFDbEIsSUFBSXhCLFNBQVN3QixXQUFXLENBQUN4QixTQUFTbUIsU0FBUztRQUN2QyxhQUFhO1FBQ2JTLGNBQWNWLGdCQUFnQk0sUUFBUUo7SUFDMUM7SUFDQSxJQUFJcEIsU0FBU3dCLFdBQVd4QixTQUFTbUIsU0FBUztRQUN0Q0EsT0FBT1UsT0FBTyxDQUFDLFNBQVVqQixJQUFJLEVBQUVQLENBQUM7WUFDNUIsSUFBSVQsSUFBSThCLElBQUksQ0FBQ0YsUUFBUW5CLElBQUk7Z0JBQ3JCLE1BQU15QixhQUFhTixNQUFNLENBQUNuQixFQUFFO2dCQUM1QixJQUFJeUIsY0FBYyxPQUFPQSxlQUFlLFlBQVlsQixRQUFRLE9BQU9BLFNBQVMsVUFBVTtvQkFDbEZZLE1BQU0sQ0FBQ25CLEVBQUUsR0FBR2tCLE1BQU1PLFlBQVlsQixNQUFNUTtnQkFDeEMsT0FDSztvQkFDREksT0FBT2xCLElBQUksQ0FBQ007Z0JBQ2hCO1lBQ0osT0FDSztnQkFDRFksTUFBTSxDQUFDbkIsRUFBRSxHQUFHTztZQUNoQjtRQUNKO1FBQ0EsT0FBT1k7SUFDWDtJQUNBLE9BQU8zQixPQUFPa0MsSUFBSSxDQUFDWixRQUFRYSxNQUFNLENBQUMsU0FBVUMsR0FBRyxFQUFFQyxHQUFHO1FBQ2hELE1BQU1DLFFBQVFoQixNQUFNLENBQUNlLElBQUk7UUFDekIsSUFBSXRDLElBQUk4QixJQUFJLENBQUNPLEtBQUtDLE1BQU07WUFDcEJELEdBQUcsQ0FBQ0MsSUFBSSxHQUFHWCxNQUFNVSxHQUFHLENBQUNDLElBQUksRUFBRUMsT0FBT2Y7UUFDdEMsT0FDSztZQUNEYSxHQUFHLENBQUNDLElBQUksR0FBR0M7UUFDZjtRQUNBLE9BQU9GO0lBQ1gsR0FBR0w7QUFDUDtBQUNPLFNBQVNRLHFCQUFxQlosTUFBTSxFQUFFTCxNQUFNO0lBQy9DLE9BQU90QixPQUFPa0MsSUFBSSxDQUFDWixRQUFRYSxNQUFNLENBQUMsU0FBVUMsR0FBRyxFQUFFQyxHQUFHO1FBQ2hERCxHQUFHLENBQUNDLElBQUksR0FBR2YsTUFBTSxDQUFDZSxJQUFJO1FBQ3RCLE9BQU9EO0lBQ1gsR0FBR1Q7QUFDUDtBQUNPLFNBQVNhLE9BQU9DLEdBQUcsRUFBRUMsQ0FBQyxFQUFFQyxPQUFPO0lBQ2xDLE1BQU1DLGlCQUFpQkgsSUFBSUksT0FBTyxDQUFDLE9BQU87SUFDMUMsSUFBSUYsWUFBWSxjQUFjO1FBQzFCLGdEQUFnRDtRQUNoRCxPQUFPQyxlQUFlQyxPQUFPLENBQUMsa0JBQWtCQztJQUNwRDtJQUNBLFFBQVE7SUFDUixJQUFJO1FBQ0EsT0FBT0MsbUJBQW1CSDtJQUM5QixFQUNBLE9BQU9JLEdBQUc7UUFDTixPQUFPSjtJQUNYO0FBQ0o7QUFDQSxNQUFNSyxRQUFRO0FBQ1AsTUFBTUMsU0FBUyxDQUFDVCxLQUFLVSxpQkFBaUJSLFNBQVNTLE9BQU9DO0lBQ3pELDBGQUEwRjtJQUMxRiw4REFBOEQ7SUFDOUQsSUFBSVosSUFBSTNCLE1BQU0sS0FBSyxHQUFHO1FBQ2xCLE9BQU8yQjtJQUNYO0lBQ0EsSUFBSWEsU0FBU2I7SUFDYixJQUFJLE9BQU9BLFFBQVEsVUFBVTtRQUN6QmEsU0FBU0MsT0FBT3RELFNBQVMsQ0FBQ1MsUUFBUSxDQUFDbUIsSUFBSSxDQUFDWTtJQUM1QyxPQUNLLElBQUksT0FBT0EsUUFBUSxVQUFVO1FBQzlCYSxTQUFTRSxPQUFPZjtJQUNwQjtJQUNBLElBQUlFLFlBQVksY0FBYztRQUMxQixPQUFPYyxPQUFPSCxRQUFRVCxPQUFPLENBQUMsbUJBQW1CLFNBQVVhLEVBQUU7WUFDekQsT0FBTyxXQUFXQyxTQUFTRCxHQUFHRSxLQUFLLENBQUMsSUFBSSxNQUFNO1FBQ2xEO0lBQ0o7SUFDQSxJQUFJQyxNQUFNO0lBQ1YsSUFBSyxJQUFJekMsSUFBSSxHQUFHQSxJQUFJa0MsT0FBT3hDLE1BQU0sRUFBRU0sS0FBSzZCLE1BQU87UUFDM0MsTUFBTWEsVUFBVVIsT0FBT3hDLE1BQU0sSUFBSW1DLFFBQVFLLE9BQU9NLEtBQUssQ0FBQ3hDLEdBQUdBLElBQUk2QixTQUFTSztRQUN0RSxNQUFNUyxNQUFNLEVBQUU7UUFDZCxJQUFLLElBQUl2RCxJQUFJLEdBQUdBLElBQUlzRCxRQUFRaEQsTUFBTSxFQUFFLEVBQUVOLEVBQUc7WUFDckMsSUFBSXdELElBQUlGLFFBQVFHLFVBQVUsQ0FBQ3pEO1lBQzNCLElBQUl3RCxNQUFNLFFBQVEsSUFBSTtZQUNsQkEsTUFBTSxRQUFRLElBQUk7WUFDbEJBLE1BQU0sUUFBUSxJQUFJO1lBQ2xCQSxNQUFNLFFBQVEsSUFBSTtZQUNqQkEsS0FBSyxRQUFRQSxLQUFLLFFBQVMsTUFBTTtZQUNqQ0EsS0FBSyxRQUFRQSxLQUFLLFFBQVMsTUFBTTtZQUNqQ0EsS0FBSyxRQUFRQSxLQUFLLFFBQVMsTUFBTTtZQUNqQ1gsV0FBV3ZELGlEQUFPQSxJQUFLa0UsQ0FBQUEsTUFBTSxRQUFRQSxNQUFNLElBQUcsRUFBSSxNQUFNO2NBQzNEO2dCQUNFRCxHQUFHLENBQUNBLElBQUlqRCxNQUFNLENBQUMsR0FBR2dELFFBQVFJLE1BQU0sQ0FBQzFEO2dCQUNqQztZQUNKO1lBQ0EsSUFBSXdELElBQUksTUFBTTtnQkFDVkQsR0FBRyxDQUFDQSxJQUFJakQsTUFBTSxDQUFDLEdBQUdSLFNBQVMsQ0FBQzBELEVBQUU7Z0JBQzlCO1lBQ0o7WUFDQSxJQUFJQSxJQUFJLE9BQU87Z0JBQ1hELEdBQUcsQ0FBQ0EsSUFBSWpELE1BQU0sQ0FBQyxHQUFHUixTQUFTLENBQUMsT0FBUTBELEtBQUssRUFBRyxHQUFHMUQsU0FBUyxDQUFDLE9BQVEwRCxJQUFJLEtBQU07Z0JBQzNFO1lBQ0o7WUFDQSxJQUFJQSxJQUFJLFVBQVVBLEtBQUssUUFBUTtnQkFDM0JELEdBQUcsQ0FBQ0EsSUFBSWpELE1BQU0sQ0FBQyxHQUNYUixTQUFTLENBQUMsT0FBUTBELEtBQUssR0FBSSxHQUFHMUQsU0FBUyxDQUFDLE9BQVEsS0FBTSxJQUFLLEtBQU0sR0FBR0EsU0FBUyxDQUFDLE9BQVEwRCxJQUFJLEtBQU07Z0JBQ3BHO1lBQ0o7WUFDQXhELEtBQUs7WUFDTHdELElBQUksVUFBVyxFQUFFQSxJQUFJLEtBQUksS0FBTSxLQUFPRixRQUFRRyxVQUFVLENBQUN6RCxLQUFLLEtBQUs7WUFDbkV1RCxHQUFHLENBQUNBLElBQUlqRCxNQUFNLENBQUMsR0FDWFIsU0FBUyxDQUFDLE9BQVEwRCxLQUFLLEdBQUksR0FDdkIxRCxTQUFTLENBQUMsT0FBUSxLQUFNLEtBQU0sS0FBTSxHQUNwQ0EsU0FBUyxDQUFDLE9BQVEsS0FBTSxJQUFLLEtBQU0sR0FDbkNBLFNBQVMsQ0FBQyxPQUFRMEQsSUFBSSxLQUFNO1FBQ3hDO1FBQ0FILE9BQU9FLElBQUlJLElBQUksQ0FBQztJQUNwQjtJQUNBLE9BQU9OO0FBQ1gsRUFBRTtBQUNLLFNBQVNPLFFBQVE5QixLQUFLO0lBQ3pCLE1BQU16QixRQUFRO1FBQUM7WUFBRUksS0FBSztnQkFBRW9ELEdBQUcvQjtZQUFNO1lBQUdwQixNQUFNO1FBQUk7S0FBRTtJQUNoRCxNQUFNb0QsT0FBTyxFQUFFO0lBQ2YsSUFBSyxJQUFJOUQsSUFBSSxHQUFHQSxJQUFJSyxNQUFNQyxNQUFNLEVBQUUsRUFBRU4sRUFBRztRQUNuQyxNQUFNTyxPQUFPRixLQUFLLENBQUNMLEVBQUU7UUFDckIsYUFBYTtRQUNiLE1BQU1TLE1BQU1GLEtBQUtFLEdBQUcsQ0FBQ0YsS0FBS0csSUFBSSxDQUFDO1FBQy9CLE1BQU1nQixPQUFPbEMsT0FBT2tDLElBQUksQ0FBQ2pCO1FBQ3pCLElBQUssSUFBSUcsSUFBSSxHQUFHQSxJQUFJYyxLQUFLcEIsTUFBTSxFQUFFLEVBQUVNLEVBQUc7WUFDbEMsTUFBTWlCLE1BQU1ILElBQUksQ0FBQ2QsRUFBRTtZQUNuQixNQUFNbUQsTUFBTXRELEdBQUcsQ0FBQ29CLElBQUk7WUFDcEIsSUFBSSxPQUFPa0MsUUFBUSxZQUFZQSxRQUFRLFFBQVFELEtBQUtFLE9BQU8sQ0FBQ0QsU0FBUyxDQUFDLEdBQUc7Z0JBQ3JFMUQsTUFBTUosSUFBSSxDQUFDO29CQUFFUSxLQUFLQTtvQkFBS0MsTUFBTW1CO2dCQUFJO2dCQUNqQ2lDLEtBQUs3RCxJQUFJLENBQUM4RDtZQUNkO1FBQ0o7SUFDSjtJQUNBM0QsY0FBY0M7SUFDZCxPQUFPeUI7QUFDWDtBQUNPLFNBQVNtQyxVQUFVeEQsR0FBRztJQUN6QixPQUFPakIsT0FBT0MsU0FBUyxDQUFDUyxRQUFRLENBQUNtQixJQUFJLENBQUNaLFNBQVM7QUFDbkQ7QUFDTyxTQUFTeUQsVUFBVXpELEdBQUc7SUFDekIsSUFBSSxDQUFDQSxPQUFPLE9BQU9BLFFBQVEsVUFBVTtRQUNqQyxPQUFPO0lBQ1g7SUFDQSxPQUFPLENBQUMsQ0FBRUEsQ0FBQUEsSUFBSTBELFdBQVcsSUFBSTFELElBQUkwRCxXQUFXLENBQUNDLFFBQVEsSUFBSTNELElBQUkwRCxXQUFXLENBQUNDLFFBQVEsQ0FBQzNELElBQUc7QUFDekY7QUFDTyxTQUFTNEQsUUFBUUMsQ0FBQyxFQUFFQyxDQUFDO0lBQ3hCLE9BQU8sRUFBRSxDQUFDakQsTUFBTSxDQUFDZ0QsR0FBR0M7QUFDeEI7QUFDTyxTQUFTQyxVQUFVVCxHQUFHLEVBQUVVLEVBQUU7SUFDN0IsSUFBSTlFLFNBQVNvRSxNQUFNO1FBQ2YsTUFBTVcsU0FBUyxFQUFFO1FBQ2pCLElBQUssSUFBSTFFLElBQUksR0FBR0EsSUFBSStELElBQUl6RCxNQUFNLEVBQUVOLEtBQUssRUFBRztZQUNwQzBFLE9BQU96RSxJQUFJLENBQUN3RSxHQUFHVixHQUFHLENBQUMvRCxFQUFFO1FBQ3pCO1FBQ0EsT0FBTzBFO0lBQ1g7SUFDQSxPQUFPRCxHQUFHVjtBQUNkLEVBQ0Esa0NBQWtDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi9ub2RlX21vZHVsZXMvb3BlbmFpL2ludGVybmFsL3FzL3V0aWxzLm1qcz85MDc0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJGQzE3MzggfSBmcm9tIFwiLi9mb3JtYXRzLm1qc1wiO1xuY29uc3QgaGFzID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcbmNvbnN0IGlzX2FycmF5ID0gQXJyYXkuaXNBcnJheTtcbmNvbnN0IGhleF90YWJsZSA9ICgoKSA9PiB7XG4gICAgY29uc3QgYXJyYXkgPSBbXTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IDI1NjsgKytpKSB7XG4gICAgICAgIGFycmF5LnB1c2goJyUnICsgKChpIDwgMTYgPyAnMCcgOiAnJykgKyBpLnRvU3RyaW5nKDE2KSkudG9VcHBlckNhc2UoKSk7XG4gICAgfVxuICAgIHJldHVybiBhcnJheTtcbn0pKCk7XG5mdW5jdGlvbiBjb21wYWN0X3F1ZXVlKHF1ZXVlKSB7XG4gICAgd2hpbGUgKHF1ZXVlLmxlbmd0aCA+IDEpIHtcbiAgICAgICAgY29uc3QgaXRlbSA9IHF1ZXVlLnBvcCgpO1xuICAgICAgICBpZiAoIWl0ZW0pXG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgY29uc3Qgb2JqID0gaXRlbS5vYmpbaXRlbS5wcm9wXTtcbiAgICAgICAgaWYgKGlzX2FycmF5KG9iaikpIHtcbiAgICAgICAgICAgIGNvbnN0IGNvbXBhY3RlZCA9IFtdO1xuICAgICAgICAgICAgZm9yIChsZXQgaiA9IDA7IGogPCBvYmoubGVuZ3RoOyArK2opIHtcbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIG9ialtqXSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgICAgICAgICAgY29tcGFjdGVkLnB1c2gob2JqW2pdKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBAdHMtaWdub3JlXG4gICAgICAgICAgICBpdGVtLm9ialtpdGVtLnByb3BdID0gY29tcGFjdGVkO1xuICAgICAgICB9XG4gICAgfVxufVxuZnVuY3Rpb24gYXJyYXlfdG9fb2JqZWN0KHNvdXJjZSwgb3B0aW9ucykge1xuICAgIGNvbnN0IG9iaiA9IG9wdGlvbnMgJiYgb3B0aW9ucy5wbGFpbk9iamVjdHMgPyBPYmplY3QuY3JlYXRlKG51bGwpIDoge307XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzb3VyY2UubGVuZ3RoOyArK2kpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBzb3VyY2VbaV0gIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICBvYmpbaV0gPSBzb3VyY2VbaV07XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIG9iajtcbn1cbmV4cG9ydCBmdW5jdGlvbiBtZXJnZSh0YXJnZXQsIHNvdXJjZSwgb3B0aW9ucyA9IHt9KSB7XG4gICAgaWYgKCFzb3VyY2UpIHtcbiAgICAgICAgcmV0dXJuIHRhcmdldDtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBzb3VyY2UgIT09ICdvYmplY3QnKSB7XG4gICAgICAgIGlmIChpc19hcnJheSh0YXJnZXQpKSB7XG4gICAgICAgICAgICB0YXJnZXQucHVzaChzb3VyY2UpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHRhcmdldCAmJiB0eXBlb2YgdGFyZ2V0ID09PSAnb2JqZWN0Jykge1xuICAgICAgICAgICAgaWYgKChvcHRpb25zICYmIChvcHRpb25zLnBsYWluT2JqZWN0cyB8fCBvcHRpb25zLmFsbG93UHJvdG90eXBlcykpIHx8XG4gICAgICAgICAgICAgICAgIWhhcy5jYWxsKE9iamVjdC5wcm90b3R5cGUsIHNvdXJjZSkpIHtcbiAgICAgICAgICAgICAgICB0YXJnZXRbc291cmNlXSA9IHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gW3RhcmdldCwgc291cmNlXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGFyZ2V0O1xuICAgIH1cbiAgICBpZiAoIXRhcmdldCB8fCB0eXBlb2YgdGFyZ2V0ICE9PSAnb2JqZWN0Jykge1xuICAgICAgICByZXR1cm4gW3RhcmdldF0uY29uY2F0KHNvdXJjZSk7XG4gICAgfVxuICAgIGxldCBtZXJnZVRhcmdldCA9IHRhcmdldDtcbiAgICBpZiAoaXNfYXJyYXkodGFyZ2V0KSAmJiAhaXNfYXJyYXkoc291cmNlKSkge1xuICAgICAgICAvLyBAdHMtaWdub3JlXG4gICAgICAgIG1lcmdlVGFyZ2V0ID0gYXJyYXlfdG9fb2JqZWN0KHRhcmdldCwgb3B0aW9ucyk7XG4gICAgfVxuICAgIGlmIChpc19hcnJheSh0YXJnZXQpICYmIGlzX2FycmF5KHNvdXJjZSkpIHtcbiAgICAgICAgc291cmNlLmZvckVhY2goZnVuY3Rpb24gKGl0ZW0sIGkpIHtcbiAgICAgICAgICAgIGlmIChoYXMuY2FsbCh0YXJnZXQsIGkpKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgdGFyZ2V0SXRlbSA9IHRhcmdldFtpXTtcbiAgICAgICAgICAgICAgICBpZiAodGFyZ2V0SXRlbSAmJiB0eXBlb2YgdGFyZ2V0SXRlbSA9PT0gJ29iamVjdCcgJiYgaXRlbSAmJiB0eXBlb2YgaXRlbSA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgICAgICAgICAgICAgdGFyZ2V0W2ldID0gbWVyZ2UodGFyZ2V0SXRlbSwgaXRlbSwgb3B0aW9ucyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB0YXJnZXQucHVzaChpdGVtKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICB0YXJnZXRbaV0gPSBpdGVtO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIHRhcmdldDtcbiAgICB9XG4gICAgcmV0dXJuIE9iamVjdC5rZXlzKHNvdXJjZSkucmVkdWNlKGZ1bmN0aW9uIChhY2MsIGtleSkge1xuICAgICAgICBjb25zdCB2YWx1ZSA9IHNvdXJjZVtrZXldO1xuICAgICAgICBpZiAoaGFzLmNhbGwoYWNjLCBrZXkpKSB7XG4gICAgICAgICAgICBhY2Nba2V5XSA9IG1lcmdlKGFjY1trZXldLCB2YWx1ZSwgb3B0aW9ucyk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBhY2Nba2V5XSA9IHZhbHVlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBhY2M7XG4gICAgfSwgbWVyZ2VUYXJnZXQpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGFzc2lnbl9zaW5nbGVfc291cmNlKHRhcmdldCwgc291cmNlKSB7XG4gICAgcmV0dXJuIE9iamVjdC5rZXlzKHNvdXJjZSkucmVkdWNlKGZ1bmN0aW9uIChhY2MsIGtleSkge1xuICAgICAgICBhY2Nba2V5XSA9IHNvdXJjZVtrZXldO1xuICAgICAgICByZXR1cm4gYWNjO1xuICAgIH0sIHRhcmdldCk7XG59XG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlKHN0ciwgXywgY2hhcnNldCkge1xuICAgIGNvbnN0IHN0cldpdGhvdXRQbHVzID0gc3RyLnJlcGxhY2UoL1xcKy9nLCAnICcpO1xuICAgIGlmIChjaGFyc2V0ID09PSAnaXNvLTg4NTktMScpIHtcbiAgICAgICAgLy8gdW5lc2NhcGUgbmV2ZXIgdGhyb3dzLCBubyB0cnkuLi5jYXRjaCBuZWVkZWQ6XG4gICAgICAgIHJldHVybiBzdHJXaXRob3V0UGx1cy5yZXBsYWNlKC8lWzAtOWEtZl17Mn0vZ2ksIHVuZXNjYXBlKTtcbiAgICB9XG4gICAgLy8gdXRmLThcbiAgICB0cnkge1xuICAgICAgICByZXR1cm4gZGVjb2RlVVJJQ29tcG9uZW50KHN0cldpdGhvdXRQbHVzKTtcbiAgICB9XG4gICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgcmV0dXJuIHN0cldpdGhvdXRQbHVzO1xuICAgIH1cbn1cbmNvbnN0IGxpbWl0ID0gMTAyNDtcbmV4cG9ydCBjb25zdCBlbmNvZGUgPSAoc3RyLCBfZGVmYXVsdEVuY29kZXIsIGNoYXJzZXQsIF9raW5kLCBmb3JtYXQpID0+IHtcbiAgICAvLyBUaGlzIGNvZGUgd2FzIG9yaWdpbmFsbHkgd3JpdHRlbiBieSBCcmlhbiBXaGl0ZSBmb3IgdGhlIGlvLmpzIGNvcmUgcXVlcnlzdHJpbmcgbGlicmFyeS5cbiAgICAvLyBJdCBoYXMgYmVlbiBhZGFwdGVkIGhlcmUgZm9yIHN0cmljdGVyIGFkaGVyZW5jZSB0byBSRkMgMzk4NlxuICAgIGlmIChzdHIubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIHJldHVybiBzdHI7XG4gICAgfVxuICAgIGxldCBzdHJpbmcgPSBzdHI7XG4gICAgaWYgKHR5cGVvZiBzdHIgPT09ICdzeW1ib2wnKSB7XG4gICAgICAgIHN0cmluZyA9IFN5bWJvbC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChzdHIpO1xuICAgIH1cbiAgICBlbHNlIGlmICh0eXBlb2Ygc3RyICE9PSAnc3RyaW5nJykge1xuICAgICAgICBzdHJpbmcgPSBTdHJpbmcoc3RyKTtcbiAgICB9XG4gICAgaWYgKGNoYXJzZXQgPT09ICdpc28tODg1OS0xJykge1xuICAgICAgICByZXR1cm4gZXNjYXBlKHN0cmluZykucmVwbGFjZSgvJXVbMC05YS1mXXs0fS9naSwgZnVuY3Rpb24gKCQwKSB7XG4gICAgICAgICAgICByZXR1cm4gJyUyNiUyMycgKyBwYXJzZUludCgkMC5zbGljZSgyKSwgMTYpICsgJyUzQic7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBsZXQgb3V0ID0gJyc7XG4gICAgZm9yIChsZXQgaiA9IDA7IGogPCBzdHJpbmcubGVuZ3RoOyBqICs9IGxpbWl0KSB7XG4gICAgICAgIGNvbnN0IHNlZ21lbnQgPSBzdHJpbmcubGVuZ3RoID49IGxpbWl0ID8gc3RyaW5nLnNsaWNlKGosIGogKyBsaW1pdCkgOiBzdHJpbmc7XG4gICAgICAgIGNvbnN0IGFyciA9IFtdO1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHNlZ21lbnQubGVuZ3RoOyArK2kpIHtcbiAgICAgICAgICAgIGxldCBjID0gc2VnbWVudC5jaGFyQ29kZUF0KGkpO1xuICAgICAgICAgICAgaWYgKGMgPT09IDB4MmQgfHwgLy8gLVxuICAgICAgICAgICAgICAgIGMgPT09IDB4MmUgfHwgLy8gLlxuICAgICAgICAgICAgICAgIGMgPT09IDB4NWYgfHwgLy8gX1xuICAgICAgICAgICAgICAgIGMgPT09IDB4N2UgfHwgLy8gflxuICAgICAgICAgICAgICAgIChjID49IDB4MzAgJiYgYyA8PSAweDM5KSB8fCAvLyAwLTlcbiAgICAgICAgICAgICAgICAoYyA+PSAweDQxICYmIGMgPD0gMHg1YSkgfHwgLy8gYS16XG4gICAgICAgICAgICAgICAgKGMgPj0gMHg2MSAmJiBjIDw9IDB4N2EpIHx8IC8vIEEtWlxuICAgICAgICAgICAgICAgIChmb3JtYXQgPT09IFJGQzE3MzggJiYgKGMgPT09IDB4MjggfHwgYyA9PT0gMHgyOSkpIC8vICggKVxuICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgICAgYXJyW2Fyci5sZW5ndGhdID0gc2VnbWVudC5jaGFyQXQoaSk7XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoYyA8IDB4ODApIHtcbiAgICAgICAgICAgICAgICBhcnJbYXJyLmxlbmd0aF0gPSBoZXhfdGFibGVbY107XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoYyA8IDB4ODAwKSB7XG4gICAgICAgICAgICAgICAgYXJyW2Fyci5sZW5ndGhdID0gaGV4X3RhYmxlWzB4YzAgfCAoYyA+PiA2KV0gKyBoZXhfdGFibGVbMHg4MCB8IChjICYgMHgzZildO1xuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGMgPCAweGQ4MDAgfHwgYyA+PSAweGUwMDApIHtcbiAgICAgICAgICAgICAgICBhcnJbYXJyLmxlbmd0aF0gPVxuICAgICAgICAgICAgICAgICAgICBoZXhfdGFibGVbMHhlMCB8IChjID4+IDEyKV0gKyBoZXhfdGFibGVbMHg4MCB8ICgoYyA+PiA2KSAmIDB4M2YpXSArIGhleF90YWJsZVsweDgwIHwgKGMgJiAweDNmKV07XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpICs9IDE7XG4gICAgICAgICAgICBjID0gMHgxMDAwMCArICgoKGMgJiAweDNmZikgPDwgMTApIHwgKHNlZ21lbnQuY2hhckNvZGVBdChpKSAmIDB4M2ZmKSk7XG4gICAgICAgICAgICBhcnJbYXJyLmxlbmd0aF0gPVxuICAgICAgICAgICAgICAgIGhleF90YWJsZVsweGYwIHwgKGMgPj4gMTgpXSArXG4gICAgICAgICAgICAgICAgICAgIGhleF90YWJsZVsweDgwIHwgKChjID4+IDEyKSAmIDB4M2YpXSArXG4gICAgICAgICAgICAgICAgICAgIGhleF90YWJsZVsweDgwIHwgKChjID4+IDYpICYgMHgzZildICtcbiAgICAgICAgICAgICAgICAgICAgaGV4X3RhYmxlWzB4ODAgfCAoYyAmIDB4M2YpXTtcbiAgICAgICAgfVxuICAgICAgICBvdXQgKz0gYXJyLmpvaW4oJycpO1xuICAgIH1cbiAgICByZXR1cm4gb3V0O1xufTtcbmV4cG9ydCBmdW5jdGlvbiBjb21wYWN0KHZhbHVlKSB7XG4gICAgY29uc3QgcXVldWUgPSBbeyBvYmo6IHsgbzogdmFsdWUgfSwgcHJvcDogJ28nIH1dO1xuICAgIGNvbnN0IHJlZnMgPSBbXTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHF1ZXVlLmxlbmd0aDsgKytpKSB7XG4gICAgICAgIGNvbnN0IGl0ZW0gPSBxdWV1ZVtpXTtcbiAgICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgICBjb25zdCBvYmogPSBpdGVtLm9ialtpdGVtLnByb3BdO1xuICAgICAgICBjb25zdCBrZXlzID0gT2JqZWN0LmtleXMob2JqKTtcbiAgICAgICAgZm9yIChsZXQgaiA9IDA7IGogPCBrZXlzLmxlbmd0aDsgKytqKSB7XG4gICAgICAgICAgICBjb25zdCBrZXkgPSBrZXlzW2pdO1xuICAgICAgICAgICAgY29uc3QgdmFsID0gb2JqW2tleV07XG4gICAgICAgICAgICBpZiAodHlwZW9mIHZhbCA9PT0gJ29iamVjdCcgJiYgdmFsICE9PSBudWxsICYmIHJlZnMuaW5kZXhPZih2YWwpID09PSAtMSkge1xuICAgICAgICAgICAgICAgIHF1ZXVlLnB1c2goeyBvYmo6IG9iaiwgcHJvcDoga2V5IH0pO1xuICAgICAgICAgICAgICAgIHJlZnMucHVzaCh2YWwpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGNvbXBhY3RfcXVldWUocXVldWUpO1xuICAgIHJldHVybiB2YWx1ZTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc19yZWdleHAob2JqKSB7XG4gICAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvYmopID09PSAnW29iamVjdCBSZWdFeHBdJztcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc19idWZmZXIob2JqKSB7XG4gICAgaWYgKCFvYmogfHwgdHlwZW9mIG9iaiAhPT0gJ29iamVjdCcpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICByZXR1cm4gISEob2JqLmNvbnN0cnVjdG9yICYmIG9iai5jb25zdHJ1Y3Rvci5pc0J1ZmZlciAmJiBvYmouY29uc3RydWN0b3IuaXNCdWZmZXIob2JqKSk7XG59XG5leHBvcnQgZnVuY3Rpb24gY29tYmluZShhLCBiKSB7XG4gICAgcmV0dXJuIFtdLmNvbmNhdChhLCBiKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBtYXliZV9tYXAodmFsLCBmbikge1xuICAgIGlmIChpc19hcnJheSh2YWwpKSB7XG4gICAgICAgIGNvbnN0IG1hcHBlZCA9IFtdO1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHZhbC5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgICAgICAgbWFwcGVkLnB1c2goZm4odmFsW2ldKSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG1hcHBlZDtcbiAgICB9XG4gICAgcmV0dXJuIGZuKHZhbCk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD11dGlscy5tanMubWFwIl0sIm5hbWVzIjpbIlJGQzE3MzgiLCJoYXMiLCJPYmplY3QiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImlzX2FycmF5IiwiQXJyYXkiLCJpc0FycmF5IiwiaGV4X3RhYmxlIiwiYXJyYXkiLCJpIiwicHVzaCIsInRvU3RyaW5nIiwidG9VcHBlckNhc2UiLCJjb21wYWN0X3F1ZXVlIiwicXVldWUiLCJsZW5ndGgiLCJpdGVtIiwicG9wIiwib2JqIiwicHJvcCIsImNvbXBhY3RlZCIsImoiLCJhcnJheV90b19vYmplY3QiLCJzb3VyY2UiLCJvcHRpb25zIiwicGxhaW5PYmplY3RzIiwiY3JlYXRlIiwibWVyZ2UiLCJ0YXJnZXQiLCJhbGxvd1Byb3RvdHlwZXMiLCJjYWxsIiwiY29uY2F0IiwibWVyZ2VUYXJnZXQiLCJmb3JFYWNoIiwidGFyZ2V0SXRlbSIsImtleXMiLCJyZWR1Y2UiLCJhY2MiLCJrZXkiLCJ2YWx1ZSIsImFzc2lnbl9zaW5nbGVfc291cmNlIiwiZGVjb2RlIiwic3RyIiwiXyIsImNoYXJzZXQiLCJzdHJXaXRob3V0UGx1cyIsInJlcGxhY2UiLCJ1bmVzY2FwZSIsImRlY29kZVVSSUNvbXBvbmVudCIsImUiLCJsaW1pdCIsImVuY29kZSIsIl9kZWZhdWx0RW5jb2RlciIsIl9raW5kIiwiZm9ybWF0Iiwic3RyaW5nIiwiU3ltYm9sIiwiU3RyaW5nIiwiZXNjYXBlIiwiJDAiLCJwYXJzZUludCIsInNsaWNlIiwib3V0Iiwic2VnbWVudCIsImFyciIsImMiLCJjaGFyQ29kZUF0IiwiY2hhckF0Iiwiam9pbiIsImNvbXBhY3QiLCJvIiwicmVmcyIsInZhbCIsImluZGV4T2YiLCJpc19yZWdleHAiLCJpc19idWZmZXIiLCJjb25zdHJ1Y3RvciIsImlzQnVmZmVyIiwiY29tYmluZSIsImEiLCJiIiwibWF5YmVfbWFwIiwiZm4iLCJtYXBwZWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/internal/qs/utils.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/internal/request-options.mjs":
/*!**************************************************************!*\
  !*** ../../node_modules/openai/internal/request-options.mjs ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FallbackEncoder: () => (/* binding */ FallbackEncoder)\n/* harmony export */ });\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nconst FallbackEncoder = ({ headers, body })=>{\n    return {\n        bodyHeaders: {\n            \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n    };\n}; //# sourceMappingURL=request-options.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvaW50ZXJuYWwvcmVxdWVzdC1vcHRpb25zLm1qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsc0ZBQXNGO0FBQy9FLE1BQU1BLGtCQUFrQixDQUFDLEVBQUVDLE9BQU8sRUFBRUMsSUFBSSxFQUFFO0lBQzdDLE9BQU87UUFDSEMsYUFBYTtZQUNULGdCQUFnQjtRQUNwQjtRQUNBRCxNQUFNRSxLQUFLQyxTQUFTLENBQUNIO0lBQ3pCO0FBQ0osRUFBRSxDQUNGLDRDQUE0QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vbm9kZV9tb2R1bGVzL29wZW5haS9pbnRlcm5hbC9yZXF1ZXN0LW9wdGlvbnMubWpzPzJlNjMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmV4cG9ydCBjb25zdCBGYWxsYmFja0VuY29kZXIgPSAoeyBoZWFkZXJzLCBib2R5IH0pID0+IHtcbiAgICByZXR1cm4ge1xuICAgICAgICBib2R5SGVhZGVyczoge1xuICAgICAgICAgICAgJ2NvbnRlbnQtdHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgICAgfSxcbiAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoYm9keSksXG4gICAgfTtcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZXF1ZXN0LW9wdGlvbnMubWpzLm1hcCJdLCJuYW1lcyI6WyJGYWxsYmFja0VuY29kZXIiLCJoZWFkZXJzIiwiYm9keSIsImJvZHlIZWFkZXJzIiwiSlNPTiIsInN0cmluZ2lmeSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/internal/request-options.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/internal/shims.mjs":
/*!****************************************************!*\
  !*** ../../node_modules/openai/internal/shims.mjs ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CancelReadableStream: () => (/* binding */ CancelReadableStream),\n/* harmony export */   ReadableStreamFrom: () => (/* binding */ ReadableStreamFrom),\n/* harmony export */   ReadableStreamToAsyncIterable: () => (/* binding */ ReadableStreamToAsyncIterable),\n/* harmony export */   getDefaultFetch: () => (/* binding */ getDefaultFetch),\n/* harmony export */   makeReadableStream: () => (/* binding */ makeReadableStream)\n/* harmony export */ });\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nfunction getDefaultFetch() {\n    if (typeof fetch !== \"undefined\") {\n        return fetch;\n    }\n    throw new Error(\"`fetch` is not defined as a global; Either pass `fetch` to the client, `new OpenAI({ fetch })` or polyfill the global, `globalThis.fetch = fetch`\");\n}\nfunction makeReadableStream(...args) {\n    const ReadableStream = globalThis.ReadableStream;\n    if (typeof ReadableStream === \"undefined\") {\n        // Note: All of the platforms / runtimes we officially support already define\n        // `ReadableStream` as a global, so this should only ever be hit on unsupported runtimes.\n        throw new Error(\"`ReadableStream` is not defined as a global; You will need to polyfill it, `globalThis.ReadableStream = ReadableStream`\");\n    }\n    return new ReadableStream(...args);\n}\nfunction ReadableStreamFrom(iterable) {\n    let iter = Symbol.asyncIterator in iterable ? iterable[Symbol.asyncIterator]() : iterable[Symbol.iterator]();\n    return makeReadableStream({\n        start () {},\n        async pull (controller) {\n            const { done, value } = await iter.next();\n            if (done) {\n                controller.close();\n            } else {\n                controller.enqueue(value);\n            }\n        },\n        async cancel () {\n            await iter.return?.();\n        }\n    });\n}\n/**\n * Most browsers don't yet have async iterable support for ReadableStream,\n * and Node has a very different way of reading bytes from its \"ReadableStream\".\n *\n * This polyfill was pulled from https://github.com/MattiasBuelens/web-streams-polyfill/pull/122#issuecomment-1627354490\n */ function ReadableStreamToAsyncIterable(stream) {\n    if (stream[Symbol.asyncIterator]) return stream;\n    const reader = stream.getReader();\n    return {\n        async next () {\n            try {\n                const result = await reader.read();\n                if (result?.done) reader.releaseLock(); // release lock when stream becomes closed\n                return result;\n            } catch (e) {\n                reader.releaseLock(); // release lock when stream becomes errored\n                throw e;\n            }\n        },\n        async return () {\n            const cancelPromise = reader.cancel();\n            reader.releaseLock();\n            await cancelPromise;\n            return {\n                done: true,\n                value: undefined\n            };\n        },\n        [Symbol.asyncIterator] () {\n            return this;\n        }\n    };\n}\n/**\n * Cancels a ReadableStream we don't need to consume.\n * See https://undici.nodejs.org/#/?id=garbage-collection\n */ async function CancelReadableStream(stream) {\n    if (stream === null || typeof stream !== \"object\") return;\n    if (stream[Symbol.asyncIterator]) {\n        await stream[Symbol.asyncIterator]().return?.();\n        return;\n    }\n    const reader = stream.getReader();\n    const cancelPromise = reader.cancel();\n    reader.releaseLock();\n    await cancelPromise;\n} //# sourceMappingURL=shims.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvaW50ZXJuYWwvc2hpbXMubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUEsc0ZBQXNGO0FBQy9FLFNBQVNBO0lBQ1osSUFBSSxPQUFPQyxVQUFVLGFBQWE7UUFDOUIsT0FBT0E7SUFDWDtJQUNBLE1BQU0sSUFBSUMsTUFBTTtBQUNwQjtBQUNPLFNBQVNDLG1CQUFtQixHQUFHQyxJQUFJO0lBQ3RDLE1BQU1DLGlCQUFpQkMsV0FBV0QsY0FBYztJQUNoRCxJQUFJLE9BQU9BLG1CQUFtQixhQUFhO1FBQ3ZDLDZFQUE2RTtRQUM3RSx5RkFBeUY7UUFDekYsTUFBTSxJQUFJSCxNQUFNO0lBQ3BCO0lBQ0EsT0FBTyxJQUFJRyxrQkFBa0JEO0FBQ2pDO0FBQ08sU0FBU0csbUJBQW1CQyxRQUFRO0lBQ3ZDLElBQUlDLE9BQU9DLE9BQU9DLGFBQWEsSUFBSUgsV0FBV0EsUUFBUSxDQUFDRSxPQUFPQyxhQUFhLENBQUMsS0FBS0gsUUFBUSxDQUFDRSxPQUFPRSxRQUFRLENBQUM7SUFDMUcsT0FBT1QsbUJBQW1CO1FBQ3RCVSxVQUFVO1FBQ1YsTUFBTUMsTUFBS0MsVUFBVTtZQUNqQixNQUFNLEVBQUVDLElBQUksRUFBRUMsS0FBSyxFQUFFLEdBQUcsTUFBTVIsS0FBS1MsSUFBSTtZQUN2QyxJQUFJRixNQUFNO2dCQUNORCxXQUFXSSxLQUFLO1lBQ3BCLE9BQ0s7Z0JBQ0RKLFdBQVdLLE9BQU8sQ0FBQ0g7WUFDdkI7UUFDSjtRQUNBLE1BQU1JO1lBQ0YsTUFBTVosS0FBS2EsTUFBTTtRQUNyQjtJQUNKO0FBQ0o7QUFDQTs7Ozs7Q0FLQyxHQUNNLFNBQVNDLDhCQUE4QkMsTUFBTTtJQUNoRCxJQUFJQSxNQUFNLENBQUNkLE9BQU9DLGFBQWEsQ0FBQyxFQUM1QixPQUFPYTtJQUNYLE1BQU1DLFNBQVNELE9BQU9FLFNBQVM7SUFDL0IsT0FBTztRQUNILE1BQU1SO1lBQ0YsSUFBSTtnQkFDQSxNQUFNUyxTQUFTLE1BQU1GLE9BQU9HLElBQUk7Z0JBQ2hDLElBQUlELFFBQVFYLE1BQ1JTLE9BQU9JLFdBQVcsSUFBSSwwQ0FBMEM7Z0JBQ3BFLE9BQU9GO1lBQ1gsRUFDQSxPQUFPRyxHQUFHO2dCQUNOTCxPQUFPSSxXQUFXLElBQUksMkNBQTJDO2dCQUNqRSxNQUFNQztZQUNWO1FBQ0o7UUFDQSxNQUFNUjtZQUNGLE1BQU1TLGdCQUFnQk4sT0FBT0osTUFBTTtZQUNuQ0ksT0FBT0ksV0FBVztZQUNsQixNQUFNRTtZQUNOLE9BQU87Z0JBQUVmLE1BQU07Z0JBQU1DLE9BQU9lO1lBQVU7UUFDMUM7UUFDQSxDQUFDdEIsT0FBT0MsYUFBYSxDQUFDO1lBQ2xCLE9BQU8sSUFBSTtRQUNmO0lBQ0o7QUFDSjtBQUNBOzs7Q0FHQyxHQUNNLGVBQWVzQixxQkFBcUJULE1BQU07SUFDN0MsSUFBSUEsV0FBVyxRQUFRLE9BQU9BLFdBQVcsVUFDckM7SUFDSixJQUFJQSxNQUFNLENBQUNkLE9BQU9DLGFBQWEsQ0FBQyxFQUFFO1FBQzlCLE1BQU1hLE1BQU0sQ0FBQ2QsT0FBT0MsYUFBYSxDQUFDLEdBQUdXLE1BQU07UUFDM0M7SUFDSjtJQUNBLE1BQU1HLFNBQVNELE9BQU9FLFNBQVM7SUFDL0IsTUFBTUssZ0JBQWdCTixPQUFPSixNQUFNO0lBQ25DSSxPQUFPSSxXQUFXO0lBQ2xCLE1BQU1FO0FBQ1YsRUFDQSxrQ0FBa0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvaW50ZXJuYWwvc2hpbXMubWpzPzIzYWQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmV4cG9ydCBmdW5jdGlvbiBnZXREZWZhdWx0RmV0Y2goKSB7XG4gICAgaWYgKHR5cGVvZiBmZXRjaCAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgcmV0dXJuIGZldGNoO1xuICAgIH1cbiAgICB0aHJvdyBuZXcgRXJyb3IoJ2BmZXRjaGAgaXMgbm90IGRlZmluZWQgYXMgYSBnbG9iYWw7IEVpdGhlciBwYXNzIGBmZXRjaGAgdG8gdGhlIGNsaWVudCwgYG5ldyBPcGVuQUkoeyBmZXRjaCB9KWAgb3IgcG9seWZpbGwgdGhlIGdsb2JhbCwgYGdsb2JhbFRoaXMuZmV0Y2ggPSBmZXRjaGAnKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBtYWtlUmVhZGFibGVTdHJlYW0oLi4uYXJncykge1xuICAgIGNvbnN0IFJlYWRhYmxlU3RyZWFtID0gZ2xvYmFsVGhpcy5SZWFkYWJsZVN0cmVhbTtcbiAgICBpZiAodHlwZW9mIFJlYWRhYmxlU3RyZWFtID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICAvLyBOb3RlOiBBbGwgb2YgdGhlIHBsYXRmb3JtcyAvIHJ1bnRpbWVzIHdlIG9mZmljaWFsbHkgc3VwcG9ydCBhbHJlYWR5IGRlZmluZVxuICAgICAgICAvLyBgUmVhZGFibGVTdHJlYW1gIGFzIGEgZ2xvYmFsLCBzbyB0aGlzIHNob3VsZCBvbmx5IGV2ZXIgYmUgaGl0IG9uIHVuc3VwcG9ydGVkIHJ1bnRpbWVzLlxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ2BSZWFkYWJsZVN0cmVhbWAgaXMgbm90IGRlZmluZWQgYXMgYSBnbG9iYWw7IFlvdSB3aWxsIG5lZWQgdG8gcG9seWZpbGwgaXQsIGBnbG9iYWxUaGlzLlJlYWRhYmxlU3RyZWFtID0gUmVhZGFibGVTdHJlYW1gJyk7XG4gICAgfVxuICAgIHJldHVybiBuZXcgUmVhZGFibGVTdHJlYW0oLi4uYXJncyk7XG59XG5leHBvcnQgZnVuY3Rpb24gUmVhZGFibGVTdHJlYW1Gcm9tKGl0ZXJhYmxlKSB7XG4gICAgbGV0IGl0ZXIgPSBTeW1ib2wuYXN5bmNJdGVyYXRvciBpbiBpdGVyYWJsZSA/IGl0ZXJhYmxlW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSgpIDogaXRlcmFibGVbU3ltYm9sLml0ZXJhdG9yXSgpO1xuICAgIHJldHVybiBtYWtlUmVhZGFibGVTdHJlYW0oe1xuICAgICAgICBzdGFydCgpIHsgfSxcbiAgICAgICAgYXN5bmMgcHVsbChjb250cm9sbGVyKSB7XG4gICAgICAgICAgICBjb25zdCB7IGRvbmUsIHZhbHVlIH0gPSBhd2FpdCBpdGVyLm5leHQoKTtcbiAgICAgICAgICAgIGlmIChkb25lKSB7XG4gICAgICAgICAgICAgICAgY29udHJvbGxlci5jbG9zZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgY29udHJvbGxlci5lbnF1ZXVlKHZhbHVlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgYXN5bmMgY2FuY2VsKCkge1xuICAgICAgICAgICAgYXdhaXQgaXRlci5yZXR1cm4/LigpO1xuICAgICAgICB9LFxuICAgIH0pO1xufVxuLyoqXG4gKiBNb3N0IGJyb3dzZXJzIGRvbid0IHlldCBoYXZlIGFzeW5jIGl0ZXJhYmxlIHN1cHBvcnQgZm9yIFJlYWRhYmxlU3RyZWFtLFxuICogYW5kIE5vZGUgaGFzIGEgdmVyeSBkaWZmZXJlbnQgd2F5IG9mIHJlYWRpbmcgYnl0ZXMgZnJvbSBpdHMgXCJSZWFkYWJsZVN0cmVhbVwiLlxuICpcbiAqIFRoaXMgcG9seWZpbGwgd2FzIHB1bGxlZCBmcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS9NYXR0aWFzQnVlbGVucy93ZWItc3RyZWFtcy1wb2x5ZmlsbC9wdWxsLzEyMiNpc3N1ZWNvbW1lbnQtMTYyNzM1NDQ5MFxuICovXG5leHBvcnQgZnVuY3Rpb24gUmVhZGFibGVTdHJlYW1Ub0FzeW5jSXRlcmFibGUoc3RyZWFtKSB7XG4gICAgaWYgKHN0cmVhbVtTeW1ib2wuYXN5bmNJdGVyYXRvcl0pXG4gICAgICAgIHJldHVybiBzdHJlYW07XG4gICAgY29uc3QgcmVhZGVyID0gc3RyZWFtLmdldFJlYWRlcigpO1xuICAgIHJldHVybiB7XG4gICAgICAgIGFzeW5jIG5leHQoKSB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHJlYWRlci5yZWFkKCk7XG4gICAgICAgICAgICAgICAgaWYgKHJlc3VsdD8uZG9uZSlcbiAgICAgICAgICAgICAgICAgICAgcmVhZGVyLnJlbGVhc2VMb2NrKCk7IC8vIHJlbGVhc2UgbG9jayB3aGVuIHN0cmVhbSBiZWNvbWVzIGNsb3NlZFxuICAgICAgICAgICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgIHJlYWRlci5yZWxlYXNlTG9jaygpOyAvLyByZWxlYXNlIGxvY2sgd2hlbiBzdHJlYW0gYmVjb21lcyBlcnJvcmVkXG4gICAgICAgICAgICAgICAgdGhyb3cgZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgYXN5bmMgcmV0dXJuKCkge1xuICAgICAgICAgICAgY29uc3QgY2FuY2VsUHJvbWlzZSA9IHJlYWRlci5jYW5jZWwoKTtcbiAgICAgICAgICAgIHJlYWRlci5yZWxlYXNlTG9jaygpO1xuICAgICAgICAgICAgYXdhaXQgY2FuY2VsUHJvbWlzZTtcbiAgICAgICAgICAgIHJldHVybiB7IGRvbmU6IHRydWUsIHZhbHVlOiB1bmRlZmluZWQgfTtcbiAgICAgICAgfSxcbiAgICAgICAgW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSgpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICB9LFxuICAgIH07XG59XG4vKipcbiAqIENhbmNlbHMgYSBSZWFkYWJsZVN0cmVhbSB3ZSBkb24ndCBuZWVkIHRvIGNvbnN1bWUuXG4gKiBTZWUgaHR0cHM6Ly91bmRpY2kubm9kZWpzLm9yZy8jLz9pZD1nYXJiYWdlLWNvbGxlY3Rpb25cbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIENhbmNlbFJlYWRhYmxlU3RyZWFtKHN0cmVhbSkge1xuICAgIGlmIChzdHJlYW0gPT09IG51bGwgfHwgdHlwZW9mIHN0cmVhbSAhPT0gJ29iamVjdCcpXG4gICAgICAgIHJldHVybjtcbiAgICBpZiAoc3RyZWFtW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSkge1xuICAgICAgICBhd2FpdCBzdHJlYW1bU3ltYm9sLmFzeW5jSXRlcmF0b3JdKCkucmV0dXJuPy4oKTtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBjb25zdCByZWFkZXIgPSBzdHJlYW0uZ2V0UmVhZGVyKCk7XG4gICAgY29uc3QgY2FuY2VsUHJvbWlzZSA9IHJlYWRlci5jYW5jZWwoKTtcbiAgICByZWFkZXIucmVsZWFzZUxvY2soKTtcbiAgICBhd2FpdCBjYW5jZWxQcm9taXNlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2hpbXMubWpzLm1hcCJdLCJuYW1lcyI6WyJnZXREZWZhdWx0RmV0Y2giLCJmZXRjaCIsIkVycm9yIiwibWFrZVJlYWRhYmxlU3RyZWFtIiwiYXJncyIsIlJlYWRhYmxlU3RyZWFtIiwiZ2xvYmFsVGhpcyIsIlJlYWRhYmxlU3RyZWFtRnJvbSIsIml0ZXJhYmxlIiwiaXRlciIsIlN5bWJvbCIsImFzeW5jSXRlcmF0b3IiLCJpdGVyYXRvciIsInN0YXJ0IiwicHVsbCIsImNvbnRyb2xsZXIiLCJkb25lIiwidmFsdWUiLCJuZXh0IiwiY2xvc2UiLCJlbnF1ZXVlIiwiY2FuY2VsIiwicmV0dXJuIiwiUmVhZGFibGVTdHJlYW1Ub0FzeW5jSXRlcmFibGUiLCJzdHJlYW0iLCJyZWFkZXIiLCJnZXRSZWFkZXIiLCJyZXN1bHQiLCJyZWFkIiwicmVsZWFzZUxvY2siLCJlIiwiY2FuY2VsUHJvbWlzZSIsInVuZGVmaW5lZCIsIkNhbmNlbFJlYWRhYmxlU3RyZWFtIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/internal/shims.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/internal/to-file.mjs":
/*!******************************************************!*\
  !*** ../../node_modules/openai/internal/to-file.mjs ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   toFile: () => (/* binding */ toFile)\n/* harmony export */ });\n/* harmony import */ var _uploads_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./uploads.mjs */ \"(middleware)/../../node_modules/openai/internal/uploads.mjs\");\n\n\n/**\n * This check adds the arrayBuffer() method type because it is available and used at runtime\n */ const isBlobLike = (value)=>value != null && typeof value === \"object\" && typeof value.size === \"number\" && typeof value.type === \"string\" && typeof value.text === \"function\" && typeof value.slice === \"function\" && typeof value.arrayBuffer === \"function\";\n/**\n * This check adds the arrayBuffer() method type because it is available and used at runtime\n */ const isFileLike = (value)=>value != null && typeof value === \"object\" && typeof value.name === \"string\" && typeof value.lastModified === \"number\" && isBlobLike(value);\nconst isResponseLike = (value)=>value != null && typeof value === \"object\" && typeof value.url === \"string\" && typeof value.blob === \"function\";\n/**\n * Helper for creating a {@link File} to pass to an SDK upload method from a variety of different data formats\n * @param value the raw content of the file.  Can be an {@link Uploadable}, {@link BlobLikePart}, or {@link AsyncIterable} of {@link BlobLikePart}s\n * @param {string=} name the name of the file. If omitted, toFile will try to determine a file name from bits if possible\n * @param {Object=} options additional properties\n * @param {string=} options.type the MIME type of the content\n * @param {number=} options.lastModified the last modified timestamp\n * @returns a {@link File} with the given properties\n */ async function toFile(value, name, options) {\n    (0,_uploads_mjs__WEBPACK_IMPORTED_MODULE_0__.checkFileSupport)();\n    // If it's a promise, resolve it.\n    value = await value;\n    // If we've been given a `File` we don't need to do anything\n    if (isFileLike(value)) {\n        if (value instanceof File) {\n            return value;\n        }\n        return (0,_uploads_mjs__WEBPACK_IMPORTED_MODULE_0__.makeFile)([\n            await value.arrayBuffer()\n        ], value.name);\n    }\n    if (isResponseLike(value)) {\n        const blob = await value.blob();\n        name || (name = new URL(value.url).pathname.split(/[\\\\/]/).pop());\n        return (0,_uploads_mjs__WEBPACK_IMPORTED_MODULE_0__.makeFile)(await getBytes(blob), name, options);\n    }\n    const parts = await getBytes(value);\n    name || (name = (0,_uploads_mjs__WEBPACK_IMPORTED_MODULE_0__.getName)(value));\n    if (!options?.type) {\n        const type = parts.find((part)=>typeof part === \"object\" && \"type\" in part && part.type);\n        if (typeof type === \"string\") {\n            options = {\n                ...options,\n                type\n            };\n        }\n    }\n    return (0,_uploads_mjs__WEBPACK_IMPORTED_MODULE_0__.makeFile)(parts, name, options);\n}\nasync function getBytes(value) {\n    let parts = [];\n    if (typeof value === \"string\" || ArrayBuffer.isView(value) || // includes Uint8Array, Buffer, etc.\n    value instanceof ArrayBuffer) {\n        parts.push(value);\n    } else if (isBlobLike(value)) {\n        parts.push(value instanceof Blob ? value : await value.arrayBuffer());\n    } else if ((0,_uploads_mjs__WEBPACK_IMPORTED_MODULE_0__.isAsyncIterable)(value) // includes Readable, ReadableStream, etc.\n    ) {\n        for await (const chunk of value){\n            parts.push(...await getBytes(chunk)); // TODO, consider validating?\n        }\n    } else {\n        const constructor = value?.constructor?.name;\n        throw new Error(`Unexpected data type: ${typeof value}${constructor ? `; constructor: ${constructor}` : \"\"}${propsForError(value)}`);\n    }\n    return parts;\n}\nfunction propsForError(value) {\n    if (typeof value !== \"object\" || value === null) return \"\";\n    const props = Object.getOwnPropertyNames(value);\n    return `; props: [${props.map((p)=>`\"${p}\"`).join(\", \")}]`;\n} //# sourceMappingURL=to-file.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/internal/to-file.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/internal/tslib.mjs":
/*!****************************************************!*\
  !*** ../../node_modules/openai/internal/tslib.mjs ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __classPrivateFieldGet: () => (/* binding */ __classPrivateFieldGet),\n/* harmony export */   __classPrivateFieldSet: () => (/* binding */ __classPrivateFieldSet)\n/* harmony export */ });\nfunction __classPrivateFieldSet(receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n}\nfunction __classPrivateFieldGet(receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvaW50ZXJuYWwvdHNsaWIubWpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsU0FBU0EsdUJBQXVCQyxRQUFRLEVBQUVDLEtBQUssRUFBRUMsS0FBSyxFQUFFQyxJQUFJLEVBQUVDLENBQUM7SUFDM0QsSUFBSUQsU0FBUyxLQUNULE1BQU0sSUFBSUUsVUFBVTtJQUN4QixJQUFJRixTQUFTLE9BQU8sQ0FBQ0MsR0FDakIsTUFBTSxJQUFJQyxVQUFVO0lBQ3hCLElBQUksT0FBT0osVUFBVSxhQUFhRCxhQUFhQyxTQUFTLENBQUNHLElBQUksQ0FBQ0gsTUFBTUssR0FBRyxDQUFDTixXQUNwRSxNQUFNLElBQUlLLFVBQVU7SUFDeEIsT0FBT0YsU0FBUyxNQUFNQyxFQUFFRyxJQUFJLENBQUNQLFVBQVVFLFNBQVNFLElBQUtBLEVBQUVGLEtBQUssR0FBR0EsUUFBU0QsTUFBTU8sR0FBRyxDQUFDUixVQUFVRSxRQUFRQTtBQUN4RztBQUNBLFNBQVNPLHVCQUF1QlQsUUFBUSxFQUFFQyxLQUFLLEVBQUVFLElBQUksRUFBRUMsQ0FBQztJQUNwRCxJQUFJRCxTQUFTLE9BQU8sQ0FBQ0MsR0FDakIsTUFBTSxJQUFJQyxVQUFVO0lBQ3hCLElBQUksT0FBT0osVUFBVSxhQUFhRCxhQUFhQyxTQUFTLENBQUNHLElBQUksQ0FBQ0gsTUFBTUssR0FBRyxDQUFDTixXQUNwRSxNQUFNLElBQUlLLFVBQVU7SUFDeEIsT0FBT0YsU0FBUyxNQUFNQyxJQUFJRCxTQUFTLE1BQU1DLEVBQUVHLElBQUksQ0FBQ1AsWUFBWUksSUFBSUEsRUFBRUYsS0FBSyxHQUFHRCxNQUFNUyxHQUFHLENBQUNWO0FBQ3hGO0FBQzBEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi9ub2RlX21vZHVsZXMvb3BlbmFpL2ludGVybmFsL3RzbGliLm1qcz80MzYyIl0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIF9fY2xhc3NQcml2YXRlRmllbGRTZXQocmVjZWl2ZXIsIHN0YXRlLCB2YWx1ZSwga2luZCwgZikge1xuICAgIGlmIChraW5kID09PSBcIm1cIilcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlByaXZhdGUgbWV0aG9kIGlzIG5vdCB3cml0YWJsZVwiKTtcbiAgICBpZiAoa2luZCA9PT0gXCJhXCIgJiYgIWYpXG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJQcml2YXRlIGFjY2Vzc29yIHdhcyBkZWZpbmVkIHdpdGhvdXQgYSBzZXR0ZXJcIik7XG4gICAgaWYgKHR5cGVvZiBzdGF0ZSA9PT0gXCJmdW5jdGlvblwiID8gcmVjZWl2ZXIgIT09IHN0YXRlIHx8ICFmIDogIXN0YXRlLmhhcyhyZWNlaXZlcikpXG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3Qgd3JpdGUgcHJpdmF0ZSBtZW1iZXIgdG8gYW4gb2JqZWN0IHdob3NlIGNsYXNzIGRpZCBub3QgZGVjbGFyZSBpdFwiKTtcbiAgICByZXR1cm4ga2luZCA9PT0gXCJhXCIgPyBmLmNhbGwocmVjZWl2ZXIsIHZhbHVlKSA6IGYgPyAoZi52YWx1ZSA9IHZhbHVlKSA6IHN0YXRlLnNldChyZWNlaXZlciwgdmFsdWUpLCB2YWx1ZTtcbn1cbmZ1bmN0aW9uIF9fY2xhc3NQcml2YXRlRmllbGRHZXQocmVjZWl2ZXIsIHN0YXRlLCBraW5kLCBmKSB7XG4gICAgaWYgKGtpbmQgPT09IFwiYVwiICYmICFmKVxuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiUHJpdmF0ZSBhY2Nlc3NvciB3YXMgZGVmaW5lZCB3aXRob3V0IGEgZ2V0dGVyXCIpO1xuICAgIGlmICh0eXBlb2Ygc3RhdGUgPT09IFwiZnVuY3Rpb25cIiA/IHJlY2VpdmVyICE9PSBzdGF0ZSB8fCAhZiA6ICFzdGF0ZS5oYXMocmVjZWl2ZXIpKVxuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IHJlYWQgcHJpdmF0ZSBtZW1iZXIgZnJvbSBhbiBvYmplY3Qgd2hvc2UgY2xhc3MgZGlkIG5vdCBkZWNsYXJlIGl0XCIpO1xuICAgIHJldHVybiBraW5kID09PSBcIm1cIiA/IGYgOiBraW5kID09PSBcImFcIiA/IGYuY2FsbChyZWNlaXZlcikgOiBmID8gZi52YWx1ZSA6IHN0YXRlLmdldChyZWNlaXZlcik7XG59XG5leHBvcnQgeyBfX2NsYXNzUHJpdmF0ZUZpZWxkU2V0LCBfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0IH07XG4iXSwibmFtZXMiOlsiX19jbGFzc1ByaXZhdGVGaWVsZFNldCIsInJlY2VpdmVyIiwic3RhdGUiLCJ2YWx1ZSIsImtpbmQiLCJmIiwiVHlwZUVycm9yIiwiaGFzIiwiY2FsbCIsInNldCIsIl9fY2xhc3NQcml2YXRlRmllbGRHZXQiLCJnZXQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/internal/tslib.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/internal/uploads.mjs":
/*!******************************************************!*\
  !*** ../../node_modules/openai/internal/uploads.mjs ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkFileSupport: () => (/* binding */ checkFileSupport),\n/* harmony export */   createForm: () => (/* binding */ createForm),\n/* harmony export */   getName: () => (/* binding */ getName),\n/* harmony export */   isAsyncIterable: () => (/* binding */ isAsyncIterable),\n/* harmony export */   makeFile: () => (/* binding */ makeFile),\n/* harmony export */   maybeMultipartFormRequestOptions: () => (/* binding */ maybeMultipartFormRequestOptions),\n/* harmony export */   multipartFormRequestOptions: () => (/* binding */ multipartFormRequestOptions)\n/* harmony export */ });\n/* harmony import */ var _shims_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./shims.mjs */ \"(middleware)/../../node_modules/openai/internal/shims.mjs\");\n\nconst checkFileSupport = ()=>{\n    if (typeof File === \"undefined\") {\n        const { process } = globalThis;\n        const isOldNode = typeof process?.versions?.node === \"string\" && parseInt(process.versions.node.split(\".\")) < 20;\n        throw new Error(\"`File` is not defined as a global, which is required for file uploads.\" + (isOldNode ? \" Update to Node 20 LTS or newer, or set `globalThis.File` to `import('node:buffer').File`.\" : \"\"));\n    }\n};\n/**\n * Construct a `File` instance. This is used to ensure a helpful error is thrown\n * for environments that don't define a global `File` yet.\n */ function makeFile(fileBits, fileName, options) {\n    checkFileSupport();\n    return new File(fileBits, fileName ?? \"unknown_file\", options);\n}\nfunction getName(value) {\n    return (typeof value === \"object\" && value !== null && (\"name\" in value && value.name && String(value.name) || \"url\" in value && value.url && String(value.url) || \"filename\" in value && value.filename && String(value.filename) || \"path\" in value && value.path && String(value.path)) || \"\").split(/[\\\\/]/).pop() || undefined;\n}\nconst isAsyncIterable = (value)=>value != null && typeof value === \"object\" && typeof value[Symbol.asyncIterator] === \"function\";\n/**\n * Returns a multipart/form-data request if any part of the given request body contains a File / Blob value.\n * Otherwise returns the request as is.\n */ const maybeMultipartFormRequestOptions = async (opts, fetch)=>{\n    if (!hasUploadableValue(opts.body)) return opts;\n    return {\n        ...opts,\n        body: await createForm(opts.body, fetch)\n    };\n};\nconst multipartFormRequestOptions = async (opts, fetch)=>{\n    return {\n        ...opts,\n        body: await createForm(opts.body, fetch)\n    };\n};\nconst supportsFormDataMap = new WeakMap();\n/**\n * node-fetch doesn't support the global FormData object in recent node versions. Instead of sending\n * properly-encoded form data, it just stringifies the object, resulting in a request body of \"[object FormData]\".\n * This function detects if the fetch function provided supports the global FormData object to avoid\n * confusing error messages later on.\n */ function supportsFormData(fetchObject) {\n    const fetch = typeof fetchObject === \"function\" ? fetchObject : fetchObject.fetch;\n    const cached = supportsFormDataMap.get(fetch);\n    if (cached) return cached;\n    const promise = (async ()=>{\n        try {\n            const FetchResponse = \"Response\" in fetch ? fetch.Response : (await fetch(\"data:,\")).constructor;\n            const data = new FormData();\n            if (data.toString() === await new FetchResponse(data).text()) {\n                return false;\n            }\n            return true;\n        } catch  {\n            // avoid false negatives\n            return true;\n        }\n    })();\n    supportsFormDataMap.set(fetch, promise);\n    return promise;\n}\nconst createForm = async (body, fetch)=>{\n    if (!await supportsFormData(fetch)) {\n        throw new TypeError(\"The provided fetch function does not support file uploads with the current global FormData class.\");\n    }\n    const form = new FormData();\n    await Promise.all(Object.entries(body || {}).map(([key, value])=>addFormValue(form, key, value)));\n    return form;\n};\n// We check for Blob not File because Bun.File doesn't inherit from File,\n// but they both inherit from Blob and have a `name` property at runtime.\nconst isNamedBlob = (value)=>value instanceof Blob && \"name\" in value;\nconst isUploadable = (value)=>typeof value === \"object\" && value !== null && (value instanceof Response || isAsyncIterable(value) || isNamedBlob(value));\nconst hasUploadableValue = (value)=>{\n    if (isUploadable(value)) return true;\n    if (Array.isArray(value)) return value.some(hasUploadableValue);\n    if (value && typeof value === \"object\") {\n        for(const k in value){\n            if (hasUploadableValue(value[k])) return true;\n        }\n    }\n    return false;\n};\nconst addFormValue = async (form, key, value)=>{\n    if (value === undefined) return;\n    if (value == null) {\n        throw new TypeError(`Received null for \"${key}\"; to pass null in FormData, you must use the string 'null'`);\n    }\n    // TODO: make nested formats configurable\n    if (typeof value === \"string\" || typeof value === \"number\" || typeof value === \"boolean\") {\n        form.append(key, String(value));\n    } else if (value instanceof Response) {\n        form.append(key, makeFile([\n            await value.blob()\n        ], getName(value)));\n    } else if (isAsyncIterable(value)) {\n        form.append(key, makeFile([\n            await new Response((0,_shims_mjs__WEBPACK_IMPORTED_MODULE_0__.ReadableStreamFrom)(value)).blob()\n        ], getName(value)));\n    } else if (isNamedBlob(value)) {\n        form.append(key, value, getName(value));\n    } else if (Array.isArray(value)) {\n        await Promise.all(value.map((entry)=>addFormValue(form, key + \"[]\", entry)));\n    } else if (typeof value === \"object\") {\n        await Promise.all(Object.entries(value).map(([name, prop])=>addFormValue(form, `${key}[${name}]`, prop)));\n    } else {\n        throw new TypeError(`Invalid value given to form, expected a string, number, boolean, object, Array, File or Blob but got ${value} instead`);\n    }\n}; //# sourceMappingURL=uploads.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvaW50ZXJuYWwvdXBsb2Fkcy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBaUQ7QUFDMUMsTUFBTUMsbUJBQW1CO0lBQzVCLElBQUksT0FBT0MsU0FBUyxhQUFhO1FBQzdCLE1BQU0sRUFBRUMsT0FBTyxFQUFFLEdBQUdDO1FBQ3BCLE1BQU1DLFlBQVksT0FBT0YsU0FBU0csVUFBVUMsU0FBUyxZQUFZQyxTQUFTTCxRQUFRRyxRQUFRLENBQUNDLElBQUksQ0FBQ0UsS0FBSyxDQUFDLFFBQVE7UUFDOUcsTUFBTSxJQUFJQyxNQUFNLDJFQUNYTCxDQUFBQSxZQUNHLCtGQUNFLEVBQUM7SUFDZjtBQUNKLEVBQUU7QUFDRjs7O0NBR0MsR0FDTSxTQUFTTSxTQUFTQyxRQUFRLEVBQUVDLFFBQVEsRUFBRUMsT0FBTztJQUNoRGI7SUFDQSxPQUFPLElBQUlDLEtBQUtVLFVBQVVDLFlBQVksZ0JBQWdCQztBQUMxRDtBQUNPLFNBQVNDLFFBQVFDLEtBQUs7SUFDekIsT0FBUSxDQUFDLE9BQVFBLFVBQVUsWUFDdkJBLFVBQVUsUUFDVCxXQUFXQSxTQUFTQSxNQUFNQyxJQUFJLElBQUlDLE9BQU9GLE1BQU1DLElBQUksS0FDL0MsU0FBU0QsU0FBU0EsTUFBTUcsR0FBRyxJQUFJRCxPQUFPRixNQUFNRyxHQUFHLEtBQy9DLGNBQWNILFNBQVNBLE1BQU1JLFFBQVEsSUFBSUYsT0FBT0YsTUFBTUksUUFBUSxLQUM5RCxVQUFVSixTQUFTQSxNQUFNSyxJQUFJLElBQUlILE9BQU9GLE1BQU1LLElBQUksQ0FBQyxLQUN4RCxFQUFDLEVBQ0FaLEtBQUssQ0FBQyxTQUNOYSxHQUFHLE1BQU1DO0FBQ2xCO0FBQ08sTUFBTUMsa0JBQWtCLENBQUNSLFFBQVVBLFNBQVMsUUFBUSxPQUFPQSxVQUFVLFlBQVksT0FBT0EsS0FBSyxDQUFDUyxPQUFPQyxhQUFhLENBQUMsS0FBSyxXQUFXO0FBQzFJOzs7Q0FHQyxHQUNNLE1BQU1DLG1DQUFtQyxPQUFPQyxNQUFNQztJQUN6RCxJQUFJLENBQUNDLG1CQUFtQkYsS0FBS0csSUFBSSxHQUM3QixPQUFPSDtJQUNYLE9BQU87UUFBRSxHQUFHQSxJQUFJO1FBQUVHLE1BQU0sTUFBTUMsV0FBV0osS0FBS0csSUFBSSxFQUFFRjtJQUFPO0FBQy9ELEVBQUU7QUFDSyxNQUFNSSw4QkFBOEIsT0FBT0wsTUFBTUM7SUFDcEQsT0FBTztRQUFFLEdBQUdELElBQUk7UUFBRUcsTUFBTSxNQUFNQyxXQUFXSixLQUFLRyxJQUFJLEVBQUVGO0lBQU87QUFDL0QsRUFBRTtBQUNGLE1BQU1LLHNCQUFzQixJQUFJQztBQUNoQzs7Ozs7Q0FLQyxHQUNELFNBQVNDLGlCQUFpQkMsV0FBVztJQUNqQyxNQUFNUixRQUFRLE9BQU9RLGdCQUFnQixhQUFhQSxjQUFjQSxZQUFZUixLQUFLO0lBQ2pGLE1BQU1TLFNBQVNKLG9CQUFvQkssR0FBRyxDQUFDVjtJQUN2QyxJQUFJUyxRQUNBLE9BQU9BO0lBQ1gsTUFBTUUsVUFBVSxDQUFDO1FBQ2IsSUFBSTtZQUNBLE1BQU1DLGdCQUFpQixjQUFjWixRQUNqQ0EsTUFBTWEsUUFBUSxHQUNaLENBQUMsTUFBTWIsTUFBTSxTQUFRLEVBQUdjLFdBQVc7WUFDekMsTUFBTUMsT0FBTyxJQUFJQztZQUNqQixJQUFJRCxLQUFLRSxRQUFRLE9BQVEsTUFBTSxJQUFJTCxjQUFjRyxNQUFNRyxJQUFJLElBQUs7Z0JBQzVELE9BQU87WUFDWDtZQUNBLE9BQU87UUFDWCxFQUNBLE9BQU07WUFDRix3QkFBd0I7WUFDeEIsT0FBTztRQUNYO0lBQ0o7SUFDQWIsb0JBQW9CYyxHQUFHLENBQUNuQixPQUFPVztJQUMvQixPQUFPQTtBQUNYO0FBQ08sTUFBTVIsYUFBYSxPQUFPRCxNQUFNRjtJQUNuQyxJQUFJLENBQUUsTUFBTU8saUJBQWlCUCxRQUFTO1FBQ2xDLE1BQU0sSUFBSW9CLFVBQVU7SUFDeEI7SUFDQSxNQUFNQyxPQUFPLElBQUlMO0lBQ2pCLE1BQU1NLFFBQVFDLEdBQUcsQ0FBQ0MsT0FBT0MsT0FBTyxDQUFDdkIsUUFBUSxDQUFDLEdBQUd3QixHQUFHLENBQUMsQ0FBQyxDQUFDQyxLQUFLeEMsTUFBTSxHQUFLeUMsYUFBYVAsTUFBTU0sS0FBS3hDO0lBQzNGLE9BQU9rQztBQUNYLEVBQUU7QUFDRix5RUFBeUU7QUFDekUseUVBQXlFO0FBQ3pFLE1BQU1RLGNBQWMsQ0FBQzFDLFFBQVVBLGlCQUFpQjJDLFFBQVEsVUFBVTNDO0FBQ2xFLE1BQU00QyxlQUFlLENBQUM1QyxRQUFVLE9BQU9BLFVBQVUsWUFDN0NBLFVBQVUsUUFDVEEsQ0FBQUEsaUJBQWlCMEIsWUFBWWxCLGdCQUFnQlIsVUFBVTBDLFlBQVkxQyxNQUFLO0FBQzdFLE1BQU1jLHFCQUFxQixDQUFDZDtJQUN4QixJQUFJNEMsYUFBYTVDLFFBQ2IsT0FBTztJQUNYLElBQUk2QyxNQUFNQyxPQUFPLENBQUM5QyxRQUNkLE9BQU9BLE1BQU0rQyxJQUFJLENBQUNqQztJQUN0QixJQUFJZCxTQUFTLE9BQU9BLFVBQVUsVUFBVTtRQUNwQyxJQUFLLE1BQU1nRCxLQUFLaEQsTUFBTztZQUNuQixJQUFJYyxtQkFBbUJkLEtBQUssQ0FBQ2dELEVBQUUsR0FDM0IsT0FBTztRQUNmO0lBQ0o7SUFDQSxPQUFPO0FBQ1g7QUFDQSxNQUFNUCxlQUFlLE9BQU9QLE1BQU1NLEtBQUt4QztJQUNuQyxJQUFJQSxVQUFVTyxXQUNWO0lBQ0osSUFBSVAsU0FBUyxNQUFNO1FBQ2YsTUFBTSxJQUFJaUMsVUFBVSxDQUFDLG1CQUFtQixFQUFFTyxJQUFJLDJEQUEyRCxDQUFDO0lBQzlHO0lBQ0EseUNBQXlDO0lBQ3pDLElBQUksT0FBT3hDLFVBQVUsWUFBWSxPQUFPQSxVQUFVLFlBQVksT0FBT0EsVUFBVSxXQUFXO1FBQ3RGa0MsS0FBS2UsTUFBTSxDQUFDVCxLQUFLdEMsT0FBT0Y7SUFDNUIsT0FDSyxJQUFJQSxpQkFBaUIwQixVQUFVO1FBQ2hDUSxLQUFLZSxNQUFNLENBQUNULEtBQUs3QyxTQUFTO1lBQUMsTUFBTUssTUFBTWtELElBQUk7U0FBRyxFQUFFbkQsUUFBUUM7SUFDNUQsT0FDSyxJQUFJUSxnQkFBZ0JSLFFBQVE7UUFDN0JrQyxLQUFLZSxNQUFNLENBQUNULEtBQUs3QyxTQUFTO1lBQUMsTUFBTSxJQUFJK0IsU0FBUzFDLDhEQUFrQkEsQ0FBQ2dCLFFBQVFrRCxJQUFJO1NBQUcsRUFBRW5ELFFBQVFDO0lBQzlGLE9BQ0ssSUFBSTBDLFlBQVkxQyxRQUFRO1FBQ3pCa0MsS0FBS2UsTUFBTSxDQUFDVCxLQUFLeEMsT0FBT0QsUUFBUUM7SUFDcEMsT0FDSyxJQUFJNkMsTUFBTUMsT0FBTyxDQUFDOUMsUUFBUTtRQUMzQixNQUFNbUMsUUFBUUMsR0FBRyxDQUFDcEMsTUFBTXVDLEdBQUcsQ0FBQyxDQUFDWSxRQUFVVixhQUFhUCxNQUFNTSxNQUFNLE1BQU1XO0lBQzFFLE9BQ0ssSUFBSSxPQUFPbkQsVUFBVSxVQUFVO1FBQ2hDLE1BQU1tQyxRQUFRQyxHQUFHLENBQUNDLE9BQU9DLE9BQU8sQ0FBQ3RDLE9BQU91QyxHQUFHLENBQUMsQ0FBQyxDQUFDdEMsTUFBTW1ELEtBQUssR0FBS1gsYUFBYVAsTUFBTSxDQUFDLEVBQUVNLElBQUksQ0FBQyxFQUFFdkMsS0FBSyxDQUFDLENBQUMsRUFBRW1EO0lBQ3hHLE9BQ0s7UUFDRCxNQUFNLElBQUluQixVQUFVLENBQUMscUdBQXFHLEVBQUVqQyxNQUFNLFFBQVEsQ0FBQztJQUMvSTtBQUNKLEdBQ0Esb0NBQW9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi9ub2RlX21vZHVsZXMvb3BlbmFpL2ludGVybmFsL3VwbG9hZHMubWpzPzQ4YjAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUmVhZGFibGVTdHJlYW1Gcm9tIH0gZnJvbSBcIi4vc2hpbXMubWpzXCI7XG5leHBvcnQgY29uc3QgY2hlY2tGaWxlU3VwcG9ydCA9ICgpID0+IHtcbiAgICBpZiAodHlwZW9mIEZpbGUgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIGNvbnN0IHsgcHJvY2VzcyB9ID0gZ2xvYmFsVGhpcztcbiAgICAgICAgY29uc3QgaXNPbGROb2RlID0gdHlwZW9mIHByb2Nlc3M/LnZlcnNpb25zPy5ub2RlID09PSAnc3RyaW5nJyAmJiBwYXJzZUludChwcm9jZXNzLnZlcnNpb25zLm5vZGUuc3BsaXQoJy4nKSkgPCAyMDtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdgRmlsZWAgaXMgbm90IGRlZmluZWQgYXMgYSBnbG9iYWwsIHdoaWNoIGlzIHJlcXVpcmVkIGZvciBmaWxlIHVwbG9hZHMuJyArXG4gICAgICAgICAgICAoaXNPbGROb2RlID9cbiAgICAgICAgICAgICAgICBcIiBVcGRhdGUgdG8gTm9kZSAyMCBMVFMgb3IgbmV3ZXIsIG9yIHNldCBgZ2xvYmFsVGhpcy5GaWxlYCB0byBgaW1wb3J0KCdub2RlOmJ1ZmZlcicpLkZpbGVgLlwiXG4gICAgICAgICAgICAgICAgOiAnJykpO1xuICAgIH1cbn07XG4vKipcbiAqIENvbnN0cnVjdCBhIGBGaWxlYCBpbnN0YW5jZS4gVGhpcyBpcyB1c2VkIHRvIGVuc3VyZSBhIGhlbHBmdWwgZXJyb3IgaXMgdGhyb3duXG4gKiBmb3IgZW52aXJvbm1lbnRzIHRoYXQgZG9uJ3QgZGVmaW5lIGEgZ2xvYmFsIGBGaWxlYCB5ZXQuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBtYWtlRmlsZShmaWxlQml0cywgZmlsZU5hbWUsIG9wdGlvbnMpIHtcbiAgICBjaGVja0ZpbGVTdXBwb3J0KCk7XG4gICAgcmV0dXJuIG5ldyBGaWxlKGZpbGVCaXRzLCBmaWxlTmFtZSA/PyAndW5rbm93bl9maWxlJywgb3B0aW9ucyk7XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0TmFtZSh2YWx1ZSkge1xuICAgIHJldHVybiAoKCh0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmXG4gICAgICAgIHZhbHVlICE9PSBudWxsICYmXG4gICAgICAgICgoJ25hbWUnIGluIHZhbHVlICYmIHZhbHVlLm5hbWUgJiYgU3RyaW5nKHZhbHVlLm5hbWUpKSB8fFxuICAgICAgICAgICAgKCd1cmwnIGluIHZhbHVlICYmIHZhbHVlLnVybCAmJiBTdHJpbmcodmFsdWUudXJsKSkgfHxcbiAgICAgICAgICAgICgnZmlsZW5hbWUnIGluIHZhbHVlICYmIHZhbHVlLmZpbGVuYW1lICYmIFN0cmluZyh2YWx1ZS5maWxlbmFtZSkpIHx8XG4gICAgICAgICAgICAoJ3BhdGgnIGluIHZhbHVlICYmIHZhbHVlLnBhdGggJiYgU3RyaW5nKHZhbHVlLnBhdGgpKSkpIHx8XG4gICAgICAgICcnKVxuICAgICAgICAuc3BsaXQoL1tcXFxcL10vKVxuICAgICAgICAucG9wKCkgfHwgdW5kZWZpbmVkKTtcbn1cbmV4cG9ydCBjb25zdCBpc0FzeW5jSXRlcmFibGUgPSAodmFsdWUpID0+IHZhbHVlICE9IG51bGwgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiB0eXBlb2YgdmFsdWVbU3ltYm9sLmFzeW5jSXRlcmF0b3JdID09PSAnZnVuY3Rpb24nO1xuLyoqXG4gKiBSZXR1cm5zIGEgbXVsdGlwYXJ0L2Zvcm0tZGF0YSByZXF1ZXN0IGlmIGFueSBwYXJ0IG9mIHRoZSBnaXZlbiByZXF1ZXN0IGJvZHkgY29udGFpbnMgYSBGaWxlIC8gQmxvYiB2YWx1ZS5cbiAqIE90aGVyd2lzZSByZXR1cm5zIHRoZSByZXF1ZXN0IGFzIGlzLlxuICovXG5leHBvcnQgY29uc3QgbWF5YmVNdWx0aXBhcnRGb3JtUmVxdWVzdE9wdGlvbnMgPSBhc3luYyAob3B0cywgZmV0Y2gpID0+IHtcbiAgICBpZiAoIWhhc1VwbG9hZGFibGVWYWx1ZShvcHRzLmJvZHkpKVxuICAgICAgICByZXR1cm4gb3B0cztcbiAgICByZXR1cm4geyAuLi5vcHRzLCBib2R5OiBhd2FpdCBjcmVhdGVGb3JtKG9wdHMuYm9keSwgZmV0Y2gpIH07XG59O1xuZXhwb3J0IGNvbnN0IG11bHRpcGFydEZvcm1SZXF1ZXN0T3B0aW9ucyA9IGFzeW5jIChvcHRzLCBmZXRjaCkgPT4ge1xuICAgIHJldHVybiB7IC4uLm9wdHMsIGJvZHk6IGF3YWl0IGNyZWF0ZUZvcm0ob3B0cy5ib2R5LCBmZXRjaCkgfTtcbn07XG5jb25zdCBzdXBwb3J0c0Zvcm1EYXRhTWFwID0gbmV3IFdlYWtNYXAoKTtcbi8qKlxuICogbm9kZS1mZXRjaCBkb2Vzbid0IHN1cHBvcnQgdGhlIGdsb2JhbCBGb3JtRGF0YSBvYmplY3QgaW4gcmVjZW50IG5vZGUgdmVyc2lvbnMuIEluc3RlYWQgb2Ygc2VuZGluZ1xuICogcHJvcGVybHktZW5jb2RlZCBmb3JtIGRhdGEsIGl0IGp1c3Qgc3RyaW5naWZpZXMgdGhlIG9iamVjdCwgcmVzdWx0aW5nIGluIGEgcmVxdWVzdCBib2R5IG9mIFwiW29iamVjdCBGb3JtRGF0YV1cIi5cbiAqIFRoaXMgZnVuY3Rpb24gZGV0ZWN0cyBpZiB0aGUgZmV0Y2ggZnVuY3Rpb24gcHJvdmlkZWQgc3VwcG9ydHMgdGhlIGdsb2JhbCBGb3JtRGF0YSBvYmplY3QgdG8gYXZvaWRcbiAqIGNvbmZ1c2luZyBlcnJvciBtZXNzYWdlcyBsYXRlciBvbi5cbiAqL1xuZnVuY3Rpb24gc3VwcG9ydHNGb3JtRGF0YShmZXRjaE9iamVjdCkge1xuICAgIGNvbnN0IGZldGNoID0gdHlwZW9mIGZldGNoT2JqZWN0ID09PSAnZnVuY3Rpb24nID8gZmV0Y2hPYmplY3QgOiBmZXRjaE9iamVjdC5mZXRjaDtcbiAgICBjb25zdCBjYWNoZWQgPSBzdXBwb3J0c0Zvcm1EYXRhTWFwLmdldChmZXRjaCk7XG4gICAgaWYgKGNhY2hlZClcbiAgICAgICAgcmV0dXJuIGNhY2hlZDtcbiAgICBjb25zdCBwcm9taXNlID0gKGFzeW5jICgpID0+IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IEZldGNoUmVzcG9uc2UgPSAoJ1Jlc3BvbnNlJyBpbiBmZXRjaCA/XG4gICAgICAgICAgICAgICAgZmV0Y2guUmVzcG9uc2VcbiAgICAgICAgICAgICAgICA6IChhd2FpdCBmZXRjaCgnZGF0YTosJykpLmNvbnN0cnVjdG9yKTtcbiAgICAgICAgICAgIGNvbnN0IGRhdGEgPSBuZXcgRm9ybURhdGEoKTtcbiAgICAgICAgICAgIGlmIChkYXRhLnRvU3RyaW5nKCkgPT09IChhd2FpdCBuZXcgRmV0Y2hSZXNwb25zZShkYXRhKS50ZXh0KCkpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2gge1xuICAgICAgICAgICAgLy8gYXZvaWQgZmFsc2UgbmVnYXRpdmVzXG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgIH0pKCk7XG4gICAgc3VwcG9ydHNGb3JtRGF0YU1hcC5zZXQoZmV0Y2gsIHByb21pc2UpO1xuICAgIHJldHVybiBwcm9taXNlO1xufVxuZXhwb3J0IGNvbnN0IGNyZWF0ZUZvcm0gPSBhc3luYyAoYm9keSwgZmV0Y2gpID0+IHtcbiAgICBpZiAoIShhd2FpdCBzdXBwb3J0c0Zvcm1EYXRhKGZldGNoKSkpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignVGhlIHByb3ZpZGVkIGZldGNoIGZ1bmN0aW9uIGRvZXMgbm90IHN1cHBvcnQgZmlsZSB1cGxvYWRzIHdpdGggdGhlIGN1cnJlbnQgZ2xvYmFsIEZvcm1EYXRhIGNsYXNzLicpO1xuICAgIH1cbiAgICBjb25zdCBmb3JtID0gbmV3IEZvcm1EYXRhKCk7XG4gICAgYXdhaXQgUHJvbWlzZS5hbGwoT2JqZWN0LmVudHJpZXMoYm9keSB8fCB7fSkubWFwKChba2V5LCB2YWx1ZV0pID0+IGFkZEZvcm1WYWx1ZShmb3JtLCBrZXksIHZhbHVlKSkpO1xuICAgIHJldHVybiBmb3JtO1xufTtcbi8vIFdlIGNoZWNrIGZvciBCbG9iIG5vdCBGaWxlIGJlY2F1c2UgQnVuLkZpbGUgZG9lc24ndCBpbmhlcml0IGZyb20gRmlsZSxcbi8vIGJ1dCB0aGV5IGJvdGggaW5oZXJpdCBmcm9tIEJsb2IgYW5kIGhhdmUgYSBgbmFtZWAgcHJvcGVydHkgYXQgcnVudGltZS5cbmNvbnN0IGlzTmFtZWRCbG9iID0gKHZhbHVlKSA9PiB2YWx1ZSBpbnN0YW5jZW9mIEJsb2IgJiYgJ25hbWUnIGluIHZhbHVlO1xuY29uc3QgaXNVcGxvYWRhYmxlID0gKHZhbHVlKSA9PiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmXG4gICAgdmFsdWUgIT09IG51bGwgJiZcbiAgICAodmFsdWUgaW5zdGFuY2VvZiBSZXNwb25zZSB8fCBpc0FzeW5jSXRlcmFibGUodmFsdWUpIHx8IGlzTmFtZWRCbG9iKHZhbHVlKSk7XG5jb25zdCBoYXNVcGxvYWRhYmxlVmFsdWUgPSAodmFsdWUpID0+IHtcbiAgICBpZiAoaXNVcGxvYWRhYmxlKHZhbHVlKSlcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgaWYgKEFycmF5LmlzQXJyYXkodmFsdWUpKVxuICAgICAgICByZXR1cm4gdmFsdWUuc29tZShoYXNVcGxvYWRhYmxlVmFsdWUpO1xuICAgIGlmICh2YWx1ZSAmJiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnKSB7XG4gICAgICAgIGZvciAoY29uc3QgayBpbiB2YWx1ZSkge1xuICAgICAgICAgICAgaWYgKGhhc1VwbG9hZGFibGVWYWx1ZSh2YWx1ZVtrXSkpXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xufTtcbmNvbnN0IGFkZEZvcm1WYWx1ZSA9IGFzeW5jIChmb3JtLCBrZXksIHZhbHVlKSA9PiB7XG4gICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpXG4gICAgICAgIHJldHVybjtcbiAgICBpZiAodmFsdWUgPT0gbnVsbCkge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKGBSZWNlaXZlZCBudWxsIGZvciBcIiR7a2V5fVwiOyB0byBwYXNzIG51bGwgaW4gRm9ybURhdGEsIHlvdSBtdXN0IHVzZSB0aGUgc3RyaW5nICdudWxsJ2ApO1xuICAgIH1cbiAgICAvLyBUT0RPOiBtYWtlIG5lc3RlZCBmb3JtYXRzIGNvbmZpZ3VyYWJsZVxuICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnIHx8IHR5cGVvZiB2YWx1ZSA9PT0gJ251bWJlcicgfHwgdHlwZW9mIHZhbHVlID09PSAnYm9vbGVhbicpIHtcbiAgICAgICAgZm9ybS5hcHBlbmQoa2V5LCBTdHJpbmcodmFsdWUpKTtcbiAgICB9XG4gICAgZWxzZSBpZiAodmFsdWUgaW5zdGFuY2VvZiBSZXNwb25zZSkge1xuICAgICAgICBmb3JtLmFwcGVuZChrZXksIG1ha2VGaWxlKFthd2FpdCB2YWx1ZS5ibG9iKCldLCBnZXROYW1lKHZhbHVlKSkpO1xuICAgIH1cbiAgICBlbHNlIGlmIChpc0FzeW5jSXRlcmFibGUodmFsdWUpKSB7XG4gICAgICAgIGZvcm0uYXBwZW5kKGtleSwgbWFrZUZpbGUoW2F3YWl0IG5ldyBSZXNwb25zZShSZWFkYWJsZVN0cmVhbUZyb20odmFsdWUpKS5ibG9iKCldLCBnZXROYW1lKHZhbHVlKSkpO1xuICAgIH1cbiAgICBlbHNlIGlmIChpc05hbWVkQmxvYih2YWx1ZSkpIHtcbiAgICAgICAgZm9ybS5hcHBlbmQoa2V5LCB2YWx1ZSwgZ2V0TmFtZSh2YWx1ZSkpO1xuICAgIH1cbiAgICBlbHNlIGlmIChBcnJheS5pc0FycmF5KHZhbHVlKSkge1xuICAgICAgICBhd2FpdCBQcm9taXNlLmFsbCh2YWx1ZS5tYXAoKGVudHJ5KSA9PiBhZGRGb3JtVmFsdWUoZm9ybSwga2V5ICsgJ1tdJywgZW50cnkpKSk7XG4gICAgfVxuICAgIGVsc2UgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgYXdhaXQgUHJvbWlzZS5hbGwoT2JqZWN0LmVudHJpZXModmFsdWUpLm1hcCgoW25hbWUsIHByb3BdKSA9PiBhZGRGb3JtVmFsdWUoZm9ybSwgYCR7a2V5fVske25hbWV9XWAsIHByb3ApKSk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKGBJbnZhbGlkIHZhbHVlIGdpdmVuIHRvIGZvcm0sIGV4cGVjdGVkIGEgc3RyaW5nLCBudW1iZXIsIGJvb2xlYW4sIG9iamVjdCwgQXJyYXksIEZpbGUgb3IgQmxvYiBidXQgZ290ICR7dmFsdWV9IGluc3RlYWRgKTtcbiAgICB9XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXBsb2Fkcy5tanMubWFwIl0sIm5hbWVzIjpbIlJlYWRhYmxlU3RyZWFtRnJvbSIsImNoZWNrRmlsZVN1cHBvcnQiLCJGaWxlIiwicHJvY2VzcyIsImdsb2JhbFRoaXMiLCJpc09sZE5vZGUiLCJ2ZXJzaW9ucyIsIm5vZGUiLCJwYXJzZUludCIsInNwbGl0IiwiRXJyb3IiLCJtYWtlRmlsZSIsImZpbGVCaXRzIiwiZmlsZU5hbWUiLCJvcHRpb25zIiwiZ2V0TmFtZSIsInZhbHVlIiwibmFtZSIsIlN0cmluZyIsInVybCIsImZpbGVuYW1lIiwicGF0aCIsInBvcCIsInVuZGVmaW5lZCIsImlzQXN5bmNJdGVyYWJsZSIsIlN5bWJvbCIsImFzeW5jSXRlcmF0b3IiLCJtYXliZU11bHRpcGFydEZvcm1SZXF1ZXN0T3B0aW9ucyIsIm9wdHMiLCJmZXRjaCIsImhhc1VwbG9hZGFibGVWYWx1ZSIsImJvZHkiLCJjcmVhdGVGb3JtIiwibXVsdGlwYXJ0Rm9ybVJlcXVlc3RPcHRpb25zIiwic3VwcG9ydHNGb3JtRGF0YU1hcCIsIldlYWtNYXAiLCJzdXBwb3J0c0Zvcm1EYXRhIiwiZmV0Y2hPYmplY3QiLCJjYWNoZWQiLCJnZXQiLCJwcm9taXNlIiwiRmV0Y2hSZXNwb25zZSIsIlJlc3BvbnNlIiwiY29uc3RydWN0b3IiLCJkYXRhIiwiRm9ybURhdGEiLCJ0b1N0cmluZyIsInRleHQiLCJzZXQiLCJUeXBlRXJyb3IiLCJmb3JtIiwiUHJvbWlzZSIsImFsbCIsIk9iamVjdCIsImVudHJpZXMiLCJtYXAiLCJrZXkiLCJhZGRGb3JtVmFsdWUiLCJpc05hbWVkQmxvYiIsIkJsb2IiLCJpc1VwbG9hZGFibGUiLCJBcnJheSIsImlzQXJyYXkiLCJzb21lIiwiayIsImFwcGVuZCIsImJsb2IiLCJlbnRyeSIsInByb3AiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/internal/uploads.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/internal/utils.mjs":
/*!****************************************************!*\
  !*** ../../node_modules/openai/internal/utils.mjs ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_values_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/values.mjs */ \"(middleware)/../../node_modules/openai/internal/utils/values.mjs\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _utils_values_mjs__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _utils_values_mjs__WEBPACK_IMPORTED_MODULE_0__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _utils_base64_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/base64.mjs */ \"(middleware)/../../node_modules/openai/internal/utils/base64.mjs\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _utils_base64_mjs__WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _utils_base64_mjs__WEBPACK_IMPORTED_MODULE_1__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _utils_env_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/env.mjs */ \"(middleware)/../../node_modules/openai/internal/utils/env.mjs\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _utils_env_mjs__WEBPACK_IMPORTED_MODULE_2__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _utils_env_mjs__WEBPACK_IMPORTED_MODULE_2__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _utils_log_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/log.mjs */ \"(middleware)/../../node_modules/openai/internal/utils/log.mjs\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _utils_log_mjs__WEBPACK_IMPORTED_MODULE_3__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _utils_log_mjs__WEBPACK_IMPORTED_MODULE_3__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _utils_uuid_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/uuid.mjs */ \"(middleware)/../../node_modules/openai/internal/utils/uuid.mjs\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _utils_uuid_mjs__WEBPACK_IMPORTED_MODULE_4__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _utils_uuid_mjs__WEBPACK_IMPORTED_MODULE_4__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _utils_sleep_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils/sleep.mjs */ \"(middleware)/../../node_modules/openai/internal/utils/sleep.mjs\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _utils_sleep_mjs__WEBPACK_IMPORTED_MODULE_5__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _utils_sleep_mjs__WEBPACK_IMPORTED_MODULE_5__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\n\n //# sourceMappingURL=utils.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvaW50ZXJuYWwvdXRpbHMubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxzRkFBc0Y7QUFDbkQ7QUFDQTtBQUNIO0FBQ0E7QUFDQztBQUNDLENBQ2xDLGtDQUFrQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vbm9kZV9tb2R1bGVzL29wZW5haS9pbnRlcm5hbC91dGlscy5tanM/ZWE3MSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlIGdlbmVyYXRlZCBmcm9tIG91ciBPcGVuQVBJIHNwZWMgYnkgU3RhaW5sZXNzLiBTZWUgQ09OVFJJQlVUSU5HLm1kIGZvciBkZXRhaWxzLlxuZXhwb3J0ICogZnJvbSBcIi4vdXRpbHMvdmFsdWVzLm1qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vdXRpbHMvYmFzZTY0Lm1qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vdXRpbHMvZW52Lm1qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vdXRpbHMvbG9nLm1qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vdXRpbHMvdXVpZC5tanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3V0aWxzL3NsZWVwLm1qc1wiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXRpbHMubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/internal/utils.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/internal/utils/base64.mjs":
/*!***********************************************************!*\
  !*** ../../node_modules/openai/internal/utils/base64.mjs ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fromBase64: () => (/* binding */ fromBase64),\n/* harmony export */   toBase64: () => (/* binding */ toBase64),\n/* harmony export */   toFloat32Array: () => (/* binding */ toFloat32Array)\n/* harmony export */ });\n/* harmony import */ var _core_error_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/error.mjs */ \"(middleware)/../../node_modules/openai/core/error.mjs\");\n/* harmony import */ var _bytes_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bytes.mjs */ \"(middleware)/../../node_modules/openai/internal/utils/bytes.mjs\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"buffer\")[\"Buffer\"];\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\nconst toBase64 = (data)=>{\n    if (!data) return \"\";\n    if (typeof globalThis.Buffer !== \"undefined\") {\n        return globalThis.Buffer.from(data).toString(\"base64\");\n    }\n    if (typeof data === \"string\") {\n        data = (0,_bytes_mjs__WEBPACK_IMPORTED_MODULE_1__.encodeUTF8)(data);\n    }\n    if (typeof btoa !== \"undefined\") {\n        return btoa(String.fromCharCode.apply(null, data));\n    }\n    throw new _core_error_mjs__WEBPACK_IMPORTED_MODULE_0__.OpenAIError(\"Cannot generate base64 string; Expected `Buffer` or `btoa` to be defined\");\n};\nconst fromBase64 = (str)=>{\n    if (typeof globalThis.Buffer !== \"undefined\") {\n        const buf = globalThis.Buffer.from(str, \"base64\");\n        return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n    }\n    if (typeof atob !== \"undefined\") {\n        const bstr = atob(str);\n        const buf = new Uint8Array(bstr.length);\n        for(let i = 0; i < bstr.length; i++){\n            buf[i] = bstr.charCodeAt(i);\n        }\n        return buf;\n    }\n    throw new _core_error_mjs__WEBPACK_IMPORTED_MODULE_0__.OpenAIError(\"Cannot decode base64 string; Expected `Buffer` or `atob` to be defined\");\n};\n/**\n * Converts a Base64 encoded string to a Float32Array.\n * @param base64Str - The Base64 encoded string.\n * @returns An Array of numbers interpreted as Float32 values.\n */ const toFloat32Array = (base64Str)=>{\n    if (typeof Buffer !== \"undefined\") {\n        // for Node.js environment\n        const buf = Buffer.from(base64Str, \"base64\");\n        return Array.from(new Float32Array(buf.buffer, buf.byteOffset, buf.length / Float32Array.BYTES_PER_ELEMENT));\n    } else {\n        // for legacy web platform APIs\n        const binaryStr = atob(base64Str);\n        const len = binaryStr.length;\n        const bytes = new Uint8Array(len);\n        for(let i = 0; i < len; i++){\n            bytes[i] = binaryStr.charCodeAt(i);\n        }\n        return Array.from(new Float32Array(bytes.buffer));\n    }\n}; //# sourceMappingURL=base64.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvaW50ZXJuYWwvdXRpbHMvYmFzZTY0Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQSxzRkFBc0Y7QUFDbkM7QUFDVjtBQUNsQyxNQUFNRSxXQUFXLENBQUNDO0lBQ3JCLElBQUksQ0FBQ0EsTUFDRCxPQUFPO0lBQ1gsSUFBSSxPQUFPQyxXQUFXQyxNQUFNLEtBQUssYUFBYTtRQUMxQyxPQUFPRCxXQUFXQyxNQUFNLENBQUNDLElBQUksQ0FBQ0gsTUFBTUksUUFBUSxDQUFDO0lBQ2pEO0lBQ0EsSUFBSSxPQUFPSixTQUFTLFVBQVU7UUFDMUJBLE9BQU9GLHNEQUFVQSxDQUFDRTtJQUN0QjtJQUNBLElBQUksT0FBT0ssU0FBUyxhQUFhO1FBQzdCLE9BQU9BLEtBQUtDLE9BQU9DLFlBQVksQ0FBQ0MsS0FBSyxDQUFDLE1BQU1SO0lBQ2hEO0lBQ0EsTUFBTSxJQUFJSCx3REFBV0EsQ0FBQztBQUMxQixFQUFFO0FBQ0ssTUFBTVksYUFBYSxDQUFDQztJQUN2QixJQUFJLE9BQU9ULFdBQVdDLE1BQU0sS0FBSyxhQUFhO1FBQzFDLE1BQU1TLE1BQU1WLFdBQVdDLE1BQU0sQ0FBQ0MsSUFBSSxDQUFDTyxLQUFLO1FBQ3hDLE9BQU8sSUFBSUUsV0FBV0QsSUFBSUUsTUFBTSxFQUFFRixJQUFJRyxVQUFVLEVBQUVILElBQUlJLFVBQVU7SUFDcEU7SUFDQSxJQUFJLE9BQU9DLFNBQVMsYUFBYTtRQUM3QixNQUFNQyxPQUFPRCxLQUFLTjtRQUNsQixNQUFNQyxNQUFNLElBQUlDLFdBQVdLLEtBQUtDLE1BQU07UUFDdEMsSUFBSyxJQUFJQyxJQUFJLEdBQUdBLElBQUlGLEtBQUtDLE1BQU0sRUFBRUMsSUFBSztZQUNsQ1IsR0FBRyxDQUFDUSxFQUFFLEdBQUdGLEtBQUtHLFVBQVUsQ0FBQ0Q7UUFDN0I7UUFDQSxPQUFPUjtJQUNYO0lBQ0EsTUFBTSxJQUFJZCx3REFBV0EsQ0FBQztBQUMxQixFQUFFO0FBQ0Y7Ozs7Q0FJQyxHQUNNLE1BQU13QixpQkFBaUIsQ0FBQ0M7SUFDM0IsSUFBSSxPQUFPcEIsTUFBTUEsS0FBSyxhQUFhO1FBQy9CLDBCQUEwQjtRQUMxQixNQUFNUyxNQUFNVCxNQUFNQSxDQUFDQyxJQUFJLENBQUNtQixXQUFXO1FBQ25DLE9BQU9DLE1BQU1wQixJQUFJLENBQUMsSUFBSXFCLGFBQWFiLElBQUlFLE1BQU0sRUFBRUYsSUFBSUcsVUFBVSxFQUFFSCxJQUFJTyxNQUFNLEdBQUdNLGFBQWFDLGlCQUFpQjtJQUM5RyxPQUNLO1FBQ0QsK0JBQStCO1FBQy9CLE1BQU1DLFlBQVlWLEtBQUtNO1FBQ3ZCLE1BQU1LLE1BQU1ELFVBQVVSLE1BQU07UUFDNUIsTUFBTVUsUUFBUSxJQUFJaEIsV0FBV2U7UUFDN0IsSUFBSyxJQUFJUixJQUFJLEdBQUdBLElBQUlRLEtBQUtSLElBQUs7WUFDMUJTLEtBQUssQ0FBQ1QsRUFBRSxHQUFHTyxVQUFVTixVQUFVLENBQUNEO1FBQ3BDO1FBQ0EsT0FBT0ksTUFBTXBCLElBQUksQ0FBQyxJQUFJcUIsYUFBYUksTUFBTWYsTUFBTTtJQUNuRDtBQUNKLEVBQUUsQ0FDRixtQ0FBbUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvaW50ZXJuYWwvdXRpbHMvYmFzZTY0Lm1qcz8xOTYyIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5pbXBvcnQgeyBPcGVuQUlFcnJvciB9IGZyb20gXCIuLi8uLi9jb3JlL2Vycm9yLm1qc1wiO1xuaW1wb3J0IHsgZW5jb2RlVVRGOCB9IGZyb20gXCIuL2J5dGVzLm1qc1wiO1xuZXhwb3J0IGNvbnN0IHRvQmFzZTY0ID0gKGRhdGEpID0+IHtcbiAgICBpZiAoIWRhdGEpXG4gICAgICAgIHJldHVybiAnJztcbiAgICBpZiAodHlwZW9mIGdsb2JhbFRoaXMuQnVmZmVyICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICByZXR1cm4gZ2xvYmFsVGhpcy5CdWZmZXIuZnJvbShkYXRhKS50b1N0cmluZygnYmFzZTY0Jyk7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgZGF0YSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgZGF0YSA9IGVuY29kZVVURjgoZGF0YSk7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgYnRvYSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgcmV0dXJuIGJ0b2EoU3RyaW5nLmZyb21DaGFyQ29kZS5hcHBseShudWxsLCBkYXRhKSk7XG4gICAgfVxuICAgIHRocm93IG5ldyBPcGVuQUlFcnJvcignQ2Fubm90IGdlbmVyYXRlIGJhc2U2NCBzdHJpbmc7IEV4cGVjdGVkIGBCdWZmZXJgIG9yIGBidG9hYCB0byBiZSBkZWZpbmVkJyk7XG59O1xuZXhwb3J0IGNvbnN0IGZyb21CYXNlNjQgPSAoc3RyKSA9PiB7XG4gICAgaWYgKHR5cGVvZiBnbG9iYWxUaGlzLkJ1ZmZlciAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgY29uc3QgYnVmID0gZ2xvYmFsVGhpcy5CdWZmZXIuZnJvbShzdHIsICdiYXNlNjQnKTtcbiAgICAgICAgcmV0dXJuIG5ldyBVaW50OEFycmF5KGJ1Zi5idWZmZXIsIGJ1Zi5ieXRlT2Zmc2V0LCBidWYuYnl0ZUxlbmd0aCk7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgYXRvYiAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgY29uc3QgYnN0ciA9IGF0b2Ioc3RyKTtcbiAgICAgICAgY29uc3QgYnVmID0gbmV3IFVpbnQ4QXJyYXkoYnN0ci5sZW5ndGgpO1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGJzdHIubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGJ1ZltpXSA9IGJzdHIuY2hhckNvZGVBdChpKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gYnVmO1xuICAgIH1cbiAgICB0aHJvdyBuZXcgT3BlbkFJRXJyb3IoJ0Nhbm5vdCBkZWNvZGUgYmFzZTY0IHN0cmluZzsgRXhwZWN0ZWQgYEJ1ZmZlcmAgb3IgYGF0b2JgIHRvIGJlIGRlZmluZWQnKTtcbn07XG4vKipcbiAqIENvbnZlcnRzIGEgQmFzZTY0IGVuY29kZWQgc3RyaW5nIHRvIGEgRmxvYXQzMkFycmF5LlxuICogQHBhcmFtIGJhc2U2NFN0ciAtIFRoZSBCYXNlNjQgZW5jb2RlZCBzdHJpbmcuXG4gKiBAcmV0dXJucyBBbiBBcnJheSBvZiBudW1iZXJzIGludGVycHJldGVkIGFzIEZsb2F0MzIgdmFsdWVzLlxuICovXG5leHBvcnQgY29uc3QgdG9GbG9hdDMyQXJyYXkgPSAoYmFzZTY0U3RyKSA9PiB7XG4gICAgaWYgKHR5cGVvZiBCdWZmZXIgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIC8vIGZvciBOb2RlLmpzIGVudmlyb25tZW50XG4gICAgICAgIGNvbnN0IGJ1ZiA9IEJ1ZmZlci5mcm9tKGJhc2U2NFN0ciwgJ2Jhc2U2NCcpO1xuICAgICAgICByZXR1cm4gQXJyYXkuZnJvbShuZXcgRmxvYXQzMkFycmF5KGJ1Zi5idWZmZXIsIGJ1Zi5ieXRlT2Zmc2V0LCBidWYubGVuZ3RoIC8gRmxvYXQzMkFycmF5LkJZVEVTX1BFUl9FTEVNRU5UKSk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICAvLyBmb3IgbGVnYWN5IHdlYiBwbGF0Zm9ybSBBUElzXG4gICAgICAgIGNvbnN0IGJpbmFyeVN0ciA9IGF0b2IoYmFzZTY0U3RyKTtcbiAgICAgICAgY29uc3QgbGVuID0gYmluYXJ5U3RyLmxlbmd0aDtcbiAgICAgICAgY29uc3QgYnl0ZXMgPSBuZXcgVWludDhBcnJheShsZW4pO1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgICAgICAgICBieXRlc1tpXSA9IGJpbmFyeVN0ci5jaGFyQ29kZUF0KGkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBBcnJheS5mcm9tKG5ldyBGbG9hdDMyQXJyYXkoYnl0ZXMuYnVmZmVyKSk7XG4gICAgfVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJhc2U2NC5tanMubWFwIl0sIm5hbWVzIjpbIk9wZW5BSUVycm9yIiwiZW5jb2RlVVRGOCIsInRvQmFzZTY0IiwiZGF0YSIsImdsb2JhbFRoaXMiLCJCdWZmZXIiLCJmcm9tIiwidG9TdHJpbmciLCJidG9hIiwiU3RyaW5nIiwiZnJvbUNoYXJDb2RlIiwiYXBwbHkiLCJmcm9tQmFzZTY0Iiwic3RyIiwiYnVmIiwiVWludDhBcnJheSIsImJ1ZmZlciIsImJ5dGVPZmZzZXQiLCJieXRlTGVuZ3RoIiwiYXRvYiIsImJzdHIiLCJsZW5ndGgiLCJpIiwiY2hhckNvZGVBdCIsInRvRmxvYXQzMkFycmF5IiwiYmFzZTY0U3RyIiwiQXJyYXkiLCJGbG9hdDMyQXJyYXkiLCJCWVRFU19QRVJfRUxFTUVOVCIsImJpbmFyeVN0ciIsImxlbiIsImJ5dGVzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/internal/utils/base64.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/internal/utils/bytes.mjs":
/*!**********************************************************!*\
  !*** ../../node_modules/openai/internal/utils/bytes.mjs ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   concatBytes: () => (/* binding */ concatBytes),\n/* harmony export */   decodeUTF8: () => (/* binding */ decodeUTF8),\n/* harmony export */   encodeUTF8: () => (/* binding */ encodeUTF8)\n/* harmony export */ });\nfunction concatBytes(buffers) {\n    let length = 0;\n    for (const buffer of buffers){\n        length += buffer.length;\n    }\n    const output = new Uint8Array(length);\n    let index = 0;\n    for (const buffer of buffers){\n        output.set(buffer, index);\n        index += buffer.length;\n    }\n    return output;\n}\nlet encodeUTF8_;\nfunction encodeUTF8(str) {\n    let encoder;\n    return (encodeUTF8_ ?? (encoder = new globalThis.TextEncoder(), encodeUTF8_ = encoder.encode.bind(encoder)))(str);\n}\nlet decodeUTF8_;\nfunction decodeUTF8(bytes) {\n    let decoder;\n    return (decodeUTF8_ ?? (decoder = new globalThis.TextDecoder(), decodeUTF8_ = decoder.decode.bind(decoder)))(bytes);\n} //# sourceMappingURL=bytes.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvaW50ZXJuYWwvdXRpbHMvYnl0ZXMubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFPLFNBQVNBLFlBQVlDLE9BQU87SUFDL0IsSUFBSUMsU0FBUztJQUNiLEtBQUssTUFBTUMsVUFBVUYsUUFBUztRQUMxQkMsVUFBVUMsT0FBT0QsTUFBTTtJQUMzQjtJQUNBLE1BQU1FLFNBQVMsSUFBSUMsV0FBV0g7SUFDOUIsSUFBSUksUUFBUTtJQUNaLEtBQUssTUFBTUgsVUFBVUYsUUFBUztRQUMxQkcsT0FBT0csR0FBRyxDQUFDSixRQUFRRztRQUNuQkEsU0FBU0gsT0FBT0QsTUFBTTtJQUMxQjtJQUNBLE9BQU9FO0FBQ1g7QUFDQSxJQUFJSTtBQUNHLFNBQVNDLFdBQVdDLEdBQUc7SUFDMUIsSUFBSUM7SUFDSixPQUFPLENBQUNILGVBQ0gsV0FBVyxJQUFJSSxXQUFXQyxXQUFXLElBQU1MLGNBQWNHLFFBQVFHLE1BQU0sQ0FBQ0MsSUFBSSxDQUFDSixRQUFRLENBQUMsRUFBR0Q7QUFDbEc7QUFDQSxJQUFJTTtBQUNHLFNBQVNDLFdBQVdDLEtBQUs7SUFDNUIsSUFBSUM7SUFDSixPQUFPLENBQUNILGVBQ0gsV0FBVyxJQUFJSixXQUFXUSxXQUFXLElBQU1KLGNBQWNHLFFBQVFFLE1BQU0sQ0FBQ04sSUFBSSxDQUFDSSxRQUFRLENBQUMsRUFBR0Q7QUFDbEcsRUFDQSxrQ0FBa0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvaW50ZXJuYWwvdXRpbHMvYnl0ZXMubWpzP2E2ZWYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGNvbmNhdEJ5dGVzKGJ1ZmZlcnMpIHtcbiAgICBsZXQgbGVuZ3RoID0gMDtcbiAgICBmb3IgKGNvbnN0IGJ1ZmZlciBvZiBidWZmZXJzKSB7XG4gICAgICAgIGxlbmd0aCArPSBidWZmZXIubGVuZ3RoO1xuICAgIH1cbiAgICBjb25zdCBvdXRwdXQgPSBuZXcgVWludDhBcnJheShsZW5ndGgpO1xuICAgIGxldCBpbmRleCA9IDA7XG4gICAgZm9yIChjb25zdCBidWZmZXIgb2YgYnVmZmVycykge1xuICAgICAgICBvdXRwdXQuc2V0KGJ1ZmZlciwgaW5kZXgpO1xuICAgICAgICBpbmRleCArPSBidWZmZXIubGVuZ3RoO1xuICAgIH1cbiAgICByZXR1cm4gb3V0cHV0O1xufVxubGV0IGVuY29kZVVURjhfO1xuZXhwb3J0IGZ1bmN0aW9uIGVuY29kZVVURjgoc3RyKSB7XG4gICAgbGV0IGVuY29kZXI7XG4gICAgcmV0dXJuIChlbmNvZGVVVEY4XyA/P1xuICAgICAgICAoKGVuY29kZXIgPSBuZXcgZ2xvYmFsVGhpcy5UZXh0RW5jb2RlcigpKSwgKGVuY29kZVVURjhfID0gZW5jb2Rlci5lbmNvZGUuYmluZChlbmNvZGVyKSkpKShzdHIpO1xufVxubGV0IGRlY29kZVVURjhfO1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZVVURjgoYnl0ZXMpIHtcbiAgICBsZXQgZGVjb2RlcjtcbiAgICByZXR1cm4gKGRlY29kZVVURjhfID8/XG4gICAgICAgICgoZGVjb2RlciA9IG5ldyBnbG9iYWxUaGlzLlRleHREZWNvZGVyKCkpLCAoZGVjb2RlVVRGOF8gPSBkZWNvZGVyLmRlY29kZS5iaW5kKGRlY29kZXIpKSkpKGJ5dGVzKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJ5dGVzLm1qcy5tYXAiXSwibmFtZXMiOlsiY29uY2F0Qnl0ZXMiLCJidWZmZXJzIiwibGVuZ3RoIiwiYnVmZmVyIiwib3V0cHV0IiwiVWludDhBcnJheSIsImluZGV4Iiwic2V0IiwiZW5jb2RlVVRGOF8iLCJlbmNvZGVVVEY4Iiwic3RyIiwiZW5jb2RlciIsImdsb2JhbFRoaXMiLCJUZXh0RW5jb2RlciIsImVuY29kZSIsImJpbmQiLCJkZWNvZGVVVEY4XyIsImRlY29kZVVURjgiLCJieXRlcyIsImRlY29kZXIiLCJUZXh0RGVjb2RlciIsImRlY29kZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/internal/utils/bytes.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/internal/utils/env.mjs":
/*!********************************************************!*\
  !*** ../../node_modules/openai/internal/utils/env.mjs ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   readEnv: () => (/* binding */ readEnv)\n/* harmony export */ });\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n/**\n * Read an environment variable.\n *\n * Trims beginning and trailing whitespace.\n *\n * Will return undefined if the environment variable doesn't exist or cannot be accessed.\n */ const readEnv = (env)=>{\n    if (typeof globalThis.process !== \"undefined\") {\n        return globalThis.process.env?.[env]?.trim() ?? undefined;\n    }\n    if (typeof globalThis.Deno !== \"undefined\") {\n        return globalThis.Deno.env?.get?.(env)?.trim();\n    }\n    return undefined;\n}; //# sourceMappingURL=env.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvaW50ZXJuYWwvdXRpbHMvZW52Lm1qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsc0ZBQXNGO0FBQ3RGOzs7Ozs7Q0FNQyxHQUNNLE1BQU1BLFVBQVUsQ0FBQ0M7SUFDcEIsSUFBSSxPQUFPQyxXQUFXQyxPQUFPLEtBQUssYUFBYTtRQUMzQyxPQUFPRCxXQUFXQyxPQUFPLENBQUNGLEdBQUcsRUFBRSxDQUFDQSxJQUFJLEVBQUVHLFVBQVVDO0lBQ3BEO0lBQ0EsSUFBSSxPQUFPSCxXQUFXSSxJQUFJLEtBQUssYUFBYTtRQUN4QyxPQUFPSixXQUFXSSxJQUFJLENBQUNMLEdBQUcsRUFBRU0sTUFBTU4sTUFBTUc7SUFDNUM7SUFDQSxPQUFPQztBQUNYLEVBQUUsQ0FDRixnQ0FBZ0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvaW50ZXJuYWwvdXRpbHMvZW52Lm1qcz81YzEzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG4vKipcbiAqIFJlYWQgYW4gZW52aXJvbm1lbnQgdmFyaWFibGUuXG4gKlxuICogVHJpbXMgYmVnaW5uaW5nIGFuZCB0cmFpbGluZyB3aGl0ZXNwYWNlLlxuICpcbiAqIFdpbGwgcmV0dXJuIHVuZGVmaW5lZCBpZiB0aGUgZW52aXJvbm1lbnQgdmFyaWFibGUgZG9lc24ndCBleGlzdCBvciBjYW5ub3QgYmUgYWNjZXNzZWQuXG4gKi9cbmV4cG9ydCBjb25zdCByZWFkRW52ID0gKGVudikgPT4ge1xuICAgIGlmICh0eXBlb2YgZ2xvYmFsVGhpcy5wcm9jZXNzICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICByZXR1cm4gZ2xvYmFsVGhpcy5wcm9jZXNzLmVudj8uW2Vudl0/LnRyaW0oKSA/PyB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgZ2xvYmFsVGhpcy5EZW5vICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICByZXR1cm4gZ2xvYmFsVGhpcy5EZW5vLmVudj8uZ2V0Py4oZW52KT8udHJpbSgpO1xuICAgIH1cbiAgICByZXR1cm4gdW5kZWZpbmVkO1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWVudi5tanMubWFwIl0sIm5hbWVzIjpbInJlYWRFbnYiLCJlbnYiLCJnbG9iYWxUaGlzIiwicHJvY2VzcyIsInRyaW0iLCJ1bmRlZmluZWQiLCJEZW5vIiwiZ2V0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/internal/utils/env.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/internal/utils/log.mjs":
/*!********************************************************!*\
  !*** ../../node_modules/openai/internal/utils/log.mjs ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   formatRequestDetails: () => (/* binding */ formatRequestDetails),\n/* harmony export */   loggerFor: () => (/* binding */ loggerFor),\n/* harmony export */   parseLogLevel: () => (/* binding */ parseLogLevel)\n/* harmony export */ });\n/* harmony import */ var _values_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./values.mjs */ \"(middleware)/../../node_modules/openai/internal/utils/values.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nconst levelNumbers = {\n    off: 0,\n    error: 200,\n    warn: 300,\n    info: 400,\n    debug: 500\n};\nconst parseLogLevel = (maybeLevel, sourceName, client)=>{\n    if (!maybeLevel) {\n        return undefined;\n    }\n    if ((0,_values_mjs__WEBPACK_IMPORTED_MODULE_0__.hasOwn)(levelNumbers, maybeLevel)) {\n        return maybeLevel;\n    }\n    loggerFor(client).warn(`${sourceName} was set to ${JSON.stringify(maybeLevel)}, expected one of ${JSON.stringify(Object.keys(levelNumbers))}`);\n    return undefined;\n};\nfunction noop() {}\nfunction makeLogFn(fnLevel, logger, logLevel) {\n    if (!logger || levelNumbers[fnLevel] > levelNumbers[logLevel]) {\n        return noop;\n    } else {\n        // Don't wrap logger functions, we want the stacktrace intact!\n        return logger[fnLevel].bind(logger);\n    }\n}\nconst noopLogger = {\n    error: noop,\n    warn: noop,\n    info: noop,\n    debug: noop\n};\nlet cachedLoggers = new WeakMap();\nfunction loggerFor(client) {\n    const logger = client.logger;\n    const logLevel = client.logLevel ?? \"off\";\n    if (!logger) {\n        return noopLogger;\n    }\n    const cachedLogger = cachedLoggers.get(logger);\n    if (cachedLogger && cachedLogger[0] === logLevel) {\n        return cachedLogger[1];\n    }\n    const levelLogger = {\n        error: makeLogFn(\"error\", logger, logLevel),\n        warn: makeLogFn(\"warn\", logger, logLevel),\n        info: makeLogFn(\"info\", logger, logLevel),\n        debug: makeLogFn(\"debug\", logger, logLevel)\n    };\n    cachedLoggers.set(logger, [\n        logLevel,\n        levelLogger\n    ]);\n    return levelLogger;\n}\nconst formatRequestDetails = (details)=>{\n    if (details.options) {\n        details.options = {\n            ...details.options\n        };\n        delete details.options[\"headers\"]; // redundant + leaks internals\n    }\n    if (details.headers) {\n        details.headers = Object.fromEntries((details.headers instanceof Headers ? [\n            ...details.headers\n        ] : Object.entries(details.headers)).map(([name, value])=>[\n                name,\n                name.toLowerCase() === \"authorization\" || name.toLowerCase() === \"cookie\" || name.toLowerCase() === \"set-cookie\" ? \"***\" : value\n            ]));\n    }\n    if (\"retryOfRequestLogID\" in details) {\n        if (details.retryOfRequestLogID) {\n            details.retryOf = details.retryOfRequestLogID;\n        }\n        delete details.retryOfRequestLogID;\n    }\n    return details;\n}; //# sourceMappingURL=log.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvaW50ZXJuYWwvdXRpbHMvbG9nLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUEsc0ZBQXNGO0FBQ2hEO0FBQ3RDLE1BQU1DLGVBQWU7SUFDakJDLEtBQUs7SUFDTEMsT0FBTztJQUNQQyxNQUFNO0lBQ05DLE1BQU07SUFDTkMsT0FBTztBQUNYO0FBQ08sTUFBTUMsZ0JBQWdCLENBQUNDLFlBQVlDLFlBQVlDO0lBQ2xELElBQUksQ0FBQ0YsWUFBWTtRQUNiLE9BQU9HO0lBQ1g7SUFDQSxJQUFJWCxtREFBTUEsQ0FBQ0MsY0FBY08sYUFBYTtRQUNsQyxPQUFPQTtJQUNYO0lBQ0FJLFVBQVVGLFFBQVFOLElBQUksQ0FBQyxDQUFDLEVBQUVLLFdBQVcsWUFBWSxFQUFFSSxLQUFLQyxTQUFTLENBQUNOLFlBQVksa0JBQWtCLEVBQUVLLEtBQUtDLFNBQVMsQ0FBQ0MsT0FBT0MsSUFBSSxDQUFDZixlQUFlLENBQUM7SUFDN0ksT0FBT1U7QUFDWCxFQUFFO0FBQ0YsU0FBU00sUUFBUztBQUNsQixTQUFTQyxVQUFVQyxPQUFPLEVBQUVDLE1BQU0sRUFBRUMsUUFBUTtJQUN4QyxJQUFJLENBQUNELFVBQVVuQixZQUFZLENBQUNrQixRQUFRLEdBQUdsQixZQUFZLENBQUNvQixTQUFTLEVBQUU7UUFDM0QsT0FBT0o7SUFDWCxPQUNLO1FBQ0QsOERBQThEO1FBQzlELE9BQU9HLE1BQU0sQ0FBQ0QsUUFBUSxDQUFDRyxJQUFJLENBQUNGO0lBQ2hDO0FBQ0o7QUFDQSxNQUFNRyxhQUFhO0lBQ2ZwQixPQUFPYztJQUNQYixNQUFNYTtJQUNOWixNQUFNWTtJQUNOWCxPQUFPVztBQUNYO0FBQ0EsSUFBSU8sZ0JBQWdCLElBQUlDO0FBQ2pCLFNBQVNiLFVBQVVGLE1BQU07SUFDNUIsTUFBTVUsU0FBU1YsT0FBT1UsTUFBTTtJQUM1QixNQUFNQyxXQUFXWCxPQUFPVyxRQUFRLElBQUk7SUFDcEMsSUFBSSxDQUFDRCxRQUFRO1FBQ1QsT0FBT0c7SUFDWDtJQUNBLE1BQU1HLGVBQWVGLGNBQWNHLEdBQUcsQ0FBQ1A7SUFDdkMsSUFBSU0sZ0JBQWdCQSxZQUFZLENBQUMsRUFBRSxLQUFLTCxVQUFVO1FBQzlDLE9BQU9LLFlBQVksQ0FBQyxFQUFFO0lBQzFCO0lBQ0EsTUFBTUUsY0FBYztRQUNoQnpCLE9BQU9lLFVBQVUsU0FBU0UsUUFBUUM7UUFDbENqQixNQUFNYyxVQUFVLFFBQVFFLFFBQVFDO1FBQ2hDaEIsTUFBTWEsVUFBVSxRQUFRRSxRQUFRQztRQUNoQ2YsT0FBT1ksVUFBVSxTQUFTRSxRQUFRQztJQUN0QztJQUNBRyxjQUFjSyxHQUFHLENBQUNULFFBQVE7UUFBQ0M7UUFBVU87S0FBWTtJQUNqRCxPQUFPQTtBQUNYO0FBQ08sTUFBTUUsdUJBQXVCLENBQUNDO0lBQ2pDLElBQUlBLFFBQVFDLE9BQU8sRUFBRTtRQUNqQkQsUUFBUUMsT0FBTyxHQUFHO1lBQUUsR0FBR0QsUUFBUUMsT0FBTztRQUFDO1FBQ3ZDLE9BQU9ELFFBQVFDLE9BQU8sQ0FBQyxVQUFVLEVBQUUsOEJBQThCO0lBQ3JFO0lBQ0EsSUFBSUQsUUFBUUUsT0FBTyxFQUFFO1FBQ2pCRixRQUFRRSxPQUFPLEdBQUdsQixPQUFPbUIsV0FBVyxDQUFDLENBQUNILFFBQVFFLE9BQU8sWUFBWUUsVUFBVTtlQUFJSixRQUFRRSxPQUFPO1NBQUMsR0FBR2xCLE9BQU9xQixPQUFPLENBQUNMLFFBQVFFLE9BQU8sR0FBR0ksR0FBRyxDQUFDLENBQUMsQ0FBQ0MsTUFBTUMsTUFBTSxHQUFLO2dCQUN0SkQ7Z0JBQ0NBLEtBQUtFLFdBQVcsT0FBTyxtQkFDcEJGLEtBQUtFLFdBQVcsT0FBTyxZQUN2QkYsS0FBS0UsV0FBVyxPQUFPLGVBQ3ZCLFFBQ0VEO2FBQ1Q7SUFDTDtJQUNBLElBQUkseUJBQXlCUixTQUFTO1FBQ2xDLElBQUlBLFFBQVFVLG1CQUFtQixFQUFFO1lBQzdCVixRQUFRVyxPQUFPLEdBQUdYLFFBQVFVLG1CQUFtQjtRQUNqRDtRQUNBLE9BQU9WLFFBQVFVLG1CQUFtQjtJQUN0QztJQUNBLE9BQU9WO0FBQ1gsRUFBRSxDQUNGLGdDQUFnQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vbm9kZV9tb2R1bGVzL29wZW5haS9pbnRlcm5hbC91dGlscy9sb2cubWpzPzUzMjUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmltcG9ydCB7IGhhc093biB9IGZyb20gXCIuL3ZhbHVlcy5tanNcIjtcbmNvbnN0IGxldmVsTnVtYmVycyA9IHtcbiAgICBvZmY6IDAsXG4gICAgZXJyb3I6IDIwMCxcbiAgICB3YXJuOiAzMDAsXG4gICAgaW5mbzogNDAwLFxuICAgIGRlYnVnOiA1MDAsXG59O1xuZXhwb3J0IGNvbnN0IHBhcnNlTG9nTGV2ZWwgPSAobWF5YmVMZXZlbCwgc291cmNlTmFtZSwgY2xpZW50KSA9PiB7XG4gICAgaWYgKCFtYXliZUxldmVsKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGlmIChoYXNPd24obGV2ZWxOdW1iZXJzLCBtYXliZUxldmVsKSkge1xuICAgICAgICByZXR1cm4gbWF5YmVMZXZlbDtcbiAgICB9XG4gICAgbG9nZ2VyRm9yKGNsaWVudCkud2FybihgJHtzb3VyY2VOYW1lfSB3YXMgc2V0IHRvICR7SlNPTi5zdHJpbmdpZnkobWF5YmVMZXZlbCl9LCBleHBlY3RlZCBvbmUgb2YgJHtKU09OLnN0cmluZ2lmeShPYmplY3Qua2V5cyhsZXZlbE51bWJlcnMpKX1gKTtcbiAgICByZXR1cm4gdW5kZWZpbmVkO1xufTtcbmZ1bmN0aW9uIG5vb3AoKSB7IH1cbmZ1bmN0aW9uIG1ha2VMb2dGbihmbkxldmVsLCBsb2dnZXIsIGxvZ0xldmVsKSB7XG4gICAgaWYgKCFsb2dnZXIgfHwgbGV2ZWxOdW1iZXJzW2ZuTGV2ZWxdID4gbGV2ZWxOdW1iZXJzW2xvZ0xldmVsXSkge1xuICAgICAgICByZXR1cm4gbm9vcDtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIC8vIERvbid0IHdyYXAgbG9nZ2VyIGZ1bmN0aW9ucywgd2Ugd2FudCB0aGUgc3RhY2t0cmFjZSBpbnRhY3QhXG4gICAgICAgIHJldHVybiBsb2dnZXJbZm5MZXZlbF0uYmluZChsb2dnZXIpO1xuICAgIH1cbn1cbmNvbnN0IG5vb3BMb2dnZXIgPSB7XG4gICAgZXJyb3I6IG5vb3AsXG4gICAgd2Fybjogbm9vcCxcbiAgICBpbmZvOiBub29wLFxuICAgIGRlYnVnOiBub29wLFxufTtcbmxldCBjYWNoZWRMb2dnZXJzID0gbmV3IFdlYWtNYXAoKTtcbmV4cG9ydCBmdW5jdGlvbiBsb2dnZXJGb3IoY2xpZW50KSB7XG4gICAgY29uc3QgbG9nZ2VyID0gY2xpZW50LmxvZ2dlcjtcbiAgICBjb25zdCBsb2dMZXZlbCA9IGNsaWVudC5sb2dMZXZlbCA/PyAnb2ZmJztcbiAgICBpZiAoIWxvZ2dlcikge1xuICAgICAgICByZXR1cm4gbm9vcExvZ2dlcjtcbiAgICB9XG4gICAgY29uc3QgY2FjaGVkTG9nZ2VyID0gY2FjaGVkTG9nZ2Vycy5nZXQobG9nZ2VyKTtcbiAgICBpZiAoY2FjaGVkTG9nZ2VyICYmIGNhY2hlZExvZ2dlclswXSA9PT0gbG9nTGV2ZWwpIHtcbiAgICAgICAgcmV0dXJuIGNhY2hlZExvZ2dlclsxXTtcbiAgICB9XG4gICAgY29uc3QgbGV2ZWxMb2dnZXIgPSB7XG4gICAgICAgIGVycm9yOiBtYWtlTG9nRm4oJ2Vycm9yJywgbG9nZ2VyLCBsb2dMZXZlbCksXG4gICAgICAgIHdhcm46IG1ha2VMb2dGbignd2FybicsIGxvZ2dlciwgbG9nTGV2ZWwpLFxuICAgICAgICBpbmZvOiBtYWtlTG9nRm4oJ2luZm8nLCBsb2dnZXIsIGxvZ0xldmVsKSxcbiAgICAgICAgZGVidWc6IG1ha2VMb2dGbignZGVidWcnLCBsb2dnZXIsIGxvZ0xldmVsKSxcbiAgICB9O1xuICAgIGNhY2hlZExvZ2dlcnMuc2V0KGxvZ2dlciwgW2xvZ0xldmVsLCBsZXZlbExvZ2dlcl0pO1xuICAgIHJldHVybiBsZXZlbExvZ2dlcjtcbn1cbmV4cG9ydCBjb25zdCBmb3JtYXRSZXF1ZXN0RGV0YWlscyA9IChkZXRhaWxzKSA9PiB7XG4gICAgaWYgKGRldGFpbHMub3B0aW9ucykge1xuICAgICAgICBkZXRhaWxzLm9wdGlvbnMgPSB7IC4uLmRldGFpbHMub3B0aW9ucyB9O1xuICAgICAgICBkZWxldGUgZGV0YWlscy5vcHRpb25zWydoZWFkZXJzJ107IC8vIHJlZHVuZGFudCArIGxlYWtzIGludGVybmFsc1xuICAgIH1cbiAgICBpZiAoZGV0YWlscy5oZWFkZXJzKSB7XG4gICAgICAgIGRldGFpbHMuaGVhZGVycyA9IE9iamVjdC5mcm9tRW50cmllcygoZGV0YWlscy5oZWFkZXJzIGluc3RhbmNlb2YgSGVhZGVycyA/IFsuLi5kZXRhaWxzLmhlYWRlcnNdIDogT2JqZWN0LmVudHJpZXMoZGV0YWlscy5oZWFkZXJzKSkubWFwKChbbmFtZSwgdmFsdWVdKSA9PiBbXG4gICAgICAgICAgICBuYW1lLFxuICAgICAgICAgICAgKG5hbWUudG9Mb3dlckNhc2UoKSA9PT0gJ2F1dGhvcml6YXRpb24nIHx8XG4gICAgICAgICAgICAgICAgbmFtZS50b0xvd2VyQ2FzZSgpID09PSAnY29va2llJyB8fFxuICAgICAgICAgICAgICAgIG5hbWUudG9Mb3dlckNhc2UoKSA9PT0gJ3NldC1jb29raWUnKSA/XG4gICAgICAgICAgICAgICAgJyoqKidcbiAgICAgICAgICAgICAgICA6IHZhbHVlLFxuICAgICAgICBdKSk7XG4gICAgfVxuICAgIGlmICgncmV0cnlPZlJlcXVlc3RMb2dJRCcgaW4gZGV0YWlscykge1xuICAgICAgICBpZiAoZGV0YWlscy5yZXRyeU9mUmVxdWVzdExvZ0lEKSB7XG4gICAgICAgICAgICBkZXRhaWxzLnJldHJ5T2YgPSBkZXRhaWxzLnJldHJ5T2ZSZXF1ZXN0TG9nSUQ7XG4gICAgICAgIH1cbiAgICAgICAgZGVsZXRlIGRldGFpbHMucmV0cnlPZlJlcXVlc3RMb2dJRDtcbiAgICB9XG4gICAgcmV0dXJuIGRldGFpbHM7XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bG9nLm1qcy5tYXAiXSwibmFtZXMiOlsiaGFzT3duIiwibGV2ZWxOdW1iZXJzIiwib2ZmIiwiZXJyb3IiLCJ3YXJuIiwiaW5mbyIsImRlYnVnIiwicGFyc2VMb2dMZXZlbCIsIm1heWJlTGV2ZWwiLCJzb3VyY2VOYW1lIiwiY2xpZW50IiwidW5kZWZpbmVkIiwibG9nZ2VyRm9yIiwiSlNPTiIsInN0cmluZ2lmeSIsIk9iamVjdCIsImtleXMiLCJub29wIiwibWFrZUxvZ0ZuIiwiZm5MZXZlbCIsImxvZ2dlciIsImxvZ0xldmVsIiwiYmluZCIsIm5vb3BMb2dnZXIiLCJjYWNoZWRMb2dnZXJzIiwiV2Vha01hcCIsImNhY2hlZExvZ2dlciIsImdldCIsImxldmVsTG9nZ2VyIiwic2V0IiwiZm9ybWF0UmVxdWVzdERldGFpbHMiLCJkZXRhaWxzIiwib3B0aW9ucyIsImhlYWRlcnMiLCJmcm9tRW50cmllcyIsIkhlYWRlcnMiLCJlbnRyaWVzIiwibWFwIiwibmFtZSIsInZhbHVlIiwidG9Mb3dlckNhc2UiLCJyZXRyeU9mUmVxdWVzdExvZ0lEIiwicmV0cnlPZiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/internal/utils/log.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/internal/utils/path.mjs":
/*!*********************************************************!*\
  !*** ../../node_modules/openai/internal/utils/path.mjs ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createPathTagFunction: () => (/* binding */ createPathTagFunction),\n/* harmony export */   encodeURIPath: () => (/* binding */ encodeURIPath),\n/* harmony export */   path: () => (/* binding */ path)\n/* harmony export */ });\n/* harmony import */ var _core_error_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/error.mjs */ \"(middleware)/../../node_modules/openai/core/error.mjs\");\n\n/**\n * Percent-encode everything that isn't safe to have in a path without encoding safe chars.\n *\n * Taken from https://datatracker.ietf.org/doc/html/rfc3986#section-3.3:\n * > unreserved  = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\n * > sub-delims  = \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\" / \"*\" / \"+\" / \",\" / \";\" / \"=\"\n * > pchar       = unreserved / pct-encoded / sub-delims / \":\" / \"@\"\n */ function encodeURIPath(str) {\n    return str.replace(/[^A-Za-z0-9\\-._~!$&'()*+,;=:@]+/g, encodeURIComponent);\n}\nconst createPathTagFunction = (pathEncoder = encodeURIPath)=>function path(statics, ...params) {\n        // If there are no params, no processing is needed.\n        if (statics.length === 1) return statics[0];\n        let postPath = false;\n        const path1 = statics.reduce((previousValue, currentValue, index)=>{\n            if (/[?#]/.test(currentValue)) {\n                postPath = true;\n            }\n            return previousValue + currentValue + (index === params.length ? \"\" : (postPath ? encodeURIComponent : pathEncoder)(String(params[index])));\n        }, \"\");\n        const pathOnly = path1.split(/[?#]/, 1)[0];\n        const invalidSegments = [];\n        const invalidSegmentPattern = /(?<=^|\\/)(?:\\.|%2e){1,2}(?=\\/|$)/gi;\n        let match;\n        // Find all invalid segments\n        while((match = invalidSegmentPattern.exec(pathOnly)) !== null){\n            invalidSegments.push({\n                start: match.index,\n                length: match[0].length\n            });\n        }\n        if (invalidSegments.length > 0) {\n            let lastEnd = 0;\n            const underline = invalidSegments.reduce((acc, segment)=>{\n                const spaces = \" \".repeat(segment.start - lastEnd);\n                const arrows = \"^\".repeat(segment.length);\n                lastEnd = segment.start + segment.length;\n                return acc + spaces + arrows;\n            }, \"\");\n            throw new _core_error_mjs__WEBPACK_IMPORTED_MODULE_0__.OpenAIError(`Path parameters result in path with invalid segments:\\n${path1}\\n${underline}`);\n        }\n        return path1;\n    };\n/**\n * URI-encodes path params and ensures no unsafe /./ or /../ path segments are introduced.\n */ const path = createPathTagFunction(encodeURIPath); //# sourceMappingURL=path.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvaW50ZXJuYWwvdXRpbHMvcGF0aC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFtRDtBQUNuRDs7Ozs7OztDQU9DLEdBQ00sU0FBU0MsY0FBY0MsR0FBRztJQUM3QixPQUFPQSxJQUFJQyxPQUFPLENBQUMsb0NBQW9DQztBQUMzRDtBQUNPLE1BQU1DLHdCQUF3QixDQUFDQyxjQUFjTCxhQUFhLEdBQUssU0FBU00sS0FBS0MsT0FBTyxFQUFFLEdBQUdDLE1BQU07UUFDbEcsbURBQW1EO1FBQ25ELElBQUlELFFBQVFFLE1BQU0sS0FBSyxHQUNuQixPQUFPRixPQUFPLENBQUMsRUFBRTtRQUNyQixJQUFJRyxXQUFXO1FBQ2YsTUFBTUosUUFBT0MsUUFBUUksTUFBTSxDQUFDLENBQUNDLGVBQWVDLGNBQWNDO1lBQ3RELElBQUksT0FBT0MsSUFBSSxDQUFDRixlQUFlO2dCQUMzQkgsV0FBVztZQUNmO1lBQ0EsT0FBUUUsZ0JBQ0pDLGVBQ0NDLENBQUFBLFVBQVVOLE9BQU9DLE1BQU0sR0FBRyxLQUFLLENBQUNDLFdBQVdQLHFCQUFxQkUsV0FBVSxFQUFHVyxPQUFPUixNQUFNLENBQUNNLE1BQU0sRUFBQztRQUMzRyxHQUFHO1FBQ0gsTUFBTUcsV0FBV1gsTUFBS1ksS0FBSyxDQUFDLFFBQVEsRUFBRSxDQUFDLEVBQUU7UUFDekMsTUFBTUMsa0JBQWtCLEVBQUU7UUFDMUIsTUFBTUMsd0JBQXdCO1FBQzlCLElBQUlDO1FBQ0osNEJBQTRCO1FBQzVCLE1BQU8sQ0FBQ0EsUUFBUUQsc0JBQXNCRSxJQUFJLENBQUNMLFNBQVEsTUFBTyxLQUFNO1lBQzVERSxnQkFBZ0JJLElBQUksQ0FBQztnQkFDakJDLE9BQU9ILE1BQU1QLEtBQUs7Z0JBQ2xCTCxRQUFRWSxLQUFLLENBQUMsRUFBRSxDQUFDWixNQUFNO1lBQzNCO1FBQ0o7UUFDQSxJQUFJVSxnQkFBZ0JWLE1BQU0sR0FBRyxHQUFHO1lBQzVCLElBQUlnQixVQUFVO1lBQ2QsTUFBTUMsWUFBWVAsZ0JBQWdCUixNQUFNLENBQUMsQ0FBQ2dCLEtBQUtDO2dCQUMzQyxNQUFNQyxTQUFTLElBQUlDLE1BQU0sQ0FBQ0YsUUFBUUosS0FBSyxHQUFHQztnQkFDMUMsTUFBTU0sU0FBUyxJQUFJRCxNQUFNLENBQUNGLFFBQVFuQixNQUFNO2dCQUN4Q2dCLFVBQVVHLFFBQVFKLEtBQUssR0FBR0ksUUFBUW5CLE1BQU07Z0JBQ3hDLE9BQU9rQixNQUFNRSxTQUFTRTtZQUMxQixHQUFHO1lBQ0gsTUFBTSxJQUFJaEMsd0RBQVdBLENBQUMsQ0FBQyx1REFBdUQsRUFBRU8sTUFBSyxFQUFFLEVBQUVvQixVQUFVLENBQUM7UUFDeEc7UUFDQSxPQUFPcEI7SUFDWCxFQUFFO0FBQ0Y7O0NBRUMsR0FDTSxNQUFNQSxPQUFPRixzQkFBc0JKLGVBQWUsQ0FDekQsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi9ub2RlX21vZHVsZXMvb3BlbmFpL2ludGVybmFsL3V0aWxzL3BhdGgubWpzPzY5ODkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgT3BlbkFJRXJyb3IgfSBmcm9tIFwiLi4vLi4vY29yZS9lcnJvci5tanNcIjtcbi8qKlxuICogUGVyY2VudC1lbmNvZGUgZXZlcnl0aGluZyB0aGF0IGlzbid0IHNhZmUgdG8gaGF2ZSBpbiBhIHBhdGggd2l0aG91dCBlbmNvZGluZyBzYWZlIGNoYXJzLlxuICpcbiAqIFRha2VuIGZyb20gaHR0cHM6Ly9kYXRhdHJhY2tlci5pZXRmLm9yZy9kb2MvaHRtbC9yZmMzOTg2I3NlY3Rpb24tMy4zOlxuICogPiB1bnJlc2VydmVkICA9IEFMUEhBIC8gRElHSVQgLyBcIi1cIiAvIFwiLlwiIC8gXCJfXCIgLyBcIn5cIlxuICogPiBzdWItZGVsaW1zICA9IFwiIVwiIC8gXCIkXCIgLyBcIiZcIiAvIFwiJ1wiIC8gXCIoXCIgLyBcIilcIiAvIFwiKlwiIC8gXCIrXCIgLyBcIixcIiAvIFwiO1wiIC8gXCI9XCJcbiAqID4gcGNoYXIgICAgICAgPSB1bnJlc2VydmVkIC8gcGN0LWVuY29kZWQgLyBzdWItZGVsaW1zIC8gXCI6XCIgLyBcIkBcIlxuICovXG5leHBvcnQgZnVuY3Rpb24gZW5jb2RlVVJJUGF0aChzdHIpIHtcbiAgICByZXR1cm4gc3RyLnJlcGxhY2UoL1teQS1aYS16MC05XFwtLl9+ISQmJygpKissOz06QF0rL2csIGVuY29kZVVSSUNvbXBvbmVudCk7XG59XG5leHBvcnQgY29uc3QgY3JlYXRlUGF0aFRhZ0Z1bmN0aW9uID0gKHBhdGhFbmNvZGVyID0gZW5jb2RlVVJJUGF0aCkgPT4gZnVuY3Rpb24gcGF0aChzdGF0aWNzLCAuLi5wYXJhbXMpIHtcbiAgICAvLyBJZiB0aGVyZSBhcmUgbm8gcGFyYW1zLCBubyBwcm9jZXNzaW5nIGlzIG5lZWRlZC5cbiAgICBpZiAoc3RhdGljcy5sZW5ndGggPT09IDEpXG4gICAgICAgIHJldHVybiBzdGF0aWNzWzBdO1xuICAgIGxldCBwb3N0UGF0aCA9IGZhbHNlO1xuICAgIGNvbnN0IHBhdGggPSBzdGF0aWNzLnJlZHVjZSgocHJldmlvdXNWYWx1ZSwgY3VycmVudFZhbHVlLCBpbmRleCkgPT4ge1xuICAgICAgICBpZiAoL1s/I10vLnRlc3QoY3VycmVudFZhbHVlKSkge1xuICAgICAgICAgICAgcG9zdFBhdGggPSB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiAocHJldmlvdXNWYWx1ZSArXG4gICAgICAgICAgICBjdXJyZW50VmFsdWUgK1xuICAgICAgICAgICAgKGluZGV4ID09PSBwYXJhbXMubGVuZ3RoID8gJycgOiAocG9zdFBhdGggPyBlbmNvZGVVUklDb21wb25lbnQgOiBwYXRoRW5jb2RlcikoU3RyaW5nKHBhcmFtc1tpbmRleF0pKSkpO1xuICAgIH0sICcnKTtcbiAgICBjb25zdCBwYXRoT25seSA9IHBhdGguc3BsaXQoL1s/I10vLCAxKVswXTtcbiAgICBjb25zdCBpbnZhbGlkU2VnbWVudHMgPSBbXTtcbiAgICBjb25zdCBpbnZhbGlkU2VnbWVudFBhdHRlcm4gPSAvKD88PV58XFwvKSg/OlxcLnwlMmUpezEsMn0oPz1cXC98JCkvZ2k7XG4gICAgbGV0IG1hdGNoO1xuICAgIC8vIEZpbmQgYWxsIGludmFsaWQgc2VnbWVudHNcbiAgICB3aGlsZSAoKG1hdGNoID0gaW52YWxpZFNlZ21lbnRQYXR0ZXJuLmV4ZWMocGF0aE9ubHkpKSAhPT0gbnVsbCkge1xuICAgICAgICBpbnZhbGlkU2VnbWVudHMucHVzaCh7XG4gICAgICAgICAgICBzdGFydDogbWF0Y2guaW5kZXgsXG4gICAgICAgICAgICBsZW5ndGg6IG1hdGNoWzBdLmxlbmd0aCxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGlmIChpbnZhbGlkU2VnbWVudHMubGVuZ3RoID4gMCkge1xuICAgICAgICBsZXQgbGFzdEVuZCA9IDA7XG4gICAgICAgIGNvbnN0IHVuZGVybGluZSA9IGludmFsaWRTZWdtZW50cy5yZWR1Y2UoKGFjYywgc2VnbWVudCkgPT4ge1xuICAgICAgICAgICAgY29uc3Qgc3BhY2VzID0gJyAnLnJlcGVhdChzZWdtZW50LnN0YXJ0IC0gbGFzdEVuZCk7XG4gICAgICAgICAgICBjb25zdCBhcnJvd3MgPSAnXicucmVwZWF0KHNlZ21lbnQubGVuZ3RoKTtcbiAgICAgICAgICAgIGxhc3RFbmQgPSBzZWdtZW50LnN0YXJ0ICsgc2VnbWVudC5sZW5ndGg7XG4gICAgICAgICAgICByZXR1cm4gYWNjICsgc3BhY2VzICsgYXJyb3dzO1xuICAgICAgICB9LCAnJyk7XG4gICAgICAgIHRocm93IG5ldyBPcGVuQUlFcnJvcihgUGF0aCBwYXJhbWV0ZXJzIHJlc3VsdCBpbiBwYXRoIHdpdGggaW52YWxpZCBzZWdtZW50czpcXG4ke3BhdGh9XFxuJHt1bmRlcmxpbmV9YCk7XG4gICAgfVxuICAgIHJldHVybiBwYXRoO1xufTtcbi8qKlxuICogVVJJLWVuY29kZXMgcGF0aCBwYXJhbXMgYW5kIGVuc3VyZXMgbm8gdW5zYWZlIC8uLyBvciAvLi4vIHBhdGggc2VnbWVudHMgYXJlIGludHJvZHVjZWQuXG4gKi9cbmV4cG9ydCBjb25zdCBwYXRoID0gY3JlYXRlUGF0aFRhZ0Z1bmN0aW9uKGVuY29kZVVSSVBhdGgpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGF0aC5tanMubWFwIl0sIm5hbWVzIjpbIk9wZW5BSUVycm9yIiwiZW5jb2RlVVJJUGF0aCIsInN0ciIsInJlcGxhY2UiLCJlbmNvZGVVUklDb21wb25lbnQiLCJjcmVhdGVQYXRoVGFnRnVuY3Rpb24iLCJwYXRoRW5jb2RlciIsInBhdGgiLCJzdGF0aWNzIiwicGFyYW1zIiwibGVuZ3RoIiwicG9zdFBhdGgiLCJyZWR1Y2UiLCJwcmV2aW91c1ZhbHVlIiwiY3VycmVudFZhbHVlIiwiaW5kZXgiLCJ0ZXN0IiwiU3RyaW5nIiwicGF0aE9ubHkiLCJzcGxpdCIsImludmFsaWRTZWdtZW50cyIsImludmFsaWRTZWdtZW50UGF0dGVybiIsIm1hdGNoIiwiZXhlYyIsInB1c2giLCJzdGFydCIsImxhc3RFbmQiLCJ1bmRlcmxpbmUiLCJhY2MiLCJzZWdtZW50Iiwic3BhY2VzIiwicmVwZWF0IiwiYXJyb3dzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/internal/utils/path.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/internal/utils/sleep.mjs":
/*!**********************************************************!*\
  !*** ../../node_modules/openai/internal/utils/sleep.mjs ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   sleep: () => (/* binding */ sleep)\n/* harmony export */ });\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nconst sleep = (ms)=>new Promise((resolve)=>setTimeout(resolve, ms)); //# sourceMappingURL=sleep.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvaW50ZXJuYWwvdXRpbHMvc2xlZXAubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxzRkFBc0Y7QUFDL0UsTUFBTUEsUUFBUSxDQUFDQyxLQUFPLElBQUlDLFFBQVEsQ0FBQ0MsVUFBWUMsV0FBV0QsU0FBU0YsS0FBSyxDQUMvRSxrQ0FBa0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvaW50ZXJuYWwvdXRpbHMvc2xlZXAubWpzPzVjZjUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmV4cG9ydCBjb25zdCBzbGVlcCA9IChtcykgPT4gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHNldFRpbWVvdXQocmVzb2x2ZSwgbXMpKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNsZWVwLm1qcy5tYXAiXSwibmFtZXMiOlsic2xlZXAiLCJtcyIsIlByb21pc2UiLCJyZXNvbHZlIiwic2V0VGltZW91dCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/internal/utils/sleep.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/internal/utils/uuid.mjs":
/*!*********************************************************!*\
  !*** ../../node_modules/openai/internal/utils/uuid.mjs ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   uuid4: () => (/* binding */ uuid4)\n/* harmony export */ });\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n/**\n * https://stackoverflow.com/a/2117523\n */ let uuid4 = function() {\n    const { crypto } = globalThis;\n    if (crypto?.randomUUID) {\n        uuid4 = crypto.randomUUID.bind(crypto);\n        return crypto.randomUUID();\n    }\n    const u8 = new Uint8Array(1);\n    const randomByte = crypto ? ()=>crypto.getRandomValues(u8)[0] : ()=>Math.random() * 0xff & 0xff;\n    return \"10000000-1000-4000-8000-100000000000\".replace(/[018]/g, (c)=>(+c ^ randomByte() & 15 >> +c / 4).toString(16));\n}; //# sourceMappingURL=uuid.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvaW50ZXJuYWwvdXRpbHMvdXVpZC5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLHNGQUFzRjtBQUN0Rjs7Q0FFQyxHQUNNLElBQUlBLFFBQVE7SUFDZixNQUFNLEVBQUVDLE1BQU0sRUFBRSxHQUFHQztJQUNuQixJQUFJRCxRQUFRRSxZQUFZO1FBQ3BCSCxRQUFRQyxPQUFPRSxVQUFVLENBQUNDLElBQUksQ0FBQ0g7UUFDL0IsT0FBT0EsT0FBT0UsVUFBVTtJQUM1QjtJQUNBLE1BQU1FLEtBQUssSUFBSUMsV0FBVztJQUMxQixNQUFNQyxhQUFhTixTQUFTLElBQU1BLE9BQU9PLGVBQWUsQ0FBQ0gsR0FBRyxDQUFDLEVBQUUsR0FBRyxJQUFNLEtBQU1LLE1BQU0sS0FBSyxPQUFRO0lBQ2pHLE9BQU8sdUNBQXVDQyxPQUFPLENBQUMsVUFBVSxDQUFDQyxJQUFNLENBQUMsQ0FBQ0EsSUFBS0wsZUFBZ0IsTUFBTyxDQUFDSyxJQUFJLENBQUcsRUFBR0MsUUFBUSxDQUFDO0FBQzdILEVBQUUsQ0FDRixpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvaW50ZXJuYWwvdXRpbHMvdXVpZC5tanM/ODlkNCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlIGdlbmVyYXRlZCBmcm9tIG91ciBPcGVuQVBJIHNwZWMgYnkgU3RhaW5sZXNzLiBTZWUgQ09OVFJJQlVUSU5HLm1kIGZvciBkZXRhaWxzLlxuLyoqXG4gKiBodHRwczovL3N0YWNrb3ZlcmZsb3cuY29tL2EvMjExNzUyM1xuICovXG5leHBvcnQgbGV0IHV1aWQ0ID0gZnVuY3Rpb24gKCkge1xuICAgIGNvbnN0IHsgY3J5cHRvIH0gPSBnbG9iYWxUaGlzO1xuICAgIGlmIChjcnlwdG8/LnJhbmRvbVVVSUQpIHtcbiAgICAgICAgdXVpZDQgPSBjcnlwdG8ucmFuZG9tVVVJRC5iaW5kKGNyeXB0byk7XG4gICAgICAgIHJldHVybiBjcnlwdG8ucmFuZG9tVVVJRCgpO1xuICAgIH1cbiAgICBjb25zdCB1OCA9IG5ldyBVaW50OEFycmF5KDEpO1xuICAgIGNvbnN0IHJhbmRvbUJ5dGUgPSBjcnlwdG8gPyAoKSA9PiBjcnlwdG8uZ2V0UmFuZG9tVmFsdWVzKHU4KVswXSA6ICgpID0+IChNYXRoLnJhbmRvbSgpICogMHhmZikgJiAweGZmO1xuICAgIHJldHVybiAnMTAwMDAwMDAtMTAwMC00MDAwLTgwMDAtMTAwMDAwMDAwMDAwJy5yZXBsYWNlKC9bMDE4XS9nLCAoYykgPT4gKCtjIF4gKHJhbmRvbUJ5dGUoKSAmICgxNSA+PiAoK2MgLyA0KSkpKS50b1N0cmluZygxNikpO1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXV1aWQubWpzLm1hcCJdLCJuYW1lcyI6WyJ1dWlkNCIsImNyeXB0byIsImdsb2JhbFRoaXMiLCJyYW5kb21VVUlEIiwiYmluZCIsInU4IiwiVWludDhBcnJheSIsInJhbmRvbUJ5dGUiLCJnZXRSYW5kb21WYWx1ZXMiLCJNYXRoIiwicmFuZG9tIiwicmVwbGFjZSIsImMiLCJ0b1N0cmluZyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/internal/utils/uuid.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/internal/utils/values.mjs":
/*!***********************************************************!*\
  !*** ../../node_modules/openai/internal/utils/values.mjs ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   coerceBoolean: () => (/* binding */ coerceBoolean),\n/* harmony export */   coerceFloat: () => (/* binding */ coerceFloat),\n/* harmony export */   coerceInteger: () => (/* binding */ coerceInteger),\n/* harmony export */   ensurePresent: () => (/* binding */ ensurePresent),\n/* harmony export */   hasOwn: () => (/* binding */ hasOwn),\n/* harmony export */   isAbsoluteURL: () => (/* binding */ isAbsoluteURL),\n/* harmony export */   isEmptyObj: () => (/* binding */ isEmptyObj),\n/* harmony export */   isObj: () => (/* binding */ isObj),\n/* harmony export */   maybeCoerceBoolean: () => (/* binding */ maybeCoerceBoolean),\n/* harmony export */   maybeCoerceFloat: () => (/* binding */ maybeCoerceFloat),\n/* harmony export */   maybeCoerceInteger: () => (/* binding */ maybeCoerceInteger),\n/* harmony export */   maybeObj: () => (/* binding */ maybeObj),\n/* harmony export */   safeJSON: () => (/* binding */ safeJSON),\n/* harmony export */   validatePositiveInteger: () => (/* binding */ validatePositiveInteger)\n/* harmony export */ });\n/* harmony import */ var _core_error_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/error.mjs */ \"(middleware)/../../node_modules/openai/core/error.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n// https://url.spec.whatwg.org/#url-scheme-string\nconst startsWithSchemeRegexp = /^[a-z][a-z0-9+.-]*:/i;\nconst isAbsoluteURL = (url)=>{\n    return startsWithSchemeRegexp.test(url);\n};\n/** Returns an object if the given value isn't an object, otherwise returns as-is */ function maybeObj(x) {\n    if (typeof x !== \"object\") {\n        return {};\n    }\n    return x ?? {};\n}\n// https://stackoverflow.com/a/34491287\nfunction isEmptyObj(obj) {\n    if (!obj) return true;\n    for(const _k in obj)return false;\n    return true;\n}\n// https://eslint.org/docs/latest/rules/no-prototype-builtins\nfunction hasOwn(obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n}\nfunction isObj(obj) {\n    return obj != null && typeof obj === \"object\" && !Array.isArray(obj);\n}\nconst ensurePresent = (value)=>{\n    if (value == null) {\n        throw new _core_error_mjs__WEBPACK_IMPORTED_MODULE_0__.OpenAIError(`Expected a value to be given but received ${value} instead.`);\n    }\n    return value;\n};\nconst validatePositiveInteger = (name, n)=>{\n    if (typeof n !== \"number\" || !Number.isInteger(n)) {\n        throw new _core_error_mjs__WEBPACK_IMPORTED_MODULE_0__.OpenAIError(`${name} must be an integer`);\n    }\n    if (n < 0) {\n        throw new _core_error_mjs__WEBPACK_IMPORTED_MODULE_0__.OpenAIError(`${name} must be a positive integer`);\n    }\n    return n;\n};\nconst coerceInteger = (value)=>{\n    if (typeof value === \"number\") return Math.round(value);\n    if (typeof value === \"string\") return parseInt(value, 10);\n    throw new _core_error_mjs__WEBPACK_IMPORTED_MODULE_0__.OpenAIError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\nconst coerceFloat = (value)=>{\n    if (typeof value === \"number\") return value;\n    if (typeof value === \"string\") return parseFloat(value);\n    throw new _core_error_mjs__WEBPACK_IMPORTED_MODULE_0__.OpenAIError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\nconst coerceBoolean = (value)=>{\n    if (typeof value === \"boolean\") return value;\n    if (typeof value === \"string\") return value === \"true\";\n    return Boolean(value);\n};\nconst maybeCoerceInteger = (value)=>{\n    if (value === undefined) {\n        return undefined;\n    }\n    return coerceInteger(value);\n};\nconst maybeCoerceFloat = (value)=>{\n    if (value === undefined) {\n        return undefined;\n    }\n    return coerceFloat(value);\n};\nconst maybeCoerceBoolean = (value)=>{\n    if (value === undefined) {\n        return undefined;\n    }\n    return coerceBoolean(value);\n};\nconst safeJSON = (text)=>{\n    try {\n        return JSON.parse(text);\n    } catch (err) {\n        return undefined;\n    }\n}; //# sourceMappingURL=values.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvaW50ZXJuYWwvdXRpbHMvdmFsdWVzLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxzRkFBc0Y7QUFDbkM7QUFDbkQsaURBQWlEO0FBQ2pELE1BQU1DLHlCQUF5QjtBQUN4QixNQUFNQyxnQkFBZ0IsQ0FBQ0M7SUFDMUIsT0FBT0YsdUJBQXVCRyxJQUFJLENBQUNEO0FBQ3ZDLEVBQUU7QUFDRixrRkFBa0YsR0FDM0UsU0FBU0UsU0FBU0MsQ0FBQztJQUN0QixJQUFJLE9BQU9BLE1BQU0sVUFBVTtRQUN2QixPQUFPLENBQUM7SUFDWjtJQUNBLE9BQU9BLEtBQUssQ0FBQztBQUNqQjtBQUNBLHVDQUF1QztBQUNoQyxTQUFTQyxXQUFXQyxHQUFHO0lBQzFCLElBQUksQ0FBQ0EsS0FDRCxPQUFPO0lBQ1gsSUFBSyxNQUFNQyxNQUFNRCxJQUNiLE9BQU87SUFDWCxPQUFPO0FBQ1g7QUFDQSw2REFBNkQ7QUFDdEQsU0FBU0UsT0FBT0YsR0FBRyxFQUFFRyxHQUFHO0lBQzNCLE9BQU9DLE9BQU9DLFNBQVMsQ0FBQ0MsY0FBYyxDQUFDQyxJQUFJLENBQUNQLEtBQUtHO0FBQ3JEO0FBQ08sU0FBU0ssTUFBTVIsR0FBRztJQUNyQixPQUFPQSxPQUFPLFFBQVEsT0FBT0EsUUFBUSxZQUFZLENBQUNTLE1BQU1DLE9BQU8sQ0FBQ1Y7QUFDcEU7QUFDTyxNQUFNVyxnQkFBZ0IsQ0FBQ0M7SUFDMUIsSUFBSUEsU0FBUyxNQUFNO1FBQ2YsTUFBTSxJQUFJcEIsd0RBQVdBLENBQUMsQ0FBQywwQ0FBMEMsRUFBRW9CLE1BQU0sU0FBUyxDQUFDO0lBQ3ZGO0lBQ0EsT0FBT0E7QUFDWCxFQUFFO0FBQ0ssTUFBTUMsMEJBQTBCLENBQUNDLE1BQU1DO0lBQzFDLElBQUksT0FBT0EsTUFBTSxZQUFZLENBQUNDLE9BQU9DLFNBQVMsQ0FBQ0YsSUFBSTtRQUMvQyxNQUFNLElBQUl2Qix3REFBV0EsQ0FBQyxDQUFDLEVBQUVzQixLQUFLLG1CQUFtQixDQUFDO0lBQ3REO0lBQ0EsSUFBSUMsSUFBSSxHQUFHO1FBQ1AsTUFBTSxJQUFJdkIsd0RBQVdBLENBQUMsQ0FBQyxFQUFFc0IsS0FBSywyQkFBMkIsQ0FBQztJQUM5RDtJQUNBLE9BQU9DO0FBQ1gsRUFBRTtBQUNLLE1BQU1HLGdCQUFnQixDQUFDTjtJQUMxQixJQUFJLE9BQU9BLFVBQVUsVUFDakIsT0FBT08sS0FBS0MsS0FBSyxDQUFDUjtJQUN0QixJQUFJLE9BQU9BLFVBQVUsVUFDakIsT0FBT1MsU0FBU1QsT0FBTztJQUMzQixNQUFNLElBQUlwQix3REFBV0EsQ0FBQyxDQUFDLGlCQUFpQixFQUFFb0IsTUFBTSxRQUFRLEVBQUUsT0FBT0EsTUFBTSxlQUFlLENBQUM7QUFDM0YsRUFBRTtBQUNLLE1BQU1VLGNBQWMsQ0FBQ1Y7SUFDeEIsSUFBSSxPQUFPQSxVQUFVLFVBQ2pCLE9BQU9BO0lBQ1gsSUFBSSxPQUFPQSxVQUFVLFVBQ2pCLE9BQU9XLFdBQVdYO0lBQ3RCLE1BQU0sSUFBSXBCLHdEQUFXQSxDQUFDLENBQUMsaUJBQWlCLEVBQUVvQixNQUFNLFFBQVEsRUFBRSxPQUFPQSxNQUFNLGVBQWUsQ0FBQztBQUMzRixFQUFFO0FBQ0ssTUFBTVksZ0JBQWdCLENBQUNaO0lBQzFCLElBQUksT0FBT0EsVUFBVSxXQUNqQixPQUFPQTtJQUNYLElBQUksT0FBT0EsVUFBVSxVQUNqQixPQUFPQSxVQUFVO0lBQ3JCLE9BQU9hLFFBQVFiO0FBQ25CLEVBQUU7QUFDSyxNQUFNYyxxQkFBcUIsQ0FBQ2Q7SUFDL0IsSUFBSUEsVUFBVWUsV0FBVztRQUNyQixPQUFPQTtJQUNYO0lBQ0EsT0FBT1QsY0FBY047QUFDekIsRUFBRTtBQUNLLE1BQU1nQixtQkFBbUIsQ0FBQ2hCO0lBQzdCLElBQUlBLFVBQVVlLFdBQVc7UUFDckIsT0FBT0E7SUFDWDtJQUNBLE9BQU9MLFlBQVlWO0FBQ3ZCLEVBQUU7QUFDSyxNQUFNaUIscUJBQXFCLENBQUNqQjtJQUMvQixJQUFJQSxVQUFVZSxXQUFXO1FBQ3JCLE9BQU9BO0lBQ1g7SUFDQSxPQUFPSCxjQUFjWjtBQUN6QixFQUFFO0FBQ0ssTUFBTWtCLFdBQVcsQ0FBQ0M7SUFDckIsSUFBSTtRQUNBLE9BQU9DLEtBQUtDLEtBQUssQ0FBQ0Y7SUFDdEIsRUFDQSxPQUFPRyxLQUFLO1FBQ1IsT0FBT1A7SUFDWDtBQUNKLEVBQUUsQ0FDRixtQ0FBbUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvaW50ZXJuYWwvdXRpbHMvdmFsdWVzLm1qcz9lNTY0Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5pbXBvcnQgeyBPcGVuQUlFcnJvciB9IGZyb20gXCIuLi8uLi9jb3JlL2Vycm9yLm1qc1wiO1xuLy8gaHR0cHM6Ly91cmwuc3BlYy53aGF0d2cub3JnLyN1cmwtc2NoZW1lLXN0cmluZ1xuY29uc3Qgc3RhcnRzV2l0aFNjaGVtZVJlZ2V4cCA9IC9eW2Etel1bYS16MC05Ky4tXSo6L2k7XG5leHBvcnQgY29uc3QgaXNBYnNvbHV0ZVVSTCA9ICh1cmwpID0+IHtcbiAgICByZXR1cm4gc3RhcnRzV2l0aFNjaGVtZVJlZ2V4cC50ZXN0KHVybCk7XG59O1xuLyoqIFJldHVybnMgYW4gb2JqZWN0IGlmIHRoZSBnaXZlbiB2YWx1ZSBpc24ndCBhbiBvYmplY3QsIG90aGVyd2lzZSByZXR1cm5zIGFzLWlzICovXG5leHBvcnQgZnVuY3Rpb24gbWF5YmVPYmooeCkge1xuICAgIGlmICh0eXBlb2YgeCAhPT0gJ29iamVjdCcpIHtcbiAgICAgICAgcmV0dXJuIHt9O1xuICAgIH1cbiAgICByZXR1cm4geCA/PyB7fTtcbn1cbi8vIGh0dHBzOi8vc3RhY2tvdmVyZmxvdy5jb20vYS8zNDQ5MTI4N1xuZXhwb3J0IGZ1bmN0aW9uIGlzRW1wdHlPYmoob2JqKSB7XG4gICAgaWYgKCFvYmopXG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIGZvciAoY29uc3QgX2sgaW4gb2JqKVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgcmV0dXJuIHRydWU7XG59XG4vLyBodHRwczovL2VzbGludC5vcmcvZG9jcy9sYXRlc3QvcnVsZXMvbm8tcHJvdG90eXBlLWJ1aWx0aW5zXG5leHBvcnQgZnVuY3Rpb24gaGFzT3duKG9iaiwga2V5KSB7XG4gICAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGtleSk7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNPYmoob2JqKSB7XG4gICAgcmV0dXJuIG9iaiAhPSBudWxsICYmIHR5cGVvZiBvYmogPT09ICdvYmplY3QnICYmICFBcnJheS5pc0FycmF5KG9iaik7XG59XG5leHBvcnQgY29uc3QgZW5zdXJlUHJlc2VudCA9ICh2YWx1ZSkgPT4ge1xuICAgIGlmICh2YWx1ZSA9PSBudWxsKSB7XG4gICAgICAgIHRocm93IG5ldyBPcGVuQUlFcnJvcihgRXhwZWN0ZWQgYSB2YWx1ZSB0byBiZSBnaXZlbiBidXQgcmVjZWl2ZWQgJHt2YWx1ZX0gaW5zdGVhZC5gKTtcbiAgICB9XG4gICAgcmV0dXJuIHZhbHVlO1xufTtcbmV4cG9ydCBjb25zdCB2YWxpZGF0ZVBvc2l0aXZlSW50ZWdlciA9IChuYW1lLCBuKSA9PiB7XG4gICAgaWYgKHR5cGVvZiBuICE9PSAnbnVtYmVyJyB8fCAhTnVtYmVyLmlzSW50ZWdlcihuKSkge1xuICAgICAgICB0aHJvdyBuZXcgT3BlbkFJRXJyb3IoYCR7bmFtZX0gbXVzdCBiZSBhbiBpbnRlZ2VyYCk7XG4gICAgfVxuICAgIGlmIChuIDwgMCkge1xuICAgICAgICB0aHJvdyBuZXcgT3BlbkFJRXJyb3IoYCR7bmFtZX0gbXVzdCBiZSBhIHBvc2l0aXZlIGludGVnZXJgKTtcbiAgICB9XG4gICAgcmV0dXJuIG47XG59O1xuZXhwb3J0IGNvbnN0IGNvZXJjZUludGVnZXIgPSAodmFsdWUpID0+IHtcbiAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnbnVtYmVyJylcbiAgICAgICAgcmV0dXJuIE1hdGgucm91bmQodmFsdWUpO1xuICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnKVxuICAgICAgICByZXR1cm4gcGFyc2VJbnQodmFsdWUsIDEwKTtcbiAgICB0aHJvdyBuZXcgT3BlbkFJRXJyb3IoYENvdWxkIG5vdCBjb2VyY2UgJHt2YWx1ZX0gKHR5cGU6ICR7dHlwZW9mIHZhbHVlfSkgaW50byBhIG51bWJlcmApO1xufTtcbmV4cG9ydCBjb25zdCBjb2VyY2VGbG9hdCA9ICh2YWx1ZSkgPT4ge1xuICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdudW1iZXInKVxuICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycpXG4gICAgICAgIHJldHVybiBwYXJzZUZsb2F0KHZhbHVlKTtcbiAgICB0aHJvdyBuZXcgT3BlbkFJRXJyb3IoYENvdWxkIG5vdCBjb2VyY2UgJHt2YWx1ZX0gKHR5cGU6ICR7dHlwZW9mIHZhbHVlfSkgaW50byBhIG51bWJlcmApO1xufTtcbmV4cG9ydCBjb25zdCBjb2VyY2VCb29sZWFuID0gKHZhbHVlKSA9PiB7XG4gICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ2Jvb2xlYW4nKVxuICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycpXG4gICAgICAgIHJldHVybiB2YWx1ZSA9PT0gJ3RydWUnO1xuICAgIHJldHVybiBCb29sZWFuKHZhbHVlKTtcbn07XG5leHBvcnQgY29uc3QgbWF5YmVDb2VyY2VJbnRlZ2VyID0gKHZhbHVlKSA9PiB7XG4gICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgcmV0dXJuIGNvZXJjZUludGVnZXIodmFsdWUpO1xufTtcbmV4cG9ydCBjb25zdCBtYXliZUNvZXJjZUZsb2F0ID0gKHZhbHVlKSA9PiB7XG4gICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgcmV0dXJuIGNvZXJjZUZsb2F0KHZhbHVlKTtcbn07XG5leHBvcnQgY29uc3QgbWF5YmVDb2VyY2VCb29sZWFuID0gKHZhbHVlKSA9PiB7XG4gICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgcmV0dXJuIGNvZXJjZUJvb2xlYW4odmFsdWUpO1xufTtcbmV4cG9ydCBjb25zdCBzYWZlSlNPTiA9ICh0ZXh0KSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgICAgcmV0dXJuIEpTT04ucGFyc2UodGV4dCk7XG4gICAgfVxuICAgIGNhdGNoIChlcnIpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dmFsdWVzLm1qcy5tYXAiXSwibmFtZXMiOlsiT3BlbkFJRXJyb3IiLCJzdGFydHNXaXRoU2NoZW1lUmVnZXhwIiwiaXNBYnNvbHV0ZVVSTCIsInVybCIsInRlc3QiLCJtYXliZU9iaiIsIngiLCJpc0VtcHR5T2JqIiwib2JqIiwiX2siLCJoYXNPd24iLCJrZXkiLCJPYmplY3QiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJpc09iaiIsIkFycmF5IiwiaXNBcnJheSIsImVuc3VyZVByZXNlbnQiLCJ2YWx1ZSIsInZhbGlkYXRlUG9zaXRpdmVJbnRlZ2VyIiwibmFtZSIsIm4iLCJOdW1iZXIiLCJpc0ludGVnZXIiLCJjb2VyY2VJbnRlZ2VyIiwiTWF0aCIsInJvdW5kIiwicGFyc2VJbnQiLCJjb2VyY2VGbG9hdCIsInBhcnNlRmxvYXQiLCJjb2VyY2VCb29sZWFuIiwiQm9vbGVhbiIsIm1heWJlQ29lcmNlSW50ZWdlciIsInVuZGVmaW5lZCIsIm1heWJlQ29lcmNlRmxvYXQiLCJtYXliZUNvZXJjZUJvb2xlYW4iLCJzYWZlSlNPTiIsInRleHQiLCJKU09OIiwicGFyc2UiLCJlcnIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/internal/utils/values.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/lib/AbstractChatCompletionRunner.mjs":
/*!**********************************************************************!*\
  !*** ../../node_modules/openai/lib/AbstractChatCompletionRunner.mjs ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AbstractChatCompletionRunner: () => (/* binding */ AbstractChatCompletionRunner)\n/* harmony export */ });\n/* harmony import */ var _internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../internal/tslib.mjs */ \"(middleware)/../../node_modules/openai/internal/tslib.mjs\");\n/* harmony import */ var _error_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error.mjs */ \"(middleware)/../../node_modules/openai/error.mjs\");\n/* harmony import */ var _RunnableFunction_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./RunnableFunction.mjs */ \"(middleware)/../../node_modules/openai/lib/RunnableFunction.mjs\");\n/* harmony import */ var _chatCompletionUtils_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./chatCompletionUtils.mjs */ \"(middleware)/../../node_modules/openai/lib/chatCompletionUtils.mjs\");\n/* harmony import */ var _EventStream_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./EventStream.mjs */ \"(middleware)/../../node_modules/openai/lib/EventStream.mjs\");\n/* harmony import */ var _lib_parser_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../lib/parser.mjs */ \"(middleware)/../../node_modules/openai/lib/parser.mjs\");\nvar _AbstractChatCompletionRunner_instances, _AbstractChatCompletionRunner_getFinalContent, _AbstractChatCompletionRunner_getFinalMessage, _AbstractChatCompletionRunner_getFinalFunctionToolCall, _AbstractChatCompletionRunner_getFinalFunctionToolCallResult, _AbstractChatCompletionRunner_calculateTotalUsage, _AbstractChatCompletionRunner_validateParams, _AbstractChatCompletionRunner_stringifyFunctionCallResult;\n\n\n\n\n\n\nconst DEFAULT_MAX_CHAT_COMPLETIONS = 10;\nclass AbstractChatCompletionRunner extends _EventStream_mjs__WEBPACK_IMPORTED_MODULE_4__.EventStream {\n    constructor(){\n        super(...arguments);\n        _AbstractChatCompletionRunner_instances.add(this);\n        this._chatCompletions = [];\n        this.messages = [];\n    }\n    _addChatCompletion(chatCompletion) {\n        this._chatCompletions.push(chatCompletion);\n        this._emit(\"chatCompletion\", chatCompletion);\n        const message = chatCompletion.choices[0]?.message;\n        if (message) this._addMessage(message);\n        return chatCompletion;\n    }\n    _addMessage(message, emit = true) {\n        if (!(\"content\" in message)) message.content = null;\n        this.messages.push(message);\n        if (emit) {\n            this._emit(\"message\", message);\n            if ((0,_chatCompletionUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.isToolMessage)(message) && message.content) {\n                // Note, this assumes that {role: 'tool', content: …} is always the result of a call of tool of type=function.\n                this._emit(\"functionToolCallResult\", message.content);\n            } else if ((0,_chatCompletionUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.isAssistantMessage)(message) && message.tool_calls) {\n                for (const tool_call of message.tool_calls){\n                    if (tool_call.type === \"function\") {\n                        this._emit(\"functionToolCall\", tool_call.function);\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * @returns a promise that resolves with the final ChatCompletion, or rejects\n     * if an error occurred or the stream ended prematurely without producing a ChatCompletion.\n     */ async finalChatCompletion() {\n        await this.done();\n        const completion = this._chatCompletions[this._chatCompletions.length - 1];\n        if (!completion) throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(\"stream ended without producing a ChatCompletion\");\n        return completion;\n    }\n    /**\n     * @returns a promise that resolves with the content of the final ChatCompletionMessage, or rejects\n     * if an error occurred or the stream ended prematurely without producing a ChatCompletionMessage.\n     */ async finalContent() {\n        await this.done();\n        return (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalContent).call(this);\n    }\n    /**\n     * @returns a promise that resolves with the the final assistant ChatCompletionMessage response,\n     * or rejects if an error occurred or the stream ended prematurely without producing a ChatCompletionMessage.\n     */ async finalMessage() {\n        await this.done();\n        return (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalMessage).call(this);\n    }\n    /**\n     * @returns a promise that resolves with the content of the final FunctionCall, or rejects\n     * if an error occurred or the stream ended prematurely without producing a ChatCompletionMessage.\n     */ async finalFunctionToolCall() {\n        await this.done();\n        return (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalFunctionToolCall).call(this);\n    }\n    async finalFunctionToolCallResult() {\n        await this.done();\n        return (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalFunctionToolCallResult).call(this);\n    }\n    async totalUsage() {\n        await this.done();\n        return (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_calculateTotalUsage).call(this);\n    }\n    allChatCompletions() {\n        return [\n            ...this._chatCompletions\n        ];\n    }\n    _emitFinal() {\n        const completion = this._chatCompletions[this._chatCompletions.length - 1];\n        if (completion) this._emit(\"finalChatCompletion\", completion);\n        const finalMessage = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalMessage).call(this);\n        if (finalMessage) this._emit(\"finalMessage\", finalMessage);\n        const finalContent = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalContent).call(this);\n        if (finalContent) this._emit(\"finalContent\", finalContent);\n        const finalFunctionCall = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalFunctionToolCall).call(this);\n        if (finalFunctionCall) this._emit(\"finalFunctionToolCall\", finalFunctionCall);\n        const finalFunctionCallResult = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalFunctionToolCallResult).call(this);\n        if (finalFunctionCallResult != null) this._emit(\"finalFunctionToolCallResult\", finalFunctionCallResult);\n        if (this._chatCompletions.some((c)=>c.usage)) {\n            this._emit(\"totalUsage\", (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_calculateTotalUsage).call(this));\n        }\n    }\n    async _createChatCompletion(client, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted) this.controller.abort();\n            signal.addEventListener(\"abort\", ()=>this.controller.abort());\n        }\n        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_validateParams).call(this, params);\n        const chatCompletion = await client.chat.completions.create({\n            ...params,\n            stream: false\n        }, {\n            ...options,\n            signal: this.controller.signal\n        });\n        this._connected();\n        return this._addChatCompletion((0,_lib_parser_mjs__WEBPACK_IMPORTED_MODULE_5__.parseChatCompletion)(chatCompletion, params));\n    }\n    async _runChatCompletion(client, params, options) {\n        for (const message of params.messages){\n            this._addMessage(message, false);\n        }\n        return await this._createChatCompletion(client, params, options);\n    }\n    async _runTools(client, params, options) {\n        const role = \"tool\";\n        const { tool_choice = \"auto\", stream, ...restParams } = params;\n        const singleFunctionToCall = typeof tool_choice !== \"string\" && tool_choice?.function?.name;\n        const { maxChatCompletions = DEFAULT_MAX_CHAT_COMPLETIONS } = options || {};\n        // TODO(someday): clean this logic up\n        const inputTools = params.tools.map((tool)=>{\n            if ((0,_lib_parser_mjs__WEBPACK_IMPORTED_MODULE_5__.isAutoParsableTool)(tool)) {\n                if (!tool.$callback) {\n                    throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(\"Tool given to `.runTools()` that does not have an associated function\");\n                }\n                return {\n                    type: \"function\",\n                    function: {\n                        function: tool.$callback,\n                        name: tool.function.name,\n                        description: tool.function.description || \"\",\n                        parameters: tool.function.parameters,\n                        parse: tool.$parseRaw,\n                        strict: true\n                    }\n                };\n            }\n            return tool;\n        });\n        const functionsByName = {};\n        for (const f of inputTools){\n            if (f.type === \"function\") {\n                functionsByName[f.function.name || f.function.function.name] = f.function;\n            }\n        }\n        const tools = \"tools\" in params ? inputTools.map((t)=>t.type === \"function\" ? {\n                type: \"function\",\n                function: {\n                    name: t.function.name || t.function.function.name,\n                    parameters: t.function.parameters,\n                    description: t.function.description,\n                    strict: t.function.strict\n                }\n            } : t) : undefined;\n        for (const message of params.messages){\n            this._addMessage(message, false);\n        }\n        for(let i = 0; i < maxChatCompletions; ++i){\n            const chatCompletion = await this._createChatCompletion(client, {\n                ...restParams,\n                tool_choice,\n                tools,\n                messages: [\n                    ...this.messages\n                ]\n            }, options);\n            const message = chatCompletion.choices[0]?.message;\n            if (!message) {\n                throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(`missing message in ChatCompletion response`);\n            }\n            if (!message.tool_calls?.length) {\n                return;\n            }\n            for (const tool_call of message.tool_calls){\n                if (tool_call.type !== \"function\") continue;\n                const tool_call_id = tool_call.id;\n                const { name, arguments: args } = tool_call.function;\n                const fn = functionsByName[name];\n                if (!fn) {\n                    const content = `Invalid tool_call: ${JSON.stringify(name)}. Available options are: ${Object.keys(functionsByName).map((name)=>JSON.stringify(name)).join(\", \")}. Please try again`;\n                    this._addMessage({\n                        role,\n                        tool_call_id,\n                        content\n                    });\n                    continue;\n                } else if (singleFunctionToCall && singleFunctionToCall !== name) {\n                    const content = `Invalid tool_call: ${JSON.stringify(name)}. ${JSON.stringify(singleFunctionToCall)} requested. Please try again`;\n                    this._addMessage({\n                        role,\n                        tool_call_id,\n                        content\n                    });\n                    continue;\n                }\n                let parsed;\n                try {\n                    parsed = (0,_RunnableFunction_mjs__WEBPACK_IMPORTED_MODULE_2__.isRunnableFunctionWithParse)(fn) ? await fn.parse(args) : args;\n                } catch (error) {\n                    const content = error instanceof Error ? error.message : String(error);\n                    this._addMessage({\n                        role,\n                        tool_call_id,\n                        content\n                    });\n                    continue;\n                }\n                // @ts-expect-error it can't rule out `never` type.\n                const rawContent = await fn.function(parsed, this);\n                const content = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_stringifyFunctionCallResult).call(this, rawContent);\n                this._addMessage({\n                    role,\n                    tool_call_id,\n                    content\n                });\n                if (singleFunctionToCall) {\n                    return;\n                }\n            }\n        }\n        return;\n    }\n}\n_AbstractChatCompletionRunner_instances = new WeakSet(), _AbstractChatCompletionRunner_getFinalContent = function _AbstractChatCompletionRunner_getFinalContent() {\n    return (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalMessage).call(this).content ?? null;\n}, _AbstractChatCompletionRunner_getFinalMessage = function _AbstractChatCompletionRunner_getFinalMessage() {\n    let i = this.messages.length;\n    while(i-- > 0){\n        const message = this.messages[i];\n        if ((0,_chatCompletionUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.isAssistantMessage)(message)) {\n            // TODO: support audio here\n            const ret = {\n                ...message,\n                content: message.content ?? null,\n                refusal: message.refusal ?? null\n            };\n            return ret;\n        }\n    }\n    throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(\"stream ended without producing a ChatCompletionMessage with role=assistant\");\n}, _AbstractChatCompletionRunner_getFinalFunctionToolCall = function _AbstractChatCompletionRunner_getFinalFunctionToolCall() {\n    for(let i = this.messages.length - 1; i >= 0; i--){\n        const message = this.messages[i];\n        if ((0,_chatCompletionUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.isAssistantMessage)(message) && message?.tool_calls?.length) {\n            return message.tool_calls.at(-1)?.function;\n        }\n    }\n    return;\n}, _AbstractChatCompletionRunner_getFinalFunctionToolCallResult = function _AbstractChatCompletionRunner_getFinalFunctionToolCallResult() {\n    for(let i = this.messages.length - 1; i >= 0; i--){\n        const message = this.messages[i];\n        if ((0,_chatCompletionUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.isToolMessage)(message) && message.content != null && typeof message.content === \"string\" && this.messages.some((x)=>x.role === \"assistant\" && x.tool_calls?.some((y)=>y.type === \"function\" && y.id === message.tool_call_id))) {\n            return message.content;\n        }\n    }\n    return;\n}, _AbstractChatCompletionRunner_calculateTotalUsage = function _AbstractChatCompletionRunner_calculateTotalUsage() {\n    const total = {\n        completion_tokens: 0,\n        prompt_tokens: 0,\n        total_tokens: 0\n    };\n    for (const { usage } of this._chatCompletions){\n        if (usage) {\n            total.completion_tokens += usage.completion_tokens;\n            total.prompt_tokens += usage.prompt_tokens;\n            total.total_tokens += usage.total_tokens;\n        }\n    }\n    return total;\n}, _AbstractChatCompletionRunner_validateParams = function _AbstractChatCompletionRunner_validateParams(params) {\n    if (params.n != null && params.n > 1) {\n        throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(\"ChatCompletion convenience helpers only support n=1 at this time. To use n>1, please use chat.completions.create() directly.\");\n    }\n}, _AbstractChatCompletionRunner_stringifyFunctionCallResult = function _AbstractChatCompletionRunner_stringifyFunctionCallResult(rawContent) {\n    return typeof rawContent === \"string\" ? rawContent : rawContent === undefined ? \"undefined\" : JSON.stringify(rawContent);\n}; //# sourceMappingURL=AbstractChatCompletionRunner.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/lib/AbstractChatCompletionRunner.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/lib/AssistantStream.mjs":
/*!*********************************************************!*\
  !*** ../../node_modules/openai/lib/AssistantStream.mjs ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AssistantStream: () => (/* binding */ AssistantStream)\n/* harmony export */ });\n/* harmony import */ var _internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../internal/tslib.mjs */ \"(middleware)/../../node_modules/openai/internal/tslib.mjs\");\n/* harmony import */ var _streaming_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../streaming.mjs */ \"(middleware)/../../node_modules/openai/streaming.mjs\");\n/* harmony import */ var _error_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../error.mjs */ \"(middleware)/../../node_modules/openai/error.mjs\");\n/* harmony import */ var _EventStream_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./EventStream.mjs */ \"(middleware)/../../node_modules/openai/lib/EventStream.mjs\");\n/* harmony import */ var _internal_utils_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../internal/utils.mjs */ \"(middleware)/../../node_modules/openai/internal/utils.mjs\");\nvar _AssistantStream_instances, _a, _AssistantStream_events, _AssistantStream_runStepSnapshots, _AssistantStream_messageSnapshots, _AssistantStream_messageSnapshot, _AssistantStream_finalRun, _AssistantStream_currentContentIndex, _AssistantStream_currentContent, _AssistantStream_currentToolCallIndex, _AssistantStream_currentToolCall, _AssistantStream_currentEvent, _AssistantStream_currentRunSnapshot, _AssistantStream_currentRunStepSnapshot, _AssistantStream_addEvent, _AssistantStream_endRequest, _AssistantStream_handleMessage, _AssistantStream_handleRunStep, _AssistantStream_handleEvent, _AssistantStream_accumulateRunStep, _AssistantStream_accumulateMessage, _AssistantStream_accumulateContent, _AssistantStream_handleRun;\n\n\n\n\n\nclass AssistantStream extends _EventStream_mjs__WEBPACK_IMPORTED_MODULE_3__.EventStream {\n    constructor(){\n        super(...arguments);\n        _AssistantStream_instances.add(this);\n        //Track all events in a single list for reference\n        _AssistantStream_events.set(this, []);\n        //Used to accumulate deltas\n        //We are accumulating many types so the value here is not strict\n        _AssistantStream_runStepSnapshots.set(this, {});\n        _AssistantStream_messageSnapshots.set(this, {});\n        _AssistantStream_messageSnapshot.set(this, void 0);\n        _AssistantStream_finalRun.set(this, void 0);\n        _AssistantStream_currentContentIndex.set(this, void 0);\n        _AssistantStream_currentContent.set(this, void 0);\n        _AssistantStream_currentToolCallIndex.set(this, void 0);\n        _AssistantStream_currentToolCall.set(this, void 0);\n        //For current snapshot methods\n        _AssistantStream_currentEvent.set(this, void 0);\n        _AssistantStream_currentRunSnapshot.set(this, void 0);\n        _AssistantStream_currentRunStepSnapshot.set(this, void 0);\n    }\n    [(_AssistantStream_events = new WeakMap(), _AssistantStream_runStepSnapshots = new WeakMap(), _AssistantStream_messageSnapshots = new WeakMap(), _AssistantStream_messageSnapshot = new WeakMap(), _AssistantStream_finalRun = new WeakMap(), _AssistantStream_currentContentIndex = new WeakMap(), _AssistantStream_currentContent = new WeakMap(), _AssistantStream_currentToolCallIndex = new WeakMap(), _AssistantStream_currentToolCall = new WeakMap(), _AssistantStream_currentEvent = new WeakMap(), _AssistantStream_currentRunSnapshot = new WeakMap(), _AssistantStream_currentRunStepSnapshot = new WeakMap(), _AssistantStream_instances = new WeakSet(), Symbol.asyncIterator)]() {\n        const pushQueue = [];\n        const readQueue = [];\n        let done = false;\n        //Catch all for passing along all events\n        this.on(\"event\", (event)=>{\n            const reader = readQueue.shift();\n            if (reader) {\n                reader.resolve(event);\n            } else {\n                pushQueue.push(event);\n            }\n        });\n        this.on(\"end\", ()=>{\n            done = true;\n            for (const reader of readQueue){\n                reader.resolve(undefined);\n            }\n            readQueue.length = 0;\n        });\n        this.on(\"abort\", (err)=>{\n            done = true;\n            for (const reader of readQueue){\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        this.on(\"error\", (err)=>{\n            done = true;\n            for (const reader of readQueue){\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        return {\n            next: async ()=>{\n                if (!pushQueue.length) {\n                    if (done) {\n                        return {\n                            value: undefined,\n                            done: true\n                        };\n                    }\n                    return new Promise((resolve, reject)=>readQueue.push({\n                            resolve,\n                            reject\n                        })).then((chunk)=>chunk ? {\n                            value: chunk,\n                            done: false\n                        } : {\n                            value: undefined,\n                            done: true\n                        });\n                }\n                const chunk = pushQueue.shift();\n                return {\n                    value: chunk,\n                    done: false\n                };\n            },\n            return: async ()=>{\n                this.abort();\n                return {\n                    value: undefined,\n                    done: true\n                };\n            }\n        };\n    }\n    static fromReadableStream(stream) {\n        const runner = new _a();\n        runner._run(()=>runner._fromReadableStream(stream));\n        return runner;\n    }\n    async _fromReadableStream(readableStream, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted) this.controller.abort();\n            signal.addEventListener(\"abort\", ()=>this.controller.abort());\n        }\n        this._connected();\n        const stream = _streaming_mjs__WEBPACK_IMPORTED_MODULE_1__.Stream.fromReadableStream(readableStream, this.controller);\n        for await (const event of stream){\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_instances, \"m\", _AssistantStream_addEvent).call(this, event);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_2__.APIUserAbortError();\n        }\n        return this._addRun((0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_instances, \"m\", _AssistantStream_endRequest).call(this));\n    }\n    toReadableStream() {\n        const stream = new _streaming_mjs__WEBPACK_IMPORTED_MODULE_1__.Stream(this[Symbol.asyncIterator].bind(this), this.controller);\n        return stream.toReadableStream();\n    }\n    static createToolAssistantStream(runId, runs, params, options) {\n        const runner = new _a();\n        runner._run(()=>runner._runToolAssistantStream(runId, runs, params, {\n                ...options,\n                headers: {\n                    ...options?.headers,\n                    \"X-Stainless-Helper-Method\": \"stream\"\n                }\n            }));\n        return runner;\n    }\n    async _createToolAssistantStream(run, runId, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted) this.controller.abort();\n            signal.addEventListener(\"abort\", ()=>this.controller.abort());\n        }\n        const body = {\n            ...params,\n            stream: true\n        };\n        const stream = await run.submitToolOutputs(runId, body, {\n            ...options,\n            signal: this.controller.signal\n        });\n        this._connected();\n        for await (const event of stream){\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_instances, \"m\", _AssistantStream_addEvent).call(this, event);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_2__.APIUserAbortError();\n        }\n        return this._addRun((0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_instances, \"m\", _AssistantStream_endRequest).call(this));\n    }\n    static createThreadAssistantStream(params, thread, options) {\n        const runner = new _a();\n        runner._run(()=>runner._threadAssistantStream(params, thread, {\n                ...options,\n                headers: {\n                    ...options?.headers,\n                    \"X-Stainless-Helper-Method\": \"stream\"\n                }\n            }));\n        return runner;\n    }\n    static createAssistantStream(threadId, runs, params, options) {\n        const runner = new _a();\n        runner._run(()=>runner._runAssistantStream(threadId, runs, params, {\n                ...options,\n                headers: {\n                    ...options?.headers,\n                    \"X-Stainless-Helper-Method\": \"stream\"\n                }\n            }));\n        return runner;\n    }\n    currentEvent() {\n        return (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_currentEvent, \"f\");\n    }\n    currentRun() {\n        return (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_currentRunSnapshot, \"f\");\n    }\n    currentMessageSnapshot() {\n        return (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_messageSnapshot, \"f\");\n    }\n    currentRunStepSnapshot() {\n        return (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_currentRunStepSnapshot, \"f\");\n    }\n    async finalRunSteps() {\n        await this.done();\n        return Object.values((0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_runStepSnapshots, \"f\"));\n    }\n    async finalMessages() {\n        await this.done();\n        return Object.values((0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_messageSnapshots, \"f\"));\n    }\n    async finalRun() {\n        await this.done();\n        if (!(0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_finalRun, \"f\")) throw Error(\"Final run was not received.\");\n        return (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_finalRun, \"f\");\n    }\n    async _createThreadAssistantStream(thread, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted) this.controller.abort();\n            signal.addEventListener(\"abort\", ()=>this.controller.abort());\n        }\n        const body = {\n            ...params,\n            stream: true\n        };\n        const stream = await thread.createAndRun(body, {\n            ...options,\n            signal: this.controller.signal\n        });\n        this._connected();\n        for await (const event of stream){\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_instances, \"m\", _AssistantStream_addEvent).call(this, event);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_2__.APIUserAbortError();\n        }\n        return this._addRun((0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_instances, \"m\", _AssistantStream_endRequest).call(this));\n    }\n    async _createAssistantStream(run, threadId, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted) this.controller.abort();\n            signal.addEventListener(\"abort\", ()=>this.controller.abort());\n        }\n        const body = {\n            ...params,\n            stream: true\n        };\n        const stream = await run.create(threadId, body, {\n            ...options,\n            signal: this.controller.signal\n        });\n        this._connected();\n        for await (const event of stream){\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_instances, \"m\", _AssistantStream_addEvent).call(this, event);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_2__.APIUserAbortError();\n        }\n        return this._addRun((0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_instances, \"m\", _AssistantStream_endRequest).call(this));\n    }\n    static accumulateDelta(acc, delta) {\n        for (const [key, deltaValue] of Object.entries(delta)){\n            if (!acc.hasOwnProperty(key)) {\n                acc[key] = deltaValue;\n                continue;\n            }\n            let accValue = acc[key];\n            if (accValue === null || accValue === undefined) {\n                acc[key] = deltaValue;\n                continue;\n            }\n            // We don't accumulate these special properties\n            if (key === \"index\" || key === \"type\") {\n                acc[key] = deltaValue;\n                continue;\n            }\n            // Type-specific accumulation logic\n            if (typeof accValue === \"string\" && typeof deltaValue === \"string\") {\n                accValue += deltaValue;\n            } else if (typeof accValue === \"number\" && typeof deltaValue === \"number\") {\n                accValue += deltaValue;\n            } else if ((0,_internal_utils_mjs__WEBPACK_IMPORTED_MODULE_4__.isObj)(accValue) && (0,_internal_utils_mjs__WEBPACK_IMPORTED_MODULE_4__.isObj)(deltaValue)) {\n                accValue = this.accumulateDelta(accValue, deltaValue);\n            } else if (Array.isArray(accValue) && Array.isArray(deltaValue)) {\n                if (accValue.every((x)=>typeof x === \"string\" || typeof x === \"number\")) {\n                    accValue.push(...deltaValue); // Use spread syntax for efficient addition\n                    continue;\n                }\n                for (const deltaEntry of deltaValue){\n                    if (!(0,_internal_utils_mjs__WEBPACK_IMPORTED_MODULE_4__.isObj)(deltaEntry)) {\n                        throw new Error(`Expected array delta entry to be an object but got: ${deltaEntry}`);\n                    }\n                    const index = deltaEntry[\"index\"];\n                    if (index == null) {\n                        console.error(deltaEntry);\n                        throw new Error(\"Expected array delta entry to have an `index` property\");\n                    }\n                    if (typeof index !== \"number\") {\n                        throw new Error(`Expected array delta entry \\`index\\` property to be a number but got ${index}`);\n                    }\n                    const accEntry = accValue[index];\n                    if (accEntry == null) {\n                        accValue.push(deltaEntry);\n                    } else {\n                        accValue[index] = this.accumulateDelta(accEntry, deltaEntry);\n                    }\n                }\n                continue;\n            } else {\n                throw Error(`Unhandled record type: ${key}, deltaValue: ${deltaValue}, accValue: ${accValue}`);\n            }\n            acc[key] = accValue;\n        }\n        return acc;\n    }\n    _addRun(run) {\n        return run;\n    }\n    async _threadAssistantStream(params, thread, options) {\n        return await this._createThreadAssistantStream(thread, params, options);\n    }\n    async _runAssistantStream(threadId, runs, params, options) {\n        return await this._createAssistantStream(runs, threadId, params, options);\n    }\n    async _runToolAssistantStream(runId, runs, params, options) {\n        return await this._createToolAssistantStream(runs, runId, params, options);\n    }\n}\n_a = AssistantStream, _AssistantStream_addEvent = function _AssistantStream_addEvent(event) {\n    if (this.ended) return;\n    (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _AssistantStream_currentEvent, event, \"f\");\n    (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_instances, \"m\", _AssistantStream_handleEvent).call(this, event);\n    switch(event.event){\n        case \"thread.created\":\n            break;\n        case \"thread.run.created\":\n        case \"thread.run.queued\":\n        case \"thread.run.in_progress\":\n        case \"thread.run.requires_action\":\n        case \"thread.run.completed\":\n        case \"thread.run.incomplete\":\n        case \"thread.run.failed\":\n        case \"thread.run.cancelling\":\n        case \"thread.run.cancelled\":\n        case \"thread.run.expired\":\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_instances, \"m\", _AssistantStream_handleRun).call(this, event);\n            break;\n        case \"thread.run.step.created\":\n        case \"thread.run.step.in_progress\":\n        case \"thread.run.step.delta\":\n        case \"thread.run.step.completed\":\n        case \"thread.run.step.failed\":\n        case \"thread.run.step.cancelled\":\n        case \"thread.run.step.expired\":\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_instances, \"m\", _AssistantStream_handleRunStep).call(this, event);\n            break;\n        case \"thread.message.created\":\n        case \"thread.message.in_progress\":\n        case \"thread.message.delta\":\n        case \"thread.message.completed\":\n        case \"thread.message.incomplete\":\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_instances, \"m\", _AssistantStream_handleMessage).call(this, event);\n            break;\n        case \"error\":\n            //This is included for completeness, but errors are processed in the SSE event processing so this should not occur\n            throw new Error(\"Encountered an error event in event processing - errors should be processed earlier\");\n        default:\n            assertNever(event);\n    }\n}, _AssistantStream_endRequest = function _AssistantStream_endRequest() {\n    if (this.ended) {\n        throw new _error_mjs__WEBPACK_IMPORTED_MODULE_2__.OpenAIError(`stream has ended, this shouldn't happen`);\n    }\n    if (!(0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_finalRun, \"f\")) throw Error(\"Final run has not been received\");\n    return (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_finalRun, \"f\");\n}, _AssistantStream_handleMessage = function _AssistantStream_handleMessage(event) {\n    const [accumulatedMessage, newContent] = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_instances, \"m\", _AssistantStream_accumulateMessage).call(this, event, (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_messageSnapshot, \"f\"));\n    (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _AssistantStream_messageSnapshot, accumulatedMessage, \"f\");\n    (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_messageSnapshots, \"f\")[accumulatedMessage.id] = accumulatedMessage;\n    for (const content of newContent){\n        const snapshotContent = accumulatedMessage.content[content.index];\n        if (snapshotContent?.type == \"text\") {\n            this._emit(\"textCreated\", snapshotContent.text);\n        }\n    }\n    switch(event.event){\n        case \"thread.message.created\":\n            this._emit(\"messageCreated\", event.data);\n            break;\n        case \"thread.message.in_progress\":\n            break;\n        case \"thread.message.delta\":\n            this._emit(\"messageDelta\", event.data.delta, accumulatedMessage);\n            if (event.data.delta.content) {\n                for (const content of event.data.delta.content){\n                    //If it is text delta, emit a text delta event\n                    if (content.type == \"text\" && content.text) {\n                        let textDelta = content.text;\n                        let snapshot = accumulatedMessage.content[content.index];\n                        if (snapshot && snapshot.type == \"text\") {\n                            this._emit(\"textDelta\", textDelta, snapshot.text);\n                        } else {\n                            throw Error(\"The snapshot associated with this text delta is not text or missing\");\n                        }\n                    }\n                    if (content.index != (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_currentContentIndex, \"f\")) {\n                        //See if we have in progress content\n                        if ((0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_currentContent, \"f\")) {\n                            switch((0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_currentContent, \"f\").type){\n                                case \"text\":\n                                    this._emit(\"textDone\", (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_currentContent, \"f\").text, (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_messageSnapshot, \"f\"));\n                                    break;\n                                case \"image_file\":\n                                    this._emit(\"imageFileDone\", (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_currentContent, \"f\").image_file, (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_messageSnapshot, \"f\"));\n                                    break;\n                            }\n                        }\n                        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _AssistantStream_currentContentIndex, content.index, \"f\");\n                    }\n                    (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _AssistantStream_currentContent, accumulatedMessage.content[content.index], \"f\");\n                }\n            }\n            break;\n        case \"thread.message.completed\":\n        case \"thread.message.incomplete\":\n            //We emit the latest content we were working on on completion (including incomplete)\n            if ((0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_currentContentIndex, \"f\") !== undefined) {\n                const currentContent = event.data.content[(0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_currentContentIndex, \"f\")];\n                if (currentContent) {\n                    switch(currentContent.type){\n                        case \"image_file\":\n                            this._emit(\"imageFileDone\", currentContent.image_file, (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_messageSnapshot, \"f\"));\n                            break;\n                        case \"text\":\n                            this._emit(\"textDone\", currentContent.text, (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_messageSnapshot, \"f\"));\n                            break;\n                    }\n                }\n            }\n            if ((0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_messageSnapshot, \"f\")) {\n                this._emit(\"messageDone\", event.data);\n            }\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _AssistantStream_messageSnapshot, undefined, \"f\");\n    }\n}, _AssistantStream_handleRunStep = function _AssistantStream_handleRunStep(event) {\n    const accumulatedRunStep = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_instances, \"m\", _AssistantStream_accumulateRunStep).call(this, event);\n    (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _AssistantStream_currentRunStepSnapshot, accumulatedRunStep, \"f\");\n    switch(event.event){\n        case \"thread.run.step.created\":\n            this._emit(\"runStepCreated\", event.data);\n            break;\n        case \"thread.run.step.delta\":\n            const delta = event.data.delta;\n            if (delta.step_details && delta.step_details.type == \"tool_calls\" && delta.step_details.tool_calls && accumulatedRunStep.step_details.type == \"tool_calls\") {\n                for (const toolCall of delta.step_details.tool_calls){\n                    if (toolCall.index == (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_currentToolCallIndex, \"f\")) {\n                        this._emit(\"toolCallDelta\", toolCall, accumulatedRunStep.step_details.tool_calls[toolCall.index]);\n                    } else {\n                        if ((0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_currentToolCall, \"f\")) {\n                            this._emit(\"toolCallDone\", (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_currentToolCall, \"f\"));\n                        }\n                        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _AssistantStream_currentToolCallIndex, toolCall.index, \"f\");\n                        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _AssistantStream_currentToolCall, accumulatedRunStep.step_details.tool_calls[toolCall.index], \"f\");\n                        if ((0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_currentToolCall, \"f\")) this._emit(\"toolCallCreated\", (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_currentToolCall, \"f\"));\n                    }\n                }\n            }\n            this._emit(\"runStepDelta\", event.data.delta, accumulatedRunStep);\n            break;\n        case \"thread.run.step.completed\":\n        case \"thread.run.step.failed\":\n        case \"thread.run.step.cancelled\":\n        case \"thread.run.step.expired\":\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _AssistantStream_currentRunStepSnapshot, undefined, \"f\");\n            const details = event.data.step_details;\n            if (details.type == \"tool_calls\") {\n                if ((0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_currentToolCall, \"f\")) {\n                    this._emit(\"toolCallDone\", (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_currentToolCall, \"f\"));\n                    (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _AssistantStream_currentToolCall, undefined, \"f\");\n                }\n            }\n            this._emit(\"runStepDone\", event.data, accumulatedRunStep);\n            break;\n        case \"thread.run.step.in_progress\":\n            break;\n    }\n}, _AssistantStream_handleEvent = function _AssistantStream_handleEvent(event) {\n    (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_events, \"f\").push(event);\n    this._emit(\"event\", event);\n}, _AssistantStream_accumulateRunStep = function _AssistantStream_accumulateRunStep(event) {\n    switch(event.event){\n        case \"thread.run.step.created\":\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id] = event.data;\n            return event.data;\n        case \"thread.run.step.delta\":\n            let snapshot = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id];\n            if (!snapshot) {\n                throw Error(\"Received a RunStepDelta before creation of a snapshot\");\n            }\n            let data = event.data;\n            if (data.delta) {\n                const accumulated = _a.accumulateDelta(snapshot, data.delta);\n                (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id] = accumulated;\n            }\n            return (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id];\n        case \"thread.run.step.completed\":\n        case \"thread.run.step.failed\":\n        case \"thread.run.step.cancelled\":\n        case \"thread.run.step.expired\":\n        case \"thread.run.step.in_progress\":\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id] = event.data;\n            break;\n    }\n    if ((0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id]) return (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id];\n    throw new Error(\"No snapshot available\");\n}, _AssistantStream_accumulateMessage = function _AssistantStream_accumulateMessage(event, snapshot) {\n    let newContent = [];\n    switch(event.event){\n        case \"thread.message.created\":\n            //On creation the snapshot is just the initial message\n            return [\n                event.data,\n                newContent\n            ];\n        case \"thread.message.delta\":\n            if (!snapshot) {\n                throw Error(\"Received a delta with no existing snapshot (there should be one from message creation)\");\n            }\n            let data = event.data;\n            //If this delta does not have content, nothing to process\n            if (data.delta.content) {\n                for (const contentElement of data.delta.content){\n                    if (contentElement.index in snapshot.content) {\n                        let currentContent = snapshot.content[contentElement.index];\n                        snapshot.content[contentElement.index] = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_instances, \"m\", _AssistantStream_accumulateContent).call(this, contentElement, currentContent);\n                    } else {\n                        snapshot.content[contentElement.index] = contentElement;\n                        // This is a new element\n                        newContent.push(contentElement);\n                    }\n                }\n            }\n            return [\n                snapshot,\n                newContent\n            ];\n        case \"thread.message.in_progress\":\n        case \"thread.message.completed\":\n        case \"thread.message.incomplete\":\n            //No changes on other thread events\n            if (snapshot) {\n                return [\n                    snapshot,\n                    newContent\n                ];\n            } else {\n                throw Error(\"Received thread message event with no existing snapshot\");\n            }\n    }\n    throw Error(\"Tried to accumulate a non-message event\");\n}, _AssistantStream_accumulateContent = function _AssistantStream_accumulateContent(contentElement, currentContent) {\n    return _a.accumulateDelta(currentContent, contentElement);\n}, _AssistantStream_handleRun = function _AssistantStream_handleRun(event) {\n    (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _AssistantStream_currentRunSnapshot, event.data, \"f\");\n    switch(event.event){\n        case \"thread.run.created\":\n            break;\n        case \"thread.run.queued\":\n            break;\n        case \"thread.run.in_progress\":\n            break;\n        case \"thread.run.requires_action\":\n        case \"thread.run.cancelled\":\n        case \"thread.run.failed\":\n        case \"thread.run.completed\":\n        case \"thread.run.expired\":\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _AssistantStream_finalRun, event.data, \"f\");\n            if ((0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_currentToolCall, \"f\")) {\n                this._emit(\"toolCallDone\", (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_currentToolCall, \"f\"));\n                (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _AssistantStream_currentToolCall, undefined, \"f\");\n            }\n            break;\n        case \"thread.run.cancelling\":\n            break;\n    }\n};\nfunction assertNever(_x) {} //# sourceMappingURL=AssistantStream.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/lib/AssistantStream.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/lib/ChatCompletionRunner.mjs":
/*!**************************************************************!*\
  !*** ../../node_modules/openai/lib/ChatCompletionRunner.mjs ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChatCompletionRunner: () => (/* binding */ ChatCompletionRunner)\n/* harmony export */ });\n/* harmony import */ var _AbstractChatCompletionRunner_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AbstractChatCompletionRunner.mjs */ \"(middleware)/../../node_modules/openai/lib/AbstractChatCompletionRunner.mjs\");\n/* harmony import */ var _chatCompletionUtils_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chatCompletionUtils.mjs */ \"(middleware)/../../node_modules/openai/lib/chatCompletionUtils.mjs\");\n\n\nclass ChatCompletionRunner extends _AbstractChatCompletionRunner_mjs__WEBPACK_IMPORTED_MODULE_0__.AbstractChatCompletionRunner {\n    static runTools(client, params, options) {\n        const runner = new ChatCompletionRunner();\n        const opts = {\n            ...options,\n            headers: {\n                ...options?.headers,\n                \"X-Stainless-Helper-Method\": \"runTools\"\n            }\n        };\n        runner._run(()=>runner._runTools(client, params, opts));\n        return runner;\n    }\n    _addMessage(message, emit = true) {\n        super._addMessage(message, emit);\n        if ((0,_chatCompletionUtils_mjs__WEBPACK_IMPORTED_MODULE_1__.isAssistantMessage)(message) && message.content) {\n            this._emit(\"content\", message.content);\n        }\n    }\n} //# sourceMappingURL=ChatCompletionRunner.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvbGliL0NoYXRDb21wbGV0aW9uUnVubmVyLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBbUY7QUFDcEI7QUFDeEQsTUFBTUUsNkJBQTZCRiwyRkFBNEJBO0lBQ2xFLE9BQU9HLFNBQVNDLE1BQU0sRUFBRUMsTUFBTSxFQUFFQyxPQUFPLEVBQUU7UUFDckMsTUFBTUMsU0FBUyxJQUFJTDtRQUNuQixNQUFNTSxPQUFPO1lBQ1QsR0FBR0YsT0FBTztZQUNWRyxTQUFTO2dCQUFFLEdBQUdILFNBQVNHLE9BQU87Z0JBQUUsNkJBQTZCO1lBQVc7UUFDNUU7UUFDQUYsT0FBT0csSUFBSSxDQUFDLElBQU1ILE9BQU9JLFNBQVMsQ0FBQ1AsUUFBUUMsUUFBUUc7UUFDbkQsT0FBT0Q7SUFDWDtJQUNBSyxZQUFZQyxPQUFPLEVBQUVDLE9BQU8sSUFBSSxFQUFFO1FBQzlCLEtBQUssQ0FBQ0YsWUFBWUMsU0FBU0M7UUFDM0IsSUFBSWIsNEVBQWtCQSxDQUFDWSxZQUFZQSxRQUFRRSxPQUFPLEVBQUU7WUFDaEQsSUFBSSxDQUFDQyxLQUFLLENBQUMsV0FBV0gsUUFBUUUsT0FBTztRQUN6QztJQUNKO0FBQ0osRUFDQSxpREFBaUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvbGliL0NoYXRDb21wbGV0aW9uUnVubmVyLm1qcz9jNjlmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFic3RyYWN0Q2hhdENvbXBsZXRpb25SdW5uZXIsIH0gZnJvbSBcIi4vQWJzdHJhY3RDaGF0Q29tcGxldGlvblJ1bm5lci5tanNcIjtcbmltcG9ydCB7IGlzQXNzaXN0YW50TWVzc2FnZSB9IGZyb20gXCIuL2NoYXRDb21wbGV0aW9uVXRpbHMubWpzXCI7XG5leHBvcnQgY2xhc3MgQ2hhdENvbXBsZXRpb25SdW5uZXIgZXh0ZW5kcyBBYnN0cmFjdENoYXRDb21wbGV0aW9uUnVubmVyIHtcbiAgICBzdGF0aWMgcnVuVG9vbHMoY2xpZW50LCBwYXJhbXMsIG9wdGlvbnMpIHtcbiAgICAgICAgY29uc3QgcnVubmVyID0gbmV3IENoYXRDb21wbGV0aW9uUnVubmVyKCk7XG4gICAgICAgIGNvbnN0IG9wdHMgPSB7XG4gICAgICAgICAgICAuLi5vcHRpb25zLFxuICAgICAgICAgICAgaGVhZGVyczogeyAuLi5vcHRpb25zPy5oZWFkZXJzLCAnWC1TdGFpbmxlc3MtSGVscGVyLU1ldGhvZCc6ICdydW5Ub29scycgfSxcbiAgICAgICAgfTtcbiAgICAgICAgcnVubmVyLl9ydW4oKCkgPT4gcnVubmVyLl9ydW5Ub29scyhjbGllbnQsIHBhcmFtcywgb3B0cykpO1xuICAgICAgICByZXR1cm4gcnVubmVyO1xuICAgIH1cbiAgICBfYWRkTWVzc2FnZShtZXNzYWdlLCBlbWl0ID0gdHJ1ZSkge1xuICAgICAgICBzdXBlci5fYWRkTWVzc2FnZShtZXNzYWdlLCBlbWl0KTtcbiAgICAgICAgaWYgKGlzQXNzaXN0YW50TWVzc2FnZShtZXNzYWdlKSAmJiBtZXNzYWdlLmNvbnRlbnQpIHtcbiAgICAgICAgICAgIHRoaXMuX2VtaXQoJ2NvbnRlbnQnLCBtZXNzYWdlLmNvbnRlbnQpO1xuICAgICAgICB9XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Q2hhdENvbXBsZXRpb25SdW5uZXIubWpzLm1hcCJdLCJuYW1lcyI6WyJBYnN0cmFjdENoYXRDb21wbGV0aW9uUnVubmVyIiwiaXNBc3Npc3RhbnRNZXNzYWdlIiwiQ2hhdENvbXBsZXRpb25SdW5uZXIiLCJydW5Ub29scyIsImNsaWVudCIsInBhcmFtcyIsIm9wdGlvbnMiLCJydW5uZXIiLCJvcHRzIiwiaGVhZGVycyIsIl9ydW4iLCJfcnVuVG9vbHMiLCJfYWRkTWVzc2FnZSIsIm1lc3NhZ2UiLCJlbWl0IiwiY29udGVudCIsIl9lbWl0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/lib/ChatCompletionRunner.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/lib/ChatCompletionStream.mjs":
/*!**************************************************************!*\
  !*** ../../node_modules/openai/lib/ChatCompletionStream.mjs ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChatCompletionStream: () => (/* binding */ ChatCompletionStream)\n/* harmony export */ });\n/* harmony import */ var _internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../internal/tslib.mjs */ \"(middleware)/../../node_modules/openai/internal/tslib.mjs\");\n/* harmony import */ var _error_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error.mjs */ \"(middleware)/../../node_modules/openai/error.mjs\");\n/* harmony import */ var _AbstractChatCompletionRunner_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./AbstractChatCompletionRunner.mjs */ \"(middleware)/../../node_modules/openai/lib/AbstractChatCompletionRunner.mjs\");\n/* harmony import */ var _streaming_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../streaming.mjs */ \"(middleware)/../../node_modules/openai/streaming.mjs\");\n/* harmony import */ var _lib_parser_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../lib/parser.mjs */ \"(middleware)/../../node_modules/openai/lib/parser.mjs\");\n/* harmony import */ var _vendor_partial_json_parser_parser_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../_vendor/partial-json-parser/parser.mjs */ \"(middleware)/../../node_modules/openai/_vendor/partial-json-parser/parser.mjs\");\nvar _ChatCompletionStream_instances, _ChatCompletionStream_params, _ChatCompletionStream_choiceEventStates, _ChatCompletionStream_currentChatCompletionSnapshot, _ChatCompletionStream_beginRequest, _ChatCompletionStream_getChoiceEventState, _ChatCompletionStream_addChunk, _ChatCompletionStream_emitToolCallDoneEvent, _ChatCompletionStream_emitContentDoneEvents, _ChatCompletionStream_endRequest, _ChatCompletionStream_getAutoParseableResponseFormat, _ChatCompletionStream_accumulateChatCompletion;\n\n\n\n\n\n\nclass ChatCompletionStream extends _AbstractChatCompletionRunner_mjs__WEBPACK_IMPORTED_MODULE_2__.AbstractChatCompletionRunner {\n    constructor(params){\n        super();\n        _ChatCompletionStream_instances.add(this);\n        _ChatCompletionStream_params.set(this, void 0);\n        _ChatCompletionStream_choiceEventStates.set(this, void 0);\n        _ChatCompletionStream_currentChatCompletionSnapshot.set(this, void 0);\n        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _ChatCompletionStream_params, params, \"f\");\n        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _ChatCompletionStream_choiceEventStates, [], \"f\");\n    }\n    get currentChatCompletionSnapshot() {\n        return (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_currentChatCompletionSnapshot, \"f\");\n    }\n    /**\n     * Intended for use on the frontend, consuming a stream produced with\n     * `.toReadableStream()` on the backend.\n     *\n     * Note that messages sent to the model do not appear in `.on('message')`\n     * in this context.\n     */ static fromReadableStream(stream) {\n        const runner = new ChatCompletionStream(null);\n        runner._run(()=>runner._fromReadableStream(stream));\n        return runner;\n    }\n    static createChatCompletion(client, params, options) {\n        const runner = new ChatCompletionStream(params);\n        runner._run(()=>runner._runChatCompletion(client, {\n                ...params,\n                stream: true\n            }, {\n                ...options,\n                headers: {\n                    ...options?.headers,\n                    \"X-Stainless-Helper-Method\": \"stream\"\n                }\n            }));\n        return runner;\n    }\n    async _createChatCompletion(client, params, options) {\n        super._createChatCompletion;\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted) this.controller.abort();\n            signal.addEventListener(\"abort\", ()=>this.controller.abort());\n        }\n        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_beginRequest).call(this);\n        const stream = await client.chat.completions.create({\n            ...params,\n            stream: true\n        }, {\n            ...options,\n            signal: this.controller.signal\n        });\n        this._connected();\n        for await (const chunk of stream){\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_addChunk).call(this, chunk);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.APIUserAbortError();\n        }\n        return this._addChatCompletion((0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_endRequest).call(this));\n    }\n    async _fromReadableStream(readableStream, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted) this.controller.abort();\n            signal.addEventListener(\"abort\", ()=>this.controller.abort());\n        }\n        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_beginRequest).call(this);\n        this._connected();\n        const stream = _streaming_mjs__WEBPACK_IMPORTED_MODULE_3__.Stream.fromReadableStream(readableStream, this.controller);\n        let chatId;\n        for await (const chunk of stream){\n            if (chatId && chatId !== chunk.id) {\n                // A new request has been made.\n                this._addChatCompletion((0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_endRequest).call(this));\n            }\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_addChunk).call(this, chunk);\n            chatId = chunk.id;\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.APIUserAbortError();\n        }\n        return this._addChatCompletion((0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_endRequest).call(this));\n    }\n    [(_ChatCompletionStream_params = new WeakMap(), _ChatCompletionStream_choiceEventStates = new WeakMap(), _ChatCompletionStream_currentChatCompletionSnapshot = new WeakMap(), _ChatCompletionStream_instances = new WeakSet(), _ChatCompletionStream_beginRequest = function _ChatCompletionStream_beginRequest() {\n        if (this.ended) return;\n        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _ChatCompletionStream_currentChatCompletionSnapshot, undefined, \"f\");\n    }, _ChatCompletionStream_getChoiceEventState = function _ChatCompletionStream_getChoiceEventState(choice) {\n        let state = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_choiceEventStates, \"f\")[choice.index];\n        if (state) {\n            return state;\n        }\n        state = {\n            content_done: false,\n            refusal_done: false,\n            logprobs_content_done: false,\n            logprobs_refusal_done: false,\n            done_tool_calls: new Set(),\n            current_tool_call_index: null\n        };\n        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_choiceEventStates, \"f\")[choice.index] = state;\n        return state;\n    }, _ChatCompletionStream_addChunk = function _ChatCompletionStream_addChunk(chunk) {\n        if (this.ended) return;\n        const completion = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_accumulateChatCompletion).call(this, chunk);\n        this._emit(\"chunk\", chunk, completion);\n        for (const choice of chunk.choices){\n            const choiceSnapshot = completion.choices[choice.index];\n            if (choice.delta.content != null && choiceSnapshot.message?.role === \"assistant\" && choiceSnapshot.message?.content) {\n                this._emit(\"content\", choice.delta.content, choiceSnapshot.message.content);\n                this._emit(\"content.delta\", {\n                    delta: choice.delta.content,\n                    snapshot: choiceSnapshot.message.content,\n                    parsed: choiceSnapshot.message.parsed\n                });\n            }\n            if (choice.delta.refusal != null && choiceSnapshot.message?.role === \"assistant\" && choiceSnapshot.message?.refusal) {\n                this._emit(\"refusal.delta\", {\n                    delta: choice.delta.refusal,\n                    snapshot: choiceSnapshot.message.refusal\n                });\n            }\n            if (choice.logprobs?.content != null && choiceSnapshot.message?.role === \"assistant\") {\n                this._emit(\"logprobs.content.delta\", {\n                    content: choice.logprobs?.content,\n                    snapshot: choiceSnapshot.logprobs?.content ?? []\n                });\n            }\n            if (choice.logprobs?.refusal != null && choiceSnapshot.message?.role === \"assistant\") {\n                this._emit(\"logprobs.refusal.delta\", {\n                    refusal: choice.logprobs?.refusal,\n                    snapshot: choiceSnapshot.logprobs?.refusal ?? []\n                });\n            }\n            const state = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_getChoiceEventState).call(this, choiceSnapshot);\n            if (choiceSnapshot.finish_reason) {\n                (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_emitContentDoneEvents).call(this, choiceSnapshot);\n                if (state.current_tool_call_index != null) {\n                    (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_emitToolCallDoneEvent).call(this, choiceSnapshot, state.current_tool_call_index);\n                }\n            }\n            for (const toolCall of choice.delta.tool_calls ?? []){\n                if (state.current_tool_call_index !== toolCall.index) {\n                    (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_emitContentDoneEvents).call(this, choiceSnapshot);\n                    // new tool call started, the previous one is done\n                    if (state.current_tool_call_index != null) {\n                        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_emitToolCallDoneEvent).call(this, choiceSnapshot, state.current_tool_call_index);\n                    }\n                }\n                state.current_tool_call_index = toolCall.index;\n            }\n            for (const toolCallDelta of choice.delta.tool_calls ?? []){\n                const toolCallSnapshot = choiceSnapshot.message.tool_calls?.[toolCallDelta.index];\n                if (!toolCallSnapshot?.type) {\n                    continue;\n                }\n                if (toolCallSnapshot?.type === \"function\") {\n                    this._emit(\"tool_calls.function.arguments.delta\", {\n                        name: toolCallSnapshot.function?.name,\n                        index: toolCallDelta.index,\n                        arguments: toolCallSnapshot.function.arguments,\n                        parsed_arguments: toolCallSnapshot.function.parsed_arguments,\n                        arguments_delta: toolCallDelta.function?.arguments ?? \"\"\n                    });\n                } else {\n                    assertNever(toolCallSnapshot?.type);\n                }\n            }\n        }\n    }, _ChatCompletionStream_emitToolCallDoneEvent = function _ChatCompletionStream_emitToolCallDoneEvent(choiceSnapshot, toolCallIndex) {\n        const state = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_getChoiceEventState).call(this, choiceSnapshot);\n        if (state.done_tool_calls.has(toolCallIndex)) {\n            // we've already fired the done event\n            return;\n        }\n        const toolCallSnapshot = choiceSnapshot.message.tool_calls?.[toolCallIndex];\n        if (!toolCallSnapshot) {\n            throw new Error(\"no tool call snapshot\");\n        }\n        if (!toolCallSnapshot.type) {\n            throw new Error(\"tool call snapshot missing `type`\");\n        }\n        if (toolCallSnapshot.type === \"function\") {\n            const inputTool = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_params, \"f\")?.tools?.find((tool)=>tool.type === \"function\" && tool.function.name === toolCallSnapshot.function.name);\n            this._emit(\"tool_calls.function.arguments.done\", {\n                name: toolCallSnapshot.function.name,\n                index: toolCallIndex,\n                arguments: toolCallSnapshot.function.arguments,\n                parsed_arguments: (0,_lib_parser_mjs__WEBPACK_IMPORTED_MODULE_4__.isAutoParsableTool)(inputTool) ? inputTool.$parseRaw(toolCallSnapshot.function.arguments) : inputTool?.function.strict ? JSON.parse(toolCallSnapshot.function.arguments) : null\n            });\n        } else {\n            assertNever(toolCallSnapshot.type);\n        }\n    }, _ChatCompletionStream_emitContentDoneEvents = function _ChatCompletionStream_emitContentDoneEvents(choiceSnapshot) {\n        const state = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_getChoiceEventState).call(this, choiceSnapshot);\n        if (choiceSnapshot.message.content && !state.content_done) {\n            state.content_done = true;\n            const responseFormat = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_getAutoParseableResponseFormat).call(this);\n            this._emit(\"content.done\", {\n                content: choiceSnapshot.message.content,\n                parsed: responseFormat ? responseFormat.$parseRaw(choiceSnapshot.message.content) : null\n            });\n        }\n        if (choiceSnapshot.message.refusal && !state.refusal_done) {\n            state.refusal_done = true;\n            this._emit(\"refusal.done\", {\n                refusal: choiceSnapshot.message.refusal\n            });\n        }\n        if (choiceSnapshot.logprobs?.content && !state.logprobs_content_done) {\n            state.logprobs_content_done = true;\n            this._emit(\"logprobs.content.done\", {\n                content: choiceSnapshot.logprobs.content\n            });\n        }\n        if (choiceSnapshot.logprobs?.refusal && !state.logprobs_refusal_done) {\n            state.logprobs_refusal_done = true;\n            this._emit(\"logprobs.refusal.done\", {\n                refusal: choiceSnapshot.logprobs.refusal\n            });\n        }\n    }, _ChatCompletionStream_endRequest = function _ChatCompletionStream_endRequest() {\n        if (this.ended) {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(`stream has ended, this shouldn't happen`);\n        }\n        const snapshot = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_currentChatCompletionSnapshot, \"f\");\n        if (!snapshot) {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(`request ended without sending any chunks`);\n        }\n        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _ChatCompletionStream_currentChatCompletionSnapshot, undefined, \"f\");\n        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _ChatCompletionStream_choiceEventStates, [], \"f\");\n        return finalizeChatCompletion(snapshot, (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_params, \"f\"));\n    }, _ChatCompletionStream_getAutoParseableResponseFormat = function _ChatCompletionStream_getAutoParseableResponseFormat() {\n        const responseFormat = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_params, \"f\")?.response_format;\n        if ((0,_lib_parser_mjs__WEBPACK_IMPORTED_MODULE_4__.isAutoParsableResponseFormat)(responseFormat)) {\n            return responseFormat;\n        }\n        return null;\n    }, _ChatCompletionStream_accumulateChatCompletion = function _ChatCompletionStream_accumulateChatCompletion(chunk) {\n        var _a, _b, _c, _d;\n        let snapshot = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_currentChatCompletionSnapshot, \"f\");\n        const { choices, ...rest } = chunk;\n        if (!snapshot) {\n            snapshot = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _ChatCompletionStream_currentChatCompletionSnapshot, {\n                ...rest,\n                choices: []\n            }, \"f\");\n        } else {\n            Object.assign(snapshot, rest);\n        }\n        for (const { delta, finish_reason, index, logprobs = null, ...other } of chunk.choices){\n            let choice = snapshot.choices[index];\n            if (!choice) {\n                choice = snapshot.choices[index] = {\n                    finish_reason,\n                    index,\n                    message: {},\n                    logprobs,\n                    ...other\n                };\n            }\n            if (logprobs) {\n                if (!choice.logprobs) {\n                    choice.logprobs = Object.assign({}, logprobs);\n                } else {\n                    const { content, refusal, ...rest } = logprobs;\n                    assertIsEmpty(rest);\n                    Object.assign(choice.logprobs, rest);\n                    if (content) {\n                        (_a = choice.logprobs).content ?? (_a.content = []);\n                        choice.logprobs.content.push(...content);\n                    }\n                    if (refusal) {\n                        (_b = choice.logprobs).refusal ?? (_b.refusal = []);\n                        choice.logprobs.refusal.push(...refusal);\n                    }\n                }\n            }\n            if (finish_reason) {\n                choice.finish_reason = finish_reason;\n                if ((0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_params, \"f\") && (0,_lib_parser_mjs__WEBPACK_IMPORTED_MODULE_4__.hasAutoParseableInput)((0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_params, \"f\"))) {\n                    if (finish_reason === \"length\") {\n                        throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.LengthFinishReasonError();\n                    }\n                    if (finish_reason === \"content_filter\") {\n                        throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.ContentFilterFinishReasonError();\n                    }\n                }\n            }\n            Object.assign(choice, other);\n            if (!delta) continue; // Shouldn't happen; just in case.\n            const { content, refusal, function_call, role, tool_calls, ...rest } = delta;\n            assertIsEmpty(rest);\n            Object.assign(choice.message, rest);\n            if (refusal) {\n                choice.message.refusal = (choice.message.refusal || \"\") + refusal;\n            }\n            if (role) choice.message.role = role;\n            if (function_call) {\n                if (!choice.message.function_call) {\n                    choice.message.function_call = function_call;\n                } else {\n                    if (function_call.name) choice.message.function_call.name = function_call.name;\n                    if (function_call.arguments) {\n                        (_c = choice.message.function_call).arguments ?? (_c.arguments = \"\");\n                        choice.message.function_call.arguments += function_call.arguments;\n                    }\n                }\n            }\n            if (content) {\n                choice.message.content = (choice.message.content || \"\") + content;\n                if (!choice.message.refusal && (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_getAutoParseableResponseFormat).call(this)) {\n                    choice.message.parsed = (0,_vendor_partial_json_parser_parser_mjs__WEBPACK_IMPORTED_MODULE_5__.partialParse)(choice.message.content);\n                }\n            }\n            if (tool_calls) {\n                if (!choice.message.tool_calls) choice.message.tool_calls = [];\n                for (const { index, id, type, function: fn, ...rest } of tool_calls){\n                    const tool_call = (_d = choice.message.tool_calls)[index] ?? (_d[index] = {});\n                    Object.assign(tool_call, rest);\n                    if (id) tool_call.id = id;\n                    if (type) tool_call.type = type;\n                    if (fn) tool_call.function ?? (tool_call.function = {\n                        name: fn.name ?? \"\",\n                        arguments: \"\"\n                    });\n                    if (fn?.name) tool_call.function.name = fn.name;\n                    if (fn?.arguments) {\n                        tool_call.function.arguments += fn.arguments;\n                        if ((0,_lib_parser_mjs__WEBPACK_IMPORTED_MODULE_4__.shouldParseToolCall)((0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_params, \"f\"), tool_call)) {\n                            tool_call.function.parsed_arguments = (0,_vendor_partial_json_parser_parser_mjs__WEBPACK_IMPORTED_MODULE_5__.partialParse)(tool_call.function.arguments);\n                        }\n                    }\n                }\n            }\n        }\n        return snapshot;\n    }, Symbol.asyncIterator)]() {\n        const pushQueue = [];\n        const readQueue = [];\n        let done = false;\n        this.on(\"chunk\", (chunk)=>{\n            const reader = readQueue.shift();\n            if (reader) {\n                reader.resolve(chunk);\n            } else {\n                pushQueue.push(chunk);\n            }\n        });\n        this.on(\"end\", ()=>{\n            done = true;\n            for (const reader of readQueue){\n                reader.resolve(undefined);\n            }\n            readQueue.length = 0;\n        });\n        this.on(\"abort\", (err)=>{\n            done = true;\n            for (const reader of readQueue){\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        this.on(\"error\", (err)=>{\n            done = true;\n            for (const reader of readQueue){\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        return {\n            next: async ()=>{\n                if (!pushQueue.length) {\n                    if (done) {\n                        return {\n                            value: undefined,\n                            done: true\n                        };\n                    }\n                    return new Promise((resolve, reject)=>readQueue.push({\n                            resolve,\n                            reject\n                        })).then((chunk)=>chunk ? {\n                            value: chunk,\n                            done: false\n                        } : {\n                            value: undefined,\n                            done: true\n                        });\n                }\n                const chunk = pushQueue.shift();\n                return {\n                    value: chunk,\n                    done: false\n                };\n            },\n            return: async ()=>{\n                this.abort();\n                return {\n                    value: undefined,\n                    done: true\n                };\n            }\n        };\n    }\n    toReadableStream() {\n        const stream = new _streaming_mjs__WEBPACK_IMPORTED_MODULE_3__.Stream(this[Symbol.asyncIterator].bind(this), this.controller);\n        return stream.toReadableStream();\n    }\n}\nfunction finalizeChatCompletion(snapshot, params) {\n    const { id, choices, created, model, system_fingerprint, ...rest } = snapshot;\n    const completion = {\n        ...rest,\n        id,\n        choices: choices.map(({ message, finish_reason, index, logprobs, ...choiceRest })=>{\n            if (!finish_reason) {\n                throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(`missing finish_reason for choice ${index}`);\n            }\n            const { content = null, function_call, tool_calls, ...messageRest } = message;\n            const role = message.role; // this is what we expect; in theory it could be different which would make our types a slight lie but would be fine.\n            if (!role) {\n                throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(`missing role for choice ${index}`);\n            }\n            if (function_call) {\n                const { arguments: args, name } = function_call;\n                if (args == null) {\n                    throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(`missing function_call.arguments for choice ${index}`);\n                }\n                if (!name) {\n                    throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(`missing function_call.name for choice ${index}`);\n                }\n                return {\n                    ...choiceRest,\n                    message: {\n                        content,\n                        function_call: {\n                            arguments: args,\n                            name\n                        },\n                        role,\n                        refusal: message.refusal ?? null\n                    },\n                    finish_reason,\n                    index,\n                    logprobs\n                };\n            }\n            if (tool_calls) {\n                return {\n                    ...choiceRest,\n                    index,\n                    finish_reason,\n                    logprobs,\n                    message: {\n                        ...messageRest,\n                        role,\n                        content,\n                        refusal: message.refusal ?? null,\n                        tool_calls: tool_calls.map((tool_call, i)=>{\n                            const { function: fn, type, id, ...toolRest } = tool_call;\n                            const { arguments: args, name, ...fnRest } = fn || {};\n                            if (id == null) {\n                                throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(`missing choices[${index}].tool_calls[${i}].id\\n${str(snapshot)}`);\n                            }\n                            if (type == null) {\n                                throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(`missing choices[${index}].tool_calls[${i}].type\\n${str(snapshot)}`);\n                            }\n                            if (name == null) {\n                                throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(`missing choices[${index}].tool_calls[${i}].function.name\\n${str(snapshot)}`);\n                            }\n                            if (args == null) {\n                                throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(`missing choices[${index}].tool_calls[${i}].function.arguments\\n${str(snapshot)}`);\n                            }\n                            return {\n                                ...toolRest,\n                                id,\n                                type,\n                                function: {\n                                    ...fnRest,\n                                    name,\n                                    arguments: args\n                                }\n                            };\n                        })\n                    }\n                };\n            }\n            return {\n                ...choiceRest,\n                message: {\n                    ...messageRest,\n                    content,\n                    role,\n                    refusal: message.refusal ?? null\n                },\n                finish_reason,\n                index,\n                logprobs\n            };\n        }),\n        created,\n        model,\n        object: \"chat.completion\",\n        ...system_fingerprint ? {\n            system_fingerprint\n        } : {}\n    };\n    return (0,_lib_parser_mjs__WEBPACK_IMPORTED_MODULE_4__.maybeParseChatCompletion)(completion, params);\n}\nfunction str(x) {\n    return JSON.stringify(x);\n}\n/**\n * Ensures the given argument is an empty object, useful for\n * asserting that all known properties on an object have been\n * destructured.\n */ function assertIsEmpty(obj) {\n    return;\n}\nfunction assertNever(_x) {} //# sourceMappingURL=ChatCompletionStream.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/lib/ChatCompletionStream.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/lib/ChatCompletionStreamingRunner.mjs":
/*!***********************************************************************!*\
  !*** ../../node_modules/openai/lib/ChatCompletionStreamingRunner.mjs ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChatCompletionStreamingRunner: () => (/* binding */ ChatCompletionStreamingRunner)\n/* harmony export */ });\n/* harmony import */ var _ChatCompletionStream_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ChatCompletionStream.mjs */ \"(middleware)/../../node_modules/openai/lib/ChatCompletionStream.mjs\");\n\nclass ChatCompletionStreamingRunner extends _ChatCompletionStream_mjs__WEBPACK_IMPORTED_MODULE_0__.ChatCompletionStream {\n    static fromReadableStream(stream) {\n        const runner = new ChatCompletionStreamingRunner(null);\n        runner._run(()=>runner._fromReadableStream(stream));\n        return runner;\n    }\n    static runTools(client, params, options) {\n        const runner = new ChatCompletionStreamingRunner(// @ts-expect-error TODO these types are incompatible\n        params);\n        const opts = {\n            ...options,\n            headers: {\n                ...options?.headers,\n                \"X-Stainless-Helper-Method\": \"runTools\"\n            }\n        };\n        runner._run(()=>runner._runTools(client, params, opts));\n        return runner;\n    }\n} //# sourceMappingURL=ChatCompletionStreamingRunner.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvbGliL0NoYXRDb21wbGV0aW9uU3RyZWFtaW5nUnVubmVyLm1qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFrRTtBQUMzRCxNQUFNQyxzQ0FBc0NELDJFQUFvQkE7SUFDbkUsT0FBT0UsbUJBQW1CQyxNQUFNLEVBQUU7UUFDOUIsTUFBTUMsU0FBUyxJQUFJSCw4QkFBOEI7UUFDakRHLE9BQU9DLElBQUksQ0FBQyxJQUFNRCxPQUFPRSxtQkFBbUIsQ0FBQ0g7UUFDN0MsT0FBT0M7SUFDWDtJQUNBLE9BQU9HLFNBQVNDLE1BQU0sRUFBRUMsTUFBTSxFQUFFQyxPQUFPLEVBQUU7UUFDckMsTUFBTU4sU0FBUyxJQUFJSCw4QkFDbkIscURBQXFEO1FBQ3JEUTtRQUNBLE1BQU1FLE9BQU87WUFDVCxHQUFHRCxPQUFPO1lBQ1ZFLFNBQVM7Z0JBQUUsR0FBR0YsU0FBU0UsT0FBTztnQkFBRSw2QkFBNkI7WUFBVztRQUM1RTtRQUNBUixPQUFPQyxJQUFJLENBQUMsSUFBTUQsT0FBT1MsU0FBUyxDQUFDTCxRQUFRQyxRQUFRRTtRQUNuRCxPQUFPUDtJQUNYO0FBQ0osRUFDQSwwREFBMEQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvbGliL0NoYXRDb21wbGV0aW9uU3RyZWFtaW5nUnVubmVyLm1qcz80YTVjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYXRDb21wbGV0aW9uU3RyZWFtIH0gZnJvbSBcIi4vQ2hhdENvbXBsZXRpb25TdHJlYW0ubWpzXCI7XG5leHBvcnQgY2xhc3MgQ2hhdENvbXBsZXRpb25TdHJlYW1pbmdSdW5uZXIgZXh0ZW5kcyBDaGF0Q29tcGxldGlvblN0cmVhbSB7XG4gICAgc3RhdGljIGZyb21SZWFkYWJsZVN0cmVhbShzdHJlYW0pIHtcbiAgICAgICAgY29uc3QgcnVubmVyID0gbmV3IENoYXRDb21wbGV0aW9uU3RyZWFtaW5nUnVubmVyKG51bGwpO1xuICAgICAgICBydW5uZXIuX3J1bigoKSA9PiBydW5uZXIuX2Zyb21SZWFkYWJsZVN0cmVhbShzdHJlYW0pKTtcbiAgICAgICAgcmV0dXJuIHJ1bm5lcjtcbiAgICB9XG4gICAgc3RhdGljIHJ1blRvb2xzKGNsaWVudCwgcGFyYW1zLCBvcHRpb25zKSB7XG4gICAgICAgIGNvbnN0IHJ1bm5lciA9IG5ldyBDaGF0Q29tcGxldGlvblN0cmVhbWluZ1J1bm5lcihcbiAgICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvciBUT0RPIHRoZXNlIHR5cGVzIGFyZSBpbmNvbXBhdGlibGVcbiAgICAgICAgcGFyYW1zKTtcbiAgICAgICAgY29uc3Qgb3B0cyA9IHtcbiAgICAgICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgICAgICBoZWFkZXJzOiB7IC4uLm9wdGlvbnM/LmhlYWRlcnMsICdYLVN0YWlubGVzcy1IZWxwZXItTWV0aG9kJzogJ3J1blRvb2xzJyB9LFxuICAgICAgICB9O1xuICAgICAgICBydW5uZXIuX3J1bigoKSA9PiBydW5uZXIuX3J1blRvb2xzKGNsaWVudCwgcGFyYW1zLCBvcHRzKSk7XG4gICAgICAgIHJldHVybiBydW5uZXI7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Q2hhdENvbXBsZXRpb25TdHJlYW1pbmdSdW5uZXIubWpzLm1hcCJdLCJuYW1lcyI6WyJDaGF0Q29tcGxldGlvblN0cmVhbSIsIkNoYXRDb21wbGV0aW9uU3RyZWFtaW5nUnVubmVyIiwiZnJvbVJlYWRhYmxlU3RyZWFtIiwic3RyZWFtIiwicnVubmVyIiwiX3J1biIsIl9mcm9tUmVhZGFibGVTdHJlYW0iLCJydW5Ub29scyIsImNsaWVudCIsInBhcmFtcyIsIm9wdGlvbnMiLCJvcHRzIiwiaGVhZGVycyIsIl9ydW5Ub29scyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/lib/ChatCompletionStreamingRunner.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/lib/EventStream.mjs":
/*!*****************************************************!*\
  !*** ../../node_modules/openai/lib/EventStream.mjs ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EventStream: () => (/* binding */ EventStream)\n/* harmony export */ });\n/* harmony import */ var _internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../internal/tslib.mjs */ \"(middleware)/../../node_modules/openai/internal/tslib.mjs\");\n/* harmony import */ var _error_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error.mjs */ \"(middleware)/../../node_modules/openai/error.mjs\");\nvar _EventStream_instances, _EventStream_connectedPromise, _EventStream_resolveConnectedPromise, _EventStream_rejectConnectedPromise, _EventStream_endPromise, _EventStream_resolveEndPromise, _EventStream_rejectEndPromise, _EventStream_listeners, _EventStream_ended, _EventStream_errored, _EventStream_aborted, _EventStream_catchingPromiseCreated, _EventStream_handleError;\n\n\nclass EventStream {\n    constructor(){\n        _EventStream_instances.add(this);\n        this.controller = new AbortController();\n        _EventStream_connectedPromise.set(this, void 0);\n        _EventStream_resolveConnectedPromise.set(this, ()=>{});\n        _EventStream_rejectConnectedPromise.set(this, ()=>{});\n        _EventStream_endPromise.set(this, void 0);\n        _EventStream_resolveEndPromise.set(this, ()=>{});\n        _EventStream_rejectEndPromise.set(this, ()=>{});\n        _EventStream_listeners.set(this, {});\n        _EventStream_ended.set(this, false);\n        _EventStream_errored.set(this, false);\n        _EventStream_aborted.set(this, false);\n        _EventStream_catchingPromiseCreated.set(this, false);\n        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _EventStream_connectedPromise, new Promise((resolve, reject)=>{\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _EventStream_resolveConnectedPromise, resolve, \"f\");\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _EventStream_rejectConnectedPromise, reject, \"f\");\n        }), \"f\");\n        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _EventStream_endPromise, new Promise((resolve, reject)=>{\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _EventStream_resolveEndPromise, resolve, \"f\");\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _EventStream_rejectEndPromise, reject, \"f\");\n        }), \"f\");\n        // Don't let these promises cause unhandled rejection errors.\n        // we will manually cause an unhandled rejection error later\n        // if the user hasn't registered any error listener or called\n        // any promise-returning method.\n        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _EventStream_connectedPromise, \"f\").catch(()=>{});\n        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _EventStream_endPromise, \"f\").catch(()=>{});\n    }\n    _run(executor) {\n        // Unfortunately if we call `executor()` immediately we get runtime errors about\n        // references to `this` before the `super()` constructor call returns.\n        setTimeout(()=>{\n            executor().then(()=>{\n                this._emitFinal();\n                this._emit(\"end\");\n            }, (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _EventStream_instances, \"m\", _EventStream_handleError).bind(this));\n        }, 0);\n    }\n    _connected() {\n        if (this.ended) return;\n        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _EventStream_resolveConnectedPromise, \"f\").call(this);\n        this._emit(\"connect\");\n    }\n    get ended() {\n        return (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _EventStream_ended, \"f\");\n    }\n    get errored() {\n        return (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _EventStream_errored, \"f\");\n    }\n    get aborted() {\n        return (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _EventStream_aborted, \"f\");\n    }\n    abort() {\n        this.controller.abort();\n    }\n    /**\n     * Adds the listener function to the end of the listeners array for the event.\n     * No checks are made to see if the listener has already been added. Multiple calls passing\n     * the same combination of event and listener will result in the listener being added, and\n     * called, multiple times.\n     * @returns this ChatCompletionStream, so that calls can be chained\n     */ on(event, listener) {\n        const listeners = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _EventStream_listeners, \"f\")[event] || ((0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _EventStream_listeners, \"f\")[event] = []);\n        listeners.push({\n            listener\n        });\n        return this;\n    }\n    /**\n     * Removes the specified listener from the listener array for the event.\n     * off() will remove, at most, one instance of a listener from the listener array. If any single\n     * listener has been added multiple times to the listener array for the specified event, then\n     * off() must be called multiple times to remove each instance.\n     * @returns this ChatCompletionStream, so that calls can be chained\n     */ off(event, listener) {\n        const listeners = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _EventStream_listeners, \"f\")[event];\n        if (!listeners) return this;\n        const index = listeners.findIndex((l)=>l.listener === listener);\n        if (index >= 0) listeners.splice(index, 1);\n        return this;\n    }\n    /**\n     * Adds a one-time listener function for the event. The next time the event is triggered,\n     * this listener is removed and then invoked.\n     * @returns this ChatCompletionStream, so that calls can be chained\n     */ once(event, listener) {\n        const listeners = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _EventStream_listeners, \"f\")[event] || ((0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _EventStream_listeners, \"f\")[event] = []);\n        listeners.push({\n            listener,\n            once: true\n        });\n        return this;\n    }\n    /**\n     * This is similar to `.once()`, but returns a Promise that resolves the next time\n     * the event is triggered, instead of calling a listener callback.\n     * @returns a Promise that resolves the next time given event is triggered,\n     * or rejects if an error is emitted.  (If you request the 'error' event,\n     * returns a promise that resolves with the error).\n     *\n     * Example:\n     *\n     *   const message = await stream.emitted('message') // rejects if the stream errors\n     */ emitted(event) {\n        return new Promise((resolve, reject)=>{\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _EventStream_catchingPromiseCreated, true, \"f\");\n            if (event !== \"error\") this.once(\"error\", reject);\n            this.once(event, resolve);\n        });\n    }\n    async done() {\n        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _EventStream_catchingPromiseCreated, true, \"f\");\n        await (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _EventStream_endPromise, \"f\");\n    }\n    _emit(event, ...args) {\n        // make sure we don't emit any events after end\n        if ((0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _EventStream_ended, \"f\")) {\n            return;\n        }\n        if (event === \"end\") {\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _EventStream_ended, true, \"f\");\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _EventStream_resolveEndPromise, \"f\").call(this);\n        }\n        const listeners = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _EventStream_listeners, \"f\")[event];\n        if (listeners) {\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _EventStream_listeners, \"f\")[event] = listeners.filter((l)=>!l.once);\n            listeners.forEach(({ listener })=>listener(...args));\n        }\n        if (event === \"abort\") {\n            const error = args[0];\n            if (!(0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _EventStream_catchingPromiseCreated, \"f\") && !listeners?.length) {\n                Promise.reject(error);\n            }\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _EventStream_rejectConnectedPromise, \"f\").call(this, error);\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _EventStream_rejectEndPromise, \"f\").call(this, error);\n            this._emit(\"end\");\n            return;\n        }\n        if (event === \"error\") {\n            // NOTE: _emit('error', error) should only be called from #handleError().\n            const error = args[0];\n            if (!(0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _EventStream_catchingPromiseCreated, \"f\") && !listeners?.length) {\n                // Trigger an unhandled rejection if the user hasn't registered any error handlers.\n                // If you are seeing stack traces here, make sure to handle errors via either:\n                // - runner.on('error', () => ...)\n                // - await runner.done()\n                // - await runner.finalChatCompletion()\n                // - etc.\n                Promise.reject(error);\n            }\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _EventStream_rejectConnectedPromise, \"f\").call(this, error);\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _EventStream_rejectEndPromise, \"f\").call(this, error);\n            this._emit(\"end\");\n        }\n    }\n    _emitFinal() {}\n}\n_EventStream_connectedPromise = new WeakMap(), _EventStream_resolveConnectedPromise = new WeakMap(), _EventStream_rejectConnectedPromise = new WeakMap(), _EventStream_endPromise = new WeakMap(), _EventStream_resolveEndPromise = new WeakMap(), _EventStream_rejectEndPromise = new WeakMap(), _EventStream_listeners = new WeakMap(), _EventStream_ended = new WeakMap(), _EventStream_errored = new WeakMap(), _EventStream_aborted = new WeakMap(), _EventStream_catchingPromiseCreated = new WeakMap(), _EventStream_instances = new WeakSet(), _EventStream_handleError = function _EventStream_handleError(error) {\n    (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _EventStream_errored, true, \"f\");\n    if (error instanceof Error && error.name === \"AbortError\") {\n        error = new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.APIUserAbortError();\n    }\n    if (error instanceof _error_mjs__WEBPACK_IMPORTED_MODULE_1__.APIUserAbortError) {\n        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _EventStream_aborted, true, \"f\");\n        return this._emit(\"abort\", error);\n    }\n    if (error instanceof _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError) {\n        return this._emit(\"error\", error);\n    }\n    if (error instanceof Error) {\n        const openAIError = new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(error.message);\n        // @ts-ignore\n        openAIError.cause = error;\n        return this._emit(\"error\", openAIError);\n    }\n    return this._emit(\"error\", new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(String(error)));\n}; //# sourceMappingURL=EventStream.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/lib/EventStream.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/lib/ResponsesParser.mjs":
/*!*********************************************************!*\
  !*** ../../node_modules/openai/lib/ResponsesParser.mjs ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addOutputText: () => (/* binding */ addOutputText),\n/* harmony export */   hasAutoParseableInput: () => (/* binding */ hasAutoParseableInput),\n/* harmony export */   isAutoParsableTool: () => (/* binding */ isAutoParsableTool),\n/* harmony export */   makeParseableResponseTool: () => (/* binding */ makeParseableResponseTool),\n/* harmony export */   maybeParseResponse: () => (/* binding */ maybeParseResponse),\n/* harmony export */   parseResponse: () => (/* binding */ parseResponse),\n/* harmony export */   shouldParseToolCall: () => (/* binding */ shouldParseToolCall),\n/* harmony export */   validateInputTools: () => (/* binding */ validateInputTools)\n/* harmony export */ });\n/* harmony import */ var _error_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../error.mjs */ \"(middleware)/../../node_modules/openai/error.mjs\");\n/* harmony import */ var _lib_parser_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lib/parser.mjs */ \"(middleware)/../../node_modules/openai/lib/parser.mjs\");\n\n\nfunction maybeParseResponse(response, params) {\n    if (!params || !hasAutoParseableInput(params)) {\n        return {\n            ...response,\n            output_parsed: null,\n            output: response.output.map((item)=>{\n                if (item.type === \"function_call\") {\n                    return {\n                        ...item,\n                        parsed_arguments: null\n                    };\n                }\n                if (item.type === \"message\") {\n                    return {\n                        ...item,\n                        content: item.content.map((content)=>({\n                                ...content,\n                                parsed: null\n                            }))\n                    };\n                } else {\n                    return item;\n                }\n            })\n        };\n    }\n    return parseResponse(response, params);\n}\nfunction parseResponse(response, params) {\n    const output = response.output.map((item)=>{\n        if (item.type === \"function_call\") {\n            return {\n                ...item,\n                parsed_arguments: parseToolCall(params, item)\n            };\n        }\n        if (item.type === \"message\") {\n            const content = item.content.map((content)=>{\n                if (content.type === \"output_text\") {\n                    return {\n                        ...content,\n                        parsed: parseTextFormat(params, content.text)\n                    };\n                }\n                return content;\n            });\n            return {\n                ...item,\n                content\n            };\n        }\n        return item;\n    });\n    const parsed = Object.assign({}, response, {\n        output\n    });\n    if (!Object.getOwnPropertyDescriptor(response, \"output_text\")) {\n        addOutputText(parsed);\n    }\n    Object.defineProperty(parsed, \"output_parsed\", {\n        enumerable: true,\n        get () {\n            for (const output of parsed.output){\n                if (output.type !== \"message\") {\n                    continue;\n                }\n                for (const content of output.content){\n                    if (content.type === \"output_text\" && content.parsed !== null) {\n                        return content.parsed;\n                    }\n                }\n            }\n            return null;\n        }\n    });\n    return parsed;\n}\nfunction parseTextFormat(params, content) {\n    if (params.text?.format?.type !== \"json_schema\") {\n        return null;\n    }\n    if (\"$parseRaw\" in params.text?.format) {\n        const text_format = params.text?.format;\n        return text_format.$parseRaw(content);\n    }\n    return JSON.parse(content);\n}\nfunction hasAutoParseableInput(params) {\n    if ((0,_lib_parser_mjs__WEBPACK_IMPORTED_MODULE_1__.isAutoParsableResponseFormat)(params.text?.format)) {\n        return true;\n    }\n    return false;\n}\nfunction makeParseableResponseTool(tool, { parser, callback }) {\n    const obj = {\n        ...tool\n    };\n    Object.defineProperties(obj, {\n        $brand: {\n            value: \"auto-parseable-tool\",\n            enumerable: false\n        },\n        $parseRaw: {\n            value: parser,\n            enumerable: false\n        },\n        $callback: {\n            value: callback,\n            enumerable: false\n        }\n    });\n    return obj;\n}\nfunction isAutoParsableTool(tool) {\n    return tool?.[\"$brand\"] === \"auto-parseable-tool\";\n}\nfunction getInputToolByName(input_tools, name) {\n    return input_tools.find((tool)=>tool.type === \"function\" && tool.name === name);\n}\nfunction parseToolCall(params, toolCall) {\n    const inputTool = getInputToolByName(params.tools ?? [], toolCall.name);\n    return {\n        ...toolCall,\n        ...toolCall,\n        parsed_arguments: isAutoParsableTool(inputTool) ? inputTool.$parseRaw(toolCall.arguments) : inputTool?.strict ? JSON.parse(toolCall.arguments) : null\n    };\n}\nfunction shouldParseToolCall(params, toolCall) {\n    if (!params) {\n        return false;\n    }\n    const inputTool = getInputToolByName(params.tools ?? [], toolCall.name);\n    return isAutoParsableTool(inputTool) || inputTool?.strict || false;\n}\nfunction validateInputTools(tools) {\n    for (const tool of tools ?? []){\n        if (tool.type !== \"function\") {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_0__.OpenAIError(`Currently only \\`function\\` tool types support auto-parsing; Received \\`${tool.type}\\``);\n        }\n        if (tool.function.strict !== true) {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_0__.OpenAIError(`The \\`${tool.function.name}\\` tool is not marked with \\`strict: true\\`. Only strict function tools can be auto-parsed`);\n        }\n    }\n}\nfunction addOutputText(rsp) {\n    const texts = [];\n    for (const output of rsp.output){\n        if (output.type !== \"message\") {\n            continue;\n        }\n        for (const content of output.content){\n            if (content.type === \"output_text\") {\n                texts.push(content.text);\n            }\n        }\n    }\n    rsp.output_text = texts.join(\"\");\n} //# sourceMappingURL=ResponsesParser.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/lib/ResponsesParser.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/lib/RunnableFunction.mjs":
/*!**********************************************************!*\
  !*** ../../node_modules/openai/lib/RunnableFunction.mjs ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ParsingToolFunction: () => (/* binding */ ParsingToolFunction),\n/* harmony export */   isRunnableFunctionWithParse: () => (/* binding */ isRunnableFunctionWithParse)\n/* harmony export */ });\nfunction isRunnableFunctionWithParse(fn) {\n    return typeof fn.parse === \"function\";\n}\n/**\n * This is helper class for passing a `function` and `parse` where the `function`\n * argument type matches the `parse` return type.\n */ class ParsingToolFunction {\n    constructor(input){\n        this.type = \"function\";\n        this.function = input;\n    }\n} //# sourceMappingURL=RunnableFunction.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvbGliL1J1bm5hYmxlRnVuY3Rpb24ubWpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQU8sU0FBU0EsNEJBQTRCQyxFQUFFO0lBQzFDLE9BQU8sT0FBT0EsR0FBR0MsS0FBSyxLQUFLO0FBQy9CO0FBQ0E7OztDQUdDLEdBQ00sTUFBTUM7SUFDVEMsWUFBWUMsS0FBSyxDQUFFO1FBQ2YsSUFBSSxDQUFDQyxJQUFJLEdBQUc7UUFDWixJQUFJLENBQUNDLFFBQVEsR0FBR0Y7SUFDcEI7QUFDSixFQUNBLDZDQUE2QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vbm9kZV9tb2R1bGVzL29wZW5haS9saWIvUnVubmFibGVGdW5jdGlvbi5tanM/OTg2YyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gaXNSdW5uYWJsZUZ1bmN0aW9uV2l0aFBhcnNlKGZuKSB7XG4gICAgcmV0dXJuIHR5cGVvZiBmbi5wYXJzZSA9PT0gJ2Z1bmN0aW9uJztcbn1cbi8qKlxuICogVGhpcyBpcyBoZWxwZXIgY2xhc3MgZm9yIHBhc3NpbmcgYSBgZnVuY3Rpb25gIGFuZCBgcGFyc2VgIHdoZXJlIHRoZSBgZnVuY3Rpb25gXG4gKiBhcmd1bWVudCB0eXBlIG1hdGNoZXMgdGhlIGBwYXJzZWAgcmV0dXJuIHR5cGUuXG4gKi9cbmV4cG9ydCBjbGFzcyBQYXJzaW5nVG9vbEZ1bmN0aW9uIHtcbiAgICBjb25zdHJ1Y3RvcihpbnB1dCkge1xuICAgICAgICB0aGlzLnR5cGUgPSAnZnVuY3Rpb24nO1xuICAgICAgICB0aGlzLmZ1bmN0aW9uID0gaW5wdXQ7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9UnVubmFibGVGdW5jdGlvbi5tanMubWFwIl0sIm5hbWVzIjpbImlzUnVubmFibGVGdW5jdGlvbldpdGhQYXJzZSIsImZuIiwicGFyc2UiLCJQYXJzaW5nVG9vbEZ1bmN0aW9uIiwiY29uc3RydWN0b3IiLCJpbnB1dCIsInR5cGUiLCJmdW5jdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/lib/RunnableFunction.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/lib/Util.mjs":
/*!**********************************************!*\
  !*** ../../node_modules/openai/lib/Util.mjs ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   allSettledWithThrow: () => (/* binding */ allSettledWithThrow)\n/* harmony export */ });\n/**\n * Like `Promise.allSettled()` but throws an error if any promises are rejected.\n */ const allSettledWithThrow = async (promises)=>{\n    const results = await Promise.allSettled(promises);\n    const rejected = results.filter((result)=>result.status === \"rejected\");\n    if (rejected.length) {\n        for (const result of rejected){\n            console.error(result.reason);\n        }\n        throw new Error(`${rejected.length} promise(s) failed - see the above errors`);\n    }\n    // Note: TS was complaining about using `.filter().map()` here for some reason\n    const values = [];\n    for (const result of results){\n        if (result.status === \"fulfilled\") {\n            values.push(result.value);\n        }\n    }\n    return values;\n}; //# sourceMappingURL=Util.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvbGliL1V0aWwubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7Q0FFQyxHQUNNLE1BQU1BLHNCQUFzQixPQUFPQztJQUN0QyxNQUFNQyxVQUFVLE1BQU1DLFFBQVFDLFVBQVUsQ0FBQ0g7SUFDekMsTUFBTUksV0FBV0gsUUFBUUksTUFBTSxDQUFDLENBQUNDLFNBQVdBLE9BQU9DLE1BQU0sS0FBSztJQUM5RCxJQUFJSCxTQUFTSSxNQUFNLEVBQUU7UUFDakIsS0FBSyxNQUFNRixVQUFVRixTQUFVO1lBQzNCSyxRQUFRQyxLQUFLLENBQUNKLE9BQU9LLE1BQU07UUFDL0I7UUFDQSxNQUFNLElBQUlDLE1BQU0sQ0FBQyxFQUFFUixTQUFTSSxNQUFNLENBQUMseUNBQXlDLENBQUM7SUFDakY7SUFDQSw4RUFBOEU7SUFDOUUsTUFBTUssU0FBUyxFQUFFO0lBQ2pCLEtBQUssTUFBTVAsVUFBVUwsUUFBUztRQUMxQixJQUFJSyxPQUFPQyxNQUFNLEtBQUssYUFBYTtZQUMvQk0sT0FBT0MsSUFBSSxDQUFDUixPQUFPUyxLQUFLO1FBQzVCO0lBQ0o7SUFDQSxPQUFPRjtBQUNYLEVBQUUsQ0FDRixpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvbGliL1V0aWwubWpzP2FmNzEiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBMaWtlIGBQcm9taXNlLmFsbFNldHRsZWQoKWAgYnV0IHRocm93cyBhbiBlcnJvciBpZiBhbnkgcHJvbWlzZXMgYXJlIHJlamVjdGVkLlxuICovXG5leHBvcnQgY29uc3QgYWxsU2V0dGxlZFdpdGhUaHJvdyA9IGFzeW5jIChwcm9taXNlcykgPT4ge1xuICAgIGNvbnN0IHJlc3VsdHMgPSBhd2FpdCBQcm9taXNlLmFsbFNldHRsZWQocHJvbWlzZXMpO1xuICAgIGNvbnN0IHJlamVjdGVkID0gcmVzdWx0cy5maWx0ZXIoKHJlc3VsdCkgPT4gcmVzdWx0LnN0YXR1cyA9PT0gJ3JlamVjdGVkJyk7XG4gICAgaWYgKHJlamVjdGVkLmxlbmd0aCkge1xuICAgICAgICBmb3IgKGNvbnN0IHJlc3VsdCBvZiByZWplY3RlZCkge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcihyZXN1bHQucmVhc29uKTtcbiAgICAgICAgfVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYCR7cmVqZWN0ZWQubGVuZ3RofSBwcm9taXNlKHMpIGZhaWxlZCAtIHNlZSB0aGUgYWJvdmUgZXJyb3JzYCk7XG4gICAgfVxuICAgIC8vIE5vdGU6IFRTIHdhcyBjb21wbGFpbmluZyBhYm91dCB1c2luZyBgLmZpbHRlcigpLm1hcCgpYCBoZXJlIGZvciBzb21lIHJlYXNvblxuICAgIGNvbnN0IHZhbHVlcyA9IFtdO1xuICAgIGZvciAoY29uc3QgcmVzdWx0IG9mIHJlc3VsdHMpIHtcbiAgICAgICAgaWYgKHJlc3VsdC5zdGF0dXMgPT09ICdmdWxmaWxsZWQnKSB7XG4gICAgICAgICAgICB2YWx1ZXMucHVzaChyZXN1bHQudmFsdWUpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB2YWx1ZXM7XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9VXRpbC5tanMubWFwIl0sIm5hbWVzIjpbImFsbFNldHRsZWRXaXRoVGhyb3ciLCJwcm9taXNlcyIsInJlc3VsdHMiLCJQcm9taXNlIiwiYWxsU2V0dGxlZCIsInJlamVjdGVkIiwiZmlsdGVyIiwicmVzdWx0Iiwic3RhdHVzIiwibGVuZ3RoIiwiY29uc29sZSIsImVycm9yIiwicmVhc29uIiwiRXJyb3IiLCJ2YWx1ZXMiLCJwdXNoIiwidmFsdWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/lib/Util.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/lib/chatCompletionUtils.mjs":
/*!*************************************************************!*\
  !*** ../../node_modules/openai/lib/chatCompletionUtils.mjs ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isAssistantMessage: () => (/* binding */ isAssistantMessage),\n/* harmony export */   isPresent: () => (/* binding */ isPresent),\n/* harmony export */   isToolMessage: () => (/* binding */ isToolMessage)\n/* harmony export */ });\nconst isAssistantMessage = (message)=>{\n    return message?.role === \"assistant\";\n};\nconst isToolMessage = (message)=>{\n    return message?.role === \"tool\";\n};\nfunction isPresent(obj) {\n    return obj != null;\n} //# sourceMappingURL=chatCompletionUtils.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvbGliL2NoYXRDb21wbGV0aW9uVXRpbHMubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFPLE1BQU1BLHFCQUFxQixDQUFDQztJQUMvQixPQUFPQSxTQUFTQyxTQUFTO0FBQzdCLEVBQUU7QUFDSyxNQUFNQyxnQkFBZ0IsQ0FBQ0Y7SUFDMUIsT0FBT0EsU0FBU0MsU0FBUztBQUM3QixFQUFFO0FBQ0ssU0FBU0UsVUFBVUMsR0FBRztJQUN6QixPQUFPQSxPQUFPO0FBQ2xCLEVBQ0EsZ0RBQWdEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi9ub2RlX21vZHVsZXMvb3BlbmFpL2xpYi9jaGF0Q29tcGxldGlvblV0aWxzLm1qcz84MGFjIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBpc0Fzc2lzdGFudE1lc3NhZ2UgPSAobWVzc2FnZSkgPT4ge1xuICAgIHJldHVybiBtZXNzYWdlPy5yb2xlID09PSAnYXNzaXN0YW50Jztcbn07XG5leHBvcnQgY29uc3QgaXNUb29sTWVzc2FnZSA9IChtZXNzYWdlKSA9PiB7XG4gICAgcmV0dXJuIG1lc3NhZ2U/LnJvbGUgPT09ICd0b29sJztcbn07XG5leHBvcnQgZnVuY3Rpb24gaXNQcmVzZW50KG9iaikge1xuICAgIHJldHVybiBvYmogIT0gbnVsbDtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNoYXRDb21wbGV0aW9uVXRpbHMubWpzLm1hcCJdLCJuYW1lcyI6WyJpc0Fzc2lzdGFudE1lc3NhZ2UiLCJtZXNzYWdlIiwicm9sZSIsImlzVG9vbE1lc3NhZ2UiLCJpc1ByZXNlbnQiLCJvYmoiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/lib/chatCompletionUtils.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/lib/parser.mjs":
/*!************************************************!*\
  !*** ../../node_modules/openai/lib/parser.mjs ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hasAutoParseableInput: () => (/* binding */ hasAutoParseableInput),\n/* harmony export */   isAutoParsableResponseFormat: () => (/* binding */ isAutoParsableResponseFormat),\n/* harmony export */   isAutoParsableTool: () => (/* binding */ isAutoParsableTool),\n/* harmony export */   makeParseableResponseFormat: () => (/* binding */ makeParseableResponseFormat),\n/* harmony export */   makeParseableTextFormat: () => (/* binding */ makeParseableTextFormat),\n/* harmony export */   makeParseableTool: () => (/* binding */ makeParseableTool),\n/* harmony export */   maybeParseChatCompletion: () => (/* binding */ maybeParseChatCompletion),\n/* harmony export */   parseChatCompletion: () => (/* binding */ parseChatCompletion),\n/* harmony export */   shouldParseToolCall: () => (/* binding */ shouldParseToolCall),\n/* harmony export */   validateInputTools: () => (/* binding */ validateInputTools)\n/* harmony export */ });\n/* harmony import */ var _error_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../error.mjs */ \"(middleware)/../../node_modules/openai/error.mjs\");\n\nfunction makeParseableResponseFormat(response_format, parser) {\n    const obj = {\n        ...response_format\n    };\n    Object.defineProperties(obj, {\n        $brand: {\n            value: \"auto-parseable-response-format\",\n            enumerable: false\n        },\n        $parseRaw: {\n            value: parser,\n            enumerable: false\n        }\n    });\n    return obj;\n}\nfunction makeParseableTextFormat(response_format, parser) {\n    const obj = {\n        ...response_format\n    };\n    Object.defineProperties(obj, {\n        $brand: {\n            value: \"auto-parseable-response-format\",\n            enumerable: false\n        },\n        $parseRaw: {\n            value: parser,\n            enumerable: false\n        }\n    });\n    return obj;\n}\nfunction isAutoParsableResponseFormat(response_format) {\n    return response_format?.[\"$brand\"] === \"auto-parseable-response-format\";\n}\nfunction makeParseableTool(tool, { parser, callback }) {\n    const obj = {\n        ...tool\n    };\n    Object.defineProperties(obj, {\n        $brand: {\n            value: \"auto-parseable-tool\",\n            enumerable: false\n        },\n        $parseRaw: {\n            value: parser,\n            enumerable: false\n        },\n        $callback: {\n            value: callback,\n            enumerable: false\n        }\n    });\n    return obj;\n}\nfunction isAutoParsableTool(tool) {\n    return tool?.[\"$brand\"] === \"auto-parseable-tool\";\n}\nfunction maybeParseChatCompletion(completion, params) {\n    if (!params || !hasAutoParseableInput(params)) {\n        return {\n            ...completion,\n            choices: completion.choices.map((choice)=>({\n                    ...choice,\n                    message: {\n                        ...choice.message,\n                        parsed: null,\n                        ...choice.message.tool_calls ? {\n                            tool_calls: choice.message.tool_calls\n                        } : undefined\n                    }\n                }))\n        };\n    }\n    return parseChatCompletion(completion, params);\n}\nfunction parseChatCompletion(completion, params) {\n    const choices = completion.choices.map((choice)=>{\n        if (choice.finish_reason === \"length\") {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_0__.LengthFinishReasonError();\n        }\n        if (choice.finish_reason === \"content_filter\") {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_0__.ContentFilterFinishReasonError();\n        }\n        return {\n            ...choice,\n            message: {\n                ...choice.message,\n                ...choice.message.tool_calls ? {\n                    tool_calls: choice.message.tool_calls?.map((toolCall)=>parseToolCall(params, toolCall)) ?? undefined\n                } : undefined,\n                parsed: choice.message.content && !choice.message.refusal ? parseResponseFormat(params, choice.message.content) : null\n            }\n        };\n    });\n    return {\n        ...completion,\n        choices\n    };\n}\nfunction parseResponseFormat(params, content) {\n    if (params.response_format?.type !== \"json_schema\") {\n        return null;\n    }\n    if (params.response_format?.type === \"json_schema\") {\n        if (\"$parseRaw\" in params.response_format) {\n            const response_format = params.response_format;\n            return response_format.$parseRaw(content);\n        }\n        return JSON.parse(content);\n    }\n    return null;\n}\nfunction parseToolCall(params, toolCall) {\n    const inputTool = params.tools?.find((inputTool)=>inputTool.function?.name === toolCall.function.name);\n    return {\n        ...toolCall,\n        function: {\n            ...toolCall.function,\n            parsed_arguments: isAutoParsableTool(inputTool) ? inputTool.$parseRaw(toolCall.function.arguments) : inputTool?.function.strict ? JSON.parse(toolCall.function.arguments) : null\n        }\n    };\n}\nfunction shouldParseToolCall(params, toolCall) {\n    if (!params) {\n        return false;\n    }\n    const inputTool = params.tools?.find((inputTool)=>inputTool.function?.name === toolCall.function.name);\n    return isAutoParsableTool(inputTool) || inputTool?.function.strict || false;\n}\nfunction hasAutoParseableInput(params) {\n    if (isAutoParsableResponseFormat(params.response_format)) {\n        return true;\n    }\n    return params.tools?.some((t)=>isAutoParsableTool(t) || t.type === \"function\" && t.function.strict === true) ?? false;\n}\nfunction validateInputTools(tools) {\n    for (const tool of tools ?? []){\n        if (tool.type !== \"function\") {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_0__.OpenAIError(`Currently only \\`function\\` tool types support auto-parsing; Received \\`${tool.type}\\``);\n        }\n        if (tool.function.strict !== true) {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_0__.OpenAIError(`The \\`${tool.function.name}\\` tool is not marked with \\`strict: true\\`. Only strict function tools can be auto-parsed`);\n        }\n    }\n} //# sourceMappingURL=parser.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/lib/parser.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/lib/responses/ResponseStream.mjs":
/*!******************************************************************!*\
  !*** ../../node_modules/openai/lib/responses/ResponseStream.mjs ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ResponseStream: () => (/* binding */ ResponseStream)\n/* harmony export */ });\n/* harmony import */ var _internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../internal/tslib.mjs */ \"(middleware)/../../node_modules/openai/internal/tslib.mjs\");\n/* harmony import */ var _error_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../error.mjs */ \"(middleware)/../../node_modules/openai/error.mjs\");\n/* harmony import */ var _EventStream_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../EventStream.mjs */ \"(middleware)/../../node_modules/openai/lib/EventStream.mjs\");\n/* harmony import */ var _ResponsesParser_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../ResponsesParser.mjs */ \"(middleware)/../../node_modules/openai/lib/ResponsesParser.mjs\");\nvar _ResponseStream_instances, _ResponseStream_params, _ResponseStream_currentResponseSnapshot, _ResponseStream_finalResponse, _ResponseStream_beginRequest, _ResponseStream_addEvent, _ResponseStream_endRequest, _ResponseStream_accumulateResponse;\n\n\n\n\nclass ResponseStream extends _EventStream_mjs__WEBPACK_IMPORTED_MODULE_2__.EventStream {\n    constructor(params){\n        super();\n        _ResponseStream_instances.add(this);\n        _ResponseStream_params.set(this, void 0);\n        _ResponseStream_currentResponseSnapshot.set(this, void 0);\n        _ResponseStream_finalResponse.set(this, void 0);\n        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _ResponseStream_params, params, \"f\");\n    }\n    static createResponse(client, params, options) {\n        const runner = new ResponseStream(params);\n        runner._run(()=>runner._createOrRetrieveResponse(client, params, {\n                ...options,\n                headers: {\n                    ...options?.headers,\n                    \"X-Stainless-Helper-Method\": \"stream\"\n                }\n            }));\n        return runner;\n    }\n    async _createOrRetrieveResponse(client, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted) this.controller.abort();\n            signal.addEventListener(\"abort\", ()=>this.controller.abort());\n        }\n        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ResponseStream_instances, \"m\", _ResponseStream_beginRequest).call(this);\n        let stream;\n        let starting_after = null;\n        if (\"response_id\" in params) {\n            stream = await client.responses.retrieve(params.response_id, {\n                stream: true\n            }, {\n                ...options,\n                signal: this.controller.signal,\n                stream: true\n            });\n            starting_after = params.starting_after ?? null;\n        } else {\n            stream = await client.responses.create({\n                ...params,\n                stream: true\n            }, {\n                ...options,\n                signal: this.controller.signal\n            });\n        }\n        this._connected();\n        for await (const event of stream){\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ResponseStream_instances, \"m\", _ResponseStream_addEvent).call(this, event, starting_after);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.APIUserAbortError();\n        }\n        return (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ResponseStream_instances, \"m\", _ResponseStream_endRequest).call(this);\n    }\n    [(_ResponseStream_params = new WeakMap(), _ResponseStream_currentResponseSnapshot = new WeakMap(), _ResponseStream_finalResponse = new WeakMap(), _ResponseStream_instances = new WeakSet(), _ResponseStream_beginRequest = function _ResponseStream_beginRequest() {\n        if (this.ended) return;\n        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _ResponseStream_currentResponseSnapshot, undefined, \"f\");\n    }, _ResponseStream_addEvent = function _ResponseStream_addEvent(event, starting_after) {\n        if (this.ended) return;\n        const maybeEmit = (name, event)=>{\n            if (starting_after == null || event.sequence_number > starting_after) {\n                this._emit(name, event);\n            }\n        };\n        const response = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ResponseStream_instances, \"m\", _ResponseStream_accumulateResponse).call(this, event);\n        maybeEmit(\"event\", event);\n        switch(event.type){\n            case \"response.output_text.delta\":\n                {\n                    const output = response.output[event.output_index];\n                    if (!output) {\n                        throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(`missing output at index ${event.output_index}`);\n                    }\n                    if (output.type === \"message\") {\n                        const content = output.content[event.content_index];\n                        if (!content) {\n                            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(`missing content at index ${event.content_index}`);\n                        }\n                        if (content.type !== \"output_text\") {\n                            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(`expected content to be 'output_text', got ${content.type}`);\n                        }\n                        maybeEmit(\"response.output_text.delta\", {\n                            ...event,\n                            snapshot: content.text\n                        });\n                    }\n                    break;\n                }\n            case \"response.function_call_arguments.delta\":\n                {\n                    const output = response.output[event.output_index];\n                    if (!output) {\n                        throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(`missing output at index ${event.output_index}`);\n                    }\n                    if (output.type === \"function_call\") {\n                        maybeEmit(\"response.function_call_arguments.delta\", {\n                            ...event,\n                            snapshot: output.arguments\n                        });\n                    }\n                    break;\n                }\n            default:\n                maybeEmit(event.type, event);\n                break;\n        }\n    }, _ResponseStream_endRequest = function _ResponseStream_endRequest() {\n        if (this.ended) {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(`stream has ended, this shouldn't happen`);\n        }\n        const snapshot = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ResponseStream_currentResponseSnapshot, \"f\");\n        if (!snapshot) {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(`request ended without sending any events`);\n        }\n        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _ResponseStream_currentResponseSnapshot, undefined, \"f\");\n        const parsedResponse = finalizeResponse(snapshot, (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ResponseStream_params, \"f\"));\n        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _ResponseStream_finalResponse, parsedResponse, \"f\");\n        return parsedResponse;\n    }, _ResponseStream_accumulateResponse = function _ResponseStream_accumulateResponse(event) {\n        let snapshot = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ResponseStream_currentResponseSnapshot, \"f\");\n        if (!snapshot) {\n            if (event.type !== \"response.created\") {\n                throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(`When snapshot hasn't been set yet, expected 'response.created' event, got ${event.type}`);\n            }\n            snapshot = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _ResponseStream_currentResponseSnapshot, event.response, \"f\");\n            return snapshot;\n        }\n        switch(event.type){\n            case \"response.output_item.added\":\n                {\n                    snapshot.output.push(event.item);\n                    break;\n                }\n            case \"response.content_part.added\":\n                {\n                    const output = snapshot.output[event.output_index];\n                    if (!output) {\n                        throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(`missing output at index ${event.output_index}`);\n                    }\n                    if (output.type === \"message\") {\n                        output.content.push(event.part);\n                    }\n                    break;\n                }\n            case \"response.output_text.delta\":\n                {\n                    const output = snapshot.output[event.output_index];\n                    if (!output) {\n                        throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(`missing output at index ${event.output_index}`);\n                    }\n                    if (output.type === \"message\") {\n                        const content = output.content[event.content_index];\n                        if (!content) {\n                            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(`missing content at index ${event.content_index}`);\n                        }\n                        if (content.type !== \"output_text\") {\n                            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(`expected content to be 'output_text', got ${content.type}`);\n                        }\n                        content.text += event.delta;\n                    }\n                    break;\n                }\n            case \"response.function_call_arguments.delta\":\n                {\n                    const output = snapshot.output[event.output_index];\n                    if (!output) {\n                        throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(`missing output at index ${event.output_index}`);\n                    }\n                    if (output.type === \"function_call\") {\n                        output.arguments += event.delta;\n                    }\n                    break;\n                }\n            case \"response.completed\":\n                {\n                    (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _ResponseStream_currentResponseSnapshot, event.response, \"f\");\n                    break;\n                }\n        }\n        return snapshot;\n    }, Symbol.asyncIterator)]() {\n        const pushQueue = [];\n        const readQueue = [];\n        let done = false;\n        this.on(\"event\", (event)=>{\n            const reader = readQueue.shift();\n            if (reader) {\n                reader.resolve(event);\n            } else {\n                pushQueue.push(event);\n            }\n        });\n        this.on(\"end\", ()=>{\n            done = true;\n            for (const reader of readQueue){\n                reader.resolve(undefined);\n            }\n            readQueue.length = 0;\n        });\n        this.on(\"abort\", (err)=>{\n            done = true;\n            for (const reader of readQueue){\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        this.on(\"error\", (err)=>{\n            done = true;\n            for (const reader of readQueue){\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        return {\n            next: async ()=>{\n                if (!pushQueue.length) {\n                    if (done) {\n                        return {\n                            value: undefined,\n                            done: true\n                        };\n                    }\n                    return new Promise((resolve, reject)=>readQueue.push({\n                            resolve,\n                            reject\n                        })).then((event)=>event ? {\n                            value: event,\n                            done: false\n                        } : {\n                            value: undefined,\n                            done: true\n                        });\n                }\n                const event = pushQueue.shift();\n                return {\n                    value: event,\n                    done: false\n                };\n            },\n            return: async ()=>{\n                this.abort();\n                return {\n                    value: undefined,\n                    done: true\n                };\n            }\n        };\n    }\n    /**\n     * @returns a promise that resolves with the final Response, or rejects\n     * if an error occurred or the stream ended prematurely without producing a REsponse.\n     */ async finalResponse() {\n        await this.done();\n        const response = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ResponseStream_finalResponse, \"f\");\n        if (!response) throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(\"stream ended without producing a ChatCompletion\");\n        return response;\n    }\n}\nfunction finalizeResponse(snapshot, params) {\n    return (0,_ResponsesParser_mjs__WEBPACK_IMPORTED_MODULE_3__.maybeParseResponse)(snapshot, params);\n} //# sourceMappingURL=ResponseStream.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/lib/responses/ResponseStream.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/resources/audio/audio.mjs":
/*!***********************************************************!*\
  !*** ../../node_modules/openai/resources/audio/audio.mjs ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Audio: () => (/* binding */ Audio)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/resource.mjs */ \"(middleware)/../../node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _speech_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./speech.mjs */ \"(middleware)/../../node_modules/openai/resources/audio/speech.mjs\");\n/* harmony import */ var _transcriptions_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./transcriptions.mjs */ \"(middleware)/../../node_modules/openai/resources/audio/transcriptions.mjs\");\n/* harmony import */ var _translations_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./translations.mjs */ \"(middleware)/../../node_modules/openai/resources/audio/translations.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\n\n\n\nclass Audio extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    constructor(){\n        super(...arguments);\n        this.transcriptions = new _transcriptions_mjs__WEBPACK_IMPORTED_MODULE_2__.Transcriptions(this._client);\n        this.translations = new _translations_mjs__WEBPACK_IMPORTED_MODULE_3__.Translations(this._client);\n        this.speech = new _speech_mjs__WEBPACK_IMPORTED_MODULE_1__.Speech(this._client);\n    }\n}\nAudio.Transcriptions = _transcriptions_mjs__WEBPACK_IMPORTED_MODULE_2__.Transcriptions;\nAudio.Translations = _translations_mjs__WEBPACK_IMPORTED_MODULE_3__.Translations;\nAudio.Speech = _speech_mjs__WEBPACK_IMPORTED_MODULE_1__.Speech; //# sourceMappingURL=audio.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2F1ZGlvL2F1ZGlvLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBLHNGQUFzRjtBQUNoQztBQUNaO0FBQ0o7QUFDb0I7QUFDSDtBQUNEO0FBQ0g7QUFDNUMsTUFBTU8sY0FBY1AsMkRBQVdBO0lBQ2xDUSxhQUFjO1FBQ1YsS0FBSyxJQUFJQztRQUNULElBQUksQ0FBQ0MsY0FBYyxHQUFHLElBQUlQLCtEQUFnQyxDQUFDLElBQUksQ0FBQ1EsT0FBTztRQUN2RSxJQUFJLENBQUNDLFlBQVksR0FBRyxJQUFJUCwyREFBNEIsQ0FBQyxJQUFJLENBQUNNLE9BQU87UUFDakUsSUFBSSxDQUFDRSxNQUFNLEdBQUcsSUFBSVosK0NBQWdCLENBQUMsSUFBSSxDQUFDVSxPQUFPO0lBQ25EO0FBQ0o7QUFDQUosTUFBTUgsY0FBYyxHQUFHQSwrREFBY0E7QUFDckNHLE1BQU1ELFlBQVksR0FBR0EsMkRBQVlBO0FBQ2pDQyxNQUFNTCxNQUFNLEdBQUdBLCtDQUFNQSxFQUNyQixrQ0FBa0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2F1ZGlvL2F1ZGlvLm1qcz9jNmZlIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5pbXBvcnQgeyBBUElSZXNvdXJjZSB9IGZyb20gXCIuLi8uLi9jb3JlL3Jlc291cmNlLm1qc1wiO1xuaW1wb3J0ICogYXMgU3BlZWNoQVBJIGZyb20gXCIuL3NwZWVjaC5tanNcIjtcbmltcG9ydCB7IFNwZWVjaCB9IGZyb20gXCIuL3NwZWVjaC5tanNcIjtcbmltcG9ydCAqIGFzIFRyYW5zY3JpcHRpb25zQVBJIGZyb20gXCIuL3RyYW5zY3JpcHRpb25zLm1qc1wiO1xuaW1wb3J0IHsgVHJhbnNjcmlwdGlvbnMsIH0gZnJvbSBcIi4vdHJhbnNjcmlwdGlvbnMubWpzXCI7XG5pbXBvcnQgKiBhcyBUcmFuc2xhdGlvbnNBUEkgZnJvbSBcIi4vdHJhbnNsYXRpb25zLm1qc1wiO1xuaW1wb3J0IHsgVHJhbnNsYXRpb25zLCB9IGZyb20gXCIuL3RyYW5zbGF0aW9ucy5tanNcIjtcbmV4cG9ydCBjbGFzcyBBdWRpbyBleHRlbmRzIEFQSVJlc291cmNlIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgdGhpcy50cmFuc2NyaXB0aW9ucyA9IG5ldyBUcmFuc2NyaXB0aW9uc0FQSS5UcmFuc2NyaXB0aW9ucyh0aGlzLl9jbGllbnQpO1xuICAgICAgICB0aGlzLnRyYW5zbGF0aW9ucyA9IG5ldyBUcmFuc2xhdGlvbnNBUEkuVHJhbnNsYXRpb25zKHRoaXMuX2NsaWVudCk7XG4gICAgICAgIHRoaXMuc3BlZWNoID0gbmV3IFNwZWVjaEFQSS5TcGVlY2godGhpcy5fY2xpZW50KTtcbiAgICB9XG59XG5BdWRpby5UcmFuc2NyaXB0aW9ucyA9IFRyYW5zY3JpcHRpb25zO1xuQXVkaW8uVHJhbnNsYXRpb25zID0gVHJhbnNsYXRpb25zO1xuQXVkaW8uU3BlZWNoID0gU3BlZWNoO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXVkaW8ubWpzLm1hcCJdLCJuYW1lcyI6WyJBUElSZXNvdXJjZSIsIlNwZWVjaEFQSSIsIlNwZWVjaCIsIlRyYW5zY3JpcHRpb25zQVBJIiwiVHJhbnNjcmlwdGlvbnMiLCJUcmFuc2xhdGlvbnNBUEkiLCJUcmFuc2xhdGlvbnMiLCJBdWRpbyIsImNvbnN0cnVjdG9yIiwiYXJndW1lbnRzIiwidHJhbnNjcmlwdGlvbnMiLCJfY2xpZW50IiwidHJhbnNsYXRpb25zIiwic3BlZWNoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/resources/audio/audio.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/resources/audio/speech.mjs":
/*!************************************************************!*\
  !*** ../../node_modules/openai/resources/audio/speech.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Speech: () => (/* binding */ Speech)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/resource.mjs */ \"(middleware)/../../node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _internal_headers_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../internal/headers.mjs */ \"(middleware)/../../node_modules/openai/internal/headers.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\nclass Speech extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Generates audio from the input text.\n     *\n     * @example\n     * ```ts\n     * const speech = await client.audio.speech.create({\n     *   input: 'input',\n     *   model: 'string',\n     *   voice: 'ash',\n     * });\n     *\n     * const content = await speech.blob();\n     * console.log(content);\n     * ```\n     */ create(body, options) {\n        return this._client.post(\"/audio/speech\", {\n            body,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_1__.buildHeaders)([\n                {\n                    Accept: \"application/octet-stream\"\n                },\n                options?.headers\n            ]),\n            __binaryResponse: true\n        });\n    }\n} //# sourceMappingURL=speech.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2F1ZGlvL3NwZWVjaC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsc0ZBQXNGO0FBQ2hDO0FBQ0k7QUFDbkQsTUFBTUUsZUFBZUYsMkRBQVdBO0lBQ25DOzs7Ozs7Ozs7Ozs7OztLQWNDLEdBQ0RHLE9BQU9DLElBQUksRUFBRUMsT0FBTyxFQUFFO1FBQ2xCLE9BQU8sSUFBSSxDQUFDQyxPQUFPLENBQUNDLElBQUksQ0FBQyxpQkFBaUI7WUFDdENIO1lBQ0EsR0FBR0MsT0FBTztZQUNWRyxTQUFTUCxtRUFBWUEsQ0FBQztnQkFBQztvQkFBRVEsUUFBUTtnQkFBMkI7Z0JBQUdKLFNBQVNHO2FBQVE7WUFDaEZFLGtCQUFrQjtRQUN0QjtJQUNKO0FBQ0osRUFDQSxtQ0FBbUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2F1ZGlvL3NwZWVjaC5tanM/ZDY4NyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlIGdlbmVyYXRlZCBmcm9tIG91ciBPcGVuQVBJIHNwZWMgYnkgU3RhaW5sZXNzLiBTZWUgQ09OVFJJQlVUSU5HLm1kIGZvciBkZXRhaWxzLlxuaW1wb3J0IHsgQVBJUmVzb3VyY2UgfSBmcm9tIFwiLi4vLi4vY29yZS9yZXNvdXJjZS5tanNcIjtcbmltcG9ydCB7IGJ1aWxkSGVhZGVycyB9IGZyb20gXCIuLi8uLi9pbnRlcm5hbC9oZWFkZXJzLm1qc1wiO1xuZXhwb3J0IGNsYXNzIFNwZWVjaCBleHRlbmRzIEFQSVJlc291cmNlIHtcbiAgICAvKipcbiAgICAgKiBHZW5lcmF0ZXMgYXVkaW8gZnJvbSB0aGUgaW5wdXQgdGV4dC5cbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgdHNcbiAgICAgKiBjb25zdCBzcGVlY2ggPSBhd2FpdCBjbGllbnQuYXVkaW8uc3BlZWNoLmNyZWF0ZSh7XG4gICAgICogICBpbnB1dDogJ2lucHV0JyxcbiAgICAgKiAgIG1vZGVsOiAnc3RyaW5nJyxcbiAgICAgKiAgIHZvaWNlOiAnYXNoJyxcbiAgICAgKiB9KTtcbiAgICAgKlxuICAgICAqIGNvbnN0IGNvbnRlbnQgPSBhd2FpdCBzcGVlY2guYmxvYigpO1xuICAgICAqIGNvbnNvbGUubG9nKGNvbnRlbnQpO1xuICAgICAqIGBgYFxuICAgICAqL1xuICAgIGNyZWF0ZShib2R5LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQucG9zdCgnL2F1ZGlvL3NwZWVjaCcsIHtcbiAgICAgICAgICAgIGJvZHksXG4gICAgICAgICAgICAuLi5vcHRpb25zLFxuICAgICAgICAgICAgaGVhZGVyczogYnVpbGRIZWFkZXJzKFt7IEFjY2VwdDogJ2FwcGxpY2F0aW9uL29jdGV0LXN0cmVhbScgfSwgb3B0aW9ucz8uaGVhZGVyc10pLFxuICAgICAgICAgICAgX19iaW5hcnlSZXNwb25zZTogdHJ1ZSxcbiAgICAgICAgfSk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3BlZWNoLm1qcy5tYXAiXSwibmFtZXMiOlsiQVBJUmVzb3VyY2UiLCJidWlsZEhlYWRlcnMiLCJTcGVlY2giLCJjcmVhdGUiLCJib2R5Iiwib3B0aW9ucyIsIl9jbGllbnQiLCJwb3N0IiwiaGVhZGVycyIsIkFjY2VwdCIsIl9fYmluYXJ5UmVzcG9uc2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/resources/audio/speech.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/resources/audio/transcriptions.mjs":
/*!********************************************************************!*\
  !*** ../../node_modules/openai/resources/audio/transcriptions.mjs ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Transcriptions: () => (/* binding */ Transcriptions)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/resource.mjs */ \"(middleware)/../../node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _internal_uploads_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../internal/uploads.mjs */ \"(middleware)/../../node_modules/openai/internal/uploads.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\nclass Transcriptions extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    create(body, options) {\n        return this._client.post(\"/audio/transcriptions\", (0,_internal_uploads_mjs__WEBPACK_IMPORTED_MODULE_1__.multipartFormRequestOptions)({\n            body,\n            ...options,\n            stream: body.stream ?? false,\n            __metadata: {\n                model: body.model\n            }\n        }, this._client));\n    }\n} //# sourceMappingURL=transcriptions.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2F1ZGlvL3RyYW5zY3JpcHRpb25zLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxzRkFBc0Y7QUFDaEM7QUFDbUI7QUFDbEUsTUFBTUUsdUJBQXVCRiwyREFBV0E7SUFDM0NHLE9BQU9DLElBQUksRUFBRUMsT0FBTyxFQUFFO1FBQ2xCLE9BQU8sSUFBSSxDQUFDQyxPQUFPLENBQUNDLElBQUksQ0FBQyx5QkFBeUJOLGtGQUEyQkEsQ0FBQztZQUMxRUc7WUFDQSxHQUFHQyxPQUFPO1lBQ1ZHLFFBQVFKLEtBQUtJLE1BQU0sSUFBSTtZQUN2QkMsWUFBWTtnQkFBRUMsT0FBT04sS0FBS00sS0FBSztZQUFDO1FBQ3BDLEdBQUcsSUFBSSxDQUFDSixPQUFPO0lBQ25CO0FBQ0osRUFDQSwyQ0FBMkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2F1ZGlvL3RyYW5zY3JpcHRpb25zLm1qcz84YjUzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5pbXBvcnQgeyBBUElSZXNvdXJjZSB9IGZyb20gXCIuLi8uLi9jb3JlL3Jlc291cmNlLm1qc1wiO1xuaW1wb3J0IHsgbXVsdGlwYXJ0Rm9ybVJlcXVlc3RPcHRpb25zIH0gZnJvbSBcIi4uLy4uL2ludGVybmFsL3VwbG9hZHMubWpzXCI7XG5leHBvcnQgY2xhc3MgVHJhbnNjcmlwdGlvbnMgZXh0ZW5kcyBBUElSZXNvdXJjZSB7XG4gICAgY3JlYXRlKGJvZHksIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5wb3N0KCcvYXVkaW8vdHJhbnNjcmlwdGlvbnMnLCBtdWx0aXBhcnRGb3JtUmVxdWVzdE9wdGlvbnMoe1xuICAgICAgICAgICAgYm9keSxcbiAgICAgICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgICAgICBzdHJlYW06IGJvZHkuc3RyZWFtID8/IGZhbHNlLFxuICAgICAgICAgICAgX19tZXRhZGF0YTogeyBtb2RlbDogYm9keS5tb2RlbCB9LFxuICAgICAgICB9LCB0aGlzLl9jbGllbnQpKTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD10cmFuc2NyaXB0aW9ucy5tanMubWFwIl0sIm5hbWVzIjpbIkFQSVJlc291cmNlIiwibXVsdGlwYXJ0Rm9ybVJlcXVlc3RPcHRpb25zIiwiVHJhbnNjcmlwdGlvbnMiLCJjcmVhdGUiLCJib2R5Iiwib3B0aW9ucyIsIl9jbGllbnQiLCJwb3N0Iiwic3RyZWFtIiwiX19tZXRhZGF0YSIsIm1vZGVsIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/resources/audio/transcriptions.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/resources/audio/translations.mjs":
/*!******************************************************************!*\
  !*** ../../node_modules/openai/resources/audio/translations.mjs ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Translations: () => (/* binding */ Translations)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/resource.mjs */ \"(middleware)/../../node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _internal_uploads_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../internal/uploads.mjs */ \"(middleware)/../../node_modules/openai/internal/uploads.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\nclass Translations extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    create(body, options) {\n        return this._client.post(\"/audio/translations\", (0,_internal_uploads_mjs__WEBPACK_IMPORTED_MODULE_1__.multipartFormRequestOptions)({\n            body,\n            ...options,\n            __metadata: {\n                model: body.model\n            }\n        }, this._client));\n    }\n} //# sourceMappingURL=translations.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2F1ZGlvL3RyYW5zbGF0aW9ucy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsc0ZBQXNGO0FBQ2hDO0FBQ21CO0FBQ2xFLE1BQU1FLHFCQUFxQkYsMkRBQVdBO0lBQ3pDRyxPQUFPQyxJQUFJLEVBQUVDLE9BQU8sRUFBRTtRQUNsQixPQUFPLElBQUksQ0FBQ0MsT0FBTyxDQUFDQyxJQUFJLENBQUMsdUJBQXVCTixrRkFBMkJBLENBQUM7WUFBRUc7WUFBTSxHQUFHQyxPQUFPO1lBQUVHLFlBQVk7Z0JBQUVDLE9BQU9MLEtBQUtLLEtBQUs7WUFBQztRQUFFLEdBQUcsSUFBSSxDQUFDSCxPQUFPO0lBQ3JKO0FBQ0osRUFDQSx5Q0FBeUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2F1ZGlvL3RyYW5zbGF0aW9ucy5tanM/NGQ1YSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlIGdlbmVyYXRlZCBmcm9tIG91ciBPcGVuQVBJIHNwZWMgYnkgU3RhaW5sZXNzLiBTZWUgQ09OVFJJQlVUSU5HLm1kIGZvciBkZXRhaWxzLlxuaW1wb3J0IHsgQVBJUmVzb3VyY2UgfSBmcm9tIFwiLi4vLi4vY29yZS9yZXNvdXJjZS5tanNcIjtcbmltcG9ydCB7IG11bHRpcGFydEZvcm1SZXF1ZXN0T3B0aW9ucyB9IGZyb20gXCIuLi8uLi9pbnRlcm5hbC91cGxvYWRzLm1qc1wiO1xuZXhwb3J0IGNsYXNzIFRyYW5zbGF0aW9ucyBleHRlbmRzIEFQSVJlc291cmNlIHtcbiAgICBjcmVhdGUoYm9keSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LnBvc3QoJy9hdWRpby90cmFuc2xhdGlvbnMnLCBtdWx0aXBhcnRGb3JtUmVxdWVzdE9wdGlvbnMoeyBib2R5LCAuLi5vcHRpb25zLCBfX21ldGFkYXRhOiB7IG1vZGVsOiBib2R5Lm1vZGVsIH0gfSwgdGhpcy5fY2xpZW50KSk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHJhbnNsYXRpb25zLm1qcy5tYXAiXSwibmFtZXMiOlsiQVBJUmVzb3VyY2UiLCJtdWx0aXBhcnRGb3JtUmVxdWVzdE9wdGlvbnMiLCJUcmFuc2xhdGlvbnMiLCJjcmVhdGUiLCJib2R5Iiwib3B0aW9ucyIsIl9jbGllbnQiLCJwb3N0IiwiX19tZXRhZGF0YSIsIm1vZGVsIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/resources/audio/translations.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/resources/batches.mjs":
/*!*******************************************************!*\
  !*** ../../node_modules/openai/resources/batches.mjs ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Batches: () => (/* binding */ Batches)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/resource.mjs */ \"(middleware)/../../node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/pagination.mjs */ \"(middleware)/../../node_modules/openai/core/pagination.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../internal/utils/path.mjs */ \"(middleware)/../../node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\nclass Batches extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Creates and executes a batch from an uploaded file of requests\n     */ create(body, options) {\n        return this._client.post(\"/batches\", {\n            body,\n            ...options\n        });\n    }\n    /**\n     * Retrieves a batch.\n     */ retrieve(batchID, options) {\n        return this._client.get(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__.path`/batches/${batchID}`, options);\n    }\n    /**\n     * List your organization's batches.\n     */ list(query = {}, options) {\n        return this._client.getAPIList(\"/batches\", _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__.CursorPage, {\n            query,\n            ...options\n        });\n    }\n    /**\n     * Cancels an in-progress batch. The batch will be in status `cancelling` for up to\n     * 10 minutes, before changing to `cancelled`, where it will have partial results\n     * (if any) available in the output file.\n     */ cancel(batchID, options) {\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__.path`/batches/${batchID}/cancel`, options);\n    }\n} //# sourceMappingURL=batches.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2JhdGNoZXMubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSxzRkFBc0Y7QUFDbkM7QUFDQztBQUNGO0FBQzNDLE1BQU1HLGdCQUFnQkgsMkRBQVdBO0lBQ3BDOztLQUVDLEdBQ0RJLE9BQU9DLElBQUksRUFBRUMsT0FBTyxFQUFFO1FBQ2xCLE9BQU8sSUFBSSxDQUFDQyxPQUFPLENBQUNDLElBQUksQ0FBQyxZQUFZO1lBQUVIO1lBQU0sR0FBR0MsT0FBTztRQUFDO0lBQzVEO0lBQ0E7O0tBRUMsR0FDREcsU0FBU0MsT0FBTyxFQUFFSixPQUFPLEVBQUU7UUFDdkIsT0FBTyxJQUFJLENBQUNDLE9BQU8sQ0FBQ0ksR0FBRyxDQUFDVCwwREFBSyxDQUFDLFNBQVMsRUFBRVEsUUFBUSxDQUFDLEVBQUVKO0lBQ3hEO0lBQ0E7O0tBRUMsR0FDRE0sS0FBS0MsUUFBUSxDQUFDLENBQUMsRUFBRVAsT0FBTyxFQUFFO1FBQ3RCLE9BQU8sSUFBSSxDQUFDQyxPQUFPLENBQUNPLFVBQVUsQ0FBQyxZQUFhYiw0REFBVUEsRUFBRztZQUFFWTtZQUFPLEdBQUdQLE9BQU87UUFBQztJQUNqRjtJQUNBOzs7O0tBSUMsR0FDRFMsT0FBT0wsT0FBTyxFQUFFSixPQUFPLEVBQUU7UUFDckIsT0FBTyxJQUFJLENBQUNDLE9BQU8sQ0FBQ0MsSUFBSSxDQUFDTiwwREFBSyxDQUFDLFNBQVMsRUFBRVEsUUFBUSxPQUFPLENBQUMsRUFBRUo7SUFDaEU7QUFDSixFQUNBLG9DQUFvQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vbm9kZV9tb2R1bGVzL29wZW5haS9yZXNvdXJjZXMvYmF0Y2hlcy5tanM/OWEwOCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlIGdlbmVyYXRlZCBmcm9tIG91ciBPcGVuQVBJIHNwZWMgYnkgU3RhaW5sZXNzLiBTZWUgQ09OVFJJQlVUSU5HLm1kIGZvciBkZXRhaWxzLlxuaW1wb3J0IHsgQVBJUmVzb3VyY2UgfSBmcm9tIFwiLi4vY29yZS9yZXNvdXJjZS5tanNcIjtcbmltcG9ydCB7IEN1cnNvclBhZ2UgfSBmcm9tIFwiLi4vY29yZS9wYWdpbmF0aW9uLm1qc1wiO1xuaW1wb3J0IHsgcGF0aCB9IGZyb20gXCIuLi9pbnRlcm5hbC91dGlscy9wYXRoLm1qc1wiO1xuZXhwb3J0IGNsYXNzIEJhdGNoZXMgZXh0ZW5kcyBBUElSZXNvdXJjZSB7XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhbmQgZXhlY3V0ZXMgYSBiYXRjaCBmcm9tIGFuIHVwbG9hZGVkIGZpbGUgb2YgcmVxdWVzdHNcbiAgICAgKi9cbiAgICBjcmVhdGUoYm9keSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LnBvc3QoJy9iYXRjaGVzJywgeyBib2R5LCAuLi5vcHRpb25zIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXRyaWV2ZXMgYSBiYXRjaC5cbiAgICAgKi9cbiAgICByZXRyaWV2ZShiYXRjaElELCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZ2V0KHBhdGggYC9iYXRjaGVzLyR7YmF0Y2hJRH1gLCBvcHRpb25zKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogTGlzdCB5b3VyIG9yZ2FuaXphdGlvbidzIGJhdGNoZXMuXG4gICAgICovXG4gICAgbGlzdChxdWVyeSA9IHt9LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZ2V0QVBJTGlzdCgnL2JhdGNoZXMnLCAoQ3Vyc29yUGFnZSksIHsgcXVlcnksIC4uLm9wdGlvbnMgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENhbmNlbHMgYW4gaW4tcHJvZ3Jlc3MgYmF0Y2guIFRoZSBiYXRjaCB3aWxsIGJlIGluIHN0YXR1cyBgY2FuY2VsbGluZ2AgZm9yIHVwIHRvXG4gICAgICogMTAgbWludXRlcywgYmVmb3JlIGNoYW5naW5nIHRvIGBjYW5jZWxsZWRgLCB3aGVyZSBpdCB3aWxsIGhhdmUgcGFydGlhbCByZXN1bHRzXG4gICAgICogKGlmIGFueSkgYXZhaWxhYmxlIGluIHRoZSBvdXRwdXQgZmlsZS5cbiAgICAgKi9cbiAgICBjYW5jZWwoYmF0Y2hJRCwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LnBvc3QocGF0aCBgL2JhdGNoZXMvJHtiYXRjaElEfS9jYW5jZWxgLCBvcHRpb25zKTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1iYXRjaGVzLm1qcy5tYXAiXSwibmFtZXMiOlsiQVBJUmVzb3VyY2UiLCJDdXJzb3JQYWdlIiwicGF0aCIsIkJhdGNoZXMiLCJjcmVhdGUiLCJib2R5Iiwib3B0aW9ucyIsIl9jbGllbnQiLCJwb3N0IiwicmV0cmlldmUiLCJiYXRjaElEIiwiZ2V0IiwibGlzdCIsInF1ZXJ5IiwiZ2V0QVBJTGlzdCIsImNhbmNlbCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/resources/batches.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/resources/beta/assistants.mjs":
/*!***************************************************************!*\
  !*** ../../node_modules/openai/resources/beta/assistants.mjs ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Assistants: () => (/* binding */ Assistants)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/resource.mjs */ \"(middleware)/../../node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/pagination.mjs */ \"(middleware)/../../node_modules/openai/core/pagination.mjs\");\n/* harmony import */ var _internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../internal/headers.mjs */ \"(middleware)/../../node_modules/openai/internal/headers.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../internal/utils/path.mjs */ \"(middleware)/../../node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\nclass Assistants extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Create an assistant with a model and instructions.\n     *\n     * @example\n     * ```ts\n     * const assistant = await client.beta.assistants.create({\n     *   model: 'gpt-4o',\n     * });\n     * ```\n     */ create(body, options) {\n        return this._client.post(\"/assistants\", {\n            body,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Retrieves an assistant.\n     *\n     * @example\n     * ```ts\n     * const assistant = await client.beta.assistants.retrieve(\n     *   'assistant_id',\n     * );\n     * ```\n     */ retrieve(assistantID, options) {\n        return this._client.get(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/assistants/${assistantID}`, {\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Modifies an assistant.\n     *\n     * @example\n     * ```ts\n     * const assistant = await client.beta.assistants.update(\n     *   'assistant_id',\n     * );\n     * ```\n     */ update(assistantID, body, options) {\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/assistants/${assistantID}`, {\n            body,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Returns a list of assistants.\n     *\n     * @example\n     * ```ts\n     * // Automatically fetches more pages as needed.\n     * for await (const assistant of client.beta.assistants.list()) {\n     *   // ...\n     * }\n     * ```\n     */ list(query = {}, options) {\n        return this._client.getAPIList(\"/assistants\", _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__.CursorPage, {\n            query,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Delete an assistant.\n     *\n     * @example\n     * ```ts\n     * const assistantDeleted =\n     *   await client.beta.assistants.delete('assistant_id');\n     * ```\n     */ delete(assistantID, options) {\n        return this._client.delete(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/assistants/${assistantID}`, {\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n} //# sourceMappingURL=assistants.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2JldGEvYXNzaXN0YW50cy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQSxzRkFBc0Y7QUFDaEM7QUFDQztBQUNHO0FBQ0w7QUFDOUMsTUFBTUksbUJBQW1CSiwyREFBV0E7SUFDdkM7Ozs7Ozs7OztLQVNDLEdBQ0RLLE9BQU9DLElBQUksRUFBRUMsT0FBTyxFQUFFO1FBQ2xCLE9BQU8sSUFBSSxDQUFDQyxPQUFPLENBQUNDLElBQUksQ0FBQyxlQUFlO1lBQ3BDSDtZQUNBLEdBQUdDLE9BQU87WUFDVkcsU0FBU1IsbUVBQVlBLENBQUM7Z0JBQUM7b0JBQUUsZUFBZTtnQkFBZ0I7Z0JBQUdLLFNBQVNHO2FBQVE7UUFDaEY7SUFDSjtJQUNBOzs7Ozs7Ozs7S0FTQyxHQUNEQyxTQUFTQyxXQUFXLEVBQUVMLE9BQU8sRUFBRTtRQUMzQixPQUFPLElBQUksQ0FBQ0MsT0FBTyxDQUFDSyxHQUFHLENBQUNWLDBEQUFLLENBQUMsWUFBWSxFQUFFUyxZQUFZLENBQUMsRUFBRTtZQUN2RCxHQUFHTCxPQUFPO1lBQ1ZHLFNBQVNSLG1FQUFZQSxDQUFDO2dCQUFDO29CQUFFLGVBQWU7Z0JBQWdCO2dCQUFHSyxTQUFTRzthQUFRO1FBQ2hGO0lBQ0o7SUFDQTs7Ozs7Ozs7O0tBU0MsR0FDREksT0FBT0YsV0FBVyxFQUFFTixJQUFJLEVBQUVDLE9BQU8sRUFBRTtRQUMvQixPQUFPLElBQUksQ0FBQ0MsT0FBTyxDQUFDQyxJQUFJLENBQUNOLDBEQUFLLENBQUMsWUFBWSxFQUFFUyxZQUFZLENBQUMsRUFBRTtZQUN4RE47WUFDQSxHQUFHQyxPQUFPO1lBQ1ZHLFNBQVNSLG1FQUFZQSxDQUFDO2dCQUFDO29CQUFFLGVBQWU7Z0JBQWdCO2dCQUFHSyxTQUFTRzthQUFRO1FBQ2hGO0lBQ0o7SUFDQTs7Ozs7Ozs7OztLQVVDLEdBQ0RLLEtBQUtDLFFBQVEsQ0FBQyxDQUFDLEVBQUVULE9BQU8sRUFBRTtRQUN0QixPQUFPLElBQUksQ0FBQ0MsT0FBTyxDQUFDUyxVQUFVLENBQUMsZUFBZ0JoQiw0REFBVUEsRUFBRztZQUN4RGU7WUFDQSxHQUFHVCxPQUFPO1lBQ1ZHLFNBQVNSLG1FQUFZQSxDQUFDO2dCQUFDO29CQUFFLGVBQWU7Z0JBQWdCO2dCQUFHSyxTQUFTRzthQUFRO1FBQ2hGO0lBQ0o7SUFDQTs7Ozs7Ozs7S0FRQyxHQUNEUSxPQUFPTixXQUFXLEVBQUVMLE9BQU8sRUFBRTtRQUN6QixPQUFPLElBQUksQ0FBQ0MsT0FBTyxDQUFDVSxNQUFNLENBQUNmLDBEQUFLLENBQUMsWUFBWSxFQUFFUyxZQUFZLENBQUMsRUFBRTtZQUMxRCxHQUFHTCxPQUFPO1lBQ1ZHLFNBQVNSLG1FQUFZQSxDQUFDO2dCQUFDO29CQUFFLGVBQWU7Z0JBQWdCO2dCQUFHSyxTQUFTRzthQUFRO1FBQ2hGO0lBQ0o7QUFDSixFQUNBLHVDQUF1QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vbm9kZV9tb2R1bGVzL29wZW5haS9yZXNvdXJjZXMvYmV0YS9hc3Npc3RhbnRzLm1qcz9kYmY0Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5pbXBvcnQgeyBBUElSZXNvdXJjZSB9IGZyb20gXCIuLi8uLi9jb3JlL3Jlc291cmNlLm1qc1wiO1xuaW1wb3J0IHsgQ3Vyc29yUGFnZSB9IGZyb20gXCIuLi8uLi9jb3JlL3BhZ2luYXRpb24ubWpzXCI7XG5pbXBvcnQgeyBidWlsZEhlYWRlcnMgfSBmcm9tIFwiLi4vLi4vaW50ZXJuYWwvaGVhZGVycy5tanNcIjtcbmltcG9ydCB7IHBhdGggfSBmcm9tIFwiLi4vLi4vaW50ZXJuYWwvdXRpbHMvcGF0aC5tanNcIjtcbmV4cG9ydCBjbGFzcyBBc3Npc3RhbnRzIGV4dGVuZHMgQVBJUmVzb3VyY2Uge1xuICAgIC8qKlxuICAgICAqIENyZWF0ZSBhbiBhc3Npc3RhbnQgd2l0aCBhIG1vZGVsIGFuZCBpbnN0cnVjdGlvbnMuXG4gICAgICpcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHRzXG4gICAgICogY29uc3QgYXNzaXN0YW50ID0gYXdhaXQgY2xpZW50LmJldGEuYXNzaXN0YW50cy5jcmVhdGUoe1xuICAgICAqICAgbW9kZWw6ICdncHQtNG8nLFxuICAgICAqIH0pO1xuICAgICAqIGBgYFxuICAgICAqL1xuICAgIGNyZWF0ZShib2R5LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQucG9zdCgnL2Fzc2lzdGFudHMnLCB7XG4gICAgICAgICAgICBib2R5LFxuICAgICAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgICAgIGhlYWRlcnM6IGJ1aWxkSGVhZGVycyhbeyAnT3BlbkFJLUJldGEnOiAnYXNzaXN0YW50cz12MicgfSwgb3B0aW9ucz8uaGVhZGVyc10pLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0cmlldmVzIGFuIGFzc2lzdGFudC5cbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgdHNcbiAgICAgKiBjb25zdCBhc3Npc3RhbnQgPSBhd2FpdCBjbGllbnQuYmV0YS5hc3Npc3RhbnRzLnJldHJpZXZlKFxuICAgICAqICAgJ2Fzc2lzdGFudF9pZCcsXG4gICAgICogKTtcbiAgICAgKiBgYGBcbiAgICAgKi9cbiAgICByZXRyaWV2ZShhc3Npc3RhbnRJRCwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmdldChwYXRoIGAvYXNzaXN0YW50cy8ke2Fzc2lzdGFudElEfWAsIHtcbiAgICAgICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgICAgICBoZWFkZXJzOiBidWlsZEhlYWRlcnMoW3sgJ09wZW5BSS1CZXRhJzogJ2Fzc2lzdGFudHM9djInIH0sIG9wdGlvbnM/LmhlYWRlcnNdKSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIE1vZGlmaWVzIGFuIGFzc2lzdGFudC5cbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgdHNcbiAgICAgKiBjb25zdCBhc3Npc3RhbnQgPSBhd2FpdCBjbGllbnQuYmV0YS5hc3Npc3RhbnRzLnVwZGF0ZShcbiAgICAgKiAgICdhc3Npc3RhbnRfaWQnLFxuICAgICAqICk7XG4gICAgICogYGBgXG4gICAgICovXG4gICAgdXBkYXRlKGFzc2lzdGFudElELCBib2R5LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQucG9zdChwYXRoIGAvYXNzaXN0YW50cy8ke2Fzc2lzdGFudElEfWAsIHtcbiAgICAgICAgICAgIGJvZHksXG4gICAgICAgICAgICAuLi5vcHRpb25zLFxuICAgICAgICAgICAgaGVhZGVyczogYnVpbGRIZWFkZXJzKFt7ICdPcGVuQUktQmV0YSc6ICdhc3Npc3RhbnRzPXYyJyB9LCBvcHRpb25zPy5oZWFkZXJzXSksXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIGEgbGlzdCBvZiBhc3Npc3RhbnRzLlxuICAgICAqXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGB0c1xuICAgICAqIC8vIEF1dG9tYXRpY2FsbHkgZmV0Y2hlcyBtb3JlIHBhZ2VzIGFzIG5lZWRlZC5cbiAgICAgKiBmb3IgYXdhaXQgKGNvbnN0IGFzc2lzdGFudCBvZiBjbGllbnQuYmV0YS5hc3Npc3RhbnRzLmxpc3QoKSkge1xuICAgICAqICAgLy8gLi4uXG4gICAgICogfVxuICAgICAqIGBgYFxuICAgICAqL1xuICAgIGxpc3QocXVlcnkgPSB7fSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmdldEFQSUxpc3QoJy9hc3Npc3RhbnRzJywgKEN1cnNvclBhZ2UpLCB7XG4gICAgICAgICAgICBxdWVyeSxcbiAgICAgICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgICAgICBoZWFkZXJzOiBidWlsZEhlYWRlcnMoW3sgJ09wZW5BSS1CZXRhJzogJ2Fzc2lzdGFudHM9djInIH0sIG9wdGlvbnM/LmhlYWRlcnNdKSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIERlbGV0ZSBhbiBhc3Npc3RhbnQuXG4gICAgICpcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHRzXG4gICAgICogY29uc3QgYXNzaXN0YW50RGVsZXRlZCA9XG4gICAgICogICBhd2FpdCBjbGllbnQuYmV0YS5hc3Npc3RhbnRzLmRlbGV0ZSgnYXNzaXN0YW50X2lkJyk7XG4gICAgICogYGBgXG4gICAgICovXG4gICAgZGVsZXRlKGFzc2lzdGFudElELCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZGVsZXRlKHBhdGggYC9hc3Npc3RhbnRzLyR7YXNzaXN0YW50SUR9YCwge1xuICAgICAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgICAgIGhlYWRlcnM6IGJ1aWxkSGVhZGVycyhbeyAnT3BlbkFJLUJldGEnOiAnYXNzaXN0YW50cz12MicgfSwgb3B0aW9ucz8uaGVhZGVyc10pLFxuICAgICAgICB9KTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hc3Npc3RhbnRzLm1qcy5tYXAiXSwibmFtZXMiOlsiQVBJUmVzb3VyY2UiLCJDdXJzb3JQYWdlIiwiYnVpbGRIZWFkZXJzIiwicGF0aCIsIkFzc2lzdGFudHMiLCJjcmVhdGUiLCJib2R5Iiwib3B0aW9ucyIsIl9jbGllbnQiLCJwb3N0IiwiaGVhZGVycyIsInJldHJpZXZlIiwiYXNzaXN0YW50SUQiLCJnZXQiLCJ1cGRhdGUiLCJsaXN0IiwicXVlcnkiLCJnZXRBUElMaXN0IiwiZGVsZXRlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/resources/beta/assistants.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/resources/beta/beta.mjs":
/*!*********************************************************!*\
  !*** ../../node_modules/openai/resources/beta/beta.mjs ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Beta: () => (/* binding */ Beta)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/resource.mjs */ \"(middleware)/../../node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _assistants_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./assistants.mjs */ \"(middleware)/../../node_modules/openai/resources/beta/assistants.mjs\");\n/* harmony import */ var _realtime_realtime_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./realtime/realtime.mjs */ \"(middleware)/../../node_modules/openai/resources/beta/realtime/realtime.mjs\");\n/* harmony import */ var _threads_threads_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./threads/threads.mjs */ \"(middleware)/../../node_modules/openai/resources/beta/threads/threads.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\n\n\n\nclass Beta extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    constructor(){\n        super(...arguments);\n        this.realtime = new _realtime_realtime_mjs__WEBPACK_IMPORTED_MODULE_2__.Realtime(this._client);\n        this.assistants = new _assistants_mjs__WEBPACK_IMPORTED_MODULE_1__.Assistants(this._client);\n        this.threads = new _threads_threads_mjs__WEBPACK_IMPORTED_MODULE_3__.Threads(this._client);\n    }\n}\nBeta.Realtime = _realtime_realtime_mjs__WEBPACK_IMPORTED_MODULE_2__.Realtime;\nBeta.Assistants = _assistants_mjs__WEBPACK_IMPORTED_MODULE_1__.Assistants;\nBeta.Threads = _threads_threads_mjs__WEBPACK_IMPORTED_MODULE_3__.Threads; //# sourceMappingURL=beta.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2JldGEvYmV0YS5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQSxzRkFBc0Y7QUFDaEM7QUFDSjtBQUNIO0FBQ1E7QUFDSDtBQUNBO0FBQ0g7QUFDMUMsTUFBTU8sYUFBYVAsMkRBQVdBO0lBQ2pDUSxhQUFjO1FBQ1YsS0FBSyxJQUFJQztRQUNULElBQUksQ0FBQ0MsUUFBUSxHQUFHLElBQUlQLDREQUFvQixDQUFDLElBQUksQ0FBQ1EsT0FBTztRQUNyRCxJQUFJLENBQUNDLFVBQVUsR0FBRyxJQUFJWCx1REFBd0IsQ0FBQyxJQUFJLENBQUNVLE9BQU87UUFDM0QsSUFBSSxDQUFDRSxPQUFPLEdBQUcsSUFBSVIseURBQWtCLENBQUMsSUFBSSxDQUFDTSxPQUFPO0lBQ3REO0FBQ0o7QUFDQUosS0FBS0gsUUFBUSxHQUFHQSw0REFBUUE7QUFDeEJHLEtBQUtMLFVBQVUsR0FBR0EsdURBQVVBO0FBQzVCSyxLQUFLRCxPQUFPLEdBQUdBLHlEQUFPQSxFQUN0QixpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2JldGEvYmV0YS5tanM/NjgwMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlIGdlbmVyYXRlZCBmcm9tIG91ciBPcGVuQVBJIHNwZWMgYnkgU3RhaW5sZXNzLiBTZWUgQ09OVFJJQlVUSU5HLm1kIGZvciBkZXRhaWxzLlxuaW1wb3J0IHsgQVBJUmVzb3VyY2UgfSBmcm9tIFwiLi4vLi4vY29yZS9yZXNvdXJjZS5tanNcIjtcbmltcG9ydCAqIGFzIEFzc2lzdGFudHNBUEkgZnJvbSBcIi4vYXNzaXN0YW50cy5tanNcIjtcbmltcG9ydCB7IEFzc2lzdGFudHMsIH0gZnJvbSBcIi4vYXNzaXN0YW50cy5tanNcIjtcbmltcG9ydCAqIGFzIFJlYWx0aW1lQVBJIGZyb20gXCIuL3JlYWx0aW1lL3JlYWx0aW1lLm1qc1wiO1xuaW1wb3J0IHsgUmVhbHRpbWUsIH0gZnJvbSBcIi4vcmVhbHRpbWUvcmVhbHRpbWUubWpzXCI7XG5pbXBvcnQgKiBhcyBUaHJlYWRzQVBJIGZyb20gXCIuL3RocmVhZHMvdGhyZWFkcy5tanNcIjtcbmltcG9ydCB7IFRocmVhZHMsIH0gZnJvbSBcIi4vdGhyZWFkcy90aHJlYWRzLm1qc1wiO1xuZXhwb3J0IGNsYXNzIEJldGEgZXh0ZW5kcyBBUElSZXNvdXJjZSB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIHRoaXMucmVhbHRpbWUgPSBuZXcgUmVhbHRpbWVBUEkuUmVhbHRpbWUodGhpcy5fY2xpZW50KTtcbiAgICAgICAgdGhpcy5hc3Npc3RhbnRzID0gbmV3IEFzc2lzdGFudHNBUEkuQXNzaXN0YW50cyh0aGlzLl9jbGllbnQpO1xuICAgICAgICB0aGlzLnRocmVhZHMgPSBuZXcgVGhyZWFkc0FQSS5UaHJlYWRzKHRoaXMuX2NsaWVudCk7XG4gICAgfVxufVxuQmV0YS5SZWFsdGltZSA9IFJlYWx0aW1lO1xuQmV0YS5Bc3Npc3RhbnRzID0gQXNzaXN0YW50cztcbkJldGEuVGhyZWFkcyA9IFRocmVhZHM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1iZXRhLm1qcy5tYXAiXSwibmFtZXMiOlsiQVBJUmVzb3VyY2UiLCJBc3Npc3RhbnRzQVBJIiwiQXNzaXN0YW50cyIsIlJlYWx0aW1lQVBJIiwiUmVhbHRpbWUiLCJUaHJlYWRzQVBJIiwiVGhyZWFkcyIsIkJldGEiLCJjb25zdHJ1Y3RvciIsImFyZ3VtZW50cyIsInJlYWx0aW1lIiwiX2NsaWVudCIsImFzc2lzdGFudHMiLCJ0aHJlYWRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/resources/beta/beta.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/resources/beta/realtime/realtime.mjs":
/*!**********************************************************************!*\
  !*** ../../node_modules/openai/resources/beta/realtime/realtime.mjs ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Realtime: () => (/* binding */ Realtime)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/resource.mjs */ \"(middleware)/../../node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _sessions_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sessions.mjs */ \"(middleware)/../../node_modules/openai/resources/beta/realtime/sessions.mjs\");\n/* harmony import */ var _transcription_sessions_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./transcription-sessions.mjs */ \"(middleware)/../../node_modules/openai/resources/beta/realtime/transcription-sessions.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\n\nclass Realtime extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    constructor(){\n        super(...arguments);\n        this.sessions = new _sessions_mjs__WEBPACK_IMPORTED_MODULE_1__.Sessions(this._client);\n        this.transcriptionSessions = new _transcription_sessions_mjs__WEBPACK_IMPORTED_MODULE_2__.TranscriptionSessions(this._client);\n    }\n}\nRealtime.Sessions = _sessions_mjs__WEBPACK_IMPORTED_MODULE_1__.Sessions;\nRealtime.TranscriptionSessions = _transcription_sessions_mjs__WEBPACK_IMPORTED_MODULE_2__.TranscriptionSessions; //# sourceMappingURL=realtime.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2JldGEvcmVhbHRpbWUvcmVhbHRpbWUubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSxzRkFBc0Y7QUFDN0I7QUFDWDtBQUNIO0FBQzhCO0FBQ0g7QUFDL0QsTUFBTUssaUJBQWlCTCwyREFBV0E7SUFDckNNLGFBQWM7UUFDVixLQUFLLElBQUlDO1FBQ1QsSUFBSSxDQUFDQyxRQUFRLEdBQUcsSUFBSVAsbURBQW9CLENBQUMsSUFBSSxDQUFDUSxPQUFPO1FBQ3JELElBQUksQ0FBQ0MscUJBQXFCLEdBQUcsSUFBSVAsOEVBQThDLENBQUMsSUFBSSxDQUFDTSxPQUFPO0lBQ2hHO0FBQ0o7QUFDQUosU0FBU0gsUUFBUSxHQUFHQSxtREFBUUE7QUFDNUJHLFNBQVNELHFCQUFxQixHQUFHQSw4RUFBcUJBLEVBQ3RELHFDQUFxQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vbm9kZV9tb2R1bGVzL29wZW5haS9yZXNvdXJjZXMvYmV0YS9yZWFsdGltZS9yZWFsdGltZS5tanM/M2RiNCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlIGdlbmVyYXRlZCBmcm9tIG91ciBPcGVuQVBJIHNwZWMgYnkgU3RhaW5sZXNzLiBTZWUgQ09OVFJJQlVUSU5HLm1kIGZvciBkZXRhaWxzLlxuaW1wb3J0IHsgQVBJUmVzb3VyY2UgfSBmcm9tIFwiLi4vLi4vLi4vY29yZS9yZXNvdXJjZS5tanNcIjtcbmltcG9ydCAqIGFzIFNlc3Npb25zQVBJIGZyb20gXCIuL3Nlc3Npb25zLm1qc1wiO1xuaW1wb3J0IHsgU2Vzc2lvbnMsIH0gZnJvbSBcIi4vc2Vzc2lvbnMubWpzXCI7XG5pbXBvcnQgKiBhcyBUcmFuc2NyaXB0aW9uU2Vzc2lvbnNBUEkgZnJvbSBcIi4vdHJhbnNjcmlwdGlvbi1zZXNzaW9ucy5tanNcIjtcbmltcG9ydCB7IFRyYW5zY3JpcHRpb25TZXNzaW9ucywgfSBmcm9tIFwiLi90cmFuc2NyaXB0aW9uLXNlc3Npb25zLm1qc1wiO1xuZXhwb3J0IGNsYXNzIFJlYWx0aW1lIGV4dGVuZHMgQVBJUmVzb3VyY2Uge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICB0aGlzLnNlc3Npb25zID0gbmV3IFNlc3Npb25zQVBJLlNlc3Npb25zKHRoaXMuX2NsaWVudCk7XG4gICAgICAgIHRoaXMudHJhbnNjcmlwdGlvblNlc3Npb25zID0gbmV3IFRyYW5zY3JpcHRpb25TZXNzaW9uc0FQSS5UcmFuc2NyaXB0aW9uU2Vzc2lvbnModGhpcy5fY2xpZW50KTtcbiAgICB9XG59XG5SZWFsdGltZS5TZXNzaW9ucyA9IFNlc3Npb25zO1xuUmVhbHRpbWUuVHJhbnNjcmlwdGlvblNlc3Npb25zID0gVHJhbnNjcmlwdGlvblNlc3Npb25zO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVhbHRpbWUubWpzLm1hcCJdLCJuYW1lcyI6WyJBUElSZXNvdXJjZSIsIlNlc3Npb25zQVBJIiwiU2Vzc2lvbnMiLCJUcmFuc2NyaXB0aW9uU2Vzc2lvbnNBUEkiLCJUcmFuc2NyaXB0aW9uU2Vzc2lvbnMiLCJSZWFsdGltZSIsImNvbnN0cnVjdG9yIiwiYXJndW1lbnRzIiwic2Vzc2lvbnMiLCJfY2xpZW50IiwidHJhbnNjcmlwdGlvblNlc3Npb25zIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/resources/beta/realtime/realtime.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/resources/beta/realtime/sessions.mjs":
/*!**********************************************************************!*\
  !*** ../../node_modules/openai/resources/beta/realtime/sessions.mjs ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Sessions: () => (/* binding */ Sessions)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/resource.mjs */ \"(middleware)/../../node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _internal_headers_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../internal/headers.mjs */ \"(middleware)/../../node_modules/openai/internal/headers.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\nclass Sessions extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Create an ephemeral API token for use in client-side applications with the\n     * Realtime API. Can be configured with the same session parameters as the\n     * `session.update` client event.\n     *\n     * It responds with a session object, plus a `client_secret` key which contains a\n     * usable ephemeral API token that can be used to authenticate browser clients for\n     * the Realtime API.\n     *\n     * @example\n     * ```ts\n     * const session =\n     *   await client.beta.realtime.sessions.create();\n     * ```\n     */ create(body, options) {\n        return this._client.post(\"/realtime/sessions\", {\n            body,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_1__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n} //# sourceMappingURL=sessions.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2JldGEvcmVhbHRpbWUvc2Vzc2lvbnMubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLHNGQUFzRjtBQUM3QjtBQUNJO0FBQ3RELE1BQU1FLGlCQUFpQkYsMkRBQVdBO0lBQ3JDOzs7Ozs7Ozs7Ozs7OztLQWNDLEdBQ0RHLE9BQU9DLElBQUksRUFBRUMsT0FBTyxFQUFFO1FBQ2xCLE9BQU8sSUFBSSxDQUFDQyxPQUFPLENBQUNDLElBQUksQ0FBQyxzQkFBc0I7WUFDM0NIO1lBQ0EsR0FBR0MsT0FBTztZQUNWRyxTQUFTUCxtRUFBWUEsQ0FBQztnQkFBQztvQkFBRSxlQUFlO2dCQUFnQjtnQkFBR0ksU0FBU0c7YUFBUTtRQUNoRjtJQUNKO0FBQ0osRUFDQSxxQ0FBcUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2JldGEvcmVhbHRpbWUvc2Vzc2lvbnMubWpzPzZmMzMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmltcG9ydCB7IEFQSVJlc291cmNlIH0gZnJvbSBcIi4uLy4uLy4uL2NvcmUvcmVzb3VyY2UubWpzXCI7XG5pbXBvcnQgeyBidWlsZEhlYWRlcnMgfSBmcm9tIFwiLi4vLi4vLi4vaW50ZXJuYWwvaGVhZGVycy5tanNcIjtcbmV4cG9ydCBjbGFzcyBTZXNzaW9ucyBleHRlbmRzIEFQSVJlc291cmNlIHtcbiAgICAvKipcbiAgICAgKiBDcmVhdGUgYW4gZXBoZW1lcmFsIEFQSSB0b2tlbiBmb3IgdXNlIGluIGNsaWVudC1zaWRlIGFwcGxpY2F0aW9ucyB3aXRoIHRoZVxuICAgICAqIFJlYWx0aW1lIEFQSS4gQ2FuIGJlIGNvbmZpZ3VyZWQgd2l0aCB0aGUgc2FtZSBzZXNzaW9uIHBhcmFtZXRlcnMgYXMgdGhlXG4gICAgICogYHNlc3Npb24udXBkYXRlYCBjbGllbnQgZXZlbnQuXG4gICAgICpcbiAgICAgKiBJdCByZXNwb25kcyB3aXRoIGEgc2Vzc2lvbiBvYmplY3QsIHBsdXMgYSBgY2xpZW50X3NlY3JldGAga2V5IHdoaWNoIGNvbnRhaW5zIGFcbiAgICAgKiB1c2FibGUgZXBoZW1lcmFsIEFQSSB0b2tlbiB0aGF0IGNhbiBiZSB1c2VkIHRvIGF1dGhlbnRpY2F0ZSBicm93c2VyIGNsaWVudHMgZm9yXG4gICAgICogdGhlIFJlYWx0aW1lIEFQSS5cbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgdHNcbiAgICAgKiBjb25zdCBzZXNzaW9uID1cbiAgICAgKiAgIGF3YWl0IGNsaWVudC5iZXRhLnJlYWx0aW1lLnNlc3Npb25zLmNyZWF0ZSgpO1xuICAgICAqIGBgYFxuICAgICAqL1xuICAgIGNyZWF0ZShib2R5LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQucG9zdCgnL3JlYWx0aW1lL3Nlc3Npb25zJywge1xuICAgICAgICAgICAgYm9keSxcbiAgICAgICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgICAgICBoZWFkZXJzOiBidWlsZEhlYWRlcnMoW3sgJ09wZW5BSS1CZXRhJzogJ2Fzc2lzdGFudHM9djInIH0sIG9wdGlvbnM/LmhlYWRlcnNdKSxcbiAgICAgICAgfSk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2Vzc2lvbnMubWpzLm1hcCJdLCJuYW1lcyI6WyJBUElSZXNvdXJjZSIsImJ1aWxkSGVhZGVycyIsIlNlc3Npb25zIiwiY3JlYXRlIiwiYm9keSIsIm9wdGlvbnMiLCJfY2xpZW50IiwicG9zdCIsImhlYWRlcnMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/resources/beta/realtime/sessions.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/resources/beta/realtime/transcription-sessions.mjs":
/*!************************************************************************************!*\
  !*** ../../node_modules/openai/resources/beta/realtime/transcription-sessions.mjs ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TranscriptionSessions: () => (/* binding */ TranscriptionSessions)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/resource.mjs */ \"(middleware)/../../node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _internal_headers_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../internal/headers.mjs */ \"(middleware)/../../node_modules/openai/internal/headers.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\nclass TranscriptionSessions extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Create an ephemeral API token for use in client-side applications with the\n     * Realtime API specifically for realtime transcriptions. Can be configured with\n     * the same session parameters as the `transcription_session.update` client event.\n     *\n     * It responds with a session object, plus a `client_secret` key which contains a\n     * usable ephemeral API token that can be used to authenticate browser clients for\n     * the Realtime API.\n     *\n     * @example\n     * ```ts\n     * const transcriptionSession =\n     *   await client.beta.realtime.transcriptionSessions.create();\n     * ```\n     */ create(body, options) {\n        return this._client.post(\"/realtime/transcription_sessions\", {\n            body,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_1__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n} //# sourceMappingURL=transcription-sessions.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2JldGEvcmVhbHRpbWUvdHJhbnNjcmlwdGlvbi1zZXNzaW9ucy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsc0ZBQXNGO0FBQzdCO0FBQ0k7QUFDdEQsTUFBTUUsOEJBQThCRiwyREFBV0E7SUFDbEQ7Ozs7Ozs7Ozs7Ozs7O0tBY0MsR0FDREcsT0FBT0MsSUFBSSxFQUFFQyxPQUFPLEVBQUU7UUFDbEIsT0FBTyxJQUFJLENBQUNDLE9BQU8sQ0FBQ0MsSUFBSSxDQUFDLG9DQUFvQztZQUN6REg7WUFDQSxHQUFHQyxPQUFPO1lBQ1ZHLFNBQVNQLG1FQUFZQSxDQUFDO2dCQUFDO29CQUFFLGVBQWU7Z0JBQWdCO2dCQUFHSSxTQUFTRzthQUFRO1FBQ2hGO0lBQ0o7QUFDSixFQUNBLG1EQUFtRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vbm9kZV9tb2R1bGVzL29wZW5haS9yZXNvdXJjZXMvYmV0YS9yZWFsdGltZS90cmFuc2NyaXB0aW9uLXNlc3Npb25zLm1qcz80NzFiIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5pbXBvcnQgeyBBUElSZXNvdXJjZSB9IGZyb20gXCIuLi8uLi8uLi9jb3JlL3Jlc291cmNlLm1qc1wiO1xuaW1wb3J0IHsgYnVpbGRIZWFkZXJzIH0gZnJvbSBcIi4uLy4uLy4uL2ludGVybmFsL2hlYWRlcnMubWpzXCI7XG5leHBvcnQgY2xhc3MgVHJhbnNjcmlwdGlvblNlc3Npb25zIGV4dGVuZHMgQVBJUmVzb3VyY2Uge1xuICAgIC8qKlxuICAgICAqIENyZWF0ZSBhbiBlcGhlbWVyYWwgQVBJIHRva2VuIGZvciB1c2UgaW4gY2xpZW50LXNpZGUgYXBwbGljYXRpb25zIHdpdGggdGhlXG4gICAgICogUmVhbHRpbWUgQVBJIHNwZWNpZmljYWxseSBmb3IgcmVhbHRpbWUgdHJhbnNjcmlwdGlvbnMuIENhbiBiZSBjb25maWd1cmVkIHdpdGhcbiAgICAgKiB0aGUgc2FtZSBzZXNzaW9uIHBhcmFtZXRlcnMgYXMgdGhlIGB0cmFuc2NyaXB0aW9uX3Nlc3Npb24udXBkYXRlYCBjbGllbnQgZXZlbnQuXG4gICAgICpcbiAgICAgKiBJdCByZXNwb25kcyB3aXRoIGEgc2Vzc2lvbiBvYmplY3QsIHBsdXMgYSBgY2xpZW50X3NlY3JldGAga2V5IHdoaWNoIGNvbnRhaW5zIGFcbiAgICAgKiB1c2FibGUgZXBoZW1lcmFsIEFQSSB0b2tlbiB0aGF0IGNhbiBiZSB1c2VkIHRvIGF1dGhlbnRpY2F0ZSBicm93c2VyIGNsaWVudHMgZm9yXG4gICAgICogdGhlIFJlYWx0aW1lIEFQSS5cbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgdHNcbiAgICAgKiBjb25zdCB0cmFuc2NyaXB0aW9uU2Vzc2lvbiA9XG4gICAgICogICBhd2FpdCBjbGllbnQuYmV0YS5yZWFsdGltZS50cmFuc2NyaXB0aW9uU2Vzc2lvbnMuY3JlYXRlKCk7XG4gICAgICogYGBgXG4gICAgICovXG4gICAgY3JlYXRlKGJvZHksIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5wb3N0KCcvcmVhbHRpbWUvdHJhbnNjcmlwdGlvbl9zZXNzaW9ucycsIHtcbiAgICAgICAgICAgIGJvZHksXG4gICAgICAgICAgICAuLi5vcHRpb25zLFxuICAgICAgICAgICAgaGVhZGVyczogYnVpbGRIZWFkZXJzKFt7ICdPcGVuQUktQmV0YSc6ICdhc3Npc3RhbnRzPXYyJyB9LCBvcHRpb25zPy5oZWFkZXJzXSksXG4gICAgICAgIH0pO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRyYW5zY3JpcHRpb24tc2Vzc2lvbnMubWpzLm1hcCJdLCJuYW1lcyI6WyJBUElSZXNvdXJjZSIsImJ1aWxkSGVhZGVycyIsIlRyYW5zY3JpcHRpb25TZXNzaW9ucyIsImNyZWF0ZSIsImJvZHkiLCJvcHRpb25zIiwiX2NsaWVudCIsInBvc3QiLCJoZWFkZXJzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/resources/beta/realtime/transcription-sessions.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/resources/beta/threads/messages.mjs":
/*!*********************************************************************!*\
  !*** ../../node_modules/openai/resources/beta/threads/messages.mjs ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Messages: () => (/* binding */ Messages)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/resource.mjs */ \"(middleware)/../../node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core/pagination.mjs */ \"(middleware)/../../node_modules/openai/core/pagination.mjs\");\n/* harmony import */ var _internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../internal/headers.mjs */ \"(middleware)/../../node_modules/openai/internal/headers.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../internal/utils/path.mjs */ \"(middleware)/../../node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\n/**\n * @deprecated The Assistants API is deprecated in favor of the Responses API\n */ class Messages extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Create a message.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */ create(threadID, body, options) {\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/threads/${threadID}/messages`, {\n            body,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Retrieve a message.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */ retrieve(messageID, params, options) {\n        const { thread_id } = params;\n        return this._client.get(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/threads/${thread_id}/messages/${messageID}`, {\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Modifies a message.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */ update(messageID, params, options) {\n        const { thread_id, ...body } = params;\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/threads/${thread_id}/messages/${messageID}`, {\n            body,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Returns a list of messages for a given thread.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */ list(threadID, query = {}, options) {\n        return this._client.getAPIList(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/threads/${threadID}/messages`, _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__.CursorPage, {\n            query,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Deletes a message.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */ delete(messageID, params, options) {\n        const { thread_id } = params;\n        return this._client.delete(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/threads/${thread_id}/messages/${messageID}`, {\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n} //# sourceMappingURL=messages.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2JldGEvdGhyZWFkcy9tZXNzYWdlcy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQSxzRkFBc0Y7QUFDN0I7QUFDQztBQUNHO0FBQ0w7QUFDeEQ7O0NBRUMsR0FDTSxNQUFNSSxpQkFBaUJKLDJEQUFXQTtJQUNyQzs7OztLQUlDLEdBQ0RLLE9BQU9DLFFBQVEsRUFBRUMsSUFBSSxFQUFFQyxPQUFPLEVBQUU7UUFDNUIsT0FBTyxJQUFJLENBQUNDLE9BQU8sQ0FBQ0MsSUFBSSxDQUFDUCwwREFBSyxDQUFDLFNBQVMsRUFBRUcsU0FBUyxTQUFTLENBQUMsRUFBRTtZQUMzREM7WUFDQSxHQUFHQyxPQUFPO1lBQ1ZHLFNBQVNULG1FQUFZQSxDQUFDO2dCQUFDO29CQUFFLGVBQWU7Z0JBQWdCO2dCQUFHTSxTQUFTRzthQUFRO1FBQ2hGO0lBQ0o7SUFDQTs7OztLQUlDLEdBQ0RDLFNBQVNDLFNBQVMsRUFBRUMsTUFBTSxFQUFFTixPQUFPLEVBQUU7UUFDakMsTUFBTSxFQUFFTyxTQUFTLEVBQUUsR0FBR0Q7UUFDdEIsT0FBTyxJQUFJLENBQUNMLE9BQU8sQ0FBQ08sR0FBRyxDQUFDYiwwREFBSyxDQUFDLFNBQVMsRUFBRVksVUFBVSxVQUFVLEVBQUVGLFVBQVUsQ0FBQyxFQUFFO1lBQ3hFLEdBQUdMLE9BQU87WUFDVkcsU0FBU1QsbUVBQVlBLENBQUM7Z0JBQUM7b0JBQUUsZUFBZTtnQkFBZ0I7Z0JBQUdNLFNBQVNHO2FBQVE7UUFDaEY7SUFDSjtJQUNBOzs7O0tBSUMsR0FDRE0sT0FBT0osU0FBUyxFQUFFQyxNQUFNLEVBQUVOLE9BQU8sRUFBRTtRQUMvQixNQUFNLEVBQUVPLFNBQVMsRUFBRSxHQUFHUixNQUFNLEdBQUdPO1FBQy9CLE9BQU8sSUFBSSxDQUFDTCxPQUFPLENBQUNDLElBQUksQ0FBQ1AsMERBQUssQ0FBQyxTQUFTLEVBQUVZLFVBQVUsVUFBVSxFQUFFRixVQUFVLENBQUMsRUFBRTtZQUN6RU47WUFDQSxHQUFHQyxPQUFPO1lBQ1ZHLFNBQVNULG1FQUFZQSxDQUFDO2dCQUFDO29CQUFFLGVBQWU7Z0JBQWdCO2dCQUFHTSxTQUFTRzthQUFRO1FBQ2hGO0lBQ0o7SUFDQTs7OztLQUlDLEdBQ0RPLEtBQUtaLFFBQVEsRUFBRWEsUUFBUSxDQUFDLENBQUMsRUFBRVgsT0FBTyxFQUFFO1FBQ2hDLE9BQU8sSUFBSSxDQUFDQyxPQUFPLENBQUNXLFVBQVUsQ0FBQ2pCLDBEQUFLLENBQUMsU0FBUyxFQUFFRyxTQUFTLFNBQVMsQ0FBQyxFQUFHTCw0REFBVUEsRUFBRztZQUMvRWtCO1lBQ0EsR0FBR1gsT0FBTztZQUNWRyxTQUFTVCxtRUFBWUEsQ0FBQztnQkFBQztvQkFBRSxlQUFlO2dCQUFnQjtnQkFBR00sU0FBU0c7YUFBUTtRQUNoRjtJQUNKO0lBQ0E7Ozs7S0FJQyxHQUNEVSxPQUFPUixTQUFTLEVBQUVDLE1BQU0sRUFBRU4sT0FBTyxFQUFFO1FBQy9CLE1BQU0sRUFBRU8sU0FBUyxFQUFFLEdBQUdEO1FBQ3RCLE9BQU8sSUFBSSxDQUFDTCxPQUFPLENBQUNZLE1BQU0sQ0FBQ2xCLDBEQUFLLENBQUMsU0FBUyxFQUFFWSxVQUFVLFVBQVUsRUFBRUYsVUFBVSxDQUFDLEVBQUU7WUFDM0UsR0FBR0wsT0FBTztZQUNWRyxTQUFTVCxtRUFBWUEsQ0FBQztnQkFBQztvQkFBRSxlQUFlO2dCQUFnQjtnQkFBR00sU0FBU0c7YUFBUTtRQUNoRjtJQUNKO0FBQ0osRUFDQSxxQ0FBcUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2JldGEvdGhyZWFkcy9tZXNzYWdlcy5tanM/NTBhMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlIGdlbmVyYXRlZCBmcm9tIG91ciBPcGVuQVBJIHNwZWMgYnkgU3RhaW5sZXNzLiBTZWUgQ09OVFJJQlVUSU5HLm1kIGZvciBkZXRhaWxzLlxuaW1wb3J0IHsgQVBJUmVzb3VyY2UgfSBmcm9tIFwiLi4vLi4vLi4vY29yZS9yZXNvdXJjZS5tanNcIjtcbmltcG9ydCB7IEN1cnNvclBhZ2UgfSBmcm9tIFwiLi4vLi4vLi4vY29yZS9wYWdpbmF0aW9uLm1qc1wiO1xuaW1wb3J0IHsgYnVpbGRIZWFkZXJzIH0gZnJvbSBcIi4uLy4uLy4uL2ludGVybmFsL2hlYWRlcnMubWpzXCI7XG5pbXBvcnQgeyBwYXRoIH0gZnJvbSBcIi4uLy4uLy4uL2ludGVybmFsL3V0aWxzL3BhdGgubWpzXCI7XG4vKipcbiAqIEBkZXByZWNhdGVkIFRoZSBBc3Npc3RhbnRzIEFQSSBpcyBkZXByZWNhdGVkIGluIGZhdm9yIG9mIHRoZSBSZXNwb25zZXMgQVBJXG4gKi9cbmV4cG9ydCBjbGFzcyBNZXNzYWdlcyBleHRlbmRzIEFQSVJlc291cmNlIHtcbiAgICAvKipcbiAgICAgKiBDcmVhdGUgYSBtZXNzYWdlLlxuICAgICAqXG4gICAgICogQGRlcHJlY2F0ZWQgVGhlIEFzc2lzdGFudHMgQVBJIGlzIGRlcHJlY2F0ZWQgaW4gZmF2b3Igb2YgdGhlIFJlc3BvbnNlcyBBUElcbiAgICAgKi9cbiAgICBjcmVhdGUodGhyZWFkSUQsIGJvZHksIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5wb3N0KHBhdGggYC90aHJlYWRzLyR7dGhyZWFkSUR9L21lc3NhZ2VzYCwge1xuICAgICAgICAgICAgYm9keSxcbiAgICAgICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgICAgICBoZWFkZXJzOiBidWlsZEhlYWRlcnMoW3sgJ09wZW5BSS1CZXRhJzogJ2Fzc2lzdGFudHM9djInIH0sIG9wdGlvbnM/LmhlYWRlcnNdKSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHJpZXZlIGEgbWVzc2FnZS5cbiAgICAgKlxuICAgICAqIEBkZXByZWNhdGVkIFRoZSBBc3Npc3RhbnRzIEFQSSBpcyBkZXByZWNhdGVkIGluIGZhdm9yIG9mIHRoZSBSZXNwb25zZXMgQVBJXG4gICAgICovXG4gICAgcmV0cmlldmUobWVzc2FnZUlELCBwYXJhbXMsIG9wdGlvbnMpIHtcbiAgICAgICAgY29uc3QgeyB0aHJlYWRfaWQgfSA9IHBhcmFtcztcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5nZXQocGF0aCBgL3RocmVhZHMvJHt0aHJlYWRfaWR9L21lc3NhZ2VzLyR7bWVzc2FnZUlEfWAsIHtcbiAgICAgICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgICAgICBoZWFkZXJzOiBidWlsZEhlYWRlcnMoW3sgJ09wZW5BSS1CZXRhJzogJ2Fzc2lzdGFudHM9djInIH0sIG9wdGlvbnM/LmhlYWRlcnNdKSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIE1vZGlmaWVzIGEgbWVzc2FnZS5cbiAgICAgKlxuICAgICAqIEBkZXByZWNhdGVkIFRoZSBBc3Npc3RhbnRzIEFQSSBpcyBkZXByZWNhdGVkIGluIGZhdm9yIG9mIHRoZSBSZXNwb25zZXMgQVBJXG4gICAgICovXG4gICAgdXBkYXRlKG1lc3NhZ2VJRCwgcGFyYW1zLCBvcHRpb25zKSB7XG4gICAgICAgIGNvbnN0IHsgdGhyZWFkX2lkLCAuLi5ib2R5IH0gPSBwYXJhbXM7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQucG9zdChwYXRoIGAvdGhyZWFkcy8ke3RocmVhZF9pZH0vbWVzc2FnZXMvJHttZXNzYWdlSUR9YCwge1xuICAgICAgICAgICAgYm9keSxcbiAgICAgICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgICAgICBoZWFkZXJzOiBidWlsZEhlYWRlcnMoW3sgJ09wZW5BSS1CZXRhJzogJ2Fzc2lzdGFudHM9djInIH0sIG9wdGlvbnM/LmhlYWRlcnNdKSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHVybnMgYSBsaXN0IG9mIG1lc3NhZ2VzIGZvciBhIGdpdmVuIHRocmVhZC5cbiAgICAgKlxuICAgICAqIEBkZXByZWNhdGVkIFRoZSBBc3Npc3RhbnRzIEFQSSBpcyBkZXByZWNhdGVkIGluIGZhdm9yIG9mIHRoZSBSZXNwb25zZXMgQVBJXG4gICAgICovXG4gICAgbGlzdCh0aHJlYWRJRCwgcXVlcnkgPSB7fSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmdldEFQSUxpc3QocGF0aCBgL3RocmVhZHMvJHt0aHJlYWRJRH0vbWVzc2FnZXNgLCAoQ3Vyc29yUGFnZSksIHtcbiAgICAgICAgICAgIHF1ZXJ5LFxuICAgICAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgICAgIGhlYWRlcnM6IGJ1aWxkSGVhZGVycyhbeyAnT3BlbkFJLUJldGEnOiAnYXNzaXN0YW50cz12MicgfSwgb3B0aW9ucz8uaGVhZGVyc10pLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogRGVsZXRlcyBhIG1lc3NhZ2UuXG4gICAgICpcbiAgICAgKiBAZGVwcmVjYXRlZCBUaGUgQXNzaXN0YW50cyBBUEkgaXMgZGVwcmVjYXRlZCBpbiBmYXZvciBvZiB0aGUgUmVzcG9uc2VzIEFQSVxuICAgICAqL1xuICAgIGRlbGV0ZShtZXNzYWdlSUQsIHBhcmFtcywgb3B0aW9ucykge1xuICAgICAgICBjb25zdCB7IHRocmVhZF9pZCB9ID0gcGFyYW1zO1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmRlbGV0ZShwYXRoIGAvdGhyZWFkcy8ke3RocmVhZF9pZH0vbWVzc2FnZXMvJHttZXNzYWdlSUR9YCwge1xuICAgICAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgICAgIGhlYWRlcnM6IGJ1aWxkSGVhZGVycyhbeyAnT3BlbkFJLUJldGEnOiAnYXNzaXN0YW50cz12MicgfSwgb3B0aW9ucz8uaGVhZGVyc10pLFxuICAgICAgICB9KTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1tZXNzYWdlcy5tanMubWFwIl0sIm5hbWVzIjpbIkFQSVJlc291cmNlIiwiQ3Vyc29yUGFnZSIsImJ1aWxkSGVhZGVycyIsInBhdGgiLCJNZXNzYWdlcyIsImNyZWF0ZSIsInRocmVhZElEIiwiYm9keSIsIm9wdGlvbnMiLCJfY2xpZW50IiwicG9zdCIsImhlYWRlcnMiLCJyZXRyaWV2ZSIsIm1lc3NhZ2VJRCIsInBhcmFtcyIsInRocmVhZF9pZCIsImdldCIsInVwZGF0ZSIsImxpc3QiLCJxdWVyeSIsImdldEFQSUxpc3QiLCJkZWxldGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/resources/beta/threads/messages.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/resources/beta/threads/runs/runs.mjs":
/*!**********************************************************************!*\
  !*** ../../node_modules/openai/resources/beta/threads/runs/runs.mjs ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Runs: () => (/* binding */ Runs)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../core/resource.mjs */ \"(middleware)/../../node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _steps_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./steps.mjs */ \"(middleware)/../../node_modules/openai/resources/beta/threads/runs/steps.mjs\");\n/* harmony import */ var _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../core/pagination.mjs */ \"(middleware)/../../node_modules/openai/core/pagination.mjs\");\n/* harmony import */ var _internal_headers_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../internal/headers.mjs */ \"(middleware)/../../node_modules/openai/internal/headers.mjs\");\n/* harmony import */ var _lib_AssistantStream_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../lib/AssistantStream.mjs */ \"(middleware)/../../node_modules/openai/lib/AssistantStream.mjs\");\n/* harmony import */ var _internal_utils_sleep_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../internal/utils/sleep.mjs */ \"(middleware)/../../node_modules/openai/internal/utils/sleep.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../internal/utils/path.mjs */ \"(middleware)/../../node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\n\n\n\n\n/**\n * @deprecated The Assistants API is deprecated in favor of the Responses API\n */ class Runs extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    constructor(){\n        super(...arguments);\n        this.steps = new _steps_mjs__WEBPACK_IMPORTED_MODULE_1__.Steps(this._client);\n    }\n    create(threadID, params, options) {\n        const { include, ...body } = params;\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_6__.path`/threads/${threadID}/runs`, {\n            query: {\n                include\n            },\n            body,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_3__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ]),\n            stream: params.stream ?? false\n        });\n    }\n    /**\n     * Retrieves a run.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */ retrieve(runID, params, options) {\n        const { thread_id } = params;\n        return this._client.get(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_6__.path`/threads/${thread_id}/runs/${runID}`, {\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_3__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Modifies a run.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */ update(runID, params, options) {\n        const { thread_id, ...body } = params;\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_6__.path`/threads/${thread_id}/runs/${runID}`, {\n            body,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_3__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Returns a list of runs belonging to a thread.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */ list(threadID, query = {}, options) {\n        return this._client.getAPIList(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_6__.path`/threads/${threadID}/runs`, _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_2__.CursorPage, {\n            query,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_3__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Cancels a run that is `in_progress`.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */ cancel(runID, params, options) {\n        const { thread_id } = params;\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_6__.path`/threads/${thread_id}/runs/${runID}/cancel`, {\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_3__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * A helper to create a run an poll for a terminal state. More information on Run\n     * lifecycles can be found here:\n     * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n     */ async createAndPoll(threadId, body, options) {\n        const run = await this.create(threadId, body, options);\n        return await this.poll(run.id, {\n            thread_id: threadId\n        }, options);\n    }\n    /**\n     * Create a Run stream\n     *\n     * @deprecated use `stream` instead\n     */ createAndStream(threadId, body, options) {\n        return _lib_AssistantStream_mjs__WEBPACK_IMPORTED_MODULE_4__.AssistantStream.createAssistantStream(threadId, this._client.beta.threads.runs, body, options);\n    }\n    /**\n     * A helper to poll a run status until it reaches a terminal state. More\n     * information on Run lifecycles can be found here:\n     * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n     */ async poll(runId, params, options) {\n        const headers = (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_3__.buildHeaders)([\n            options?.headers,\n            {\n                \"X-Stainless-Poll-Helper\": \"true\",\n                \"X-Stainless-Custom-Poll-Interval\": options?.pollIntervalMs?.toString() ?? undefined\n            }\n        ]);\n        while(true){\n            const { data: run, response } = await this.retrieve(runId, params, {\n                ...options,\n                headers: {\n                    ...options?.headers,\n                    ...headers\n                }\n            }).withResponse();\n            switch(run.status){\n                //If we are in any sort of intermediate state we poll\n                case \"queued\":\n                case \"in_progress\":\n                case \"cancelling\":\n                    let sleepInterval = 5000;\n                    if (options?.pollIntervalMs) {\n                        sleepInterval = options.pollIntervalMs;\n                    } else {\n                        const headerInterval = response.headers.get(\"openai-poll-after-ms\");\n                        if (headerInterval) {\n                            const headerIntervalMs = parseInt(headerInterval);\n                            if (!isNaN(headerIntervalMs)) {\n                                sleepInterval = headerIntervalMs;\n                            }\n                        }\n                    }\n                    await (0,_internal_utils_sleep_mjs__WEBPACK_IMPORTED_MODULE_5__.sleep)(sleepInterval);\n                    break;\n                //We return the run in any terminal state.\n                case \"requires_action\":\n                case \"incomplete\":\n                case \"cancelled\":\n                case \"completed\":\n                case \"failed\":\n                case \"expired\":\n                    return run;\n            }\n        }\n    }\n    /**\n     * Create a Run stream\n     */ stream(threadId, body, options) {\n        return _lib_AssistantStream_mjs__WEBPACK_IMPORTED_MODULE_4__.AssistantStream.createAssistantStream(threadId, this._client.beta.threads.runs, body, options);\n    }\n    submitToolOutputs(runID, params, options) {\n        const { thread_id, ...body } = params;\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_6__.path`/threads/${thread_id}/runs/${runID}/submit_tool_outputs`, {\n            body,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_3__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ]),\n            stream: params.stream ?? false\n        });\n    }\n    /**\n     * A helper to submit a tool output to a run and poll for a terminal run state.\n     * More information on Run lifecycles can be found here:\n     * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n     */ async submitToolOutputsAndPoll(runId, params, options) {\n        const run = await this.submitToolOutputs(runId, params, options);\n        return await this.poll(run.id, params, options);\n    }\n    /**\n     * Submit the tool outputs from a previous run and stream the run to a terminal\n     * state. More information on Run lifecycles can be found here:\n     * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n     */ submitToolOutputsStream(runId, params, options) {\n        return _lib_AssistantStream_mjs__WEBPACK_IMPORTED_MODULE_4__.AssistantStream.createToolAssistantStream(runId, this._client.beta.threads.runs, params, options);\n    }\n}\nRuns.Steps = _steps_mjs__WEBPACK_IMPORTED_MODULE_1__.Steps; //# sourceMappingURL=runs.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/resources/beta/threads/runs/runs.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/resources/beta/threads/runs/steps.mjs":
/*!***********************************************************************!*\
  !*** ../../node_modules/openai/resources/beta/threads/runs/steps.mjs ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Steps: () => (/* binding */ Steps)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../core/resource.mjs */ \"(middleware)/../../node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../core/pagination.mjs */ \"(middleware)/../../node_modules/openai/core/pagination.mjs\");\n/* harmony import */ var _internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../internal/headers.mjs */ \"(middleware)/../../node_modules/openai/internal/headers.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../internal/utils/path.mjs */ \"(middleware)/../../node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\n/**\n * @deprecated The Assistants API is deprecated in favor of the Responses API\n */ class Steps extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Retrieves a run step.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */ retrieve(stepID, params, options) {\n        const { thread_id, run_id, ...query } = params;\n        return this._client.get(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/threads/${thread_id}/runs/${run_id}/steps/${stepID}`, {\n            query,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Returns a list of run steps belonging to a run.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */ list(runID, params, options) {\n        const { thread_id, ...query } = params;\n        return this._client.getAPIList(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/threads/${thread_id}/runs/${runID}/steps`, _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__.CursorPage, {\n            query,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n} //# sourceMappingURL=steps.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2JldGEvdGhyZWFkcy9ydW5zL3N0ZXBzLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBLHNGQUFzRjtBQUMxQjtBQUNDO0FBQ0c7QUFDTDtBQUMzRDs7Q0FFQyxHQUNNLE1BQU1JLGNBQWNKLDJEQUFXQTtJQUNsQzs7OztLQUlDLEdBQ0RLLFNBQVNDLE1BQU0sRUFBRUMsTUFBTSxFQUFFQyxPQUFPLEVBQUU7UUFDOUIsTUFBTSxFQUFFQyxTQUFTLEVBQUVDLE1BQU0sRUFBRSxHQUFHQyxPQUFPLEdBQUdKO1FBQ3hDLE9BQU8sSUFBSSxDQUFDSyxPQUFPLENBQUNDLEdBQUcsQ0FBQ1YsMERBQUssQ0FBQyxTQUFTLEVBQUVNLFVBQVUsTUFBTSxFQUFFQyxPQUFPLE9BQU8sRUFBRUosT0FBTyxDQUFDLEVBQUU7WUFDakZLO1lBQ0EsR0FBR0gsT0FBTztZQUNWTSxTQUFTWixtRUFBWUEsQ0FBQztnQkFBQztvQkFBRSxlQUFlO2dCQUFnQjtnQkFBR00sU0FBU007YUFBUTtRQUNoRjtJQUNKO0lBQ0E7Ozs7S0FJQyxHQUNEQyxLQUFLQyxLQUFLLEVBQUVULE1BQU0sRUFBRUMsT0FBTyxFQUFFO1FBQ3pCLE1BQU0sRUFBRUMsU0FBUyxFQUFFLEdBQUdFLE9BQU8sR0FBR0o7UUFDaEMsT0FBTyxJQUFJLENBQUNLLE9BQU8sQ0FBQ0ssVUFBVSxDQUFDZCwwREFBSyxDQUFDLFNBQVMsRUFBRU0sVUFBVSxNQUFNLEVBQUVPLE1BQU0sTUFBTSxDQUFDLEVBQUdmLDREQUFVQSxFQUFHO1lBQzNGVTtZQUNBLEdBQUdILE9BQU87WUFDVk0sU0FBU1osbUVBQVlBLENBQUM7Z0JBQUM7b0JBQUUsZUFBZTtnQkFBZ0I7Z0JBQUdNLFNBQVNNO2FBQVE7UUFDaEY7SUFDSjtBQUNKLEVBQ0Esa0NBQWtDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9iZXRhL3RocmVhZHMvcnVucy9zdGVwcy5tanM/ZTRjYSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlIGdlbmVyYXRlZCBmcm9tIG91ciBPcGVuQVBJIHNwZWMgYnkgU3RhaW5sZXNzLiBTZWUgQ09OVFJJQlVUSU5HLm1kIGZvciBkZXRhaWxzLlxuaW1wb3J0IHsgQVBJUmVzb3VyY2UgfSBmcm9tIFwiLi4vLi4vLi4vLi4vY29yZS9yZXNvdXJjZS5tanNcIjtcbmltcG9ydCB7IEN1cnNvclBhZ2UgfSBmcm9tIFwiLi4vLi4vLi4vLi4vY29yZS9wYWdpbmF0aW9uLm1qc1wiO1xuaW1wb3J0IHsgYnVpbGRIZWFkZXJzIH0gZnJvbSBcIi4uLy4uLy4uLy4uL2ludGVybmFsL2hlYWRlcnMubWpzXCI7XG5pbXBvcnQgeyBwYXRoIH0gZnJvbSBcIi4uLy4uLy4uLy4uL2ludGVybmFsL3V0aWxzL3BhdGgubWpzXCI7XG4vKipcbiAqIEBkZXByZWNhdGVkIFRoZSBBc3Npc3RhbnRzIEFQSSBpcyBkZXByZWNhdGVkIGluIGZhdm9yIG9mIHRoZSBSZXNwb25zZXMgQVBJXG4gKi9cbmV4cG9ydCBjbGFzcyBTdGVwcyBleHRlbmRzIEFQSVJlc291cmNlIHtcbiAgICAvKipcbiAgICAgKiBSZXRyaWV2ZXMgYSBydW4gc3RlcC5cbiAgICAgKlxuICAgICAqIEBkZXByZWNhdGVkIFRoZSBBc3Npc3RhbnRzIEFQSSBpcyBkZXByZWNhdGVkIGluIGZhdm9yIG9mIHRoZSBSZXNwb25zZXMgQVBJXG4gICAgICovXG4gICAgcmV0cmlldmUoc3RlcElELCBwYXJhbXMsIG9wdGlvbnMpIHtcbiAgICAgICAgY29uc3QgeyB0aHJlYWRfaWQsIHJ1bl9pZCwgLi4ucXVlcnkgfSA9IHBhcmFtcztcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5nZXQocGF0aCBgL3RocmVhZHMvJHt0aHJlYWRfaWR9L3J1bnMvJHtydW5faWR9L3N0ZXBzLyR7c3RlcElEfWAsIHtcbiAgICAgICAgICAgIHF1ZXJ5LFxuICAgICAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgICAgIGhlYWRlcnM6IGJ1aWxkSGVhZGVycyhbeyAnT3BlbkFJLUJldGEnOiAnYXNzaXN0YW50cz12MicgfSwgb3B0aW9ucz8uaGVhZGVyc10pLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0dXJucyBhIGxpc3Qgb2YgcnVuIHN0ZXBzIGJlbG9uZ2luZyB0byBhIHJ1bi5cbiAgICAgKlxuICAgICAqIEBkZXByZWNhdGVkIFRoZSBBc3Npc3RhbnRzIEFQSSBpcyBkZXByZWNhdGVkIGluIGZhdm9yIG9mIHRoZSBSZXNwb25zZXMgQVBJXG4gICAgICovXG4gICAgbGlzdChydW5JRCwgcGFyYW1zLCBvcHRpb25zKSB7XG4gICAgICAgIGNvbnN0IHsgdGhyZWFkX2lkLCAuLi5xdWVyeSB9ID0gcGFyYW1zO1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmdldEFQSUxpc3QocGF0aCBgL3RocmVhZHMvJHt0aHJlYWRfaWR9L3J1bnMvJHtydW5JRH0vc3RlcHNgLCAoQ3Vyc29yUGFnZSksIHtcbiAgICAgICAgICAgIHF1ZXJ5LFxuICAgICAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgICAgIGhlYWRlcnM6IGJ1aWxkSGVhZGVycyhbeyAnT3BlbkFJLUJldGEnOiAnYXNzaXN0YW50cz12MicgfSwgb3B0aW9ucz8uaGVhZGVyc10pLFxuICAgICAgICB9KTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zdGVwcy5tanMubWFwIl0sIm5hbWVzIjpbIkFQSVJlc291cmNlIiwiQ3Vyc29yUGFnZSIsImJ1aWxkSGVhZGVycyIsInBhdGgiLCJTdGVwcyIsInJldHJpZXZlIiwic3RlcElEIiwicGFyYW1zIiwib3B0aW9ucyIsInRocmVhZF9pZCIsInJ1bl9pZCIsInF1ZXJ5IiwiX2NsaWVudCIsImdldCIsImhlYWRlcnMiLCJsaXN0IiwicnVuSUQiLCJnZXRBUElMaXN0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/resources/beta/threads/runs/steps.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/resources/beta/threads/threads.mjs":
/*!********************************************************************!*\
  !*** ../../node_modules/openai/resources/beta/threads/threads.mjs ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Threads: () => (/* binding */ Threads)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/resource.mjs */ \"(middleware)/../../node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _messages_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./messages.mjs */ \"(middleware)/../../node_modules/openai/resources/beta/threads/messages.mjs\");\n/* harmony import */ var _runs_runs_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./runs/runs.mjs */ \"(middleware)/../../node_modules/openai/resources/beta/threads/runs/runs.mjs\");\n/* harmony import */ var _internal_headers_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../internal/headers.mjs */ \"(middleware)/../../node_modules/openai/internal/headers.mjs\");\n/* harmony import */ var _lib_AssistantStream_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../lib/AssistantStream.mjs */ \"(middleware)/../../node_modules/openai/lib/AssistantStream.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../internal/utils/path.mjs */ \"(middleware)/../../node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\n\n\n\n\n/**\n * @deprecated The Assistants API is deprecated in favor of the Responses API\n */ class Threads extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    constructor(){\n        super(...arguments);\n        this.runs = new _runs_runs_mjs__WEBPACK_IMPORTED_MODULE_2__.Runs(this._client);\n        this.messages = new _messages_mjs__WEBPACK_IMPORTED_MODULE_1__.Messages(this._client);\n    }\n    /**\n     * Create a thread.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */ create(body = {}, options) {\n        return this._client.post(\"/threads\", {\n            body,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_3__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Retrieves a thread.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */ retrieve(threadID, options) {\n        return this._client.get(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_5__.path`/threads/${threadID}`, {\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_3__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Modifies a thread.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */ update(threadID, body, options) {\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_5__.path`/threads/${threadID}`, {\n            body,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_3__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Delete a thread.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */ delete(threadID, options) {\n        return this._client.delete(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_5__.path`/threads/${threadID}`, {\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_3__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    createAndRun(body, options) {\n        return this._client.post(\"/threads/runs\", {\n            body,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_3__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ]),\n            stream: body.stream ?? false\n        });\n    }\n    /**\n     * A helper to create a thread, start a run and then poll for a terminal state.\n     * More information on Run lifecycles can be found here:\n     * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n     */ async createAndRunPoll(body, options) {\n        const run = await this.createAndRun(body, options);\n        return await this.runs.poll(run.id, {\n            thread_id: run.thread_id\n        }, options);\n    }\n    /**\n     * Create a thread and stream the run back\n     */ createAndRunStream(body, options) {\n        return _lib_AssistantStream_mjs__WEBPACK_IMPORTED_MODULE_4__.AssistantStream.createThreadAssistantStream(body, this._client.beta.threads, options);\n    }\n}\nThreads.Runs = _runs_runs_mjs__WEBPACK_IMPORTED_MODULE_2__.Runs;\nThreads.Messages = _messages_mjs__WEBPACK_IMPORTED_MODULE_1__.Messages; //# sourceMappingURL=threads.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2JldGEvdGhyZWFkcy90aHJlYWRzLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUEsc0ZBQXNGO0FBQzdCO0FBQ1g7QUFDSDtBQUNBO0FBQ0g7QUFDcUI7QUFDTTtBQUNYO0FBQ3hEOztDQUVDLEdBQ00sTUFBTVEsZ0JBQWdCUiwyREFBV0E7SUFDcENTLGFBQWM7UUFDVixLQUFLLElBQUlDO1FBQ1QsSUFBSSxDQUFDQyxJQUFJLEdBQUcsSUFBSVIsZ0RBQVksQ0FBQyxJQUFJLENBQUNTLE9BQU87UUFDekMsSUFBSSxDQUFDQyxRQUFRLEdBQUcsSUFBSVosbURBQW9CLENBQUMsSUFBSSxDQUFDVyxPQUFPO0lBQ3pEO0lBQ0E7Ozs7S0FJQyxHQUNERSxPQUFPQyxPQUFPLENBQUMsQ0FBQyxFQUFFQyxPQUFPLEVBQUU7UUFDdkIsT0FBTyxJQUFJLENBQUNKLE9BQU8sQ0FBQ0ssSUFBSSxDQUFDLFlBQVk7WUFDakNGO1lBQ0EsR0FBR0MsT0FBTztZQUNWRSxTQUFTYixtRUFBWUEsQ0FBQztnQkFBQztvQkFBRSxlQUFlO2dCQUFnQjtnQkFBR1csU0FBU0U7YUFBUTtRQUNoRjtJQUNKO0lBQ0E7Ozs7S0FJQyxHQUNEQyxTQUFTQyxRQUFRLEVBQUVKLE9BQU8sRUFBRTtRQUN4QixPQUFPLElBQUksQ0FBQ0osT0FBTyxDQUFDUyxHQUFHLENBQUNkLDBEQUFLLENBQUMsU0FBUyxFQUFFYSxTQUFTLENBQUMsRUFBRTtZQUNqRCxHQUFHSixPQUFPO1lBQ1ZFLFNBQVNiLG1FQUFZQSxDQUFDO2dCQUFDO29CQUFFLGVBQWU7Z0JBQWdCO2dCQUFHVyxTQUFTRTthQUFRO1FBQ2hGO0lBQ0o7SUFDQTs7OztLQUlDLEdBQ0RJLE9BQU9GLFFBQVEsRUFBRUwsSUFBSSxFQUFFQyxPQUFPLEVBQUU7UUFDNUIsT0FBTyxJQUFJLENBQUNKLE9BQU8sQ0FBQ0ssSUFBSSxDQUFDViwwREFBSyxDQUFDLFNBQVMsRUFBRWEsU0FBUyxDQUFDLEVBQUU7WUFDbERMO1lBQ0EsR0FBR0MsT0FBTztZQUNWRSxTQUFTYixtRUFBWUEsQ0FBQztnQkFBQztvQkFBRSxlQUFlO2dCQUFnQjtnQkFBR1csU0FBU0U7YUFBUTtRQUNoRjtJQUNKO0lBQ0E7Ozs7S0FJQyxHQUNESyxPQUFPSCxRQUFRLEVBQUVKLE9BQU8sRUFBRTtRQUN0QixPQUFPLElBQUksQ0FBQ0osT0FBTyxDQUFDVyxNQUFNLENBQUNoQiwwREFBSyxDQUFDLFNBQVMsRUFBRWEsU0FBUyxDQUFDLEVBQUU7WUFDcEQsR0FBR0osT0FBTztZQUNWRSxTQUFTYixtRUFBWUEsQ0FBQztnQkFBQztvQkFBRSxlQUFlO2dCQUFnQjtnQkFBR1csU0FBU0U7YUFBUTtRQUNoRjtJQUNKO0lBQ0FNLGFBQWFULElBQUksRUFBRUMsT0FBTyxFQUFFO1FBQ3hCLE9BQU8sSUFBSSxDQUFDSixPQUFPLENBQUNLLElBQUksQ0FBQyxpQkFBaUI7WUFDdENGO1lBQ0EsR0FBR0MsT0FBTztZQUNWRSxTQUFTYixtRUFBWUEsQ0FBQztnQkFBQztvQkFBRSxlQUFlO2dCQUFnQjtnQkFBR1csU0FBU0U7YUFBUTtZQUM1RU8sUUFBUVYsS0FBS1UsTUFBTSxJQUFJO1FBQzNCO0lBQ0o7SUFDQTs7OztLQUlDLEdBQ0QsTUFBTUMsaUJBQWlCWCxJQUFJLEVBQUVDLE9BQU8sRUFBRTtRQUNsQyxNQUFNVyxNQUFNLE1BQU0sSUFBSSxDQUFDSCxZQUFZLENBQUNULE1BQU1DO1FBQzFDLE9BQU8sTUFBTSxJQUFJLENBQUNMLElBQUksQ0FBQ2lCLElBQUksQ0FBQ0QsSUFBSUUsRUFBRSxFQUFFO1lBQUVDLFdBQVdILElBQUlHLFNBQVM7UUFBQyxHQUFHZDtJQUN0RTtJQUNBOztLQUVDLEdBQ0RlLG1CQUFtQmhCLElBQUksRUFBRUMsT0FBTyxFQUFFO1FBQzlCLE9BQU9WLHFFQUFlQSxDQUFDMEIsMkJBQTJCLENBQUNqQixNQUFNLElBQUksQ0FBQ0gsT0FBTyxDQUFDcUIsSUFBSSxDQUFDQyxPQUFPLEVBQUVsQjtJQUN4RjtBQUNKO0FBQ0FSLFFBQVFKLElBQUksR0FBR0EsZ0RBQUlBO0FBQ25CSSxRQUFRTixRQUFRLEdBQUdBLG1EQUFRQSxFQUMzQixvQ0FBb0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2JldGEvdGhyZWFkcy90aHJlYWRzLm1qcz9iMTZiIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5pbXBvcnQgeyBBUElSZXNvdXJjZSB9IGZyb20gXCIuLi8uLi8uLi9jb3JlL3Jlc291cmNlLm1qc1wiO1xuaW1wb3J0ICogYXMgTWVzc2FnZXNBUEkgZnJvbSBcIi4vbWVzc2FnZXMubWpzXCI7XG5pbXBvcnQgeyBNZXNzYWdlcywgfSBmcm9tIFwiLi9tZXNzYWdlcy5tanNcIjtcbmltcG9ydCAqIGFzIFJ1bnNBUEkgZnJvbSBcIi4vcnVucy9ydW5zLm1qc1wiO1xuaW1wb3J0IHsgUnVucywgfSBmcm9tIFwiLi9ydW5zL3J1bnMubWpzXCI7XG5pbXBvcnQgeyBidWlsZEhlYWRlcnMgfSBmcm9tIFwiLi4vLi4vLi4vaW50ZXJuYWwvaGVhZGVycy5tanNcIjtcbmltcG9ydCB7IEFzc2lzdGFudFN0cmVhbSB9IGZyb20gXCIuLi8uLi8uLi9saWIvQXNzaXN0YW50U3RyZWFtLm1qc1wiO1xuaW1wb3J0IHsgcGF0aCB9IGZyb20gXCIuLi8uLi8uLi9pbnRlcm5hbC91dGlscy9wYXRoLm1qc1wiO1xuLyoqXG4gKiBAZGVwcmVjYXRlZCBUaGUgQXNzaXN0YW50cyBBUEkgaXMgZGVwcmVjYXRlZCBpbiBmYXZvciBvZiB0aGUgUmVzcG9uc2VzIEFQSVxuICovXG5leHBvcnQgY2xhc3MgVGhyZWFkcyBleHRlbmRzIEFQSVJlc291cmNlIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgdGhpcy5ydW5zID0gbmV3IFJ1bnNBUEkuUnVucyh0aGlzLl9jbGllbnQpO1xuICAgICAgICB0aGlzLm1lc3NhZ2VzID0gbmV3IE1lc3NhZ2VzQVBJLk1lc3NhZ2VzKHRoaXMuX2NsaWVudCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENyZWF0ZSBhIHRocmVhZC5cbiAgICAgKlxuICAgICAqIEBkZXByZWNhdGVkIFRoZSBBc3Npc3RhbnRzIEFQSSBpcyBkZXByZWNhdGVkIGluIGZhdm9yIG9mIHRoZSBSZXNwb25zZXMgQVBJXG4gICAgICovXG4gICAgY3JlYXRlKGJvZHkgPSB7fSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LnBvc3QoJy90aHJlYWRzJywge1xuICAgICAgICAgICAgYm9keSxcbiAgICAgICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgICAgICBoZWFkZXJzOiBidWlsZEhlYWRlcnMoW3sgJ09wZW5BSS1CZXRhJzogJ2Fzc2lzdGFudHM9djInIH0sIG9wdGlvbnM/LmhlYWRlcnNdKSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHJpZXZlcyBhIHRocmVhZC5cbiAgICAgKlxuICAgICAqIEBkZXByZWNhdGVkIFRoZSBBc3Npc3RhbnRzIEFQSSBpcyBkZXByZWNhdGVkIGluIGZhdm9yIG9mIHRoZSBSZXNwb25zZXMgQVBJXG4gICAgICovXG4gICAgcmV0cmlldmUodGhyZWFkSUQsIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5nZXQocGF0aCBgL3RocmVhZHMvJHt0aHJlYWRJRH1gLCB7XG4gICAgICAgICAgICAuLi5vcHRpb25zLFxuICAgICAgICAgICAgaGVhZGVyczogYnVpbGRIZWFkZXJzKFt7ICdPcGVuQUktQmV0YSc6ICdhc3Npc3RhbnRzPXYyJyB9LCBvcHRpb25zPy5oZWFkZXJzXSksXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBNb2RpZmllcyBhIHRocmVhZC5cbiAgICAgKlxuICAgICAqIEBkZXByZWNhdGVkIFRoZSBBc3Npc3RhbnRzIEFQSSBpcyBkZXByZWNhdGVkIGluIGZhdm9yIG9mIHRoZSBSZXNwb25zZXMgQVBJXG4gICAgICovXG4gICAgdXBkYXRlKHRocmVhZElELCBib2R5LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQucG9zdChwYXRoIGAvdGhyZWFkcy8ke3RocmVhZElEfWAsIHtcbiAgICAgICAgICAgIGJvZHksXG4gICAgICAgICAgICAuLi5vcHRpb25zLFxuICAgICAgICAgICAgaGVhZGVyczogYnVpbGRIZWFkZXJzKFt7ICdPcGVuQUktQmV0YSc6ICdhc3Npc3RhbnRzPXYyJyB9LCBvcHRpb25zPy5oZWFkZXJzXSksXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBEZWxldGUgYSB0aHJlYWQuXG4gICAgICpcbiAgICAgKiBAZGVwcmVjYXRlZCBUaGUgQXNzaXN0YW50cyBBUEkgaXMgZGVwcmVjYXRlZCBpbiBmYXZvciBvZiB0aGUgUmVzcG9uc2VzIEFQSVxuICAgICAqL1xuICAgIGRlbGV0ZSh0aHJlYWRJRCwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmRlbGV0ZShwYXRoIGAvdGhyZWFkcy8ke3RocmVhZElEfWAsIHtcbiAgICAgICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgICAgICBoZWFkZXJzOiBidWlsZEhlYWRlcnMoW3sgJ09wZW5BSS1CZXRhJzogJ2Fzc2lzdGFudHM9djInIH0sIG9wdGlvbnM/LmhlYWRlcnNdKSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGNyZWF0ZUFuZFJ1bihib2R5LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQucG9zdCgnL3RocmVhZHMvcnVucycsIHtcbiAgICAgICAgICAgIGJvZHksXG4gICAgICAgICAgICAuLi5vcHRpb25zLFxuICAgICAgICAgICAgaGVhZGVyczogYnVpbGRIZWFkZXJzKFt7ICdPcGVuQUktQmV0YSc6ICdhc3Npc3RhbnRzPXYyJyB9LCBvcHRpb25zPy5oZWFkZXJzXSksXG4gICAgICAgICAgICBzdHJlYW06IGJvZHkuc3RyZWFtID8/IGZhbHNlLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQSBoZWxwZXIgdG8gY3JlYXRlIGEgdGhyZWFkLCBzdGFydCBhIHJ1biBhbmQgdGhlbiBwb2xsIGZvciBhIHRlcm1pbmFsIHN0YXRlLlxuICAgICAqIE1vcmUgaW5mb3JtYXRpb24gb24gUnVuIGxpZmVjeWNsZXMgY2FuIGJlIGZvdW5kIGhlcmU6XG4gICAgICogaHR0cHM6Ly9wbGF0Zm9ybS5vcGVuYWkuY29tL2RvY3MvYXNzaXN0YW50cy9ob3ctaXQtd29ya3MvcnVucy1hbmQtcnVuLXN0ZXBzXG4gICAgICovXG4gICAgYXN5bmMgY3JlYXRlQW5kUnVuUG9sbChib2R5LCBvcHRpb25zKSB7XG4gICAgICAgIGNvbnN0IHJ1biA9IGF3YWl0IHRoaXMuY3JlYXRlQW5kUnVuKGJvZHksIG9wdGlvbnMpO1xuICAgICAgICByZXR1cm4gYXdhaXQgdGhpcy5ydW5zLnBvbGwocnVuLmlkLCB7IHRocmVhZF9pZDogcnVuLnRocmVhZF9pZCB9LCBvcHRpb25zKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlIGEgdGhyZWFkIGFuZCBzdHJlYW0gdGhlIHJ1biBiYWNrXG4gICAgICovXG4gICAgY3JlYXRlQW5kUnVuU3RyZWFtKGJvZHksIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIEFzc2lzdGFudFN0cmVhbS5jcmVhdGVUaHJlYWRBc3Npc3RhbnRTdHJlYW0oYm9keSwgdGhpcy5fY2xpZW50LmJldGEudGhyZWFkcywgb3B0aW9ucyk7XG4gICAgfVxufVxuVGhyZWFkcy5SdW5zID0gUnVucztcblRocmVhZHMuTWVzc2FnZXMgPSBNZXNzYWdlcztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRocmVhZHMubWpzLm1hcCJdLCJuYW1lcyI6WyJBUElSZXNvdXJjZSIsIk1lc3NhZ2VzQVBJIiwiTWVzc2FnZXMiLCJSdW5zQVBJIiwiUnVucyIsImJ1aWxkSGVhZGVycyIsIkFzc2lzdGFudFN0cmVhbSIsInBhdGgiLCJUaHJlYWRzIiwiY29uc3RydWN0b3IiLCJhcmd1bWVudHMiLCJydW5zIiwiX2NsaWVudCIsIm1lc3NhZ2VzIiwiY3JlYXRlIiwiYm9keSIsIm9wdGlvbnMiLCJwb3N0IiwiaGVhZGVycyIsInJldHJpZXZlIiwidGhyZWFkSUQiLCJnZXQiLCJ1cGRhdGUiLCJkZWxldGUiLCJjcmVhdGVBbmRSdW4iLCJzdHJlYW0iLCJjcmVhdGVBbmRSdW5Qb2xsIiwicnVuIiwicG9sbCIsImlkIiwidGhyZWFkX2lkIiwiY3JlYXRlQW5kUnVuU3RyZWFtIiwiY3JlYXRlVGhyZWFkQXNzaXN0YW50U3RyZWFtIiwiYmV0YSIsInRocmVhZHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/resources/beta/threads/threads.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/resources/chat/chat.mjs":
/*!*********************************************************!*\
  !*** ../../node_modules/openai/resources/chat/chat.mjs ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Chat: () => (/* binding */ Chat)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/resource.mjs */ \"(middleware)/../../node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _completions_completions_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./completions/completions.mjs */ \"(middleware)/../../node_modules/openai/resources/chat/completions/completions.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\nclass Chat extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    constructor(){\n        super(...arguments);\n        this.completions = new _completions_completions_mjs__WEBPACK_IMPORTED_MODULE_1__.Completions(this._client);\n    }\n}\nChat.Completions = _completions_completions_mjs__WEBPACK_IMPORTED_MODULE_1__.Completions; //# sourceMappingURL=chat.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2NoYXQvY2hhdC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsc0ZBQXNGO0FBQ2hDO0FBQ1U7QUFDSDtBQUN0RCxNQUFNRyxhQUFhSCwyREFBV0E7SUFDakNJLGFBQWM7UUFDVixLQUFLLElBQUlDO1FBQ1QsSUFBSSxDQUFDQyxXQUFXLEdBQUcsSUFBSUwscUVBQTBCLENBQUMsSUFBSSxDQUFDTSxPQUFPO0lBQ2xFO0FBQ0o7QUFDQUosS0FBS0QsV0FBVyxHQUFHQSxxRUFBV0EsRUFDOUIsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9jaGF0L2NoYXQubWpzPzRlNWMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmltcG9ydCB7IEFQSVJlc291cmNlIH0gZnJvbSBcIi4uLy4uL2NvcmUvcmVzb3VyY2UubWpzXCI7XG5pbXBvcnQgKiBhcyBDb21wbGV0aW9uc0FQSSBmcm9tIFwiLi9jb21wbGV0aW9ucy9jb21wbGV0aW9ucy5tanNcIjtcbmltcG9ydCB7IENvbXBsZXRpb25zLCB9IGZyb20gXCIuL2NvbXBsZXRpb25zL2NvbXBsZXRpb25zLm1qc1wiO1xuZXhwb3J0IGNsYXNzIENoYXQgZXh0ZW5kcyBBUElSZXNvdXJjZSB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIHRoaXMuY29tcGxldGlvbnMgPSBuZXcgQ29tcGxldGlvbnNBUEkuQ29tcGxldGlvbnModGhpcy5fY2xpZW50KTtcbiAgICB9XG59XG5DaGF0LkNvbXBsZXRpb25zID0gQ29tcGxldGlvbnM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jaGF0Lm1qcy5tYXAiXSwibmFtZXMiOlsiQVBJUmVzb3VyY2UiLCJDb21wbGV0aW9uc0FQSSIsIkNvbXBsZXRpb25zIiwiQ2hhdCIsImNvbnN0cnVjdG9yIiwiYXJndW1lbnRzIiwiY29tcGxldGlvbnMiLCJfY2xpZW50Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/resources/chat/chat.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/resources/chat/completions/completions.mjs":
/*!****************************************************************************!*\
  !*** ../../node_modules/openai/resources/chat/completions/completions.mjs ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChatCompletionRunner: () => (/* reexport safe */ _lib_ChatCompletionRunner_mjs__WEBPACK_IMPORTED_MODULE_4__.ChatCompletionRunner),\n/* harmony export */   ChatCompletionStream: () => (/* reexport safe */ _lib_ChatCompletionStream_mjs__WEBPACK_IMPORTED_MODULE_6__.ChatCompletionStream),\n/* harmony export */   ChatCompletionStreamingRunner: () => (/* reexport safe */ _lib_ChatCompletionStreamingRunner_mjs__WEBPACK_IMPORTED_MODULE_5__.ChatCompletionStreamingRunner),\n/* harmony export */   Completions: () => (/* binding */ Completions),\n/* harmony export */   ParsingToolFunction: () => (/* reexport safe */ _lib_RunnableFunction_mjs__WEBPACK_IMPORTED_MODULE_8__.ParsingToolFunction)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/resource.mjs */ \"(middleware)/../../node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _messages_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./messages.mjs */ \"(middleware)/../../node_modules/openai/resources/chat/completions/messages.mjs\");\n/* harmony import */ var _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../core/pagination.mjs */ \"(middleware)/../../node_modules/openai/core/pagination.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../internal/utils/path.mjs */ \"(middleware)/../../node_modules/openai/internal/utils/path.mjs\");\n/* harmony import */ var _lib_ChatCompletionRunner_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../lib/ChatCompletionRunner.mjs */ \"(middleware)/../../node_modules/openai/lib/ChatCompletionRunner.mjs\");\n/* harmony import */ var _lib_ChatCompletionStreamingRunner_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../lib/ChatCompletionStreamingRunner.mjs */ \"(middleware)/../../node_modules/openai/lib/ChatCompletionStreamingRunner.mjs\");\n/* harmony import */ var _lib_ChatCompletionStream_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../lib/ChatCompletionStream.mjs */ \"(middleware)/../../node_modules/openai/lib/ChatCompletionStream.mjs\");\n/* harmony import */ var _lib_parser_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../lib/parser.mjs */ \"(middleware)/../../node_modules/openai/lib/parser.mjs\");\n/* harmony import */ var _lib_RunnableFunction_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../lib/RunnableFunction.mjs */ \"(middleware)/../../node_modules/openai/lib/RunnableFunction.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\n\n\n\n\n\nclass Completions extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    constructor(){\n        super(...arguments);\n        this.messages = new _messages_mjs__WEBPACK_IMPORTED_MODULE_1__.Messages(this._client);\n    }\n    create(body, options) {\n        return this._client.post(\"/chat/completions\", {\n            body,\n            ...options,\n            stream: body.stream ?? false\n        });\n    }\n    /**\n     * Get a stored chat completion. Only Chat Completions that have been created with\n     * the `store` parameter set to `true` will be returned.\n     *\n     * @example\n     * ```ts\n     * const chatCompletion =\n     *   await client.chat.completions.retrieve('completion_id');\n     * ```\n     */ retrieve(completionID, options) {\n        return this._client.get(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/chat/completions/${completionID}`, options);\n    }\n    /**\n     * Modify a stored chat completion. Only Chat Completions that have been created\n     * with the `store` parameter set to `true` can be modified. Currently, the only\n     * supported modification is to update the `metadata` field.\n     *\n     * @example\n     * ```ts\n     * const chatCompletion = await client.chat.completions.update(\n     *   'completion_id',\n     *   { metadata: { foo: 'string' } },\n     * );\n     * ```\n     */ update(completionID, body, options) {\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/chat/completions/${completionID}`, {\n            body,\n            ...options\n        });\n    }\n    /**\n     * List stored Chat Completions. Only Chat Completions that have been stored with\n     * the `store` parameter set to `true` will be returned.\n     *\n     * @example\n     * ```ts\n     * // Automatically fetches more pages as needed.\n     * for await (const chatCompletion of client.chat.completions.list()) {\n     *   // ...\n     * }\n     * ```\n     */ list(query = {}, options) {\n        return this._client.getAPIList(\"/chat/completions\", _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_2__.CursorPage, {\n            query,\n            ...options\n        });\n    }\n    /**\n     * Delete a stored chat completion. Only Chat Completions that have been created\n     * with the `store` parameter set to `true` can be deleted.\n     *\n     * @example\n     * ```ts\n     * const chatCompletionDeleted =\n     *   await client.chat.completions.delete('completion_id');\n     * ```\n     */ delete(completionID, options) {\n        return this._client.delete(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/chat/completions/${completionID}`, options);\n    }\n    parse(body, options) {\n        (0,_lib_parser_mjs__WEBPACK_IMPORTED_MODULE_7__.validateInputTools)(body.tools);\n        return this._client.chat.completions.create(body, {\n            ...options,\n            headers: {\n                ...options?.headers,\n                \"X-Stainless-Helper-Method\": \"chat.completions.parse\"\n            }\n        })._thenUnwrap((completion)=>(0,_lib_parser_mjs__WEBPACK_IMPORTED_MODULE_7__.parseChatCompletion)(completion, body));\n    }\n    runTools(body, options) {\n        if (body.stream) {\n            return _lib_ChatCompletionStreamingRunner_mjs__WEBPACK_IMPORTED_MODULE_5__.ChatCompletionStreamingRunner.runTools(this._client, body, options);\n        }\n        return _lib_ChatCompletionRunner_mjs__WEBPACK_IMPORTED_MODULE_4__.ChatCompletionRunner.runTools(this._client, body, options);\n    }\n    /**\n     * Creates a chat completion stream\n     */ stream(body, options) {\n        return _lib_ChatCompletionStream_mjs__WEBPACK_IMPORTED_MODULE_6__.ChatCompletionStream.createChatCompletion(this._client, body, options);\n    }\n}\n\n\n\n\nCompletions.Messages = _messages_mjs__WEBPACK_IMPORTED_MODULE_1__.Messages; //# sourceMappingURL=completions.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/resources/chat/completions/completions.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/resources/chat/completions/index.mjs":
/*!**********************************************************************!*\
  !*** ../../node_modules/openai/resources/chat/completions/index.mjs ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Completions: () => (/* reexport safe */ _completions_mjs__WEBPACK_IMPORTED_MODULE_0__.Completions),\n/* harmony export */   Messages: () => (/* reexport safe */ _messages_mjs__WEBPACK_IMPORTED_MODULE_1__.Messages)\n/* harmony export */ });\n/* harmony import */ var _completions_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./completions.mjs */ \"(middleware)/../../node_modules/openai/resources/chat/completions/completions.mjs\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _completions_mjs__WEBPACK_IMPORTED_MODULE_0__) if([\"default\",\"Completions\",\"Messages\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _completions_mjs__WEBPACK_IMPORTED_MODULE_0__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _messages_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./messages.mjs */ \"(middleware)/../../node_modules/openai/resources/chat/completions/messages.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n //# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2NoYXQvY29tcGxldGlvbnMvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQSxzRkFBc0Y7QUFDckM7QUFDZjtBQUNRLENBQzFDLGtDQUFrQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vbm9kZV9tb2R1bGVzL29wZW5haS9yZXNvdXJjZXMvY2hhdC9jb21wbGV0aW9ucy9pbmRleC5tanM/OTk1YyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlIGdlbmVyYXRlZCBmcm9tIG91ciBPcGVuQVBJIHNwZWMgYnkgU3RhaW5sZXNzLiBTZWUgQ09OVFJJQlVUSU5HLm1kIGZvciBkZXRhaWxzLlxuZXhwb3J0IHsgQ29tcGxldGlvbnMsIH0gZnJvbSBcIi4vY29tcGxldGlvbnMubWpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9jb21wbGV0aW9ucy5tanNcIjtcbmV4cG9ydCB7IE1lc3NhZ2VzIH0gZnJvbSBcIi4vbWVzc2FnZXMubWpzXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5tanMubWFwIl0sIm5hbWVzIjpbIkNvbXBsZXRpb25zIiwiTWVzc2FnZXMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/resources/chat/completions/index.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/resources/chat/completions/messages.mjs":
/*!*************************************************************************!*\
  !*** ../../node_modules/openai/resources/chat/completions/messages.mjs ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Messages: () => (/* binding */ Messages)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/resource.mjs */ \"(middleware)/../../node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core/pagination.mjs */ \"(middleware)/../../node_modules/openai/core/pagination.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../internal/utils/path.mjs */ \"(middleware)/../../node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\nclass Messages extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Get the messages in a stored chat completion. Only Chat Completions that have\n     * been created with the `store` parameter set to `true` will be returned.\n     *\n     * @example\n     * ```ts\n     * // Automatically fetches more pages as needed.\n     * for await (const chatCompletionStoreMessage of client.chat.completions.messages.list(\n     *   'completion_id',\n     * )) {\n     *   // ...\n     * }\n     * ```\n     */ list(completionID, query = {}, options) {\n        return this._client.getAPIList(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__.path`/chat/completions/${completionID}/messages`, _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__.CursorPage, {\n            query,\n            ...options\n        });\n    }\n} //# sourceMappingURL=messages.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2NoYXQvY29tcGxldGlvbnMvbWVzc2FnZXMubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSxzRkFBc0Y7QUFDN0I7QUFDQztBQUNGO0FBQ2pELE1BQU1HLGlCQUFpQkgsMkRBQVdBO0lBQ3JDOzs7Ozs7Ozs7Ozs7O0tBYUMsR0FDREksS0FBS0MsWUFBWSxFQUFFQyxRQUFRLENBQUMsQ0FBQyxFQUFFQyxPQUFPLEVBQUU7UUFDcEMsT0FBTyxJQUFJLENBQUNDLE9BQU8sQ0FBQ0MsVUFBVSxDQUFDUCwwREFBSyxDQUFDLGtCQUFrQixFQUFFRyxhQUFhLFNBQVMsQ0FBQyxFQUFHSiw0REFBVUEsRUFBRztZQUFFSztZQUFPLEdBQUdDLE9BQU87UUFBQztJQUN4SDtBQUNKLEVBQ0EscUNBQXFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9jaGF0L2NvbXBsZXRpb25zL21lc3NhZ2VzLm1qcz8zMGY3Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5pbXBvcnQgeyBBUElSZXNvdXJjZSB9IGZyb20gXCIuLi8uLi8uLi9jb3JlL3Jlc291cmNlLm1qc1wiO1xuaW1wb3J0IHsgQ3Vyc29yUGFnZSB9IGZyb20gXCIuLi8uLi8uLi9jb3JlL3BhZ2luYXRpb24ubWpzXCI7XG5pbXBvcnQgeyBwYXRoIH0gZnJvbSBcIi4uLy4uLy4uL2ludGVybmFsL3V0aWxzL3BhdGgubWpzXCI7XG5leHBvcnQgY2xhc3MgTWVzc2FnZXMgZXh0ZW5kcyBBUElSZXNvdXJjZSB7XG4gICAgLyoqXG4gICAgICogR2V0IHRoZSBtZXNzYWdlcyBpbiBhIHN0b3JlZCBjaGF0IGNvbXBsZXRpb24uIE9ubHkgQ2hhdCBDb21wbGV0aW9ucyB0aGF0IGhhdmVcbiAgICAgKiBiZWVuIGNyZWF0ZWQgd2l0aCB0aGUgYHN0b3JlYCBwYXJhbWV0ZXIgc2V0IHRvIGB0cnVlYCB3aWxsIGJlIHJldHVybmVkLlxuICAgICAqXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGB0c1xuICAgICAqIC8vIEF1dG9tYXRpY2FsbHkgZmV0Y2hlcyBtb3JlIHBhZ2VzIGFzIG5lZWRlZC5cbiAgICAgKiBmb3IgYXdhaXQgKGNvbnN0IGNoYXRDb21wbGV0aW9uU3RvcmVNZXNzYWdlIG9mIGNsaWVudC5jaGF0LmNvbXBsZXRpb25zLm1lc3NhZ2VzLmxpc3QoXG4gICAgICogICAnY29tcGxldGlvbl9pZCcsXG4gICAgICogKSkge1xuICAgICAqICAgLy8gLi4uXG4gICAgICogfVxuICAgICAqIGBgYFxuICAgICAqL1xuICAgIGxpc3QoY29tcGxldGlvbklELCBxdWVyeSA9IHt9LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZ2V0QVBJTGlzdChwYXRoIGAvY2hhdC9jb21wbGV0aW9ucy8ke2NvbXBsZXRpb25JRH0vbWVzc2FnZXNgLCAoQ3Vyc29yUGFnZSksIHsgcXVlcnksIC4uLm9wdGlvbnMgfSk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bWVzc2FnZXMubWpzLm1hcCJdLCJuYW1lcyI6WyJBUElSZXNvdXJjZSIsIkN1cnNvclBhZ2UiLCJwYXRoIiwiTWVzc2FnZXMiLCJsaXN0IiwiY29tcGxldGlvbklEIiwicXVlcnkiLCJvcHRpb25zIiwiX2NsaWVudCIsImdldEFQSUxpc3QiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/resources/chat/completions/messages.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/resources/chat/index.mjs":
/*!**********************************************************!*\
  !*** ../../node_modules/openai/resources/chat/index.mjs ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Chat: () => (/* reexport safe */ _chat_mjs__WEBPACK_IMPORTED_MODULE_0__.Chat),\n/* harmony export */   Completions: () => (/* reexport safe */ _completions_index_mjs__WEBPACK_IMPORTED_MODULE_1__.Completions)\n/* harmony export */ });\n/* harmony import */ var _chat_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chat.mjs */ \"(middleware)/../../node_modules/openai/resources/chat/chat.mjs\");\n/* harmony import */ var _completions_index_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./completions/index.mjs */ \"(middleware)/../../node_modules/openai/resources/chat/completions/index.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n //# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2NoYXQvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSxzRkFBc0Y7QUFDcEQ7QUFDcUIsQ0FDdkQsa0NBQWtDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9jaGF0L2luZGV4Lm1qcz84OTJiIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5leHBvcnQgeyBDaGF0IH0gZnJvbSBcIi4vY2hhdC5tanNcIjtcbmV4cG9ydCB7IENvbXBsZXRpb25zLCB9IGZyb20gXCIuL2NvbXBsZXRpb25zL2luZGV4Lm1qc1wiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXgubWpzLm1hcCJdLCJuYW1lcyI6WyJDaGF0IiwiQ29tcGxldGlvbnMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/resources/chat/index.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/resources/completions.mjs":
/*!***********************************************************!*\
  !*** ../../node_modules/openai/resources/completions.mjs ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Completions: () => (/* binding */ Completions)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/resource.mjs */ \"(middleware)/../../node_modules/openai/core/resource.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nclass Completions extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    create(body, options) {\n        return this._client.post(\"/completions\", {\n            body,\n            ...options,\n            stream: body.stream ?? false\n        });\n    }\n} //# sourceMappingURL=completions.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2NvbXBsZXRpb25zLm1qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLHNGQUFzRjtBQUNuQztBQUM1QyxNQUFNQyxvQkFBb0JELDJEQUFXQTtJQUN4Q0UsT0FBT0MsSUFBSSxFQUFFQyxPQUFPLEVBQUU7UUFDbEIsT0FBTyxJQUFJLENBQUNDLE9BQU8sQ0FBQ0MsSUFBSSxDQUFDLGdCQUFnQjtZQUFFSDtZQUFNLEdBQUdDLE9BQU87WUFBRUcsUUFBUUosS0FBS0ksTUFBTSxJQUFJO1FBQU07SUFDOUY7QUFDSixFQUNBLHdDQUF3QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vbm9kZV9tb2R1bGVzL29wZW5haS9yZXNvdXJjZXMvY29tcGxldGlvbnMubWpzPzNhNmMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmltcG9ydCB7IEFQSVJlc291cmNlIH0gZnJvbSBcIi4uL2NvcmUvcmVzb3VyY2UubWpzXCI7XG5leHBvcnQgY2xhc3MgQ29tcGxldGlvbnMgZXh0ZW5kcyBBUElSZXNvdXJjZSB7XG4gICAgY3JlYXRlKGJvZHksIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5wb3N0KCcvY29tcGxldGlvbnMnLCB7IGJvZHksIC4uLm9wdGlvbnMsIHN0cmVhbTogYm9keS5zdHJlYW0gPz8gZmFsc2UgfSk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29tcGxldGlvbnMubWpzLm1hcCJdLCJuYW1lcyI6WyJBUElSZXNvdXJjZSIsIkNvbXBsZXRpb25zIiwiY3JlYXRlIiwiYm9keSIsIm9wdGlvbnMiLCJfY2xpZW50IiwicG9zdCIsInN0cmVhbSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/resources/completions.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/resources/containers/containers.mjs":
/*!*********************************************************************!*\
  !*** ../../node_modules/openai/resources/containers/containers.mjs ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Containers: () => (/* binding */ Containers)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/resource.mjs */ \"(middleware)/../../node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _files_files_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./files/files.mjs */ \"(middleware)/../../node_modules/openai/resources/containers/files/files.mjs\");\n/* harmony import */ var _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/pagination.mjs */ \"(middleware)/../../node_modules/openai/core/pagination.mjs\");\n/* harmony import */ var _internal_headers_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../internal/headers.mjs */ \"(middleware)/../../node_modules/openai/internal/headers.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../internal/utils/path.mjs */ \"(middleware)/../../node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\n\n\nclass Containers extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    constructor(){\n        super(...arguments);\n        this.files = new _files_files_mjs__WEBPACK_IMPORTED_MODULE_1__.Files(this._client);\n    }\n    /**\n     * Create Container\n     */ create(body, options) {\n        return this._client.post(\"/containers\", {\n            body,\n            ...options\n        });\n    }\n    /**\n     * Retrieve Container\n     */ retrieve(containerID, options) {\n        return this._client.get(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_4__.path`/containers/${containerID}`, options);\n    }\n    /**\n     * List Containers\n     */ list(query = {}, options) {\n        return this._client.getAPIList(\"/containers\", _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_2__.CursorPage, {\n            query,\n            ...options\n        });\n    }\n    /**\n     * Delete Container\n     */ delete(containerID, options) {\n        return this._client.delete(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_4__.path`/containers/${containerID}`, {\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_3__.buildHeaders)([\n                {\n                    Accept: \"*/*\"\n                },\n                options?.headers\n            ])\n        });\n    }\n}\nContainers.Files = _files_files_mjs__WEBPACK_IMPORTED_MODULE_1__.Files; //# sourceMappingURL=containers.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2NvbnRhaW5lcnMvY29udGFpbmVycy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUEsc0ZBQXNGO0FBQ2hDO0FBQ1I7QUFDSDtBQUNZO0FBQ0c7QUFDTDtBQUM5QyxNQUFNTSxtQkFBbUJOLDJEQUFXQTtJQUN2Q08sYUFBYztRQUNWLEtBQUssSUFBSUM7UUFDVCxJQUFJLENBQUNDLEtBQUssR0FBRyxJQUFJUixtREFBYyxDQUFDLElBQUksQ0FBQ1MsT0FBTztJQUNoRDtJQUNBOztLQUVDLEdBQ0RDLE9BQU9DLElBQUksRUFBRUMsT0FBTyxFQUFFO1FBQ2xCLE9BQU8sSUFBSSxDQUFDSCxPQUFPLENBQUNJLElBQUksQ0FBQyxlQUFlO1lBQUVGO1lBQU0sR0FBR0MsT0FBTztRQUFDO0lBQy9EO0lBQ0E7O0tBRUMsR0FDREUsU0FBU0MsV0FBVyxFQUFFSCxPQUFPLEVBQUU7UUFDM0IsT0FBTyxJQUFJLENBQUNILE9BQU8sQ0FBQ08sR0FBRyxDQUFDWiwwREFBSyxDQUFDLFlBQVksRUFBRVcsWUFBWSxDQUFDLEVBQUVIO0lBQy9EO0lBQ0E7O0tBRUMsR0FDREssS0FBS0MsUUFBUSxDQUFDLENBQUMsRUFBRU4sT0FBTyxFQUFFO1FBQ3RCLE9BQU8sSUFBSSxDQUFDSCxPQUFPLENBQUNVLFVBQVUsQ0FBQyxlQUFnQmpCLDREQUFVQSxFQUFHO1lBQUVnQjtZQUFPLEdBQUdOLE9BQU87UUFBQztJQUNwRjtJQUNBOztLQUVDLEdBQ0RRLE9BQU9MLFdBQVcsRUFBRUgsT0FBTyxFQUFFO1FBQ3pCLE9BQU8sSUFBSSxDQUFDSCxPQUFPLENBQUNXLE1BQU0sQ0FBQ2hCLDBEQUFLLENBQUMsWUFBWSxFQUFFVyxZQUFZLENBQUMsRUFBRTtZQUMxRCxHQUFHSCxPQUFPO1lBQ1ZTLFNBQVNsQixtRUFBWUEsQ0FBQztnQkFBQztvQkFBRW1CLFFBQVE7Z0JBQU07Z0JBQUdWLFNBQVNTO2FBQVE7UUFDL0Q7SUFDSjtBQUNKO0FBQ0FoQixXQUFXSixLQUFLLEdBQUdBLG1EQUFLQSxFQUN4Qix1Q0FBdUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2NvbnRhaW5lcnMvY29udGFpbmVycy5tanM/Y2U4ZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlIGdlbmVyYXRlZCBmcm9tIG91ciBPcGVuQVBJIHNwZWMgYnkgU3RhaW5sZXNzLiBTZWUgQ09OVFJJQlVUSU5HLm1kIGZvciBkZXRhaWxzLlxuaW1wb3J0IHsgQVBJUmVzb3VyY2UgfSBmcm9tIFwiLi4vLi4vY29yZS9yZXNvdXJjZS5tanNcIjtcbmltcG9ydCAqIGFzIEZpbGVzQVBJIGZyb20gXCIuL2ZpbGVzL2ZpbGVzLm1qc1wiO1xuaW1wb3J0IHsgRmlsZXMsIH0gZnJvbSBcIi4vZmlsZXMvZmlsZXMubWpzXCI7XG5pbXBvcnQgeyBDdXJzb3JQYWdlIH0gZnJvbSBcIi4uLy4uL2NvcmUvcGFnaW5hdGlvbi5tanNcIjtcbmltcG9ydCB7IGJ1aWxkSGVhZGVycyB9IGZyb20gXCIuLi8uLi9pbnRlcm5hbC9oZWFkZXJzLm1qc1wiO1xuaW1wb3J0IHsgcGF0aCB9IGZyb20gXCIuLi8uLi9pbnRlcm5hbC91dGlscy9wYXRoLm1qc1wiO1xuZXhwb3J0IGNsYXNzIENvbnRhaW5lcnMgZXh0ZW5kcyBBUElSZXNvdXJjZSB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIHRoaXMuZmlsZXMgPSBuZXcgRmlsZXNBUEkuRmlsZXModGhpcy5fY2xpZW50KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlIENvbnRhaW5lclxuICAgICAqL1xuICAgIGNyZWF0ZShib2R5LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQucG9zdCgnL2NvbnRhaW5lcnMnLCB7IGJvZHksIC4uLm9wdGlvbnMgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHJpZXZlIENvbnRhaW5lclxuICAgICAqL1xuICAgIHJldHJpZXZlKGNvbnRhaW5lcklELCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZ2V0KHBhdGggYC9jb250YWluZXJzLyR7Y29udGFpbmVySUR9YCwgb3B0aW9ucyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIExpc3QgQ29udGFpbmVyc1xuICAgICAqL1xuICAgIGxpc3QocXVlcnkgPSB7fSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmdldEFQSUxpc3QoJy9jb250YWluZXJzJywgKEN1cnNvclBhZ2UpLCB7IHF1ZXJ5LCAuLi5vcHRpb25zIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBEZWxldGUgQ29udGFpbmVyXG4gICAgICovXG4gICAgZGVsZXRlKGNvbnRhaW5lcklELCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZGVsZXRlKHBhdGggYC9jb250YWluZXJzLyR7Y29udGFpbmVySUR9YCwge1xuICAgICAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgICAgIGhlYWRlcnM6IGJ1aWxkSGVhZGVycyhbeyBBY2NlcHQ6ICcqLyonIH0sIG9wdGlvbnM/LmhlYWRlcnNdKSxcbiAgICAgICAgfSk7XG4gICAgfVxufVxuQ29udGFpbmVycy5GaWxlcyA9IEZpbGVzO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29udGFpbmVycy5tanMubWFwIl0sIm5hbWVzIjpbIkFQSVJlc291cmNlIiwiRmlsZXNBUEkiLCJGaWxlcyIsIkN1cnNvclBhZ2UiLCJidWlsZEhlYWRlcnMiLCJwYXRoIiwiQ29udGFpbmVycyIsImNvbnN0cnVjdG9yIiwiYXJndW1lbnRzIiwiZmlsZXMiLCJfY2xpZW50IiwiY3JlYXRlIiwiYm9keSIsIm9wdGlvbnMiLCJwb3N0IiwicmV0cmlldmUiLCJjb250YWluZXJJRCIsImdldCIsImxpc3QiLCJxdWVyeSIsImdldEFQSUxpc3QiLCJkZWxldGUiLCJoZWFkZXJzIiwiQWNjZXB0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/resources/containers/containers.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/resources/containers/files/content.mjs":
/*!************************************************************************!*\
  !*** ../../node_modules/openai/resources/containers/files/content.mjs ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Content: () => (/* binding */ Content)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/resource.mjs */ \"(middleware)/../../node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _internal_headers_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../internal/headers.mjs */ \"(middleware)/../../node_modules/openai/internal/headers.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../internal/utils/path.mjs */ \"(middleware)/../../node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\nclass Content extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Retrieve Container File Content\n     */ retrieve(fileID, params, options) {\n        const { container_id } = params;\n        return this._client.get(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__.path`/containers/${container_id}/files/${fileID}/content`, {\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_1__.buildHeaders)([\n                {\n                    Accept: \"application/binary\"\n                },\n                options?.headers\n            ]),\n            __binaryResponse: true\n        });\n    }\n} //# sourceMappingURL=content.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2NvbnRhaW5lcnMvZmlsZXMvY29udGVudC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLHNGQUFzRjtBQUM3QjtBQUNJO0FBQ0w7QUFDakQsTUFBTUcsZ0JBQWdCSCwyREFBV0E7SUFDcEM7O0tBRUMsR0FDREksU0FBU0MsTUFBTSxFQUFFQyxNQUFNLEVBQUVDLE9BQU8sRUFBRTtRQUM5QixNQUFNLEVBQUVDLFlBQVksRUFBRSxHQUFHRjtRQUN6QixPQUFPLElBQUksQ0FBQ0csT0FBTyxDQUFDQyxHQUFHLENBQUNSLDBEQUFLLENBQUMsWUFBWSxFQUFFTSxhQUFhLE9BQU8sRUFBRUgsT0FBTyxRQUFRLENBQUMsRUFBRTtZQUNoRixHQUFHRSxPQUFPO1lBQ1ZJLFNBQVNWLG1FQUFZQSxDQUFDO2dCQUFDO29CQUFFVyxRQUFRO2dCQUFxQjtnQkFBR0wsU0FBU0k7YUFBUTtZQUMxRUUsa0JBQWtCO1FBQ3RCO0lBQ0o7QUFDSixFQUNBLG9DQUFvQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vbm9kZV9tb2R1bGVzL29wZW5haS9yZXNvdXJjZXMvY29udGFpbmVycy9maWxlcy9jb250ZW50Lm1qcz9hN2MxIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5pbXBvcnQgeyBBUElSZXNvdXJjZSB9IGZyb20gXCIuLi8uLi8uLi9jb3JlL3Jlc291cmNlLm1qc1wiO1xuaW1wb3J0IHsgYnVpbGRIZWFkZXJzIH0gZnJvbSBcIi4uLy4uLy4uL2ludGVybmFsL2hlYWRlcnMubWpzXCI7XG5pbXBvcnQgeyBwYXRoIH0gZnJvbSBcIi4uLy4uLy4uL2ludGVybmFsL3V0aWxzL3BhdGgubWpzXCI7XG5leHBvcnQgY2xhc3MgQ29udGVudCBleHRlbmRzIEFQSVJlc291cmNlIHtcbiAgICAvKipcbiAgICAgKiBSZXRyaWV2ZSBDb250YWluZXIgRmlsZSBDb250ZW50XG4gICAgICovXG4gICAgcmV0cmlldmUoZmlsZUlELCBwYXJhbXMsIG9wdGlvbnMpIHtcbiAgICAgICAgY29uc3QgeyBjb250YWluZXJfaWQgfSA9IHBhcmFtcztcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5nZXQocGF0aCBgL2NvbnRhaW5lcnMvJHtjb250YWluZXJfaWR9L2ZpbGVzLyR7ZmlsZUlEfS9jb250ZW50YCwge1xuICAgICAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgICAgIGhlYWRlcnM6IGJ1aWxkSGVhZGVycyhbeyBBY2NlcHQ6ICdhcHBsaWNhdGlvbi9iaW5hcnknIH0sIG9wdGlvbnM/LmhlYWRlcnNdKSxcbiAgICAgICAgICAgIF9fYmluYXJ5UmVzcG9uc2U6IHRydWUsXG4gICAgICAgIH0pO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbnRlbnQubWpzLm1hcCJdLCJuYW1lcyI6WyJBUElSZXNvdXJjZSIsImJ1aWxkSGVhZGVycyIsInBhdGgiLCJDb250ZW50IiwicmV0cmlldmUiLCJmaWxlSUQiLCJwYXJhbXMiLCJvcHRpb25zIiwiY29udGFpbmVyX2lkIiwiX2NsaWVudCIsImdldCIsImhlYWRlcnMiLCJBY2NlcHQiLCJfX2JpbmFyeVJlc3BvbnNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/resources/containers/files/content.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/resources/containers/files/files.mjs":
/*!**********************************************************************!*\
  !*** ../../node_modules/openai/resources/containers/files/files.mjs ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Files: () => (/* binding */ Files)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/resource.mjs */ \"(middleware)/../../node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _content_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./content.mjs */ \"(middleware)/../../node_modules/openai/resources/containers/files/content.mjs\");\n/* harmony import */ var _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../core/pagination.mjs */ \"(middleware)/../../node_modules/openai/core/pagination.mjs\");\n/* harmony import */ var _internal_headers_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../internal/headers.mjs */ \"(middleware)/../../node_modules/openai/internal/headers.mjs\");\n/* harmony import */ var _internal_uploads_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../internal/uploads.mjs */ \"(middleware)/../../node_modules/openai/internal/uploads.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../internal/utils/path.mjs */ \"(middleware)/../../node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\n\n\n\nclass Files extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    constructor(){\n        super(...arguments);\n        this.content = new _content_mjs__WEBPACK_IMPORTED_MODULE_1__.Content(this._client);\n    }\n    /**\n     * Create a Container File\n     *\n     * You can send either a multipart/form-data request with the raw file content, or\n     * a JSON request with a file ID.\n     */ create(containerID, body, options) {\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_5__.path`/containers/${containerID}/files`, (0,_internal_uploads_mjs__WEBPACK_IMPORTED_MODULE_4__.multipartFormRequestOptions)({\n            body,\n            ...options\n        }, this._client));\n    }\n    /**\n     * Retrieve Container File\n     */ retrieve(fileID, params, options) {\n        const { container_id } = params;\n        return this._client.get(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_5__.path`/containers/${container_id}/files/${fileID}`, options);\n    }\n    /**\n     * List Container files\n     */ list(containerID, query = {}, options) {\n        return this._client.getAPIList(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_5__.path`/containers/${containerID}/files`, _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_2__.CursorPage, {\n            query,\n            ...options\n        });\n    }\n    /**\n     * Delete Container File\n     */ delete(fileID, params, options) {\n        const { container_id } = params;\n        return this._client.delete(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_5__.path`/containers/${container_id}/files/${fileID}`, {\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_3__.buildHeaders)([\n                {\n                    Accept: \"*/*\"\n                },\n                options?.headers\n            ])\n        });\n    }\n}\nFiles.Content = _content_mjs__WEBPACK_IMPORTED_MODULE_1__.Content; //# sourceMappingURL=files.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2NvbnRhaW5lcnMvZmlsZXMvZmlsZXMubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQSxzRkFBc0Y7QUFDN0I7QUFDYjtBQUNKO0FBQ2tCO0FBQ0c7QUFDZTtBQUNwQjtBQUNqRCxNQUFNTyxjQUFjUCwyREFBV0E7SUFDbENRLGFBQWM7UUFDVixLQUFLLElBQUlDO1FBQ1QsSUFBSSxDQUFDQyxPQUFPLEdBQUcsSUFBSVQsaURBQWtCLENBQUMsSUFBSSxDQUFDVSxPQUFPO0lBQ3REO0lBQ0E7Ozs7O0tBS0MsR0FDREMsT0FBT0MsV0FBVyxFQUFFQyxJQUFJLEVBQUVDLE9BQU8sRUFBRTtRQUMvQixPQUFPLElBQUksQ0FBQ0osT0FBTyxDQUFDSyxJQUFJLENBQUNWLDBEQUFLLENBQUMsWUFBWSxFQUFFTyxZQUFZLE1BQU0sQ0FBQyxFQUFFUixrRkFBMkJBLENBQUM7WUFBRVM7WUFBTSxHQUFHQyxPQUFPO1FBQUMsR0FBRyxJQUFJLENBQUNKLE9BQU87SUFDcEk7SUFDQTs7S0FFQyxHQUNETSxTQUFTQyxNQUFNLEVBQUVDLE1BQU0sRUFBRUosT0FBTyxFQUFFO1FBQzlCLE1BQU0sRUFBRUssWUFBWSxFQUFFLEdBQUdEO1FBQ3pCLE9BQU8sSUFBSSxDQUFDUixPQUFPLENBQUNVLEdBQUcsQ0FBQ2YsMERBQUssQ0FBQyxZQUFZLEVBQUVjLGFBQWEsT0FBTyxFQUFFRixPQUFPLENBQUMsRUFBRUg7SUFDaEY7SUFDQTs7S0FFQyxHQUNETyxLQUFLVCxXQUFXLEVBQUVVLFFBQVEsQ0FBQyxDQUFDLEVBQUVSLE9BQU8sRUFBRTtRQUNuQyxPQUFPLElBQUksQ0FBQ0osT0FBTyxDQUFDYSxVQUFVLENBQUNsQiwwREFBSyxDQUFDLFlBQVksRUFBRU8sWUFBWSxNQUFNLENBQUMsRUFBR1YsNERBQVVBLEVBQUc7WUFDbEZvQjtZQUNBLEdBQUdSLE9BQU87UUFDZDtJQUNKO0lBQ0E7O0tBRUMsR0FDRFUsT0FBT1AsTUFBTSxFQUFFQyxNQUFNLEVBQUVKLE9BQU8sRUFBRTtRQUM1QixNQUFNLEVBQUVLLFlBQVksRUFBRSxHQUFHRDtRQUN6QixPQUFPLElBQUksQ0FBQ1IsT0FBTyxDQUFDYyxNQUFNLENBQUNuQiwwREFBSyxDQUFDLFlBQVksRUFBRWMsYUFBYSxPQUFPLEVBQUVGLE9BQU8sQ0FBQyxFQUFFO1lBQzNFLEdBQUdILE9BQU87WUFDVlcsU0FBU3RCLG1FQUFZQSxDQUFDO2dCQUFDO29CQUFFdUIsUUFBUTtnQkFBTTtnQkFBR1osU0FBU1c7YUFBUTtRQUMvRDtJQUNKO0FBQ0o7QUFDQW5CLE1BQU1MLE9BQU8sR0FBR0EsaURBQU9BLEVBQ3ZCLGtDQUFrQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vbm9kZV9tb2R1bGVzL29wZW5haS9yZXNvdXJjZXMvY29udGFpbmVycy9maWxlcy9maWxlcy5tanM/OGRiOCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlIGdlbmVyYXRlZCBmcm9tIG91ciBPcGVuQVBJIHNwZWMgYnkgU3RhaW5sZXNzLiBTZWUgQ09OVFJJQlVUSU5HLm1kIGZvciBkZXRhaWxzLlxuaW1wb3J0IHsgQVBJUmVzb3VyY2UgfSBmcm9tIFwiLi4vLi4vLi4vY29yZS9yZXNvdXJjZS5tanNcIjtcbmltcG9ydCAqIGFzIENvbnRlbnRBUEkgZnJvbSBcIi4vY29udGVudC5tanNcIjtcbmltcG9ydCB7IENvbnRlbnQgfSBmcm9tIFwiLi9jb250ZW50Lm1qc1wiO1xuaW1wb3J0IHsgQ3Vyc29yUGFnZSB9IGZyb20gXCIuLi8uLi8uLi9jb3JlL3BhZ2luYXRpb24ubWpzXCI7XG5pbXBvcnQgeyBidWlsZEhlYWRlcnMgfSBmcm9tIFwiLi4vLi4vLi4vaW50ZXJuYWwvaGVhZGVycy5tanNcIjtcbmltcG9ydCB7IG11bHRpcGFydEZvcm1SZXF1ZXN0T3B0aW9ucyB9IGZyb20gXCIuLi8uLi8uLi9pbnRlcm5hbC91cGxvYWRzLm1qc1wiO1xuaW1wb3J0IHsgcGF0aCB9IGZyb20gXCIuLi8uLi8uLi9pbnRlcm5hbC91dGlscy9wYXRoLm1qc1wiO1xuZXhwb3J0IGNsYXNzIEZpbGVzIGV4dGVuZHMgQVBJUmVzb3VyY2Uge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICB0aGlzLmNvbnRlbnQgPSBuZXcgQ29udGVudEFQSS5Db250ZW50KHRoaXMuX2NsaWVudCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENyZWF0ZSBhIENvbnRhaW5lciBGaWxlXG4gICAgICpcbiAgICAgKiBZb3UgY2FuIHNlbmQgZWl0aGVyIGEgbXVsdGlwYXJ0L2Zvcm0tZGF0YSByZXF1ZXN0IHdpdGggdGhlIHJhdyBmaWxlIGNvbnRlbnQsIG9yXG4gICAgICogYSBKU09OIHJlcXVlc3Qgd2l0aCBhIGZpbGUgSUQuXG4gICAgICovXG4gICAgY3JlYXRlKGNvbnRhaW5lcklELCBib2R5LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQucG9zdChwYXRoIGAvY29udGFpbmVycy8ke2NvbnRhaW5lcklEfS9maWxlc2AsIG11bHRpcGFydEZvcm1SZXF1ZXN0T3B0aW9ucyh7IGJvZHksIC4uLm9wdGlvbnMgfSwgdGhpcy5fY2xpZW50KSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHJpZXZlIENvbnRhaW5lciBGaWxlXG4gICAgICovXG4gICAgcmV0cmlldmUoZmlsZUlELCBwYXJhbXMsIG9wdGlvbnMpIHtcbiAgICAgICAgY29uc3QgeyBjb250YWluZXJfaWQgfSA9IHBhcmFtcztcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5nZXQocGF0aCBgL2NvbnRhaW5lcnMvJHtjb250YWluZXJfaWR9L2ZpbGVzLyR7ZmlsZUlEfWAsIG9wdGlvbnMpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBMaXN0IENvbnRhaW5lciBmaWxlc1xuICAgICAqL1xuICAgIGxpc3QoY29udGFpbmVySUQsIHF1ZXJ5ID0ge30sIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5nZXRBUElMaXN0KHBhdGggYC9jb250YWluZXJzLyR7Y29udGFpbmVySUR9L2ZpbGVzYCwgKEN1cnNvclBhZ2UpLCB7XG4gICAgICAgICAgICBxdWVyeSxcbiAgICAgICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBEZWxldGUgQ29udGFpbmVyIEZpbGVcbiAgICAgKi9cbiAgICBkZWxldGUoZmlsZUlELCBwYXJhbXMsIG9wdGlvbnMpIHtcbiAgICAgICAgY29uc3QgeyBjb250YWluZXJfaWQgfSA9IHBhcmFtcztcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5kZWxldGUocGF0aCBgL2NvbnRhaW5lcnMvJHtjb250YWluZXJfaWR9L2ZpbGVzLyR7ZmlsZUlEfWAsIHtcbiAgICAgICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgICAgICBoZWFkZXJzOiBidWlsZEhlYWRlcnMoW3sgQWNjZXB0OiAnKi8qJyB9LCBvcHRpb25zPy5oZWFkZXJzXSksXG4gICAgICAgIH0pO1xuICAgIH1cbn1cbkZpbGVzLkNvbnRlbnQgPSBDb250ZW50O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZmlsZXMubWpzLm1hcCJdLCJuYW1lcyI6WyJBUElSZXNvdXJjZSIsIkNvbnRlbnRBUEkiLCJDb250ZW50IiwiQ3Vyc29yUGFnZSIsImJ1aWxkSGVhZGVycyIsIm11bHRpcGFydEZvcm1SZXF1ZXN0T3B0aW9ucyIsInBhdGgiLCJGaWxlcyIsImNvbnN0cnVjdG9yIiwiYXJndW1lbnRzIiwiY29udGVudCIsIl9jbGllbnQiLCJjcmVhdGUiLCJjb250YWluZXJJRCIsImJvZHkiLCJvcHRpb25zIiwicG9zdCIsInJldHJpZXZlIiwiZmlsZUlEIiwicGFyYW1zIiwiY29udGFpbmVyX2lkIiwiZ2V0IiwibGlzdCIsInF1ZXJ5IiwiZ2V0QVBJTGlzdCIsImRlbGV0ZSIsImhlYWRlcnMiLCJBY2NlcHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/resources/containers/files/files.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/resources/embeddings.mjs":
/*!**********************************************************!*\
  !*** ../../node_modules/openai/resources/embeddings.mjs ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Embeddings: () => (/* binding */ Embeddings)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/resource.mjs */ \"(middleware)/../../node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _internal_utils_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../internal/utils.mjs */ \"(middleware)/../../node_modules/openai/internal/utils.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\nclass Embeddings extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Creates an embedding vector representing the input text.\n     *\n     * @example\n     * ```ts\n     * const createEmbeddingResponse =\n     *   await client.embeddings.create({\n     *     input: 'The quick brown fox jumped over the lazy dog',\n     *     model: 'text-embedding-3-small',\n     *   });\n     * ```\n     */ create(body, options) {\n        const hasUserProvidedEncodingFormat = !!body.encoding_format;\n        // No encoding_format specified, defaulting to base64 for performance reasons\n        // See https://github.com/openai/openai-node/pull/1312\n        let encoding_format = hasUserProvidedEncodingFormat ? body.encoding_format : \"base64\";\n        if (hasUserProvidedEncodingFormat) {\n            (0,_internal_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.loggerFor)(this._client).debug(\"embeddings/user defined encoding_format:\", body.encoding_format);\n        }\n        const response = this._client.post(\"/embeddings\", {\n            body: {\n                ...body,\n                encoding_format: encoding_format\n            },\n            ...options\n        });\n        // if the user specified an encoding_format, return the response as-is\n        if (hasUserProvidedEncodingFormat) {\n            return response;\n        }\n        // in this stage, we are sure the user did not specify an encoding_format\n        // and we defaulted to base64 for performance reasons\n        // we are sure then that the response is base64 encoded, let's decode it\n        // the returned result will be a float32 array since this is OpenAI API's default encoding\n        (0,_internal_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.loggerFor)(this._client).debug(\"embeddings/decoding base64 embeddings from base64\");\n        return response._thenUnwrap((response)=>{\n            if (response && response.data) {\n                response.data.forEach((embeddingBase64Obj)=>{\n                    const embeddingBase64Str = embeddingBase64Obj.embedding;\n                    embeddingBase64Obj.embedding = (0,_internal_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.toFloat32Array)(embeddingBase64Str);\n                });\n            }\n            return response;\n        });\n    }\n} //# sourceMappingURL=embeddings.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2VtYmVkZGluZ3MubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLHNGQUFzRjtBQUNuQztBQUNlO0FBQzNELE1BQU1HLG1CQUFtQkgsMkRBQVdBO0lBQ3ZDOzs7Ozs7Ozs7OztLQVdDLEdBQ0RJLE9BQU9DLElBQUksRUFBRUMsT0FBTyxFQUFFO1FBQ2xCLE1BQU1DLGdDQUFnQyxDQUFDLENBQUNGLEtBQUtHLGVBQWU7UUFDNUQsNkVBQTZFO1FBQzdFLHNEQUFzRDtRQUN0RCxJQUFJQSxrQkFBa0JELGdDQUFnQ0YsS0FBS0csZUFBZSxHQUFHO1FBQzdFLElBQUlELCtCQUErQjtZQUMvQk4sOERBQVNBLENBQUMsSUFBSSxDQUFDUSxPQUFPLEVBQUVDLEtBQUssQ0FBQyw0Q0FBNENMLEtBQUtHLGVBQWU7UUFDbEc7UUFDQSxNQUFNRyxXQUFXLElBQUksQ0FBQ0YsT0FBTyxDQUFDRyxJQUFJLENBQUMsZUFBZTtZQUM5Q1AsTUFBTTtnQkFDRixHQUFHQSxJQUFJO2dCQUNQRyxpQkFBaUJBO1lBQ3JCO1lBQ0EsR0FBR0YsT0FBTztRQUNkO1FBQ0Esc0VBQXNFO1FBQ3RFLElBQUlDLCtCQUErQjtZQUMvQixPQUFPSTtRQUNYO1FBQ0EseUVBQXlFO1FBQ3pFLHFEQUFxRDtRQUNyRCx3RUFBd0U7UUFDeEUsMEZBQTBGO1FBQzFGViw4REFBU0EsQ0FBQyxJQUFJLENBQUNRLE9BQU8sRUFBRUMsS0FBSyxDQUFDO1FBQzlCLE9BQU9DLFNBQVNFLFdBQVcsQ0FBQyxDQUFDRjtZQUN6QixJQUFJQSxZQUFZQSxTQUFTRyxJQUFJLEVBQUU7Z0JBQzNCSCxTQUFTRyxJQUFJLENBQUNDLE9BQU8sQ0FBQyxDQUFDQztvQkFDbkIsTUFBTUMscUJBQXFCRCxtQkFBbUJFLFNBQVM7b0JBQ3ZERixtQkFBbUJFLFNBQVMsR0FBR2hCLG1FQUFjQSxDQUFDZTtnQkFDbEQ7WUFDSjtZQUNBLE9BQU9OO1FBQ1g7SUFDSjtBQUNKLEVBQ0EsdUNBQXVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9lbWJlZGRpbmdzLm1qcz84NmQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5pbXBvcnQgeyBBUElSZXNvdXJjZSB9IGZyb20gXCIuLi9jb3JlL3Jlc291cmNlLm1qc1wiO1xuaW1wb3J0IHsgbG9nZ2VyRm9yLCB0b0Zsb2F0MzJBcnJheSB9IGZyb20gXCIuLi9pbnRlcm5hbC91dGlscy5tanNcIjtcbmV4cG9ydCBjbGFzcyBFbWJlZGRpbmdzIGV4dGVuZHMgQVBJUmVzb3VyY2Uge1xuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYW4gZW1iZWRkaW5nIHZlY3RvciByZXByZXNlbnRpbmcgdGhlIGlucHV0IHRleHQuXG4gICAgICpcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHRzXG4gICAgICogY29uc3QgY3JlYXRlRW1iZWRkaW5nUmVzcG9uc2UgPVxuICAgICAqICAgYXdhaXQgY2xpZW50LmVtYmVkZGluZ3MuY3JlYXRlKHtcbiAgICAgKiAgICAgaW5wdXQ6ICdUaGUgcXVpY2sgYnJvd24gZm94IGp1bXBlZCBvdmVyIHRoZSBsYXp5IGRvZycsXG4gICAgICogICAgIG1vZGVsOiAndGV4dC1lbWJlZGRpbmctMy1zbWFsbCcsXG4gICAgICogICB9KTtcbiAgICAgKiBgYGBcbiAgICAgKi9cbiAgICBjcmVhdGUoYm9keSwgb3B0aW9ucykge1xuICAgICAgICBjb25zdCBoYXNVc2VyUHJvdmlkZWRFbmNvZGluZ0Zvcm1hdCA9ICEhYm9keS5lbmNvZGluZ19mb3JtYXQ7XG4gICAgICAgIC8vIE5vIGVuY29kaW5nX2Zvcm1hdCBzcGVjaWZpZWQsIGRlZmF1bHRpbmcgdG8gYmFzZTY0IGZvciBwZXJmb3JtYW5jZSByZWFzb25zXG4gICAgICAgIC8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vb3BlbmFpL29wZW5haS1ub2RlL3B1bGwvMTMxMlxuICAgICAgICBsZXQgZW5jb2RpbmdfZm9ybWF0ID0gaGFzVXNlclByb3ZpZGVkRW5jb2RpbmdGb3JtYXQgPyBib2R5LmVuY29kaW5nX2Zvcm1hdCA6ICdiYXNlNjQnO1xuICAgICAgICBpZiAoaGFzVXNlclByb3ZpZGVkRW5jb2RpbmdGb3JtYXQpIHtcbiAgICAgICAgICAgIGxvZ2dlckZvcih0aGlzLl9jbGllbnQpLmRlYnVnKCdlbWJlZGRpbmdzL3VzZXIgZGVmaW5lZCBlbmNvZGluZ19mb3JtYXQ6JywgYm9keS5lbmNvZGluZ19mb3JtYXQpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gdGhpcy5fY2xpZW50LnBvc3QoJy9lbWJlZGRpbmdzJywge1xuICAgICAgICAgICAgYm9keToge1xuICAgICAgICAgICAgICAgIC4uLmJvZHksXG4gICAgICAgICAgICAgICAgZW5jb2RpbmdfZm9ybWF0OiBlbmNvZGluZ19mb3JtYXQsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgfSk7XG4gICAgICAgIC8vIGlmIHRoZSB1c2VyIHNwZWNpZmllZCBhbiBlbmNvZGluZ19mb3JtYXQsIHJldHVybiB0aGUgcmVzcG9uc2UgYXMtaXNcbiAgICAgICAgaWYgKGhhc1VzZXJQcm92aWRlZEVuY29kaW5nRm9ybWF0KSB7XG4gICAgICAgICAgICByZXR1cm4gcmVzcG9uc2U7XG4gICAgICAgIH1cbiAgICAgICAgLy8gaW4gdGhpcyBzdGFnZSwgd2UgYXJlIHN1cmUgdGhlIHVzZXIgZGlkIG5vdCBzcGVjaWZ5IGFuIGVuY29kaW5nX2Zvcm1hdFxuICAgICAgICAvLyBhbmQgd2UgZGVmYXVsdGVkIHRvIGJhc2U2NCBmb3IgcGVyZm9ybWFuY2UgcmVhc29uc1xuICAgICAgICAvLyB3ZSBhcmUgc3VyZSB0aGVuIHRoYXQgdGhlIHJlc3BvbnNlIGlzIGJhc2U2NCBlbmNvZGVkLCBsZXQncyBkZWNvZGUgaXRcbiAgICAgICAgLy8gdGhlIHJldHVybmVkIHJlc3VsdCB3aWxsIGJlIGEgZmxvYXQzMiBhcnJheSBzaW5jZSB0aGlzIGlzIE9wZW5BSSBBUEkncyBkZWZhdWx0IGVuY29kaW5nXG4gICAgICAgIGxvZ2dlckZvcih0aGlzLl9jbGllbnQpLmRlYnVnKCdlbWJlZGRpbmdzL2RlY29kaW5nIGJhc2U2NCBlbWJlZGRpbmdzIGZyb20gYmFzZTY0Jyk7XG4gICAgICAgIHJldHVybiByZXNwb25zZS5fdGhlblVud3JhcCgocmVzcG9uc2UpID0+IHtcbiAgICAgICAgICAgIGlmIChyZXNwb25zZSAmJiByZXNwb25zZS5kYXRhKSB7XG4gICAgICAgICAgICAgICAgcmVzcG9uc2UuZGF0YS5mb3JFYWNoKChlbWJlZGRpbmdCYXNlNjRPYmopID0+IHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgZW1iZWRkaW5nQmFzZTY0U3RyID0gZW1iZWRkaW5nQmFzZTY0T2JqLmVtYmVkZGluZztcbiAgICAgICAgICAgICAgICAgICAgZW1iZWRkaW5nQmFzZTY0T2JqLmVtYmVkZGluZyA9IHRvRmxvYXQzMkFycmF5KGVtYmVkZGluZ0Jhc2U2NFN0cik7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gcmVzcG9uc2U7XG4gICAgICAgIH0pO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWVtYmVkZGluZ3MubWpzLm1hcCJdLCJuYW1lcyI6WyJBUElSZXNvdXJjZSIsImxvZ2dlckZvciIsInRvRmxvYXQzMkFycmF5IiwiRW1iZWRkaW5ncyIsImNyZWF0ZSIsImJvZHkiLCJvcHRpb25zIiwiaGFzVXNlclByb3ZpZGVkRW5jb2RpbmdGb3JtYXQiLCJlbmNvZGluZ19mb3JtYXQiLCJfY2xpZW50IiwiZGVidWciLCJyZXNwb25zZSIsInBvc3QiLCJfdGhlblVud3JhcCIsImRhdGEiLCJmb3JFYWNoIiwiZW1iZWRkaW5nQmFzZTY0T2JqIiwiZW1iZWRkaW5nQmFzZTY0U3RyIiwiZW1iZWRkaW5nIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/resources/embeddings.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/resources/evals/evals.mjs":
/*!***********************************************************!*\
  !*** ../../node_modules/openai/resources/evals/evals.mjs ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Evals: () => (/* binding */ Evals)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/resource.mjs */ \"(middleware)/../../node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _runs_runs_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./runs/runs.mjs */ \"(middleware)/../../node_modules/openai/resources/evals/runs/runs.mjs\");\n/* harmony import */ var _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/pagination.mjs */ \"(middleware)/../../node_modules/openai/core/pagination.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../internal/utils/path.mjs */ \"(middleware)/../../node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\n\nclass Evals extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    constructor(){\n        super(...arguments);\n        this.runs = new _runs_runs_mjs__WEBPACK_IMPORTED_MODULE_1__.Runs(this._client);\n    }\n    /**\n     * Create the structure of an evaluation that can be used to test a model's\n     * performance. An evaluation is a set of testing criteria and the config for a\n     * data source, which dictates the schema of the data used in the evaluation. After\n     * creating an evaluation, you can run it on different models and model parameters.\n     * We support several types of graders and datasources. For more information, see\n     * the [Evals guide](https://platform.openai.com/docs/guides/evals).\n     */ create(body, options) {\n        return this._client.post(\"/evals\", {\n            body,\n            ...options\n        });\n    }\n    /**\n     * Get an evaluation by ID.\n     */ retrieve(evalID, options) {\n        return this._client.get(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/evals/${evalID}`, options);\n    }\n    /**\n     * Update certain properties of an evaluation.\n     */ update(evalID, body, options) {\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/evals/${evalID}`, {\n            body,\n            ...options\n        });\n    }\n    /**\n     * List evaluations for a project.\n     */ list(query = {}, options) {\n        return this._client.getAPIList(\"/evals\", _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_2__.CursorPage, {\n            query,\n            ...options\n        });\n    }\n    /**\n     * Delete an evaluation.\n     */ delete(evalID, options) {\n        return this._client.delete(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/evals/${evalID}`, options);\n    }\n}\nEvals.Runs = _runs_runs_mjs__WEBPACK_IMPORTED_MODULE_1__.Runs; //# sourceMappingURL=evals.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2V2YWxzL2V2YWxzLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBLHNGQUFzRjtBQUNoQztBQUNYO0FBQ0g7QUFDZTtBQUNGO0FBQzlDLE1BQU1LLGNBQWNMLDJEQUFXQTtJQUNsQ00sYUFBYztRQUNWLEtBQUssSUFBSUM7UUFDVCxJQUFJLENBQUNDLElBQUksR0FBRyxJQUFJUCxnREFBWSxDQUFDLElBQUksQ0FBQ1EsT0FBTztJQUM3QztJQUNBOzs7Ozs7O0tBT0MsR0FDREMsT0FBT0MsSUFBSSxFQUFFQyxPQUFPLEVBQUU7UUFDbEIsT0FBTyxJQUFJLENBQUNILE9BQU8sQ0FBQ0ksSUFBSSxDQUFDLFVBQVU7WUFBRUY7WUFBTSxHQUFHQyxPQUFPO1FBQUM7SUFDMUQ7SUFDQTs7S0FFQyxHQUNERSxTQUFTQyxNQUFNLEVBQUVILE9BQU8sRUFBRTtRQUN0QixPQUFPLElBQUksQ0FBQ0gsT0FBTyxDQUFDTyxHQUFHLENBQUNaLDBEQUFLLENBQUMsT0FBTyxFQUFFVyxPQUFPLENBQUMsRUFBRUg7SUFDckQ7SUFDQTs7S0FFQyxHQUNESyxPQUFPRixNQUFNLEVBQUVKLElBQUksRUFBRUMsT0FBTyxFQUFFO1FBQzFCLE9BQU8sSUFBSSxDQUFDSCxPQUFPLENBQUNJLElBQUksQ0FBQ1QsMERBQUssQ0FBQyxPQUFPLEVBQUVXLE9BQU8sQ0FBQyxFQUFFO1lBQUVKO1lBQU0sR0FBR0MsT0FBTztRQUFDO0lBQ3pFO0lBQ0E7O0tBRUMsR0FDRE0sS0FBS0MsUUFBUSxDQUFDLENBQUMsRUFBRVAsT0FBTyxFQUFFO1FBQ3RCLE9BQU8sSUFBSSxDQUFDSCxPQUFPLENBQUNXLFVBQVUsQ0FBQyxVQUFXakIsNERBQVVBLEVBQUc7WUFBRWdCO1lBQU8sR0FBR1AsT0FBTztRQUFDO0lBQy9FO0lBQ0E7O0tBRUMsR0FDRFMsT0FBT04sTUFBTSxFQUFFSCxPQUFPLEVBQUU7UUFDcEIsT0FBTyxJQUFJLENBQUNILE9BQU8sQ0FBQ1ksTUFBTSxDQUFDakIsMERBQUssQ0FBQyxPQUFPLEVBQUVXLE9BQU8sQ0FBQyxFQUFFSDtJQUN4RDtBQUNKO0FBQ0FQLE1BQU1ILElBQUksR0FBR0EsZ0RBQUlBLEVBQ2pCLGtDQUFrQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vbm9kZV9tb2R1bGVzL29wZW5haS9yZXNvdXJjZXMvZXZhbHMvZXZhbHMubWpzPzhhOWIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmltcG9ydCB7IEFQSVJlc291cmNlIH0gZnJvbSBcIi4uLy4uL2NvcmUvcmVzb3VyY2UubWpzXCI7XG5pbXBvcnQgKiBhcyBSdW5zQVBJIGZyb20gXCIuL3J1bnMvcnVucy5tanNcIjtcbmltcG9ydCB7IFJ1bnMsIH0gZnJvbSBcIi4vcnVucy9ydW5zLm1qc1wiO1xuaW1wb3J0IHsgQ3Vyc29yUGFnZSB9IGZyb20gXCIuLi8uLi9jb3JlL3BhZ2luYXRpb24ubWpzXCI7XG5pbXBvcnQgeyBwYXRoIH0gZnJvbSBcIi4uLy4uL2ludGVybmFsL3V0aWxzL3BhdGgubWpzXCI7XG5leHBvcnQgY2xhc3MgRXZhbHMgZXh0ZW5kcyBBUElSZXNvdXJjZSB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIHRoaXMucnVucyA9IG5ldyBSdW5zQVBJLlJ1bnModGhpcy5fY2xpZW50KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlIHRoZSBzdHJ1Y3R1cmUgb2YgYW4gZXZhbHVhdGlvbiB0aGF0IGNhbiBiZSB1c2VkIHRvIHRlc3QgYSBtb2RlbCdzXG4gICAgICogcGVyZm9ybWFuY2UuIEFuIGV2YWx1YXRpb24gaXMgYSBzZXQgb2YgdGVzdGluZyBjcml0ZXJpYSBhbmQgdGhlIGNvbmZpZyBmb3IgYVxuICAgICAqIGRhdGEgc291cmNlLCB3aGljaCBkaWN0YXRlcyB0aGUgc2NoZW1hIG9mIHRoZSBkYXRhIHVzZWQgaW4gdGhlIGV2YWx1YXRpb24uIEFmdGVyXG4gICAgICogY3JlYXRpbmcgYW4gZXZhbHVhdGlvbiwgeW91IGNhbiBydW4gaXQgb24gZGlmZmVyZW50IG1vZGVscyBhbmQgbW9kZWwgcGFyYW1ldGVycy5cbiAgICAgKiBXZSBzdXBwb3J0IHNldmVyYWwgdHlwZXMgb2YgZ3JhZGVycyBhbmQgZGF0YXNvdXJjZXMuIEZvciBtb3JlIGluZm9ybWF0aW9uLCBzZWVcbiAgICAgKiB0aGUgW0V2YWxzIGd1aWRlXShodHRwczovL3BsYXRmb3JtLm9wZW5haS5jb20vZG9jcy9ndWlkZXMvZXZhbHMpLlxuICAgICAqL1xuICAgIGNyZWF0ZShib2R5LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQucG9zdCgnL2V2YWxzJywgeyBib2R5LCAuLi5vcHRpb25zIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXQgYW4gZXZhbHVhdGlvbiBieSBJRC5cbiAgICAgKi9cbiAgICByZXRyaWV2ZShldmFsSUQsIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5nZXQocGF0aCBgL2V2YWxzLyR7ZXZhbElEfWAsIG9wdGlvbnMpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBVcGRhdGUgY2VydGFpbiBwcm9wZXJ0aWVzIG9mIGFuIGV2YWx1YXRpb24uXG4gICAgICovXG4gICAgdXBkYXRlKGV2YWxJRCwgYm9keSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LnBvc3QocGF0aCBgL2V2YWxzLyR7ZXZhbElEfWAsIHsgYm9keSwgLi4ub3B0aW9ucyB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogTGlzdCBldmFsdWF0aW9ucyBmb3IgYSBwcm9qZWN0LlxuICAgICAqL1xuICAgIGxpc3QocXVlcnkgPSB7fSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmdldEFQSUxpc3QoJy9ldmFscycsIChDdXJzb3JQYWdlKSwgeyBxdWVyeSwgLi4ub3B0aW9ucyB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogRGVsZXRlIGFuIGV2YWx1YXRpb24uXG4gICAgICovXG4gICAgZGVsZXRlKGV2YWxJRCwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmRlbGV0ZShwYXRoIGAvZXZhbHMvJHtldmFsSUR9YCwgb3B0aW9ucyk7XG4gICAgfVxufVxuRXZhbHMuUnVucyA9IFJ1bnM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ldmFscy5tanMubWFwIl0sIm5hbWVzIjpbIkFQSVJlc291cmNlIiwiUnVuc0FQSSIsIlJ1bnMiLCJDdXJzb3JQYWdlIiwicGF0aCIsIkV2YWxzIiwiY29uc3RydWN0b3IiLCJhcmd1bWVudHMiLCJydW5zIiwiX2NsaWVudCIsImNyZWF0ZSIsImJvZHkiLCJvcHRpb25zIiwicG9zdCIsInJldHJpZXZlIiwiZXZhbElEIiwiZ2V0IiwidXBkYXRlIiwibGlzdCIsInF1ZXJ5IiwiZ2V0QVBJTGlzdCIsImRlbGV0ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/resources/evals/evals.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/resources/evals/runs/output-items.mjs":
/*!***********************************************************************!*\
  !*** ../../node_modules/openai/resources/evals/runs/output-items.mjs ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OutputItems: () => (/* binding */ OutputItems)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/resource.mjs */ \"(middleware)/../../node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core/pagination.mjs */ \"(middleware)/../../node_modules/openai/core/pagination.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../internal/utils/path.mjs */ \"(middleware)/../../node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\nclass OutputItems extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Get an evaluation run output item by ID.\n     */ retrieve(outputItemID, params, options) {\n        const { eval_id, run_id } = params;\n        return this._client.get(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__.path`/evals/${eval_id}/runs/${run_id}/output_items/${outputItemID}`, options);\n    }\n    /**\n     * Get a list of output items for an evaluation run.\n     */ list(runID, params, options) {\n        const { eval_id, ...query } = params;\n        return this._client.getAPIList(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__.path`/evals/${eval_id}/runs/${runID}/output_items`, _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__.CursorPage, {\n            query,\n            ...options\n        });\n    }\n} //# sourceMappingURL=output-items.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2V2YWxzL3J1bnMvb3V0cHV0LWl0ZW1zLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUEsc0ZBQXNGO0FBQzdCO0FBQ0M7QUFDRjtBQUNqRCxNQUFNRyxvQkFBb0JILDJEQUFXQTtJQUN4Qzs7S0FFQyxHQUNESSxTQUFTQyxZQUFZLEVBQUVDLE1BQU0sRUFBRUMsT0FBTyxFQUFFO1FBQ3BDLE1BQU0sRUFBRUMsT0FBTyxFQUFFQyxNQUFNLEVBQUUsR0FBR0g7UUFDNUIsT0FBTyxJQUFJLENBQUNJLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDVCwwREFBSyxDQUFDLE9BQU8sRUFBRU0sUUFBUSxNQUFNLEVBQUVDLE9BQU8sY0FBYyxFQUFFSixhQUFhLENBQUMsRUFBRUU7SUFDbEc7SUFDQTs7S0FFQyxHQUNESyxLQUFLQyxLQUFLLEVBQUVQLE1BQU0sRUFBRUMsT0FBTyxFQUFFO1FBQ3pCLE1BQU0sRUFBRUMsT0FBTyxFQUFFLEdBQUdNLE9BQU8sR0FBR1I7UUFDOUIsT0FBTyxJQUFJLENBQUNJLE9BQU8sQ0FBQ0ssVUFBVSxDQUFDYiwwREFBSyxDQUFDLE9BQU8sRUFBRU0sUUFBUSxNQUFNLEVBQUVLLE1BQU0sYUFBYSxDQUFDLEVBQUdaLDREQUFVQSxFQUFHO1lBQUVhO1lBQU8sR0FBR1AsT0FBTztRQUFDO0lBQzFIO0FBQ0osRUFDQSx5Q0FBeUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2V2YWxzL3J1bnMvb3V0cHV0LWl0ZW1zLm1qcz9mYTNlIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5pbXBvcnQgeyBBUElSZXNvdXJjZSB9IGZyb20gXCIuLi8uLi8uLi9jb3JlL3Jlc291cmNlLm1qc1wiO1xuaW1wb3J0IHsgQ3Vyc29yUGFnZSB9IGZyb20gXCIuLi8uLi8uLi9jb3JlL3BhZ2luYXRpb24ubWpzXCI7XG5pbXBvcnQgeyBwYXRoIH0gZnJvbSBcIi4uLy4uLy4uL2ludGVybmFsL3V0aWxzL3BhdGgubWpzXCI7XG5leHBvcnQgY2xhc3MgT3V0cHV0SXRlbXMgZXh0ZW5kcyBBUElSZXNvdXJjZSB7XG4gICAgLyoqXG4gICAgICogR2V0IGFuIGV2YWx1YXRpb24gcnVuIG91dHB1dCBpdGVtIGJ5IElELlxuICAgICAqL1xuICAgIHJldHJpZXZlKG91dHB1dEl0ZW1JRCwgcGFyYW1zLCBvcHRpb25zKSB7XG4gICAgICAgIGNvbnN0IHsgZXZhbF9pZCwgcnVuX2lkIH0gPSBwYXJhbXM7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZ2V0KHBhdGggYC9ldmFscy8ke2V2YWxfaWR9L3J1bnMvJHtydW5faWR9L291dHB1dF9pdGVtcy8ke291dHB1dEl0ZW1JRH1gLCBvcHRpb25zKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2V0IGEgbGlzdCBvZiBvdXRwdXQgaXRlbXMgZm9yIGFuIGV2YWx1YXRpb24gcnVuLlxuICAgICAqL1xuICAgIGxpc3QocnVuSUQsIHBhcmFtcywgb3B0aW9ucykge1xuICAgICAgICBjb25zdCB7IGV2YWxfaWQsIC4uLnF1ZXJ5IH0gPSBwYXJhbXM7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZ2V0QVBJTGlzdChwYXRoIGAvZXZhbHMvJHtldmFsX2lkfS9ydW5zLyR7cnVuSUR9L291dHB1dF9pdGVtc2AsIChDdXJzb3JQYWdlKSwgeyBxdWVyeSwgLi4ub3B0aW9ucyB9KTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1vdXRwdXQtaXRlbXMubWpzLm1hcCJdLCJuYW1lcyI6WyJBUElSZXNvdXJjZSIsIkN1cnNvclBhZ2UiLCJwYXRoIiwiT3V0cHV0SXRlbXMiLCJyZXRyaWV2ZSIsIm91dHB1dEl0ZW1JRCIsInBhcmFtcyIsIm9wdGlvbnMiLCJldmFsX2lkIiwicnVuX2lkIiwiX2NsaWVudCIsImdldCIsImxpc3QiLCJydW5JRCIsInF1ZXJ5IiwiZ2V0QVBJTGlzdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/resources/evals/runs/output-items.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/resources/evals/runs/runs.mjs":
/*!***************************************************************!*\
  !*** ../../node_modules/openai/resources/evals/runs/runs.mjs ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Runs: () => (/* binding */ Runs)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/resource.mjs */ \"(middleware)/../../node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _output_items_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./output-items.mjs */ \"(middleware)/../../node_modules/openai/resources/evals/runs/output-items.mjs\");\n/* harmony import */ var _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../core/pagination.mjs */ \"(middleware)/../../node_modules/openai/core/pagination.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../internal/utils/path.mjs */ \"(middleware)/../../node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\n\nclass Runs extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    constructor(){\n        super(...arguments);\n        this.outputItems = new _output_items_mjs__WEBPACK_IMPORTED_MODULE_1__.OutputItems(this._client);\n    }\n    /**\n     * Kicks off a new run for a given evaluation, specifying the data source, and what\n     * model configuration to use to test. The datasource will be validated against the\n     * schema specified in the config of the evaluation.\n     */ create(evalID, body, options) {\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/evals/${evalID}/runs`, {\n            body,\n            ...options\n        });\n    }\n    /**\n     * Get an evaluation run by ID.\n     */ retrieve(runID, params, options) {\n        const { eval_id } = params;\n        return this._client.get(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/evals/${eval_id}/runs/${runID}`, options);\n    }\n    /**\n     * Get a list of runs for an evaluation.\n     */ list(evalID, query = {}, options) {\n        return this._client.getAPIList(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/evals/${evalID}/runs`, _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_2__.CursorPage, {\n            query,\n            ...options\n        });\n    }\n    /**\n     * Delete an eval run.\n     */ delete(runID, params, options) {\n        const { eval_id } = params;\n        return this._client.delete(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/evals/${eval_id}/runs/${runID}`, options);\n    }\n    /**\n     * Cancel an ongoing evaluation run.\n     */ cancel(runID, params, options) {\n        const { eval_id } = params;\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/evals/${eval_id}/runs/${runID}`, options);\n    }\n}\nRuns.OutputItems = _output_items_mjs__WEBPACK_IMPORTED_MODULE_1__.OutputItems; //# sourceMappingURL=runs.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2V2YWxzL3J1bnMvcnVucy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQSxzRkFBc0Y7QUFDN0I7QUFDSjtBQUNIO0FBQ1E7QUFDRjtBQUNqRCxNQUFNSyxhQUFhTCwyREFBV0E7SUFDakNNLGFBQWM7UUFDVixLQUFLLElBQUlDO1FBQ1QsSUFBSSxDQUFDQyxXQUFXLEdBQUcsSUFBSVAsMERBQTBCLENBQUMsSUFBSSxDQUFDUSxPQUFPO0lBQ2xFO0lBQ0E7Ozs7S0FJQyxHQUNEQyxPQUFPQyxNQUFNLEVBQUVDLElBQUksRUFBRUMsT0FBTyxFQUFFO1FBQzFCLE9BQU8sSUFBSSxDQUFDSixPQUFPLENBQUNLLElBQUksQ0FBQ1YsMERBQUssQ0FBQyxPQUFPLEVBQUVPLE9BQU8sS0FBSyxDQUFDLEVBQUU7WUFBRUM7WUFBTSxHQUFHQyxPQUFPO1FBQUM7SUFDOUU7SUFDQTs7S0FFQyxHQUNERSxTQUFTQyxLQUFLLEVBQUVDLE1BQU0sRUFBRUosT0FBTyxFQUFFO1FBQzdCLE1BQU0sRUFBRUssT0FBTyxFQUFFLEdBQUdEO1FBQ3BCLE9BQU8sSUFBSSxDQUFDUixPQUFPLENBQUNVLEdBQUcsQ0FBQ2YsMERBQUssQ0FBQyxPQUFPLEVBQUVjLFFBQVEsTUFBTSxFQUFFRixNQUFNLENBQUMsRUFBRUg7SUFDcEU7SUFDQTs7S0FFQyxHQUNETyxLQUFLVCxNQUFNLEVBQUVVLFFBQVEsQ0FBQyxDQUFDLEVBQUVSLE9BQU8sRUFBRTtRQUM5QixPQUFPLElBQUksQ0FBQ0osT0FBTyxDQUFDYSxVQUFVLENBQUNsQiwwREFBSyxDQUFDLE9BQU8sRUFBRU8sT0FBTyxLQUFLLENBQUMsRUFBR1IsNERBQVVBLEVBQUc7WUFDdkVrQjtZQUNBLEdBQUdSLE9BQU87UUFDZDtJQUNKO0lBQ0E7O0tBRUMsR0FDRFUsT0FBT1AsS0FBSyxFQUFFQyxNQUFNLEVBQUVKLE9BQU8sRUFBRTtRQUMzQixNQUFNLEVBQUVLLE9BQU8sRUFBRSxHQUFHRDtRQUNwQixPQUFPLElBQUksQ0FBQ1IsT0FBTyxDQUFDYyxNQUFNLENBQUNuQiwwREFBSyxDQUFDLE9BQU8sRUFBRWMsUUFBUSxNQUFNLEVBQUVGLE1BQU0sQ0FBQyxFQUFFSDtJQUN2RTtJQUNBOztLQUVDLEdBQ0RXLE9BQU9SLEtBQUssRUFBRUMsTUFBTSxFQUFFSixPQUFPLEVBQUU7UUFDM0IsTUFBTSxFQUFFSyxPQUFPLEVBQUUsR0FBR0Q7UUFDcEIsT0FBTyxJQUFJLENBQUNSLE9BQU8sQ0FBQ0ssSUFBSSxDQUFDViwwREFBSyxDQUFDLE9BQU8sRUFBRWMsUUFBUSxNQUFNLEVBQUVGLE1BQU0sQ0FBQyxFQUFFSDtJQUNyRTtBQUNKO0FBQ0FSLEtBQUtILFdBQVcsR0FBR0EsMERBQVdBLEVBQzlCLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vbm9kZV9tb2R1bGVzL29wZW5haS9yZXNvdXJjZXMvZXZhbHMvcnVucy9ydW5zLm1qcz9hMTJiIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5pbXBvcnQgeyBBUElSZXNvdXJjZSB9IGZyb20gXCIuLi8uLi8uLi9jb3JlL3Jlc291cmNlLm1qc1wiO1xuaW1wb3J0ICogYXMgT3V0cHV0SXRlbXNBUEkgZnJvbSBcIi4vb3V0cHV0LWl0ZW1zLm1qc1wiO1xuaW1wb3J0IHsgT3V0cHV0SXRlbXMsIH0gZnJvbSBcIi4vb3V0cHV0LWl0ZW1zLm1qc1wiO1xuaW1wb3J0IHsgQ3Vyc29yUGFnZSB9IGZyb20gXCIuLi8uLi8uLi9jb3JlL3BhZ2luYXRpb24ubWpzXCI7XG5pbXBvcnQgeyBwYXRoIH0gZnJvbSBcIi4uLy4uLy4uL2ludGVybmFsL3V0aWxzL3BhdGgubWpzXCI7XG5leHBvcnQgY2xhc3MgUnVucyBleHRlbmRzIEFQSVJlc291cmNlIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgdGhpcy5vdXRwdXRJdGVtcyA9IG5ldyBPdXRwdXRJdGVtc0FQSS5PdXRwdXRJdGVtcyh0aGlzLl9jbGllbnQpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBLaWNrcyBvZmYgYSBuZXcgcnVuIGZvciBhIGdpdmVuIGV2YWx1YXRpb24sIHNwZWNpZnlpbmcgdGhlIGRhdGEgc291cmNlLCBhbmQgd2hhdFxuICAgICAqIG1vZGVsIGNvbmZpZ3VyYXRpb24gdG8gdXNlIHRvIHRlc3QuIFRoZSBkYXRhc291cmNlIHdpbGwgYmUgdmFsaWRhdGVkIGFnYWluc3QgdGhlXG4gICAgICogc2NoZW1hIHNwZWNpZmllZCBpbiB0aGUgY29uZmlnIG9mIHRoZSBldmFsdWF0aW9uLlxuICAgICAqL1xuICAgIGNyZWF0ZShldmFsSUQsIGJvZHksIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5wb3N0KHBhdGggYC9ldmFscy8ke2V2YWxJRH0vcnVuc2AsIHsgYm9keSwgLi4ub3B0aW9ucyB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2V0IGFuIGV2YWx1YXRpb24gcnVuIGJ5IElELlxuICAgICAqL1xuICAgIHJldHJpZXZlKHJ1bklELCBwYXJhbXMsIG9wdGlvbnMpIHtcbiAgICAgICAgY29uc3QgeyBldmFsX2lkIH0gPSBwYXJhbXM7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZ2V0KHBhdGggYC9ldmFscy8ke2V2YWxfaWR9L3J1bnMvJHtydW5JRH1gLCBvcHRpb25zKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2V0IGEgbGlzdCBvZiBydW5zIGZvciBhbiBldmFsdWF0aW9uLlxuICAgICAqL1xuICAgIGxpc3QoZXZhbElELCBxdWVyeSA9IHt9LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZ2V0QVBJTGlzdChwYXRoIGAvZXZhbHMvJHtldmFsSUR9L3J1bnNgLCAoQ3Vyc29yUGFnZSksIHtcbiAgICAgICAgICAgIHF1ZXJ5LFxuICAgICAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIERlbGV0ZSBhbiBldmFsIHJ1bi5cbiAgICAgKi9cbiAgICBkZWxldGUocnVuSUQsIHBhcmFtcywgb3B0aW9ucykge1xuICAgICAgICBjb25zdCB7IGV2YWxfaWQgfSA9IHBhcmFtcztcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5kZWxldGUocGF0aCBgL2V2YWxzLyR7ZXZhbF9pZH0vcnVucy8ke3J1bklEfWAsIG9wdGlvbnMpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDYW5jZWwgYW4gb25nb2luZyBldmFsdWF0aW9uIHJ1bi5cbiAgICAgKi9cbiAgICBjYW5jZWwocnVuSUQsIHBhcmFtcywgb3B0aW9ucykge1xuICAgICAgICBjb25zdCB7IGV2YWxfaWQgfSA9IHBhcmFtcztcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5wb3N0KHBhdGggYC9ldmFscy8ke2V2YWxfaWR9L3J1bnMvJHtydW5JRH1gLCBvcHRpb25zKTtcbiAgICB9XG59XG5SdW5zLk91dHB1dEl0ZW1zID0gT3V0cHV0SXRlbXM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ydW5zLm1qcy5tYXAiXSwibmFtZXMiOlsiQVBJUmVzb3VyY2UiLCJPdXRwdXRJdGVtc0FQSSIsIk91dHB1dEl0ZW1zIiwiQ3Vyc29yUGFnZSIsInBhdGgiLCJSdW5zIiwiY29uc3RydWN0b3IiLCJhcmd1bWVudHMiLCJvdXRwdXRJdGVtcyIsIl9jbGllbnQiLCJjcmVhdGUiLCJldmFsSUQiLCJib2R5Iiwib3B0aW9ucyIsInBvc3QiLCJyZXRyaWV2ZSIsInJ1bklEIiwicGFyYW1zIiwiZXZhbF9pZCIsImdldCIsImxpc3QiLCJxdWVyeSIsImdldEFQSUxpc3QiLCJkZWxldGUiLCJjYW5jZWwiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/resources/evals/runs/runs.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/resources/files.mjs":
/*!*****************************************************!*\
  !*** ../../node_modules/openai/resources/files.mjs ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Files: () => (/* binding */ Files)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/resource.mjs */ \"(middleware)/../../node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/pagination.mjs */ \"(middleware)/../../node_modules/openai/core/pagination.mjs\");\n/* harmony import */ var _internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../internal/headers.mjs */ \"(middleware)/../../node_modules/openai/internal/headers.mjs\");\n/* harmony import */ var _internal_utils_sleep_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../internal/utils/sleep.mjs */ \"(middleware)/../../node_modules/openai/internal/utils/sleep.mjs\");\n/* harmony import */ var _error_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../error.mjs */ \"(middleware)/../../node_modules/openai/error.mjs\");\n/* harmony import */ var _internal_uploads_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../internal/uploads.mjs */ \"(middleware)/../../node_modules/openai/internal/uploads.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../internal/utils/path.mjs */ \"(middleware)/../../node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\n\n\n\nclass Files extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Upload a file that can be used across various endpoints. Individual files can be\n     * up to 512 MB, and the size of all files uploaded by one organization can be up\n     * to 100 GB.\n     *\n     * The Assistants API supports files up to 2 million tokens and of specific file\n     * types. See the\n     * [Assistants Tools guide](https://platform.openai.com/docs/assistants/tools) for\n     * details.\n     *\n     * The Fine-tuning API only supports `.jsonl` files. The input also has certain\n     * required formats for fine-tuning\n     * [chat](https://platform.openai.com/docs/api-reference/fine-tuning/chat-input) or\n     * [completions](https://platform.openai.com/docs/api-reference/fine-tuning/completions-input)\n     * models.\n     *\n     * The Batch API only supports `.jsonl` files up to 200 MB in size. The input also\n     * has a specific required\n     * [format](https://platform.openai.com/docs/api-reference/batch/request-input).\n     *\n     * Please [contact us](https://help.openai.com/) if you need to increase these\n     * storage limits.\n     */ create(body, options) {\n        return this._client.post(\"/files\", (0,_internal_uploads_mjs__WEBPACK_IMPORTED_MODULE_5__.multipartFormRequestOptions)({\n            body,\n            ...options\n        }, this._client));\n    }\n    /**\n     * Returns information about a specific file.\n     */ retrieve(fileID, options) {\n        return this._client.get(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_6__.path`/files/${fileID}`, options);\n    }\n    /**\n     * Returns a list of files.\n     */ list(query = {}, options) {\n        return this._client.getAPIList(\"/files\", _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__.CursorPage, {\n            query,\n            ...options\n        });\n    }\n    /**\n     * Delete a file.\n     */ delete(fileID, options) {\n        return this._client.delete(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_6__.path`/files/${fileID}`, options);\n    }\n    /**\n     * Returns the contents of the specified file.\n     */ content(fileID, options) {\n        return this._client.get(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_6__.path`/files/${fileID}/content`, {\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n                {\n                    Accept: \"application/binary\"\n                },\n                options?.headers\n            ]),\n            __binaryResponse: true\n        });\n    }\n    /**\n     * Waits for the given file to be processed, default timeout is 30 mins.\n     */ async waitForProcessing(id, { pollInterval = 5000, maxWait = 30 * 60 * 1000 } = {}) {\n        const TERMINAL_STATES = new Set([\n            \"processed\",\n            \"error\",\n            \"deleted\"\n        ]);\n        const start = Date.now();\n        let file = await this.retrieve(id);\n        while(!file.status || !TERMINAL_STATES.has(file.status)){\n            await (0,_internal_utils_sleep_mjs__WEBPACK_IMPORTED_MODULE_3__.sleep)(pollInterval);\n            file = await this.retrieve(id);\n            if (Date.now() - start > maxWait) {\n                throw new _error_mjs__WEBPACK_IMPORTED_MODULE_4__.APIConnectionTimeoutError({\n                    message: `Giving up on waiting for file ${id} to finish processing after ${maxWait} milliseconds.`\n                });\n            }\n        }\n        return file;\n    }\n} //# sourceMappingURL=files.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2ZpbGVzLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBLHNGQUFzRjtBQUNuQztBQUNDO0FBQ0c7QUFDSDtBQUNLO0FBQ2E7QUFDcEI7QUFDM0MsTUFBTU8sY0FBY1AsMkRBQVdBO0lBQ2xDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0tBc0JDLEdBQ0RRLE9BQU9DLElBQUksRUFBRUMsT0FBTyxFQUFFO1FBQ2xCLE9BQU8sSUFBSSxDQUFDQyxPQUFPLENBQUNDLElBQUksQ0FBQyxVQUFVUCxrRkFBMkJBLENBQUM7WUFBRUk7WUFBTSxHQUFHQyxPQUFPO1FBQUMsR0FBRyxJQUFJLENBQUNDLE9BQU87SUFDckc7SUFDQTs7S0FFQyxHQUNERSxTQUFTQyxNQUFNLEVBQUVKLE9BQU8sRUFBRTtRQUN0QixPQUFPLElBQUksQ0FBQ0MsT0FBTyxDQUFDSSxHQUFHLENBQUNULDBEQUFLLENBQUMsT0FBTyxFQUFFUSxPQUFPLENBQUMsRUFBRUo7SUFDckQ7SUFDQTs7S0FFQyxHQUNETSxLQUFLQyxRQUFRLENBQUMsQ0FBQyxFQUFFUCxPQUFPLEVBQUU7UUFDdEIsT0FBTyxJQUFJLENBQUNDLE9BQU8sQ0FBQ08sVUFBVSxDQUFDLFVBQVdqQiw0REFBVUEsRUFBRztZQUFFZ0I7WUFBTyxHQUFHUCxPQUFPO1FBQUM7SUFDL0U7SUFDQTs7S0FFQyxHQUNEUyxPQUFPTCxNQUFNLEVBQUVKLE9BQU8sRUFBRTtRQUNwQixPQUFPLElBQUksQ0FBQ0MsT0FBTyxDQUFDUSxNQUFNLENBQUNiLDBEQUFLLENBQUMsT0FBTyxFQUFFUSxPQUFPLENBQUMsRUFBRUo7SUFDeEQ7SUFDQTs7S0FFQyxHQUNEVSxRQUFRTixNQUFNLEVBQUVKLE9BQU8sRUFBRTtRQUNyQixPQUFPLElBQUksQ0FBQ0MsT0FBTyxDQUFDSSxHQUFHLENBQUNULDBEQUFLLENBQUMsT0FBTyxFQUFFUSxPQUFPLFFBQVEsQ0FBQyxFQUFFO1lBQ3JELEdBQUdKLE9BQU87WUFDVlcsU0FBU25CLG1FQUFZQSxDQUFDO2dCQUFDO29CQUFFb0IsUUFBUTtnQkFBcUI7Z0JBQUdaLFNBQVNXO2FBQVE7WUFDMUVFLGtCQUFrQjtRQUN0QjtJQUNKO0lBQ0E7O0tBRUMsR0FDRCxNQUFNQyxrQkFBa0JDLEVBQUUsRUFBRSxFQUFFQyxlQUFlLElBQUksRUFBRUMsVUFBVSxLQUFLLEtBQUssSUFBSSxFQUFFLEdBQUcsQ0FBQyxDQUFDLEVBQUU7UUFDaEYsTUFBTUMsa0JBQWtCLElBQUlDLElBQUk7WUFBQztZQUFhO1lBQVM7U0FBVTtRQUNqRSxNQUFNQyxRQUFRQyxLQUFLQyxHQUFHO1FBQ3RCLElBQUlDLE9BQU8sTUFBTSxJQUFJLENBQUNwQixRQUFRLENBQUNZO1FBQy9CLE1BQU8sQ0FBQ1EsS0FBS0MsTUFBTSxJQUFJLENBQUNOLGdCQUFnQk8sR0FBRyxDQUFDRixLQUFLQyxNQUFNLEVBQUc7WUFDdEQsTUFBTS9CLGdFQUFLQSxDQUFDdUI7WUFDWk8sT0FBTyxNQUFNLElBQUksQ0FBQ3BCLFFBQVEsQ0FBQ1k7WUFDM0IsSUFBSU0sS0FBS0MsR0FBRyxLQUFLRixRQUFRSCxTQUFTO2dCQUM5QixNQUFNLElBQUl2QixpRUFBeUJBLENBQUM7b0JBQ2hDZ0MsU0FBUyxDQUFDLDhCQUE4QixFQUFFWCxHQUFHLDRCQUE0QixFQUFFRSxRQUFRLGNBQWMsQ0FBQztnQkFDdEc7WUFDSjtRQUNKO1FBQ0EsT0FBT007SUFDWDtBQUNKLEVBQ0Esa0NBQWtDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9maWxlcy5tanM/Y2E1MSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlIGdlbmVyYXRlZCBmcm9tIG91ciBPcGVuQVBJIHNwZWMgYnkgU3RhaW5sZXNzLiBTZWUgQ09OVFJJQlVUSU5HLm1kIGZvciBkZXRhaWxzLlxuaW1wb3J0IHsgQVBJUmVzb3VyY2UgfSBmcm9tIFwiLi4vY29yZS9yZXNvdXJjZS5tanNcIjtcbmltcG9ydCB7IEN1cnNvclBhZ2UgfSBmcm9tIFwiLi4vY29yZS9wYWdpbmF0aW9uLm1qc1wiO1xuaW1wb3J0IHsgYnVpbGRIZWFkZXJzIH0gZnJvbSBcIi4uL2ludGVybmFsL2hlYWRlcnMubWpzXCI7XG5pbXBvcnQgeyBzbGVlcCB9IGZyb20gXCIuLi9pbnRlcm5hbC91dGlscy9zbGVlcC5tanNcIjtcbmltcG9ydCB7IEFQSUNvbm5lY3Rpb25UaW1lb3V0RXJyb3IgfSBmcm9tIFwiLi4vZXJyb3IubWpzXCI7XG5pbXBvcnQgeyBtdWx0aXBhcnRGb3JtUmVxdWVzdE9wdGlvbnMgfSBmcm9tIFwiLi4vaW50ZXJuYWwvdXBsb2Fkcy5tanNcIjtcbmltcG9ydCB7IHBhdGggfSBmcm9tIFwiLi4vaW50ZXJuYWwvdXRpbHMvcGF0aC5tanNcIjtcbmV4cG9ydCBjbGFzcyBGaWxlcyBleHRlbmRzIEFQSVJlc291cmNlIHtcbiAgICAvKipcbiAgICAgKiBVcGxvYWQgYSBmaWxlIHRoYXQgY2FuIGJlIHVzZWQgYWNyb3NzIHZhcmlvdXMgZW5kcG9pbnRzLiBJbmRpdmlkdWFsIGZpbGVzIGNhbiBiZVxuICAgICAqIHVwIHRvIDUxMiBNQiwgYW5kIHRoZSBzaXplIG9mIGFsbCBmaWxlcyB1cGxvYWRlZCBieSBvbmUgb3JnYW5pemF0aW9uIGNhbiBiZSB1cFxuICAgICAqIHRvIDEwMCBHQi5cbiAgICAgKlxuICAgICAqIFRoZSBBc3Npc3RhbnRzIEFQSSBzdXBwb3J0cyBmaWxlcyB1cCB0byAyIG1pbGxpb24gdG9rZW5zIGFuZCBvZiBzcGVjaWZpYyBmaWxlXG4gICAgICogdHlwZXMuIFNlZSB0aGVcbiAgICAgKiBbQXNzaXN0YW50cyBUb29scyBndWlkZV0oaHR0cHM6Ly9wbGF0Zm9ybS5vcGVuYWkuY29tL2RvY3MvYXNzaXN0YW50cy90b29scykgZm9yXG4gICAgICogZGV0YWlscy5cbiAgICAgKlxuICAgICAqIFRoZSBGaW5lLXR1bmluZyBBUEkgb25seSBzdXBwb3J0cyBgLmpzb25sYCBmaWxlcy4gVGhlIGlucHV0IGFsc28gaGFzIGNlcnRhaW5cbiAgICAgKiByZXF1aXJlZCBmb3JtYXRzIGZvciBmaW5lLXR1bmluZ1xuICAgICAqIFtjaGF0XShodHRwczovL3BsYXRmb3JtLm9wZW5haS5jb20vZG9jcy9hcGktcmVmZXJlbmNlL2ZpbmUtdHVuaW5nL2NoYXQtaW5wdXQpIG9yXG4gICAgICogW2NvbXBsZXRpb25zXShodHRwczovL3BsYXRmb3JtLm9wZW5haS5jb20vZG9jcy9hcGktcmVmZXJlbmNlL2ZpbmUtdHVuaW5nL2NvbXBsZXRpb25zLWlucHV0KVxuICAgICAqIG1vZGVscy5cbiAgICAgKlxuICAgICAqIFRoZSBCYXRjaCBBUEkgb25seSBzdXBwb3J0cyBgLmpzb25sYCBmaWxlcyB1cCB0byAyMDAgTUIgaW4gc2l6ZS4gVGhlIGlucHV0IGFsc29cbiAgICAgKiBoYXMgYSBzcGVjaWZpYyByZXF1aXJlZFxuICAgICAqIFtmb3JtYXRdKGh0dHBzOi8vcGxhdGZvcm0ub3BlbmFpLmNvbS9kb2NzL2FwaS1yZWZlcmVuY2UvYmF0Y2gvcmVxdWVzdC1pbnB1dCkuXG4gICAgICpcbiAgICAgKiBQbGVhc2UgW2NvbnRhY3QgdXNdKGh0dHBzOi8vaGVscC5vcGVuYWkuY29tLykgaWYgeW91IG5lZWQgdG8gaW5jcmVhc2UgdGhlc2VcbiAgICAgKiBzdG9yYWdlIGxpbWl0cy5cbiAgICAgKi9cbiAgICBjcmVhdGUoYm9keSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LnBvc3QoJy9maWxlcycsIG11bHRpcGFydEZvcm1SZXF1ZXN0T3B0aW9ucyh7IGJvZHksIC4uLm9wdGlvbnMgfSwgdGhpcy5fY2xpZW50KSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHVybnMgaW5mb3JtYXRpb24gYWJvdXQgYSBzcGVjaWZpYyBmaWxlLlxuICAgICAqL1xuICAgIHJldHJpZXZlKGZpbGVJRCwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmdldChwYXRoIGAvZmlsZXMvJHtmaWxlSUR9YCwgb3B0aW9ucyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHVybnMgYSBsaXN0IG9mIGZpbGVzLlxuICAgICAqL1xuICAgIGxpc3QocXVlcnkgPSB7fSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmdldEFQSUxpc3QoJy9maWxlcycsIChDdXJzb3JQYWdlKSwgeyBxdWVyeSwgLi4ub3B0aW9ucyB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogRGVsZXRlIGEgZmlsZS5cbiAgICAgKi9cbiAgICBkZWxldGUoZmlsZUlELCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZGVsZXRlKHBhdGggYC9maWxlcy8ke2ZpbGVJRH1gLCBvcHRpb25zKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0dXJucyB0aGUgY29udGVudHMgb2YgdGhlIHNwZWNpZmllZCBmaWxlLlxuICAgICAqL1xuICAgIGNvbnRlbnQoZmlsZUlELCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZ2V0KHBhdGggYC9maWxlcy8ke2ZpbGVJRH0vY29udGVudGAsIHtcbiAgICAgICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgICAgICBoZWFkZXJzOiBidWlsZEhlYWRlcnMoW3sgQWNjZXB0OiAnYXBwbGljYXRpb24vYmluYXJ5JyB9LCBvcHRpb25zPy5oZWFkZXJzXSksXG4gICAgICAgICAgICBfX2JpbmFyeVJlc3BvbnNlOiB0cnVlLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogV2FpdHMgZm9yIHRoZSBnaXZlbiBmaWxlIHRvIGJlIHByb2Nlc3NlZCwgZGVmYXVsdCB0aW1lb3V0IGlzIDMwIG1pbnMuXG4gICAgICovXG4gICAgYXN5bmMgd2FpdEZvclByb2Nlc3NpbmcoaWQsIHsgcG9sbEludGVydmFsID0gNTAwMCwgbWF4V2FpdCA9IDMwICogNjAgKiAxMDAwIH0gPSB7fSkge1xuICAgICAgICBjb25zdCBURVJNSU5BTF9TVEFURVMgPSBuZXcgU2V0KFsncHJvY2Vzc2VkJywgJ2Vycm9yJywgJ2RlbGV0ZWQnXSk7XG4gICAgICAgIGNvbnN0IHN0YXJ0ID0gRGF0ZS5ub3coKTtcbiAgICAgICAgbGV0IGZpbGUgPSBhd2FpdCB0aGlzLnJldHJpZXZlKGlkKTtcbiAgICAgICAgd2hpbGUgKCFmaWxlLnN0YXR1cyB8fCAhVEVSTUlOQUxfU1RBVEVTLmhhcyhmaWxlLnN0YXR1cykpIHtcbiAgICAgICAgICAgIGF3YWl0IHNsZWVwKHBvbGxJbnRlcnZhbCk7XG4gICAgICAgICAgICBmaWxlID0gYXdhaXQgdGhpcy5yZXRyaWV2ZShpZCk7XG4gICAgICAgICAgICBpZiAoRGF0ZS5ub3coKSAtIHN0YXJ0ID4gbWF4V2FpdCkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBBUElDb25uZWN0aW9uVGltZW91dEVycm9yKHtcbiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogYEdpdmluZyB1cCBvbiB3YWl0aW5nIGZvciBmaWxlICR7aWR9IHRvIGZpbmlzaCBwcm9jZXNzaW5nIGFmdGVyICR7bWF4V2FpdH0gbWlsbGlzZWNvbmRzLmAsXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZpbGU7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZmlsZXMubWpzLm1hcCJdLCJuYW1lcyI6WyJBUElSZXNvdXJjZSIsIkN1cnNvclBhZ2UiLCJidWlsZEhlYWRlcnMiLCJzbGVlcCIsIkFQSUNvbm5lY3Rpb25UaW1lb3V0RXJyb3IiLCJtdWx0aXBhcnRGb3JtUmVxdWVzdE9wdGlvbnMiLCJwYXRoIiwiRmlsZXMiLCJjcmVhdGUiLCJib2R5Iiwib3B0aW9ucyIsIl9jbGllbnQiLCJwb3N0IiwicmV0cmlldmUiLCJmaWxlSUQiLCJnZXQiLCJsaXN0IiwicXVlcnkiLCJnZXRBUElMaXN0IiwiZGVsZXRlIiwiY29udGVudCIsImhlYWRlcnMiLCJBY2NlcHQiLCJfX2JpbmFyeVJlc3BvbnNlIiwid2FpdEZvclByb2Nlc3NpbmciLCJpZCIsInBvbGxJbnRlcnZhbCIsIm1heFdhaXQiLCJURVJNSU5BTF9TVEFURVMiLCJTZXQiLCJzdGFydCIsIkRhdGUiLCJub3ciLCJmaWxlIiwic3RhdHVzIiwiaGFzIiwibWVzc2FnZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/resources/files.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/resources/fine-tuning/alpha/alpha.mjs":
/*!***********************************************************************!*\
  !*** ../../node_modules/openai/resources/fine-tuning/alpha/alpha.mjs ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Alpha: () => (/* binding */ Alpha)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/resource.mjs */ \"(middleware)/../../node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _graders_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./graders.mjs */ \"(middleware)/../../node_modules/openai/resources/fine-tuning/alpha/graders.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\nclass Alpha extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    constructor(){\n        super(...arguments);\n        this.graders = new _graders_mjs__WEBPACK_IMPORTED_MODULE_1__.Graders(this._client);\n    }\n}\nAlpha.Graders = _graders_mjs__WEBPACK_IMPORTED_MODULE_1__.Graders; //# sourceMappingURL=alpha.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2ZpbmUtdHVuaW5nL2FscGhhL2FscGhhLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxzRkFBc0Y7QUFDN0I7QUFDYjtBQUNIO0FBQ2xDLE1BQU1HLGNBQWNILDJEQUFXQTtJQUNsQ0ksYUFBYztRQUNWLEtBQUssSUFBSUM7UUFDVCxJQUFJLENBQUNDLE9BQU8sR0FBRyxJQUFJTCxpREFBa0IsQ0FBQyxJQUFJLENBQUNNLE9BQU87SUFDdEQ7QUFDSjtBQUNBSixNQUFNRCxPQUFPLEdBQUdBLGlEQUFPQSxFQUN2QixrQ0FBa0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2ZpbmUtdHVuaW5nL2FscGhhL2FscGhhLm1qcz81OTg3Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5pbXBvcnQgeyBBUElSZXNvdXJjZSB9IGZyb20gXCIuLi8uLi8uLi9jb3JlL3Jlc291cmNlLm1qc1wiO1xuaW1wb3J0ICogYXMgR3JhZGVyc0FQSSBmcm9tIFwiLi9ncmFkZXJzLm1qc1wiO1xuaW1wb3J0IHsgR3JhZGVycywgfSBmcm9tIFwiLi9ncmFkZXJzLm1qc1wiO1xuZXhwb3J0IGNsYXNzIEFscGhhIGV4dGVuZHMgQVBJUmVzb3VyY2Uge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICB0aGlzLmdyYWRlcnMgPSBuZXcgR3JhZGVyc0FQSS5HcmFkZXJzKHRoaXMuX2NsaWVudCk7XG4gICAgfVxufVxuQWxwaGEuR3JhZGVycyA9IEdyYWRlcnM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hbHBoYS5tanMubWFwIl0sIm5hbWVzIjpbIkFQSVJlc291cmNlIiwiR3JhZGVyc0FQSSIsIkdyYWRlcnMiLCJBbHBoYSIsImNvbnN0cnVjdG9yIiwiYXJndW1lbnRzIiwiZ3JhZGVycyIsIl9jbGllbnQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/resources/fine-tuning/alpha/alpha.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/resources/fine-tuning/alpha/graders.mjs":
/*!*************************************************************************!*\
  !*** ../../node_modules/openai/resources/fine-tuning/alpha/graders.mjs ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Graders: () => (/* binding */ Graders)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/resource.mjs */ \"(middleware)/../../node_modules/openai/core/resource.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nclass Graders extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Run a grader.\n     *\n     * @example\n     * ```ts\n     * const response = await client.fineTuning.alpha.graders.run({\n     *   grader: {\n     *     input: 'input',\n     *     name: 'name',\n     *     operation: 'eq',\n     *     reference: 'reference',\n     *     type: 'string_check',\n     *   },\n     *   model_sample: 'model_sample',\n     * });\n     * ```\n     */ run(body, options) {\n        return this._client.post(\"/fine_tuning/alpha/graders/run\", {\n            body,\n            ...options\n        });\n    }\n    /**\n     * Validate a grader.\n     *\n     * @example\n     * ```ts\n     * const response =\n     *   await client.fineTuning.alpha.graders.validate({\n     *     grader: {\n     *       input: 'input',\n     *       name: 'name',\n     *       operation: 'eq',\n     *       reference: 'reference',\n     *       type: 'string_check',\n     *     },\n     *   });\n     * ```\n     */ validate(body, options) {\n        return this._client.post(\"/fine_tuning/alpha/graders/validate\", {\n            body,\n            ...options\n        });\n    }\n} //# sourceMappingURL=graders.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2ZpbmUtdHVuaW5nL2FscGhhL2dyYWRlcnMubWpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsc0ZBQXNGO0FBQzdCO0FBQ2xELE1BQU1DLGdCQUFnQkQsMkRBQVdBO0lBQ3BDOzs7Ozs7Ozs7Ozs7Ozs7O0tBZ0JDLEdBQ0RFLElBQUlDLElBQUksRUFBRUMsT0FBTyxFQUFFO1FBQ2YsT0FBTyxJQUFJLENBQUNDLE9BQU8sQ0FBQ0MsSUFBSSxDQUFDLGtDQUFrQztZQUFFSDtZQUFNLEdBQUdDLE9BQU87UUFBQztJQUNsRjtJQUNBOzs7Ozs7Ozs7Ozs7Ozs7O0tBZ0JDLEdBQ0RHLFNBQVNKLElBQUksRUFBRUMsT0FBTyxFQUFFO1FBQ3BCLE9BQU8sSUFBSSxDQUFDQyxPQUFPLENBQUNDLElBQUksQ0FBQyx1Q0FBdUM7WUFBRUg7WUFBTSxHQUFHQyxPQUFPO1FBQUM7SUFDdkY7QUFDSixFQUNBLG9DQUFvQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vbm9kZV9tb2R1bGVzL29wZW5haS9yZXNvdXJjZXMvZmluZS10dW5pbmcvYWxwaGEvZ3JhZGVycy5tanM/ZDVjNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlIGdlbmVyYXRlZCBmcm9tIG91ciBPcGVuQVBJIHNwZWMgYnkgU3RhaW5sZXNzLiBTZWUgQ09OVFJJQlVUSU5HLm1kIGZvciBkZXRhaWxzLlxuaW1wb3J0IHsgQVBJUmVzb3VyY2UgfSBmcm9tIFwiLi4vLi4vLi4vY29yZS9yZXNvdXJjZS5tanNcIjtcbmV4cG9ydCBjbGFzcyBHcmFkZXJzIGV4dGVuZHMgQVBJUmVzb3VyY2Uge1xuICAgIC8qKlxuICAgICAqIFJ1biBhIGdyYWRlci5cbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgdHNcbiAgICAgKiBjb25zdCByZXNwb25zZSA9IGF3YWl0IGNsaWVudC5maW5lVHVuaW5nLmFscGhhLmdyYWRlcnMucnVuKHtcbiAgICAgKiAgIGdyYWRlcjoge1xuICAgICAqICAgICBpbnB1dDogJ2lucHV0JyxcbiAgICAgKiAgICAgbmFtZTogJ25hbWUnLFxuICAgICAqICAgICBvcGVyYXRpb246ICdlcScsXG4gICAgICogICAgIHJlZmVyZW5jZTogJ3JlZmVyZW5jZScsXG4gICAgICogICAgIHR5cGU6ICdzdHJpbmdfY2hlY2snLFxuICAgICAqICAgfSxcbiAgICAgKiAgIG1vZGVsX3NhbXBsZTogJ21vZGVsX3NhbXBsZScsXG4gICAgICogfSk7XG4gICAgICogYGBgXG4gICAgICovXG4gICAgcnVuKGJvZHksIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5wb3N0KCcvZmluZV90dW5pbmcvYWxwaGEvZ3JhZGVycy9ydW4nLCB7IGJvZHksIC4uLm9wdGlvbnMgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFZhbGlkYXRlIGEgZ3JhZGVyLlxuICAgICAqXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGB0c1xuICAgICAqIGNvbnN0IHJlc3BvbnNlID1cbiAgICAgKiAgIGF3YWl0IGNsaWVudC5maW5lVHVuaW5nLmFscGhhLmdyYWRlcnMudmFsaWRhdGUoe1xuICAgICAqICAgICBncmFkZXI6IHtcbiAgICAgKiAgICAgICBpbnB1dDogJ2lucHV0JyxcbiAgICAgKiAgICAgICBuYW1lOiAnbmFtZScsXG4gICAgICogICAgICAgb3BlcmF0aW9uOiAnZXEnLFxuICAgICAqICAgICAgIHJlZmVyZW5jZTogJ3JlZmVyZW5jZScsXG4gICAgICogICAgICAgdHlwZTogJ3N0cmluZ19jaGVjaycsXG4gICAgICogICAgIH0sXG4gICAgICogICB9KTtcbiAgICAgKiBgYGBcbiAgICAgKi9cbiAgICB2YWxpZGF0ZShib2R5LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQucG9zdCgnL2ZpbmVfdHVuaW5nL2FscGhhL2dyYWRlcnMvdmFsaWRhdGUnLCB7IGJvZHksIC4uLm9wdGlvbnMgfSk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z3JhZGVycy5tanMubWFwIl0sIm5hbWVzIjpbIkFQSVJlc291cmNlIiwiR3JhZGVycyIsInJ1biIsImJvZHkiLCJvcHRpb25zIiwiX2NsaWVudCIsInBvc3QiLCJ2YWxpZGF0ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/resources/fine-tuning/alpha/graders.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/resources/fine-tuning/checkpoints/checkpoints.mjs":
/*!***********************************************************************************!*\
  !*** ../../node_modules/openai/resources/fine-tuning/checkpoints/checkpoints.mjs ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Checkpoints: () => (/* binding */ Checkpoints)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/resource.mjs */ \"(middleware)/../../node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _permissions_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./permissions.mjs */ \"(middleware)/../../node_modules/openai/resources/fine-tuning/checkpoints/permissions.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\nclass Checkpoints extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    constructor(){\n        super(...arguments);\n        this.permissions = new _permissions_mjs__WEBPACK_IMPORTED_MODULE_1__.Permissions(this._client);\n    }\n}\nCheckpoints.Permissions = _permissions_mjs__WEBPACK_IMPORTED_MODULE_1__.Permissions; //# sourceMappingURL=checkpoints.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2ZpbmUtdHVuaW5nL2NoZWNrcG9pbnRzL2NoZWNrcG9pbnRzLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxzRkFBc0Y7QUFDN0I7QUFDTDtBQUNIO0FBQzFDLE1BQU1HLG9CQUFvQkgsMkRBQVdBO0lBQ3hDSSxhQUFjO1FBQ1YsS0FBSyxJQUFJQztRQUNULElBQUksQ0FBQ0MsV0FBVyxHQUFHLElBQUlMLHlEQUEwQixDQUFDLElBQUksQ0FBQ00sT0FBTztJQUNsRTtBQUNKO0FBQ0FKLFlBQVlELFdBQVcsR0FBR0EseURBQVdBLEVBQ3JDLHdDQUF3QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vbm9kZV9tb2R1bGVzL29wZW5haS9yZXNvdXJjZXMvZmluZS10dW5pbmcvY2hlY2twb2ludHMvY2hlY2twb2ludHMubWpzP2MwZDQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmltcG9ydCB7IEFQSVJlc291cmNlIH0gZnJvbSBcIi4uLy4uLy4uL2NvcmUvcmVzb3VyY2UubWpzXCI7XG5pbXBvcnQgKiBhcyBQZXJtaXNzaW9uc0FQSSBmcm9tIFwiLi9wZXJtaXNzaW9ucy5tanNcIjtcbmltcG9ydCB7IFBlcm1pc3Npb25zLCB9IGZyb20gXCIuL3Blcm1pc3Npb25zLm1qc1wiO1xuZXhwb3J0IGNsYXNzIENoZWNrcG9pbnRzIGV4dGVuZHMgQVBJUmVzb3VyY2Uge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICB0aGlzLnBlcm1pc3Npb25zID0gbmV3IFBlcm1pc3Npb25zQVBJLlBlcm1pc3Npb25zKHRoaXMuX2NsaWVudCk7XG4gICAgfVxufVxuQ2hlY2twb2ludHMuUGVybWlzc2lvbnMgPSBQZXJtaXNzaW9ucztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNoZWNrcG9pbnRzLm1qcy5tYXAiXSwibmFtZXMiOlsiQVBJUmVzb3VyY2UiLCJQZXJtaXNzaW9uc0FQSSIsIlBlcm1pc3Npb25zIiwiQ2hlY2twb2ludHMiLCJjb25zdHJ1Y3RvciIsImFyZ3VtZW50cyIsInBlcm1pc3Npb25zIiwiX2NsaWVudCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/resources/fine-tuning/checkpoints/checkpoints.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/resources/fine-tuning/checkpoints/permissions.mjs":
/*!***********************************************************************************!*\
  !*** ../../node_modules/openai/resources/fine-tuning/checkpoints/permissions.mjs ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Permissions: () => (/* binding */ Permissions)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/resource.mjs */ \"(middleware)/../../node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core/pagination.mjs */ \"(middleware)/../../node_modules/openai/core/pagination.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../internal/utils/path.mjs */ \"(middleware)/../../node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\nclass Permissions extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * **NOTE:** Calling this endpoint requires an [admin API key](../admin-api-keys).\n     *\n     * This enables organization owners to share fine-tuned models with other projects\n     * in their organization.\n     *\n     * @example\n     * ```ts\n     * // Automatically fetches more pages as needed.\n     * for await (const permissionCreateResponse of client.fineTuning.checkpoints.permissions.create(\n     *   'ft:gpt-4o-mini-2024-07-18:org:weather:B7R9VjQd',\n     *   { project_ids: ['string'] },\n     * )) {\n     *   // ...\n     * }\n     * ```\n     */ create(fineTunedModelCheckpoint, body, options) {\n        return this._client.getAPIList(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__.path`/fine_tuning/checkpoints/${fineTunedModelCheckpoint}/permissions`, _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__.Page, {\n            body,\n            method: \"post\",\n            ...options\n        });\n    }\n    /**\n     * **NOTE:** This endpoint requires an [admin API key](../admin-api-keys).\n     *\n     * Organization owners can use this endpoint to view all permissions for a\n     * fine-tuned model checkpoint.\n     *\n     * @example\n     * ```ts\n     * const permission =\n     *   await client.fineTuning.checkpoints.permissions.retrieve(\n     *     'ft-AF1WoRqd3aJAHsqc9NY7iL8F',\n     *   );\n     * ```\n     */ retrieve(fineTunedModelCheckpoint, query = {}, options) {\n        return this._client.get(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__.path`/fine_tuning/checkpoints/${fineTunedModelCheckpoint}/permissions`, {\n            query,\n            ...options\n        });\n    }\n    /**\n     * **NOTE:** This endpoint requires an [admin API key](../admin-api-keys).\n     *\n     * Organization owners can use this endpoint to delete a permission for a\n     * fine-tuned model checkpoint.\n     *\n     * @example\n     * ```ts\n     * const permission =\n     *   await client.fineTuning.checkpoints.permissions.delete(\n     *     'cp_zc4Q7MP6XxulcVzj4MZdwsAB',\n     *     {\n     *       fine_tuned_model_checkpoint:\n     *         'ft:gpt-4o-mini-2024-07-18:org:weather:B7R9VjQd',\n     *     },\n     *   );\n     * ```\n     */ delete(permissionID, params, options) {\n        const { fine_tuned_model_checkpoint } = params;\n        return this._client.delete(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__.path`/fine_tuning/checkpoints/${fine_tuned_model_checkpoint}/permissions/${permissionID}`, options);\n    }\n} //# sourceMappingURL=permissions.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2ZpbmUtdHVuaW5nL2NoZWNrcG9pbnRzL3Blcm1pc3Npb25zLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUEsc0ZBQXNGO0FBQzdCO0FBQ0w7QUFDSTtBQUNqRCxNQUFNRyxvQkFBb0JILDJEQUFXQTtJQUN4Qzs7Ozs7Ozs7Ozs7Ozs7OztLQWdCQyxHQUNESSxPQUFPQyx3QkFBd0IsRUFBRUMsSUFBSSxFQUFFQyxPQUFPLEVBQUU7UUFDNUMsT0FBTyxJQUFJLENBQUNDLE9BQU8sQ0FBQ0MsVUFBVSxDQUFDUCwwREFBSyxDQUFDLHlCQUF5QixFQUFFRyx5QkFBeUIsWUFBWSxDQUFDLEVBQUdKLHNEQUFJQSxFQUFHO1lBQUVLO1lBQU1JLFFBQVE7WUFBUSxHQUFHSCxPQUFPO1FBQUM7SUFDdko7SUFDQTs7Ozs7Ozs7Ozs7OztLQWFDLEdBQ0RJLFNBQVNOLHdCQUF3QixFQUFFTyxRQUFRLENBQUMsQ0FBQyxFQUFFTCxPQUFPLEVBQUU7UUFDcEQsT0FBTyxJQUFJLENBQUNDLE9BQU8sQ0FBQ0ssR0FBRyxDQUFDWCwwREFBSyxDQUFDLHlCQUF5QixFQUFFRyx5QkFBeUIsWUFBWSxDQUFDLEVBQUU7WUFDN0ZPO1lBQ0EsR0FBR0wsT0FBTztRQUNkO0lBQ0o7SUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7S0FpQkMsR0FDRE8sT0FBT0MsWUFBWSxFQUFFQyxNQUFNLEVBQUVULE9BQU8sRUFBRTtRQUNsQyxNQUFNLEVBQUVVLDJCQUEyQixFQUFFLEdBQUdEO1FBQ3hDLE9BQU8sSUFBSSxDQUFDUixPQUFPLENBQUNNLE1BQU0sQ0FBQ1osMERBQUssQ0FBQyx5QkFBeUIsRUFBRWUsNEJBQTRCLGFBQWEsRUFBRUYsYUFBYSxDQUFDLEVBQUVSO0lBQzNIO0FBQ0osRUFDQSx3Q0FBd0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2ZpbmUtdHVuaW5nL2NoZWNrcG9pbnRzL3Blcm1pc3Npb25zLm1qcz9iYmRjIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5pbXBvcnQgeyBBUElSZXNvdXJjZSB9IGZyb20gXCIuLi8uLi8uLi9jb3JlL3Jlc291cmNlLm1qc1wiO1xuaW1wb3J0IHsgUGFnZSB9IGZyb20gXCIuLi8uLi8uLi9jb3JlL3BhZ2luYXRpb24ubWpzXCI7XG5pbXBvcnQgeyBwYXRoIH0gZnJvbSBcIi4uLy4uLy4uL2ludGVybmFsL3V0aWxzL3BhdGgubWpzXCI7XG5leHBvcnQgY2xhc3MgUGVybWlzc2lvbnMgZXh0ZW5kcyBBUElSZXNvdXJjZSB7XG4gICAgLyoqXG4gICAgICogKipOT1RFOioqIENhbGxpbmcgdGhpcyBlbmRwb2ludCByZXF1aXJlcyBhbiBbYWRtaW4gQVBJIGtleV0oLi4vYWRtaW4tYXBpLWtleXMpLlxuICAgICAqXG4gICAgICogVGhpcyBlbmFibGVzIG9yZ2FuaXphdGlvbiBvd25lcnMgdG8gc2hhcmUgZmluZS10dW5lZCBtb2RlbHMgd2l0aCBvdGhlciBwcm9qZWN0c1xuICAgICAqIGluIHRoZWlyIG9yZ2FuaXphdGlvbi5cbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgdHNcbiAgICAgKiAvLyBBdXRvbWF0aWNhbGx5IGZldGNoZXMgbW9yZSBwYWdlcyBhcyBuZWVkZWQuXG4gICAgICogZm9yIGF3YWl0IChjb25zdCBwZXJtaXNzaW9uQ3JlYXRlUmVzcG9uc2Ugb2YgY2xpZW50LmZpbmVUdW5pbmcuY2hlY2twb2ludHMucGVybWlzc2lvbnMuY3JlYXRlKFxuICAgICAqICAgJ2Z0OmdwdC00by1taW5pLTIwMjQtMDctMTg6b3JnOndlYXRoZXI6QjdSOVZqUWQnLFxuICAgICAqICAgeyBwcm9qZWN0X2lkczogWydzdHJpbmcnXSB9LFxuICAgICAqICkpIHtcbiAgICAgKiAgIC8vIC4uLlxuICAgICAqIH1cbiAgICAgKiBgYGBcbiAgICAgKi9cbiAgICBjcmVhdGUoZmluZVR1bmVkTW9kZWxDaGVja3BvaW50LCBib2R5LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZ2V0QVBJTGlzdChwYXRoIGAvZmluZV90dW5pbmcvY2hlY2twb2ludHMvJHtmaW5lVHVuZWRNb2RlbENoZWNrcG9pbnR9L3Blcm1pc3Npb25zYCwgKFBhZ2UpLCB7IGJvZHksIG1ldGhvZDogJ3Bvc3QnLCAuLi5vcHRpb25zIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiAqKk5PVEU6KiogVGhpcyBlbmRwb2ludCByZXF1aXJlcyBhbiBbYWRtaW4gQVBJIGtleV0oLi4vYWRtaW4tYXBpLWtleXMpLlxuICAgICAqXG4gICAgICogT3JnYW5pemF0aW9uIG93bmVycyBjYW4gdXNlIHRoaXMgZW5kcG9pbnQgdG8gdmlldyBhbGwgcGVybWlzc2lvbnMgZm9yIGFcbiAgICAgKiBmaW5lLXR1bmVkIG1vZGVsIGNoZWNrcG9pbnQuXG4gICAgICpcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHRzXG4gICAgICogY29uc3QgcGVybWlzc2lvbiA9XG4gICAgICogICBhd2FpdCBjbGllbnQuZmluZVR1bmluZy5jaGVja3BvaW50cy5wZXJtaXNzaW9ucy5yZXRyaWV2ZShcbiAgICAgKiAgICAgJ2Z0LUFGMVdvUnFkM2FKQUhzcWM5Tlk3aUw4RicsXG4gICAgICogICApO1xuICAgICAqIGBgYFxuICAgICAqL1xuICAgIHJldHJpZXZlKGZpbmVUdW5lZE1vZGVsQ2hlY2twb2ludCwgcXVlcnkgPSB7fSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmdldChwYXRoIGAvZmluZV90dW5pbmcvY2hlY2twb2ludHMvJHtmaW5lVHVuZWRNb2RlbENoZWNrcG9pbnR9L3Blcm1pc3Npb25zYCwge1xuICAgICAgICAgICAgcXVlcnksXG4gICAgICAgICAgICAuLi5vcHRpb25zLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogKipOT1RFOioqIFRoaXMgZW5kcG9pbnQgcmVxdWlyZXMgYW4gW2FkbWluIEFQSSBrZXldKC4uL2FkbWluLWFwaS1rZXlzKS5cbiAgICAgKlxuICAgICAqIE9yZ2FuaXphdGlvbiBvd25lcnMgY2FuIHVzZSB0aGlzIGVuZHBvaW50IHRvIGRlbGV0ZSBhIHBlcm1pc3Npb24gZm9yIGFcbiAgICAgKiBmaW5lLXR1bmVkIG1vZGVsIGNoZWNrcG9pbnQuXG4gICAgICpcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHRzXG4gICAgICogY29uc3QgcGVybWlzc2lvbiA9XG4gICAgICogICBhd2FpdCBjbGllbnQuZmluZVR1bmluZy5jaGVja3BvaW50cy5wZXJtaXNzaW9ucy5kZWxldGUoXG4gICAgICogICAgICdjcF96YzRRN01QNlh4dWxjVnpqNE1aZHdzQUInLFxuICAgICAqICAgICB7XG4gICAgICogICAgICAgZmluZV90dW5lZF9tb2RlbF9jaGVja3BvaW50OlxuICAgICAqICAgICAgICAgJ2Z0OmdwdC00by1taW5pLTIwMjQtMDctMTg6b3JnOndlYXRoZXI6QjdSOVZqUWQnLFxuICAgICAqICAgICB9LFxuICAgICAqICAgKTtcbiAgICAgKiBgYGBcbiAgICAgKi9cbiAgICBkZWxldGUocGVybWlzc2lvbklELCBwYXJhbXMsIG9wdGlvbnMpIHtcbiAgICAgICAgY29uc3QgeyBmaW5lX3R1bmVkX21vZGVsX2NoZWNrcG9pbnQgfSA9IHBhcmFtcztcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5kZWxldGUocGF0aCBgL2ZpbmVfdHVuaW5nL2NoZWNrcG9pbnRzLyR7ZmluZV90dW5lZF9tb2RlbF9jaGVja3BvaW50fS9wZXJtaXNzaW9ucy8ke3Blcm1pc3Npb25JRH1gLCBvcHRpb25zKTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wZXJtaXNzaW9ucy5tanMubWFwIl0sIm5hbWVzIjpbIkFQSVJlc291cmNlIiwiUGFnZSIsInBhdGgiLCJQZXJtaXNzaW9ucyIsImNyZWF0ZSIsImZpbmVUdW5lZE1vZGVsQ2hlY2twb2ludCIsImJvZHkiLCJvcHRpb25zIiwiX2NsaWVudCIsImdldEFQSUxpc3QiLCJtZXRob2QiLCJyZXRyaWV2ZSIsInF1ZXJ5IiwiZ2V0IiwiZGVsZXRlIiwicGVybWlzc2lvbklEIiwicGFyYW1zIiwiZmluZV90dW5lZF9tb2RlbF9jaGVja3BvaW50Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/resources/fine-tuning/checkpoints/permissions.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/resources/fine-tuning/fine-tuning.mjs":
/*!***********************************************************************!*\
  !*** ../../node_modules/openai/resources/fine-tuning/fine-tuning.mjs ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FineTuning: () => (/* binding */ FineTuning)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/resource.mjs */ \"(middleware)/../../node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _methods_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./methods.mjs */ \"(middleware)/../../node_modules/openai/resources/fine-tuning/methods.mjs\");\n/* harmony import */ var _alpha_alpha_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./alpha/alpha.mjs */ \"(middleware)/../../node_modules/openai/resources/fine-tuning/alpha/alpha.mjs\");\n/* harmony import */ var _checkpoints_checkpoints_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./checkpoints/checkpoints.mjs */ \"(middleware)/../../node_modules/openai/resources/fine-tuning/checkpoints/checkpoints.mjs\");\n/* harmony import */ var _jobs_jobs_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./jobs/jobs.mjs */ \"(middleware)/../../node_modules/openai/resources/fine-tuning/jobs/jobs.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\n\n\n\n\n\nclass FineTuning extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    constructor(){\n        super(...arguments);\n        this.methods = new _methods_mjs__WEBPACK_IMPORTED_MODULE_1__.Methods(this._client);\n        this.jobs = new _jobs_jobs_mjs__WEBPACK_IMPORTED_MODULE_4__.Jobs(this._client);\n        this.checkpoints = new _checkpoints_checkpoints_mjs__WEBPACK_IMPORTED_MODULE_3__.Checkpoints(this._client);\n        this.alpha = new _alpha_alpha_mjs__WEBPACK_IMPORTED_MODULE_2__.Alpha(this._client);\n    }\n}\nFineTuning.Methods = _methods_mjs__WEBPACK_IMPORTED_MODULE_1__.Methods;\nFineTuning.Jobs = _jobs_jobs_mjs__WEBPACK_IMPORTED_MODULE_4__.Jobs;\nFineTuning.Checkpoints = _checkpoints_checkpoints_mjs__WEBPACK_IMPORTED_MODULE_3__.Checkpoints;\nFineTuning.Alpha = _alpha_alpha_mjs__WEBPACK_IMPORTED_MODULE_2__.Alpha; //# sourceMappingURL=fine-tuning.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2ZpbmUtdHVuaW5nL2ZpbmUtdHVuaW5nLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQSxzRkFBc0Y7QUFDaEM7QUFDVjtBQUNIO0FBQ0s7QUFDSjtBQUNzQjtBQUNKO0FBQ2pCO0FBQ0g7QUFDakMsTUFBTVMsbUJBQW1CVCwyREFBV0E7SUFDdkNVLGFBQWM7UUFDVixLQUFLLElBQUlDO1FBQ1QsSUFBSSxDQUFDQyxPQUFPLEdBQUcsSUFBSVgsaURBQWtCLENBQUMsSUFBSSxDQUFDWSxPQUFPO1FBQ2xELElBQUksQ0FBQ0MsSUFBSSxHQUFHLElBQUlQLGdEQUFZLENBQUMsSUFBSSxDQUFDTSxPQUFPO1FBQ3pDLElBQUksQ0FBQ0UsV0FBVyxHQUFHLElBQUlWLHFFQUEwQixDQUFDLElBQUksQ0FBQ1EsT0FBTztRQUM5RCxJQUFJLENBQUNHLEtBQUssR0FBRyxJQUFJYixtREFBYyxDQUFDLElBQUksQ0FBQ1UsT0FBTztJQUNoRDtBQUNKO0FBQ0FKLFdBQVdQLE9BQU8sR0FBR0EsaURBQU9BO0FBQzVCTyxXQUFXRCxJQUFJLEdBQUdBLGdEQUFJQTtBQUN0QkMsV0FBV0gsV0FBVyxHQUFHQSxxRUFBV0E7QUFDcENHLFdBQVdMLEtBQUssR0FBR0EsbURBQUtBLEVBQ3hCLHdDQUF3QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vbm9kZV9tb2R1bGVzL29wZW5haS9yZXNvdXJjZXMvZmluZS10dW5pbmcvZmluZS10dW5pbmcubWpzP2UwOGYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmltcG9ydCB7IEFQSVJlc291cmNlIH0gZnJvbSBcIi4uLy4uL2NvcmUvcmVzb3VyY2UubWpzXCI7XG5pbXBvcnQgKiBhcyBNZXRob2RzQVBJIGZyb20gXCIuL21ldGhvZHMubWpzXCI7XG5pbXBvcnQgeyBNZXRob2RzLCB9IGZyb20gXCIuL21ldGhvZHMubWpzXCI7XG5pbXBvcnQgKiBhcyBBbHBoYUFQSSBmcm9tIFwiLi9hbHBoYS9hbHBoYS5tanNcIjtcbmltcG9ydCB7IEFscGhhIH0gZnJvbSBcIi4vYWxwaGEvYWxwaGEubWpzXCI7XG5pbXBvcnQgKiBhcyBDaGVja3BvaW50c0FQSSBmcm9tIFwiLi9jaGVja3BvaW50cy9jaGVja3BvaW50cy5tanNcIjtcbmltcG9ydCB7IENoZWNrcG9pbnRzIH0gZnJvbSBcIi4vY2hlY2twb2ludHMvY2hlY2twb2ludHMubWpzXCI7XG5pbXBvcnQgKiBhcyBKb2JzQVBJIGZyb20gXCIuL2pvYnMvam9icy5tanNcIjtcbmltcG9ydCB7IEpvYnMsIH0gZnJvbSBcIi4vam9icy9qb2JzLm1qc1wiO1xuZXhwb3J0IGNsYXNzIEZpbmVUdW5pbmcgZXh0ZW5kcyBBUElSZXNvdXJjZSB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIHRoaXMubWV0aG9kcyA9IG5ldyBNZXRob2RzQVBJLk1ldGhvZHModGhpcy5fY2xpZW50KTtcbiAgICAgICAgdGhpcy5qb2JzID0gbmV3IEpvYnNBUEkuSm9icyh0aGlzLl9jbGllbnQpO1xuICAgICAgICB0aGlzLmNoZWNrcG9pbnRzID0gbmV3IENoZWNrcG9pbnRzQVBJLkNoZWNrcG9pbnRzKHRoaXMuX2NsaWVudCk7XG4gICAgICAgIHRoaXMuYWxwaGEgPSBuZXcgQWxwaGFBUEkuQWxwaGEodGhpcy5fY2xpZW50KTtcbiAgICB9XG59XG5GaW5lVHVuaW5nLk1ldGhvZHMgPSBNZXRob2RzO1xuRmluZVR1bmluZy5Kb2JzID0gSm9icztcbkZpbmVUdW5pbmcuQ2hlY2twb2ludHMgPSBDaGVja3BvaW50cztcbkZpbmVUdW5pbmcuQWxwaGEgPSBBbHBoYTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWZpbmUtdHVuaW5nLm1qcy5tYXAiXSwibmFtZXMiOlsiQVBJUmVzb3VyY2UiLCJNZXRob2RzQVBJIiwiTWV0aG9kcyIsIkFscGhhQVBJIiwiQWxwaGEiLCJDaGVja3BvaW50c0FQSSIsIkNoZWNrcG9pbnRzIiwiSm9ic0FQSSIsIkpvYnMiLCJGaW5lVHVuaW5nIiwiY29uc3RydWN0b3IiLCJhcmd1bWVudHMiLCJtZXRob2RzIiwiX2NsaWVudCIsImpvYnMiLCJjaGVja3BvaW50cyIsImFscGhhIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/resources/fine-tuning/fine-tuning.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/resources/fine-tuning/jobs/checkpoints.mjs":
/*!****************************************************************************!*\
  !*** ../../node_modules/openai/resources/fine-tuning/jobs/checkpoints.mjs ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Checkpoints: () => (/* binding */ Checkpoints)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/resource.mjs */ \"(middleware)/../../node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core/pagination.mjs */ \"(middleware)/../../node_modules/openai/core/pagination.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../internal/utils/path.mjs */ \"(middleware)/../../node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\nclass Checkpoints extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * List checkpoints for a fine-tuning job.\n     *\n     * @example\n     * ```ts\n     * // Automatically fetches more pages as needed.\n     * for await (const fineTuningJobCheckpoint of client.fineTuning.jobs.checkpoints.list(\n     *   'ft-AF1WoRqd3aJAHsqc9NY7iL8F',\n     * )) {\n     *   // ...\n     * }\n     * ```\n     */ list(fineTuningJobID, query = {}, options) {\n        return this._client.getAPIList(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__.path`/fine_tuning/jobs/${fineTuningJobID}/checkpoints`, _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__.CursorPage, {\n            query,\n            ...options\n        });\n    }\n} //# sourceMappingURL=checkpoints.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2ZpbmUtdHVuaW5nL2pvYnMvY2hlY2twb2ludHMubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSxzRkFBc0Y7QUFDN0I7QUFDQztBQUNGO0FBQ2pELE1BQU1HLG9CQUFvQkgsMkRBQVdBO0lBQ3hDOzs7Ozs7Ozs7Ozs7S0FZQyxHQUNESSxLQUFLQyxlQUFlLEVBQUVDLFFBQVEsQ0FBQyxDQUFDLEVBQUVDLE9BQU8sRUFBRTtRQUN2QyxPQUFPLElBQUksQ0FBQ0MsT0FBTyxDQUFDQyxVQUFVLENBQUNQLDBEQUFLLENBQUMsa0JBQWtCLEVBQUVHLGdCQUFnQixZQUFZLENBQUMsRUFBR0osNERBQVVBLEVBQUc7WUFBRUs7WUFBTyxHQUFHQyxPQUFPO1FBQUM7SUFDOUg7QUFDSixFQUNBLHdDQUF3QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vbm9kZV9tb2R1bGVzL29wZW5haS9yZXNvdXJjZXMvZmluZS10dW5pbmcvam9icy9jaGVja3BvaW50cy5tanM/ODBjYiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlIGdlbmVyYXRlZCBmcm9tIG91ciBPcGVuQVBJIHNwZWMgYnkgU3RhaW5sZXNzLiBTZWUgQ09OVFJJQlVUSU5HLm1kIGZvciBkZXRhaWxzLlxuaW1wb3J0IHsgQVBJUmVzb3VyY2UgfSBmcm9tIFwiLi4vLi4vLi4vY29yZS9yZXNvdXJjZS5tanNcIjtcbmltcG9ydCB7IEN1cnNvclBhZ2UgfSBmcm9tIFwiLi4vLi4vLi4vY29yZS9wYWdpbmF0aW9uLm1qc1wiO1xuaW1wb3J0IHsgcGF0aCB9IGZyb20gXCIuLi8uLi8uLi9pbnRlcm5hbC91dGlscy9wYXRoLm1qc1wiO1xuZXhwb3J0IGNsYXNzIENoZWNrcG9pbnRzIGV4dGVuZHMgQVBJUmVzb3VyY2Uge1xuICAgIC8qKlxuICAgICAqIExpc3QgY2hlY2twb2ludHMgZm9yIGEgZmluZS10dW5pbmcgam9iLlxuICAgICAqXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGB0c1xuICAgICAqIC8vIEF1dG9tYXRpY2FsbHkgZmV0Y2hlcyBtb3JlIHBhZ2VzIGFzIG5lZWRlZC5cbiAgICAgKiBmb3IgYXdhaXQgKGNvbnN0IGZpbmVUdW5pbmdKb2JDaGVja3BvaW50IG9mIGNsaWVudC5maW5lVHVuaW5nLmpvYnMuY2hlY2twb2ludHMubGlzdChcbiAgICAgKiAgICdmdC1BRjFXb1JxZDNhSkFIc3FjOU5ZN2lMOEYnLFxuICAgICAqICkpIHtcbiAgICAgKiAgIC8vIC4uLlxuICAgICAqIH1cbiAgICAgKiBgYGBcbiAgICAgKi9cbiAgICBsaXN0KGZpbmVUdW5pbmdKb2JJRCwgcXVlcnkgPSB7fSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmdldEFQSUxpc3QocGF0aCBgL2ZpbmVfdHVuaW5nL2pvYnMvJHtmaW5lVHVuaW5nSm9iSUR9L2NoZWNrcG9pbnRzYCwgKEN1cnNvclBhZ2UpLCB7IHF1ZXJ5LCAuLi5vcHRpb25zIH0pO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNoZWNrcG9pbnRzLm1qcy5tYXAiXSwibmFtZXMiOlsiQVBJUmVzb3VyY2UiLCJDdXJzb3JQYWdlIiwicGF0aCIsIkNoZWNrcG9pbnRzIiwibGlzdCIsImZpbmVUdW5pbmdKb2JJRCIsInF1ZXJ5Iiwib3B0aW9ucyIsIl9jbGllbnQiLCJnZXRBUElMaXN0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/resources/fine-tuning/jobs/checkpoints.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/resources/fine-tuning/jobs/jobs.mjs":
/*!*********************************************************************!*\
  !*** ../../node_modules/openai/resources/fine-tuning/jobs/jobs.mjs ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Jobs: () => (/* binding */ Jobs)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/resource.mjs */ \"(middleware)/../../node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _checkpoints_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./checkpoints.mjs */ \"(middleware)/../../node_modules/openai/resources/fine-tuning/jobs/checkpoints.mjs\");\n/* harmony import */ var _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../core/pagination.mjs */ \"(middleware)/../../node_modules/openai/core/pagination.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../internal/utils/path.mjs */ \"(middleware)/../../node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\n\nclass Jobs extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    constructor(){\n        super(...arguments);\n        this.checkpoints = new _checkpoints_mjs__WEBPACK_IMPORTED_MODULE_1__.Checkpoints(this._client);\n    }\n    /**\n     * Creates a fine-tuning job which begins the process of creating a new model from\n     * a given dataset.\n     *\n     * Response includes details of the enqueued job including job status and the name\n     * of the fine-tuned models once complete.\n     *\n     * [Learn more about fine-tuning](https://platform.openai.com/docs/guides/fine-tuning)\n     *\n     * @example\n     * ```ts\n     * const fineTuningJob = await client.fineTuning.jobs.create({\n     *   model: 'gpt-4o-mini',\n     *   training_file: 'file-abc123',\n     * });\n     * ```\n     */ create(body, options) {\n        return this._client.post(\"/fine_tuning/jobs\", {\n            body,\n            ...options\n        });\n    }\n    /**\n     * Get info about a fine-tuning job.\n     *\n     * [Learn more about fine-tuning](https://platform.openai.com/docs/guides/fine-tuning)\n     *\n     * @example\n     * ```ts\n     * const fineTuningJob = await client.fineTuning.jobs.retrieve(\n     *   'ft-AF1WoRqd3aJAHsqc9NY7iL8F',\n     * );\n     * ```\n     */ retrieve(fineTuningJobID, options) {\n        return this._client.get(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/fine_tuning/jobs/${fineTuningJobID}`, options);\n    }\n    /**\n     * List your organization's fine-tuning jobs\n     *\n     * @example\n     * ```ts\n     * // Automatically fetches more pages as needed.\n     * for await (const fineTuningJob of client.fineTuning.jobs.list()) {\n     *   // ...\n     * }\n     * ```\n     */ list(query = {}, options) {\n        return this._client.getAPIList(\"/fine_tuning/jobs\", _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_2__.CursorPage, {\n            query,\n            ...options\n        });\n    }\n    /**\n     * Immediately cancel a fine-tune job.\n     *\n     * @example\n     * ```ts\n     * const fineTuningJob = await client.fineTuning.jobs.cancel(\n     *   'ft-AF1WoRqd3aJAHsqc9NY7iL8F',\n     * );\n     * ```\n     */ cancel(fineTuningJobID, options) {\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/fine_tuning/jobs/${fineTuningJobID}/cancel`, options);\n    }\n    /**\n     * Get status updates for a fine-tuning job.\n     *\n     * @example\n     * ```ts\n     * // Automatically fetches more pages as needed.\n     * for await (const fineTuningJobEvent of client.fineTuning.jobs.listEvents(\n     *   'ft-AF1WoRqd3aJAHsqc9NY7iL8F',\n     * )) {\n     *   // ...\n     * }\n     * ```\n     */ listEvents(fineTuningJobID, query = {}, options) {\n        return this._client.getAPIList(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/fine_tuning/jobs/${fineTuningJobID}/events`, _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_2__.CursorPage, {\n            query,\n            ...options\n        });\n    }\n    /**\n     * Pause a fine-tune job.\n     *\n     * @example\n     * ```ts\n     * const fineTuningJob = await client.fineTuning.jobs.pause(\n     *   'ft-AF1WoRqd3aJAHsqc9NY7iL8F',\n     * );\n     * ```\n     */ pause(fineTuningJobID, options) {\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/fine_tuning/jobs/${fineTuningJobID}/pause`, options);\n    }\n    /**\n     * Resume a fine-tune job.\n     *\n     * @example\n     * ```ts\n     * const fineTuningJob = await client.fineTuning.jobs.resume(\n     *   'ft-AF1WoRqd3aJAHsqc9NY7iL8F',\n     * );\n     * ```\n     */ resume(fineTuningJobID, options) {\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/fine_tuning/jobs/${fineTuningJobID}/resume`, options);\n    }\n}\nJobs.Checkpoints = _checkpoints_mjs__WEBPACK_IMPORTED_MODULE_1__.Checkpoints; //# sourceMappingURL=jobs.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2ZpbmUtdHVuaW5nL2pvYnMvam9icy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQSxzRkFBc0Y7QUFDN0I7QUFDTDtBQUNIO0FBQ1M7QUFDRjtBQUNqRCxNQUFNSyxhQUFhTCwyREFBV0E7SUFDakNNLGFBQWM7UUFDVixLQUFLLElBQUlDO1FBQ1QsSUFBSSxDQUFDQyxXQUFXLEdBQUcsSUFBSVAseURBQTBCLENBQUMsSUFBSSxDQUFDUSxPQUFPO0lBQ2xFO0lBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7S0FnQkMsR0FDREMsT0FBT0MsSUFBSSxFQUFFQyxPQUFPLEVBQUU7UUFDbEIsT0FBTyxJQUFJLENBQUNILE9BQU8sQ0FBQ0ksSUFBSSxDQUFDLHFCQUFxQjtZQUFFRjtZQUFNLEdBQUdDLE9BQU87UUFBQztJQUNyRTtJQUNBOzs7Ozs7Ozs7OztLQVdDLEdBQ0RFLFNBQVNDLGVBQWUsRUFBRUgsT0FBTyxFQUFFO1FBQy9CLE9BQU8sSUFBSSxDQUFDSCxPQUFPLENBQUNPLEdBQUcsQ0FBQ1osMERBQUssQ0FBQyxrQkFBa0IsRUFBRVcsZ0JBQWdCLENBQUMsRUFBRUg7SUFDekU7SUFDQTs7Ozs7Ozs7OztLQVVDLEdBQ0RLLEtBQUtDLFFBQVEsQ0FBQyxDQUFDLEVBQUVOLE9BQU8sRUFBRTtRQUN0QixPQUFPLElBQUksQ0FBQ0gsT0FBTyxDQUFDVSxVQUFVLENBQUMscUJBQXNCaEIsNERBQVVBLEVBQUc7WUFBRWU7WUFBTyxHQUFHTixPQUFPO1FBQUM7SUFDMUY7SUFDQTs7Ozs7Ozs7O0tBU0MsR0FDRFEsT0FBT0wsZUFBZSxFQUFFSCxPQUFPLEVBQUU7UUFDN0IsT0FBTyxJQUFJLENBQUNILE9BQU8sQ0FBQ0ksSUFBSSxDQUFDVCwwREFBSyxDQUFDLGtCQUFrQixFQUFFVyxnQkFBZ0IsT0FBTyxDQUFDLEVBQUVIO0lBQ2pGO0lBQ0E7Ozs7Ozs7Ozs7OztLQVlDLEdBQ0RTLFdBQVdOLGVBQWUsRUFBRUcsUUFBUSxDQUFDLENBQUMsRUFBRU4sT0FBTyxFQUFFO1FBQzdDLE9BQU8sSUFBSSxDQUFDSCxPQUFPLENBQUNVLFVBQVUsQ0FBQ2YsMERBQUssQ0FBQyxrQkFBa0IsRUFBRVcsZ0JBQWdCLE9BQU8sQ0FBQyxFQUFHWiw0REFBVUEsRUFBRztZQUFFZTtZQUFPLEdBQUdOLE9BQU87UUFBQztJQUN6SDtJQUNBOzs7Ozs7Ozs7S0FTQyxHQUNEVSxNQUFNUCxlQUFlLEVBQUVILE9BQU8sRUFBRTtRQUM1QixPQUFPLElBQUksQ0FBQ0gsT0FBTyxDQUFDSSxJQUFJLENBQUNULDBEQUFLLENBQUMsa0JBQWtCLEVBQUVXLGdCQUFnQixNQUFNLENBQUMsRUFBRUg7SUFDaEY7SUFDQTs7Ozs7Ozs7O0tBU0MsR0FDRFcsT0FBT1IsZUFBZSxFQUFFSCxPQUFPLEVBQUU7UUFDN0IsT0FBTyxJQUFJLENBQUNILE9BQU8sQ0FBQ0ksSUFBSSxDQUFDVCwwREFBSyxDQUFDLGtCQUFrQixFQUFFVyxnQkFBZ0IsT0FBTyxDQUFDLEVBQUVIO0lBQ2pGO0FBQ0o7QUFDQVAsS0FBS0gsV0FBVyxHQUFHQSx5REFBV0EsRUFDOUIsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9maW5lLXR1bmluZy9qb2JzL2pvYnMubWpzPzYxOWQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmltcG9ydCB7IEFQSVJlc291cmNlIH0gZnJvbSBcIi4uLy4uLy4uL2NvcmUvcmVzb3VyY2UubWpzXCI7XG5pbXBvcnQgKiBhcyBDaGVja3BvaW50c0FQSSBmcm9tIFwiLi9jaGVja3BvaW50cy5tanNcIjtcbmltcG9ydCB7IENoZWNrcG9pbnRzLCB9IGZyb20gXCIuL2NoZWNrcG9pbnRzLm1qc1wiO1xuaW1wb3J0IHsgQ3Vyc29yUGFnZSB9IGZyb20gXCIuLi8uLi8uLi9jb3JlL3BhZ2luYXRpb24ubWpzXCI7XG5pbXBvcnQgeyBwYXRoIH0gZnJvbSBcIi4uLy4uLy4uL2ludGVybmFsL3V0aWxzL3BhdGgubWpzXCI7XG5leHBvcnQgY2xhc3MgSm9icyBleHRlbmRzIEFQSVJlc291cmNlIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgdGhpcy5jaGVja3BvaW50cyA9IG5ldyBDaGVja3BvaW50c0FQSS5DaGVja3BvaW50cyh0aGlzLl9jbGllbnQpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEgZmluZS10dW5pbmcgam9iIHdoaWNoIGJlZ2lucyB0aGUgcHJvY2VzcyBvZiBjcmVhdGluZyBhIG5ldyBtb2RlbCBmcm9tXG4gICAgICogYSBnaXZlbiBkYXRhc2V0LlxuICAgICAqXG4gICAgICogUmVzcG9uc2UgaW5jbHVkZXMgZGV0YWlscyBvZiB0aGUgZW5xdWV1ZWQgam9iIGluY2x1ZGluZyBqb2Igc3RhdHVzIGFuZCB0aGUgbmFtZVxuICAgICAqIG9mIHRoZSBmaW5lLXR1bmVkIG1vZGVscyBvbmNlIGNvbXBsZXRlLlxuICAgICAqXG4gICAgICogW0xlYXJuIG1vcmUgYWJvdXQgZmluZS10dW5pbmddKGh0dHBzOi8vcGxhdGZvcm0ub3BlbmFpLmNvbS9kb2NzL2d1aWRlcy9maW5lLXR1bmluZylcbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgdHNcbiAgICAgKiBjb25zdCBmaW5lVHVuaW5nSm9iID0gYXdhaXQgY2xpZW50LmZpbmVUdW5pbmcuam9icy5jcmVhdGUoe1xuICAgICAqICAgbW9kZWw6ICdncHQtNG8tbWluaScsXG4gICAgICogICB0cmFpbmluZ19maWxlOiAnZmlsZS1hYmMxMjMnLFxuICAgICAqIH0pO1xuICAgICAqIGBgYFxuICAgICAqL1xuICAgIGNyZWF0ZShib2R5LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQucG9zdCgnL2ZpbmVfdHVuaW5nL2pvYnMnLCB7IGJvZHksIC4uLm9wdGlvbnMgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldCBpbmZvIGFib3V0IGEgZmluZS10dW5pbmcgam9iLlxuICAgICAqXG4gICAgICogW0xlYXJuIG1vcmUgYWJvdXQgZmluZS10dW5pbmddKGh0dHBzOi8vcGxhdGZvcm0ub3BlbmFpLmNvbS9kb2NzL2d1aWRlcy9maW5lLXR1bmluZylcbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgdHNcbiAgICAgKiBjb25zdCBmaW5lVHVuaW5nSm9iID0gYXdhaXQgY2xpZW50LmZpbmVUdW5pbmcuam9icy5yZXRyaWV2ZShcbiAgICAgKiAgICdmdC1BRjFXb1JxZDNhSkFIc3FjOU5ZN2lMOEYnLFxuICAgICAqICk7XG4gICAgICogYGBgXG4gICAgICovXG4gICAgcmV0cmlldmUoZmluZVR1bmluZ0pvYklELCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZ2V0KHBhdGggYC9maW5lX3R1bmluZy9qb2JzLyR7ZmluZVR1bmluZ0pvYklEfWAsIG9wdGlvbnMpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBMaXN0IHlvdXIgb3JnYW5pemF0aW9uJ3MgZmluZS10dW5pbmcgam9ic1xuICAgICAqXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGB0c1xuICAgICAqIC8vIEF1dG9tYXRpY2FsbHkgZmV0Y2hlcyBtb3JlIHBhZ2VzIGFzIG5lZWRlZC5cbiAgICAgKiBmb3IgYXdhaXQgKGNvbnN0IGZpbmVUdW5pbmdKb2Igb2YgY2xpZW50LmZpbmVUdW5pbmcuam9icy5saXN0KCkpIHtcbiAgICAgKiAgIC8vIC4uLlxuICAgICAqIH1cbiAgICAgKiBgYGBcbiAgICAgKi9cbiAgICBsaXN0KHF1ZXJ5ID0ge30sIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5nZXRBUElMaXN0KCcvZmluZV90dW5pbmcvam9icycsIChDdXJzb3JQYWdlKSwgeyBxdWVyeSwgLi4ub3B0aW9ucyB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogSW1tZWRpYXRlbHkgY2FuY2VsIGEgZmluZS10dW5lIGpvYi5cbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgdHNcbiAgICAgKiBjb25zdCBmaW5lVHVuaW5nSm9iID0gYXdhaXQgY2xpZW50LmZpbmVUdW5pbmcuam9icy5jYW5jZWwoXG4gICAgICogICAnZnQtQUYxV29ScWQzYUpBSHNxYzlOWTdpTDhGJyxcbiAgICAgKiApO1xuICAgICAqIGBgYFxuICAgICAqL1xuICAgIGNhbmNlbChmaW5lVHVuaW5nSm9iSUQsIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5wb3N0KHBhdGggYC9maW5lX3R1bmluZy9qb2JzLyR7ZmluZVR1bmluZ0pvYklEfS9jYW5jZWxgLCBvcHRpb25zKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2V0IHN0YXR1cyB1cGRhdGVzIGZvciBhIGZpbmUtdHVuaW5nIGpvYi5cbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgdHNcbiAgICAgKiAvLyBBdXRvbWF0aWNhbGx5IGZldGNoZXMgbW9yZSBwYWdlcyBhcyBuZWVkZWQuXG4gICAgICogZm9yIGF3YWl0IChjb25zdCBmaW5lVHVuaW5nSm9iRXZlbnQgb2YgY2xpZW50LmZpbmVUdW5pbmcuam9icy5saXN0RXZlbnRzKFxuICAgICAqICAgJ2Z0LUFGMVdvUnFkM2FKQUhzcWM5Tlk3aUw4RicsXG4gICAgICogKSkge1xuICAgICAqICAgLy8gLi4uXG4gICAgICogfVxuICAgICAqIGBgYFxuICAgICAqL1xuICAgIGxpc3RFdmVudHMoZmluZVR1bmluZ0pvYklELCBxdWVyeSA9IHt9LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZ2V0QVBJTGlzdChwYXRoIGAvZmluZV90dW5pbmcvam9icy8ke2ZpbmVUdW5pbmdKb2JJRH0vZXZlbnRzYCwgKEN1cnNvclBhZ2UpLCB7IHF1ZXJ5LCAuLi5vcHRpb25zIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBQYXVzZSBhIGZpbmUtdHVuZSBqb2IuXG4gICAgICpcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHRzXG4gICAgICogY29uc3QgZmluZVR1bmluZ0pvYiA9IGF3YWl0IGNsaWVudC5maW5lVHVuaW5nLmpvYnMucGF1c2UoXG4gICAgICogICAnZnQtQUYxV29ScWQzYUpBSHNxYzlOWTdpTDhGJyxcbiAgICAgKiApO1xuICAgICAqIGBgYFxuICAgICAqL1xuICAgIHBhdXNlKGZpbmVUdW5pbmdKb2JJRCwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LnBvc3QocGF0aCBgL2ZpbmVfdHVuaW5nL2pvYnMvJHtmaW5lVHVuaW5nSm9iSUR9L3BhdXNlYCwgb3B0aW9ucyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJlc3VtZSBhIGZpbmUtdHVuZSBqb2IuXG4gICAgICpcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHRzXG4gICAgICogY29uc3QgZmluZVR1bmluZ0pvYiA9IGF3YWl0IGNsaWVudC5maW5lVHVuaW5nLmpvYnMucmVzdW1lKFxuICAgICAqICAgJ2Z0LUFGMVdvUnFkM2FKQUhzcWM5Tlk3aUw4RicsXG4gICAgICogKTtcbiAgICAgKiBgYGBcbiAgICAgKi9cbiAgICByZXN1bWUoZmluZVR1bmluZ0pvYklELCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQucG9zdChwYXRoIGAvZmluZV90dW5pbmcvam9icy8ke2ZpbmVUdW5pbmdKb2JJRH0vcmVzdW1lYCwgb3B0aW9ucyk7XG4gICAgfVxufVxuSm9icy5DaGVja3BvaW50cyA9IENoZWNrcG9pbnRzO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9am9icy5tanMubWFwIl0sIm5hbWVzIjpbIkFQSVJlc291cmNlIiwiQ2hlY2twb2ludHNBUEkiLCJDaGVja3BvaW50cyIsIkN1cnNvclBhZ2UiLCJwYXRoIiwiSm9icyIsImNvbnN0cnVjdG9yIiwiYXJndW1lbnRzIiwiY2hlY2twb2ludHMiLCJfY2xpZW50IiwiY3JlYXRlIiwiYm9keSIsIm9wdGlvbnMiLCJwb3N0IiwicmV0cmlldmUiLCJmaW5lVHVuaW5nSm9iSUQiLCJnZXQiLCJsaXN0IiwicXVlcnkiLCJnZXRBUElMaXN0IiwiY2FuY2VsIiwibGlzdEV2ZW50cyIsInBhdXNlIiwicmVzdW1lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/resources/fine-tuning/jobs/jobs.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/resources/fine-tuning/methods.mjs":
/*!*******************************************************************!*\
  !*** ../../node_modules/openai/resources/fine-tuning/methods.mjs ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Methods: () => (/* binding */ Methods)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/resource.mjs */ \"(middleware)/../../node_modules/openai/core/resource.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nclass Methods extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n} //# sourceMappingURL=methods.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2ZpbmUtdHVuaW5nL21ldGhvZHMubWpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsc0ZBQXNGO0FBQ2hDO0FBQy9DLE1BQU1DLGdCQUFnQkQsMkRBQVdBO0FBQ3hDLEVBQ0Esb0NBQW9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9maW5lLXR1bmluZy9tZXRob2RzLm1qcz83N2QyIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5pbXBvcnQgeyBBUElSZXNvdXJjZSB9IGZyb20gXCIuLi8uLi9jb3JlL3Jlc291cmNlLm1qc1wiO1xuZXhwb3J0IGNsYXNzIE1ldGhvZHMgZXh0ZW5kcyBBUElSZXNvdXJjZSB7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1tZXRob2RzLm1qcy5tYXAiXSwibmFtZXMiOlsiQVBJUmVzb3VyY2UiLCJNZXRob2RzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/resources/fine-tuning/methods.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/resources/graders/grader-models.mjs":
/*!*********************************************************************!*\
  !*** ../../node_modules/openai/resources/graders/grader-models.mjs ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GraderModels: () => (/* binding */ GraderModels)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/resource.mjs */ \"(middleware)/../../node_modules/openai/core/resource.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nclass GraderModels extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n} //# sourceMappingURL=grader-models.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2dyYWRlcnMvZ3JhZGVyLW1vZGVscy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxzRkFBc0Y7QUFDaEM7QUFDL0MsTUFBTUMscUJBQXFCRCwyREFBV0E7QUFDN0MsRUFDQSwwQ0FBMEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2dyYWRlcnMvZ3JhZGVyLW1vZGVscy5tanM/ZmYzMSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlIGdlbmVyYXRlZCBmcm9tIG91ciBPcGVuQVBJIHNwZWMgYnkgU3RhaW5sZXNzLiBTZWUgQ09OVFJJQlVUSU5HLm1kIGZvciBkZXRhaWxzLlxuaW1wb3J0IHsgQVBJUmVzb3VyY2UgfSBmcm9tIFwiLi4vLi4vY29yZS9yZXNvdXJjZS5tanNcIjtcbmV4cG9ydCBjbGFzcyBHcmFkZXJNb2RlbHMgZXh0ZW5kcyBBUElSZXNvdXJjZSB7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ncmFkZXItbW9kZWxzLm1qcy5tYXAiXSwibmFtZXMiOlsiQVBJUmVzb3VyY2UiLCJHcmFkZXJNb2RlbHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/resources/graders/grader-models.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/resources/graders/graders.mjs":
/*!***************************************************************!*\
  !*** ../../node_modules/openai/resources/graders/graders.mjs ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Graders: () => (/* binding */ Graders)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/resource.mjs */ \"(middleware)/../../node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _grader_models_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./grader-models.mjs */ \"(middleware)/../../node_modules/openai/resources/graders/grader-models.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\nclass Graders extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    constructor(){\n        super(...arguments);\n        this.graderModels = new _grader_models_mjs__WEBPACK_IMPORTED_MODULE_1__.GraderModels(this._client);\n    }\n}\nGraders.GraderModels = _grader_models_mjs__WEBPACK_IMPORTED_MODULE_1__.GraderModels; //# sourceMappingURL=graders.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2dyYWRlcnMvZ3JhZGVycy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsc0ZBQXNGO0FBQ2hDO0FBQ0M7QUFDSDtBQUM3QyxNQUFNRyxnQkFBZ0JILDJEQUFXQTtJQUNwQ0ksYUFBYztRQUNWLEtBQUssSUFBSUM7UUFDVCxJQUFJLENBQUNDLFlBQVksR0FBRyxJQUFJTCw0REFBNEIsQ0FBQyxJQUFJLENBQUNNLE9BQU87SUFDckU7QUFDSjtBQUNBSixRQUFRRCxZQUFZLEdBQUdBLDREQUFZQSxFQUNuQyxvQ0FBb0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2dyYWRlcnMvZ3JhZGVycy5tanM/N2NiOCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlIGdlbmVyYXRlZCBmcm9tIG91ciBPcGVuQVBJIHNwZWMgYnkgU3RhaW5sZXNzLiBTZWUgQ09OVFJJQlVUSU5HLm1kIGZvciBkZXRhaWxzLlxuaW1wb3J0IHsgQVBJUmVzb3VyY2UgfSBmcm9tIFwiLi4vLi4vY29yZS9yZXNvdXJjZS5tanNcIjtcbmltcG9ydCAqIGFzIEdyYWRlck1vZGVsc0FQSSBmcm9tIFwiLi9ncmFkZXItbW9kZWxzLm1qc1wiO1xuaW1wb3J0IHsgR3JhZGVyTW9kZWxzLCB9IGZyb20gXCIuL2dyYWRlci1tb2RlbHMubWpzXCI7XG5leHBvcnQgY2xhc3MgR3JhZGVycyBleHRlbmRzIEFQSVJlc291cmNlIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgdGhpcy5ncmFkZXJNb2RlbHMgPSBuZXcgR3JhZGVyTW9kZWxzQVBJLkdyYWRlck1vZGVscyh0aGlzLl9jbGllbnQpO1xuICAgIH1cbn1cbkdyYWRlcnMuR3JhZGVyTW9kZWxzID0gR3JhZGVyTW9kZWxzO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z3JhZGVycy5tanMubWFwIl0sIm5hbWVzIjpbIkFQSVJlc291cmNlIiwiR3JhZGVyTW9kZWxzQVBJIiwiR3JhZGVyTW9kZWxzIiwiR3JhZGVycyIsImNvbnN0cnVjdG9yIiwiYXJndW1lbnRzIiwiZ3JhZGVyTW9kZWxzIiwiX2NsaWVudCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/resources/graders/graders.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/resources/images.mjs":
/*!******************************************************!*\
  !*** ../../node_modules/openai/resources/images.mjs ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Images: () => (/* binding */ Images)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/resource.mjs */ \"(middleware)/../../node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _internal_uploads_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../internal/uploads.mjs */ \"(middleware)/../../node_modules/openai/internal/uploads.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\nclass Images extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Creates a variation of a given image. This endpoint only supports `dall-e-2`.\n     *\n     * @example\n     * ```ts\n     * const imagesResponse = await client.images.createVariation({\n     *   image: fs.createReadStream('otter.png'),\n     * });\n     * ```\n     */ createVariation(body, options) {\n        return this._client.post(\"/images/variations\", (0,_internal_uploads_mjs__WEBPACK_IMPORTED_MODULE_1__.multipartFormRequestOptions)({\n            body,\n            ...options\n        }, this._client));\n    }\n    /**\n     * Creates an edited or extended image given one or more source images and a\n     * prompt. This endpoint only supports `gpt-image-1` and `dall-e-2`.\n     *\n     * @example\n     * ```ts\n     * const imagesResponse = await client.images.edit({\n     *   image: fs.createReadStream('path/to/file'),\n     *   prompt: 'A cute baby sea otter wearing a beret',\n     * });\n     * ```\n     */ edit(body, options) {\n        return this._client.post(\"/images/edits\", (0,_internal_uploads_mjs__WEBPACK_IMPORTED_MODULE_1__.multipartFormRequestOptions)({\n            body,\n            ...options\n        }, this._client));\n    }\n    /**\n     * Creates an image given a prompt.\n     * [Learn more](https://platform.openai.com/docs/guides/images).\n     *\n     * @example\n     * ```ts\n     * const imagesResponse = await client.images.generate({\n     *   prompt: 'A cute baby sea otter',\n     * });\n     * ```\n     */ generate(body, options) {\n        return this._client.post(\"/images/generations\", {\n            body,\n            ...options\n        });\n    }\n} //# sourceMappingURL=images.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2ltYWdlcy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsc0ZBQXNGO0FBQ25DO0FBQ21CO0FBQy9ELE1BQU1FLGVBQWVGLDJEQUFXQTtJQUNuQzs7Ozs7Ozs7O0tBU0MsR0FDREcsZ0JBQWdCQyxJQUFJLEVBQUVDLE9BQU8sRUFBRTtRQUMzQixPQUFPLElBQUksQ0FBQ0MsT0FBTyxDQUFDQyxJQUFJLENBQUMsc0JBQXNCTixrRkFBMkJBLENBQUM7WUFBRUc7WUFBTSxHQUFHQyxPQUFPO1FBQUMsR0FBRyxJQUFJLENBQUNDLE9BQU87SUFDakg7SUFDQTs7Ozs7Ozs7Ozs7S0FXQyxHQUNERSxLQUFLSixJQUFJLEVBQUVDLE9BQU8sRUFBRTtRQUNoQixPQUFPLElBQUksQ0FBQ0MsT0FBTyxDQUFDQyxJQUFJLENBQUMsaUJBQWlCTixrRkFBMkJBLENBQUM7WUFBRUc7WUFBTSxHQUFHQyxPQUFPO1FBQUMsR0FBRyxJQUFJLENBQUNDLE9BQU87SUFDNUc7SUFDQTs7Ozs7Ozs7OztLQVVDLEdBQ0RHLFNBQVNMLElBQUksRUFBRUMsT0FBTyxFQUFFO1FBQ3BCLE9BQU8sSUFBSSxDQUFDQyxPQUFPLENBQUNDLElBQUksQ0FBQyx1QkFBdUI7WUFBRUg7WUFBTSxHQUFHQyxPQUFPO1FBQUM7SUFDdkU7QUFDSixFQUNBLG1DQUFtQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vbm9kZV9tb2R1bGVzL29wZW5haS9yZXNvdXJjZXMvaW1hZ2VzLm1qcz8zMTA0Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5pbXBvcnQgeyBBUElSZXNvdXJjZSB9IGZyb20gXCIuLi9jb3JlL3Jlc291cmNlLm1qc1wiO1xuaW1wb3J0IHsgbXVsdGlwYXJ0Rm9ybVJlcXVlc3RPcHRpb25zIH0gZnJvbSBcIi4uL2ludGVybmFsL3VwbG9hZHMubWpzXCI7XG5leHBvcnQgY2xhc3MgSW1hZ2VzIGV4dGVuZHMgQVBJUmVzb3VyY2Uge1xuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYSB2YXJpYXRpb24gb2YgYSBnaXZlbiBpbWFnZS4gVGhpcyBlbmRwb2ludCBvbmx5IHN1cHBvcnRzIGBkYWxsLWUtMmAuXG4gICAgICpcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHRzXG4gICAgICogY29uc3QgaW1hZ2VzUmVzcG9uc2UgPSBhd2FpdCBjbGllbnQuaW1hZ2VzLmNyZWF0ZVZhcmlhdGlvbih7XG4gICAgICogICBpbWFnZTogZnMuY3JlYXRlUmVhZFN0cmVhbSgnb3R0ZXIucG5nJyksXG4gICAgICogfSk7XG4gICAgICogYGBgXG4gICAgICovXG4gICAgY3JlYXRlVmFyaWF0aW9uKGJvZHksIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5wb3N0KCcvaW1hZ2VzL3ZhcmlhdGlvbnMnLCBtdWx0aXBhcnRGb3JtUmVxdWVzdE9wdGlvbnMoeyBib2R5LCAuLi5vcHRpb25zIH0sIHRoaXMuX2NsaWVudCkpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGFuIGVkaXRlZCBvciBleHRlbmRlZCBpbWFnZSBnaXZlbiBvbmUgb3IgbW9yZSBzb3VyY2UgaW1hZ2VzIGFuZCBhXG4gICAgICogcHJvbXB0LiBUaGlzIGVuZHBvaW50IG9ubHkgc3VwcG9ydHMgYGdwdC1pbWFnZS0xYCBhbmQgYGRhbGwtZS0yYC5cbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgdHNcbiAgICAgKiBjb25zdCBpbWFnZXNSZXNwb25zZSA9IGF3YWl0IGNsaWVudC5pbWFnZXMuZWRpdCh7XG4gICAgICogICBpbWFnZTogZnMuY3JlYXRlUmVhZFN0cmVhbSgncGF0aC90by9maWxlJyksXG4gICAgICogICBwcm9tcHQ6ICdBIGN1dGUgYmFieSBzZWEgb3R0ZXIgd2VhcmluZyBhIGJlcmV0JyxcbiAgICAgKiB9KTtcbiAgICAgKiBgYGBcbiAgICAgKi9cbiAgICBlZGl0KGJvZHksIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5wb3N0KCcvaW1hZ2VzL2VkaXRzJywgbXVsdGlwYXJ0Rm9ybVJlcXVlc3RPcHRpb25zKHsgYm9keSwgLi4ub3B0aW9ucyB9LCB0aGlzLl9jbGllbnQpKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhbiBpbWFnZSBnaXZlbiBhIHByb21wdC5cbiAgICAgKiBbTGVhcm4gbW9yZV0oaHR0cHM6Ly9wbGF0Zm9ybS5vcGVuYWkuY29tL2RvY3MvZ3VpZGVzL2ltYWdlcykuXG4gICAgICpcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHRzXG4gICAgICogY29uc3QgaW1hZ2VzUmVzcG9uc2UgPSBhd2FpdCBjbGllbnQuaW1hZ2VzLmdlbmVyYXRlKHtcbiAgICAgKiAgIHByb21wdDogJ0EgY3V0ZSBiYWJ5IHNlYSBvdHRlcicsXG4gICAgICogfSk7XG4gICAgICogYGBgXG4gICAgICovXG4gICAgZ2VuZXJhdGUoYm9keSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LnBvc3QoJy9pbWFnZXMvZ2VuZXJhdGlvbnMnLCB7IGJvZHksIC4uLm9wdGlvbnMgfSk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW1hZ2VzLm1qcy5tYXAiXSwibmFtZXMiOlsiQVBJUmVzb3VyY2UiLCJtdWx0aXBhcnRGb3JtUmVxdWVzdE9wdGlvbnMiLCJJbWFnZXMiLCJjcmVhdGVWYXJpYXRpb24iLCJib2R5Iiwib3B0aW9ucyIsIl9jbGllbnQiLCJwb3N0IiwiZWRpdCIsImdlbmVyYXRlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/resources/images.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/resources/index.mjs":
/*!*****************************************************!*\
  !*** ../../node_modules/openai/resources/index.mjs ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Audio: () => (/* reexport safe */ _audio_audio_mjs__WEBPACK_IMPORTED_MODULE_2__.Audio),\n/* harmony export */   Batches: () => (/* reexport safe */ _batches_mjs__WEBPACK_IMPORTED_MODULE_3__.Batches),\n/* harmony export */   Beta: () => (/* reexport safe */ _beta_beta_mjs__WEBPACK_IMPORTED_MODULE_4__.Beta),\n/* harmony export */   Completions: () => (/* reexport safe */ _completions_mjs__WEBPACK_IMPORTED_MODULE_5__.Completions),\n/* harmony export */   Containers: () => (/* reexport safe */ _containers_containers_mjs__WEBPACK_IMPORTED_MODULE_6__.Containers),\n/* harmony export */   Embeddings: () => (/* reexport safe */ _embeddings_mjs__WEBPACK_IMPORTED_MODULE_7__.Embeddings),\n/* harmony export */   Evals: () => (/* reexport safe */ _evals_evals_mjs__WEBPACK_IMPORTED_MODULE_8__.Evals),\n/* harmony export */   Files: () => (/* reexport safe */ _files_mjs__WEBPACK_IMPORTED_MODULE_9__.Files),\n/* harmony export */   FineTuning: () => (/* reexport safe */ _fine_tuning_fine_tuning_mjs__WEBPACK_IMPORTED_MODULE_10__.FineTuning),\n/* harmony export */   Graders: () => (/* reexport safe */ _graders_graders_mjs__WEBPACK_IMPORTED_MODULE_11__.Graders),\n/* harmony export */   Images: () => (/* reexport safe */ _images_mjs__WEBPACK_IMPORTED_MODULE_12__.Images),\n/* harmony export */   Models: () => (/* reexport safe */ _models_mjs__WEBPACK_IMPORTED_MODULE_13__.Models),\n/* harmony export */   Moderations: () => (/* reexport safe */ _moderations_mjs__WEBPACK_IMPORTED_MODULE_14__.Moderations),\n/* harmony export */   Responses: () => (/* reexport safe */ _responses_responses_mjs__WEBPACK_IMPORTED_MODULE_15__.Responses),\n/* harmony export */   Uploads: () => (/* reexport safe */ _uploads_uploads_mjs__WEBPACK_IMPORTED_MODULE_16__.Uploads),\n/* harmony export */   VectorStores: () => (/* reexport safe */ _vector_stores_vector_stores_mjs__WEBPACK_IMPORTED_MODULE_17__.VectorStores)\n/* harmony export */ });\n/* harmony import */ var _chat_index_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chat/index.mjs */ \"(middleware)/../../node_modules/openai/resources/chat/index.mjs\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _chat_index_mjs__WEBPACK_IMPORTED_MODULE_0__) if([\"default\",\"Audio\",\"Batches\",\"Beta\",\"Completions\",\"Containers\",\"Embeddings\",\"Evals\",\"Files\",\"FineTuning\",\"Graders\",\"Images\",\"Models\",\"Moderations\",\"Responses\",\"Uploads\",\"VectorStores\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _chat_index_mjs__WEBPACK_IMPORTED_MODULE_0__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _shared_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./shared.mjs */ \"(middleware)/../../node_modules/openai/resources/shared.mjs\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _shared_mjs__WEBPACK_IMPORTED_MODULE_1__) if([\"default\",\"Audio\",\"Batches\",\"Beta\",\"Completions\",\"Containers\",\"Embeddings\",\"Evals\",\"Files\",\"FineTuning\",\"Graders\",\"Images\",\"Models\",\"Moderations\",\"Responses\",\"Uploads\",\"VectorStores\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _shared_mjs__WEBPACK_IMPORTED_MODULE_1__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _audio_audio_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./audio/audio.mjs */ \"(middleware)/../../node_modules/openai/resources/audio/audio.mjs\");\n/* harmony import */ var _batches_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./batches.mjs */ \"(middleware)/../../node_modules/openai/resources/batches.mjs\");\n/* harmony import */ var _beta_beta_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./beta/beta.mjs */ \"(middleware)/../../node_modules/openai/resources/beta/beta.mjs\");\n/* harmony import */ var _completions_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./completions.mjs */ \"(middleware)/../../node_modules/openai/resources/completions.mjs\");\n/* harmony import */ var _containers_containers_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./containers/containers.mjs */ \"(middleware)/../../node_modules/openai/resources/containers/containers.mjs\");\n/* harmony import */ var _embeddings_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./embeddings.mjs */ \"(middleware)/../../node_modules/openai/resources/embeddings.mjs\");\n/* harmony import */ var _evals_evals_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./evals/evals.mjs */ \"(middleware)/../../node_modules/openai/resources/evals/evals.mjs\");\n/* harmony import */ var _files_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./files.mjs */ \"(middleware)/../../node_modules/openai/resources/files.mjs\");\n/* harmony import */ var _fine_tuning_fine_tuning_mjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./fine-tuning/fine-tuning.mjs */ \"(middleware)/../../node_modules/openai/resources/fine-tuning/fine-tuning.mjs\");\n/* harmony import */ var _graders_graders_mjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./graders/graders.mjs */ \"(middleware)/../../node_modules/openai/resources/graders/graders.mjs\");\n/* harmony import */ var _images_mjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./images.mjs */ \"(middleware)/../../node_modules/openai/resources/images.mjs\");\n/* harmony import */ var _models_mjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./models.mjs */ \"(middleware)/../../node_modules/openai/resources/models.mjs\");\n/* harmony import */ var _moderations_mjs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./moderations.mjs */ \"(middleware)/../../node_modules/openai/resources/moderations.mjs\");\n/* harmony import */ var _responses_responses_mjs__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./responses/responses.mjs */ \"(middleware)/../../node_modules/openai/resources/responses/responses.mjs\");\n/* harmony import */ var _uploads_uploads_mjs__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./uploads/uploads.mjs */ \"(middleware)/../../node_modules/openai/resources/uploads/uploads.mjs\");\n/* harmony import */ var _vector_stores_vector_stores_mjs__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./vector-stores/vector-stores.mjs */ \"(middleware)/../../node_modules/openai/resources/vector-stores/vector-stores.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n //# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2luZGV4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsc0ZBQXNGO0FBQ3JEO0FBQ0o7QUFDYTtBQUNEO0FBQ0Y7QUFDVTtBQUNTO0FBQ1g7QUFDSjtBQUNOO0FBQ3NCO0FBQ1g7QUFDVDtBQUNEO0FBQ1c7QUFDSztBQUNOO0FBQ2tCLENBQ2xFLGtDQUFrQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vbm9kZV9tb2R1bGVzL29wZW5haS9yZXNvdXJjZXMvaW5kZXgubWpzP2QwODQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmV4cG9ydCAqIGZyb20gXCIuL2NoYXQvaW5kZXgubWpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9zaGFyZWQubWpzXCI7XG5leHBvcnQgeyBBdWRpbyB9IGZyb20gXCIuL2F1ZGlvL2F1ZGlvLm1qc1wiO1xuZXhwb3J0IHsgQmF0Y2hlcywgfSBmcm9tIFwiLi9iYXRjaGVzLm1qc1wiO1xuZXhwb3J0IHsgQmV0YSB9IGZyb20gXCIuL2JldGEvYmV0YS5tanNcIjtcbmV4cG9ydCB7IENvbXBsZXRpb25zLCB9IGZyb20gXCIuL2NvbXBsZXRpb25zLm1qc1wiO1xuZXhwb3J0IHsgQ29udGFpbmVycywgfSBmcm9tIFwiLi9jb250YWluZXJzL2NvbnRhaW5lcnMubWpzXCI7XG5leHBvcnQgeyBFbWJlZGRpbmdzLCB9IGZyb20gXCIuL2VtYmVkZGluZ3MubWpzXCI7XG5leHBvcnQgeyBFdmFscywgfSBmcm9tIFwiLi9ldmFscy9ldmFscy5tanNcIjtcbmV4cG9ydCB7IEZpbGVzLCB9IGZyb20gXCIuL2ZpbGVzLm1qc1wiO1xuZXhwb3J0IHsgRmluZVR1bmluZyB9IGZyb20gXCIuL2ZpbmUtdHVuaW5nL2ZpbmUtdHVuaW5nLm1qc1wiO1xuZXhwb3J0IHsgR3JhZGVycyB9IGZyb20gXCIuL2dyYWRlcnMvZ3JhZGVycy5tanNcIjtcbmV4cG9ydCB7IEltYWdlcywgfSBmcm9tIFwiLi9pbWFnZXMubWpzXCI7XG5leHBvcnQgeyBNb2RlbHMgfSBmcm9tIFwiLi9tb2RlbHMubWpzXCI7XG5leHBvcnQgeyBNb2RlcmF0aW9ucywgfSBmcm9tIFwiLi9tb2RlcmF0aW9ucy5tanNcIjtcbmV4cG9ydCB7IFJlc3BvbnNlcyB9IGZyb20gXCIuL3Jlc3BvbnNlcy9yZXNwb25zZXMubWpzXCI7XG5leHBvcnQgeyBVcGxvYWRzIH0gZnJvbSBcIi4vdXBsb2Fkcy91cGxvYWRzLm1qc1wiO1xuZXhwb3J0IHsgVmVjdG9yU3RvcmVzLCB9IGZyb20gXCIuL3ZlY3Rvci1zdG9yZXMvdmVjdG9yLXN0b3Jlcy5tanNcIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4Lm1qcy5tYXAiXSwibmFtZXMiOlsiQXVkaW8iLCJCYXRjaGVzIiwiQmV0YSIsIkNvbXBsZXRpb25zIiwiQ29udGFpbmVycyIsIkVtYmVkZGluZ3MiLCJFdmFscyIsIkZpbGVzIiwiRmluZVR1bmluZyIsIkdyYWRlcnMiLCJJbWFnZXMiLCJNb2RlbHMiLCJNb2RlcmF0aW9ucyIsIlJlc3BvbnNlcyIsIlVwbG9hZHMiLCJWZWN0b3JTdG9yZXMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/resources/index.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/resources/models.mjs":
/*!******************************************************!*\
  !*** ../../node_modules/openai/resources/models.mjs ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Models: () => (/* binding */ Models)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/resource.mjs */ \"(middleware)/../../node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/pagination.mjs */ \"(middleware)/../../node_modules/openai/core/pagination.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../internal/utils/path.mjs */ \"(middleware)/../../node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\nclass Models extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Retrieves a model instance, providing basic information about the model such as\n     * the owner and permissioning.\n     */ retrieve(model, options) {\n        return this._client.get(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__.path`/models/${model}`, options);\n    }\n    /**\n     * Lists the currently available models, and provides basic information about each\n     * one such as the owner and availability.\n     */ list(options) {\n        return this._client.getAPIList(\"/models\", _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__.Page, options);\n    }\n    /**\n     * Delete a fine-tuned model. You must have the Owner role in your organization to\n     * delete a model.\n     */ delete(model, options) {\n        return this._client.delete(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__.path`/models/${model}`, options);\n    }\n} //# sourceMappingURL=models.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL21vZGVscy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLHNGQUFzRjtBQUNuQztBQUNMO0FBQ0k7QUFDM0MsTUFBTUcsZUFBZUgsMkRBQVdBO0lBQ25DOzs7S0FHQyxHQUNESSxTQUFTQyxLQUFLLEVBQUVDLE9BQU8sRUFBRTtRQUNyQixPQUFPLElBQUksQ0FBQ0MsT0FBTyxDQUFDQyxHQUFHLENBQUNOLDBEQUFLLENBQUMsUUFBUSxFQUFFRyxNQUFNLENBQUMsRUFBRUM7SUFDckQ7SUFDQTs7O0tBR0MsR0FDREcsS0FBS0gsT0FBTyxFQUFFO1FBQ1YsT0FBTyxJQUFJLENBQUNDLE9BQU8sQ0FBQ0csVUFBVSxDQUFDLFdBQVlULHNEQUFJQSxFQUFHSztJQUN0RDtJQUNBOzs7S0FHQyxHQUNESyxPQUFPTixLQUFLLEVBQUVDLE9BQU8sRUFBRTtRQUNuQixPQUFPLElBQUksQ0FBQ0MsT0FBTyxDQUFDSSxNQUFNLENBQUNULDBEQUFLLENBQUMsUUFBUSxFQUFFRyxNQUFNLENBQUMsRUFBRUM7SUFDeEQ7QUFDSixFQUNBLG1DQUFtQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vbm9kZV9tb2R1bGVzL29wZW5haS9yZXNvdXJjZXMvbW9kZWxzLm1qcz9mNzlhIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5pbXBvcnQgeyBBUElSZXNvdXJjZSB9IGZyb20gXCIuLi9jb3JlL3Jlc291cmNlLm1qc1wiO1xuaW1wb3J0IHsgUGFnZSB9IGZyb20gXCIuLi9jb3JlL3BhZ2luYXRpb24ubWpzXCI7XG5pbXBvcnQgeyBwYXRoIH0gZnJvbSBcIi4uL2ludGVybmFsL3V0aWxzL3BhdGgubWpzXCI7XG5leHBvcnQgY2xhc3MgTW9kZWxzIGV4dGVuZHMgQVBJUmVzb3VyY2Uge1xuICAgIC8qKlxuICAgICAqIFJldHJpZXZlcyBhIG1vZGVsIGluc3RhbmNlLCBwcm92aWRpbmcgYmFzaWMgaW5mb3JtYXRpb24gYWJvdXQgdGhlIG1vZGVsIHN1Y2ggYXNcbiAgICAgKiB0aGUgb3duZXIgYW5kIHBlcm1pc3Npb25pbmcuXG4gICAgICovXG4gICAgcmV0cmlldmUobW9kZWwsIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5nZXQocGF0aCBgL21vZGVscy8ke21vZGVsfWAsIG9wdGlvbnMpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBMaXN0cyB0aGUgY3VycmVudGx5IGF2YWlsYWJsZSBtb2RlbHMsIGFuZCBwcm92aWRlcyBiYXNpYyBpbmZvcm1hdGlvbiBhYm91dCBlYWNoXG4gICAgICogb25lIHN1Y2ggYXMgdGhlIG93bmVyIGFuZCBhdmFpbGFiaWxpdHkuXG4gICAgICovXG4gICAgbGlzdChvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZ2V0QVBJTGlzdCgnL21vZGVscycsIChQYWdlKSwgb3B0aW9ucyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIERlbGV0ZSBhIGZpbmUtdHVuZWQgbW9kZWwuIFlvdSBtdXN0IGhhdmUgdGhlIE93bmVyIHJvbGUgaW4geW91ciBvcmdhbml6YXRpb24gdG9cbiAgICAgKiBkZWxldGUgYSBtb2RlbC5cbiAgICAgKi9cbiAgICBkZWxldGUobW9kZWwsIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5kZWxldGUocGF0aCBgL21vZGVscy8ke21vZGVsfWAsIG9wdGlvbnMpO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW1vZGVscy5tanMubWFwIl0sIm5hbWVzIjpbIkFQSVJlc291cmNlIiwiUGFnZSIsInBhdGgiLCJNb2RlbHMiLCJyZXRyaWV2ZSIsIm1vZGVsIiwib3B0aW9ucyIsIl9jbGllbnQiLCJnZXQiLCJsaXN0IiwiZ2V0QVBJTGlzdCIsImRlbGV0ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/resources/models.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/resources/moderations.mjs":
/*!***********************************************************!*\
  !*** ../../node_modules/openai/resources/moderations.mjs ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Moderations: () => (/* binding */ Moderations)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/resource.mjs */ \"(middleware)/../../node_modules/openai/core/resource.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nclass Moderations extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Classifies if text and/or image inputs are potentially harmful. Learn more in\n     * the [moderation guide](https://platform.openai.com/docs/guides/moderation).\n     */ create(body, options) {\n        return this._client.post(\"/moderations\", {\n            body,\n            ...options\n        });\n    }\n} //# sourceMappingURL=moderations.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL21vZGVyYXRpb25zLm1qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLHNGQUFzRjtBQUNuQztBQUM1QyxNQUFNQyxvQkFBb0JELDJEQUFXQTtJQUN4Qzs7O0tBR0MsR0FDREUsT0FBT0MsSUFBSSxFQUFFQyxPQUFPLEVBQUU7UUFDbEIsT0FBTyxJQUFJLENBQUNDLE9BQU8sQ0FBQ0MsSUFBSSxDQUFDLGdCQUFnQjtZQUFFSDtZQUFNLEdBQUdDLE9BQU87UUFBQztJQUNoRTtBQUNKLEVBQ0Esd0NBQXdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9tb2RlcmF0aW9ucy5tanM/OTJmNCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlIGdlbmVyYXRlZCBmcm9tIG91ciBPcGVuQVBJIHNwZWMgYnkgU3RhaW5sZXNzLiBTZWUgQ09OVFJJQlVUSU5HLm1kIGZvciBkZXRhaWxzLlxuaW1wb3J0IHsgQVBJUmVzb3VyY2UgfSBmcm9tIFwiLi4vY29yZS9yZXNvdXJjZS5tanNcIjtcbmV4cG9ydCBjbGFzcyBNb2RlcmF0aW9ucyBleHRlbmRzIEFQSVJlc291cmNlIHtcbiAgICAvKipcbiAgICAgKiBDbGFzc2lmaWVzIGlmIHRleHQgYW5kL29yIGltYWdlIGlucHV0cyBhcmUgcG90ZW50aWFsbHkgaGFybWZ1bC4gTGVhcm4gbW9yZSBpblxuICAgICAqIHRoZSBbbW9kZXJhdGlvbiBndWlkZV0oaHR0cHM6Ly9wbGF0Zm9ybS5vcGVuYWkuY29tL2RvY3MvZ3VpZGVzL21vZGVyYXRpb24pLlxuICAgICAqL1xuICAgIGNyZWF0ZShib2R5LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQucG9zdCgnL21vZGVyYXRpb25zJywgeyBib2R5LCAuLi5vcHRpb25zIH0pO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW1vZGVyYXRpb25zLm1qcy5tYXAiXSwibmFtZXMiOlsiQVBJUmVzb3VyY2UiLCJNb2RlcmF0aW9ucyIsImNyZWF0ZSIsImJvZHkiLCJvcHRpb25zIiwiX2NsaWVudCIsInBvc3QiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/resources/moderations.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/resources/responses/input-items.mjs":
/*!*********************************************************************!*\
  !*** ../../node_modules/openai/resources/responses/input-items.mjs ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InputItems: () => (/* binding */ InputItems)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/resource.mjs */ \"(middleware)/../../node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/pagination.mjs */ \"(middleware)/../../node_modules/openai/core/pagination.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../internal/utils/path.mjs */ \"(middleware)/../../node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\nclass InputItems extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Returns a list of input items for a given response.\n     *\n     * @example\n     * ```ts\n     * // Automatically fetches more pages as needed.\n     * for await (const responseItem of client.responses.inputItems.list(\n     *   'response_id',\n     * )) {\n     *   // ...\n     * }\n     * ```\n     */ list(responseID, query = {}, options) {\n        return this._client.getAPIList(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__.path`/responses/${responseID}/input_items`, _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__.CursorPage, {\n            query,\n            ...options\n        });\n    }\n} //# sourceMappingURL=input-items.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL3Jlc3BvbnNlcy9pbnB1dC1pdGVtcy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLHNGQUFzRjtBQUNoQztBQUNDO0FBQ0Y7QUFDOUMsTUFBTUcsbUJBQW1CSCwyREFBV0E7SUFDdkM7Ozs7Ozs7Ozs7OztLQVlDLEdBQ0RJLEtBQUtDLFVBQVUsRUFBRUMsUUFBUSxDQUFDLENBQUMsRUFBRUMsT0FBTyxFQUFFO1FBQ2xDLE9BQU8sSUFBSSxDQUFDQyxPQUFPLENBQUNDLFVBQVUsQ0FBQ1AsMERBQUssQ0FBQyxXQUFXLEVBQUVHLFdBQVcsWUFBWSxDQUFDLEVBQUdKLDREQUFVQSxFQUFHO1lBQUVLO1lBQU8sR0FBR0MsT0FBTztRQUFDO0lBQ2xIO0FBQ0osRUFDQSx3Q0FBd0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL3Jlc3BvbnNlcy9pbnB1dC1pdGVtcy5tanM/MjMyNCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlIGdlbmVyYXRlZCBmcm9tIG91ciBPcGVuQVBJIHNwZWMgYnkgU3RhaW5sZXNzLiBTZWUgQ09OVFJJQlVUSU5HLm1kIGZvciBkZXRhaWxzLlxuaW1wb3J0IHsgQVBJUmVzb3VyY2UgfSBmcm9tIFwiLi4vLi4vY29yZS9yZXNvdXJjZS5tanNcIjtcbmltcG9ydCB7IEN1cnNvclBhZ2UgfSBmcm9tIFwiLi4vLi4vY29yZS9wYWdpbmF0aW9uLm1qc1wiO1xuaW1wb3J0IHsgcGF0aCB9IGZyb20gXCIuLi8uLi9pbnRlcm5hbC91dGlscy9wYXRoLm1qc1wiO1xuZXhwb3J0IGNsYXNzIElucHV0SXRlbXMgZXh0ZW5kcyBBUElSZXNvdXJjZSB7XG4gICAgLyoqXG4gICAgICogUmV0dXJucyBhIGxpc3Qgb2YgaW5wdXQgaXRlbXMgZm9yIGEgZ2l2ZW4gcmVzcG9uc2UuXG4gICAgICpcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHRzXG4gICAgICogLy8gQXV0b21hdGljYWxseSBmZXRjaGVzIG1vcmUgcGFnZXMgYXMgbmVlZGVkLlxuICAgICAqIGZvciBhd2FpdCAoY29uc3QgcmVzcG9uc2VJdGVtIG9mIGNsaWVudC5yZXNwb25zZXMuaW5wdXRJdGVtcy5saXN0KFxuICAgICAqICAgJ3Jlc3BvbnNlX2lkJyxcbiAgICAgKiApKSB7XG4gICAgICogICAvLyAuLi5cbiAgICAgKiB9XG4gICAgICogYGBgXG4gICAgICovXG4gICAgbGlzdChyZXNwb25zZUlELCBxdWVyeSA9IHt9LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZ2V0QVBJTGlzdChwYXRoIGAvcmVzcG9uc2VzLyR7cmVzcG9uc2VJRH0vaW5wdXRfaXRlbXNgLCAoQ3Vyc29yUGFnZSksIHsgcXVlcnksIC4uLm9wdGlvbnMgfSk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5wdXQtaXRlbXMubWpzLm1hcCJdLCJuYW1lcyI6WyJBUElSZXNvdXJjZSIsIkN1cnNvclBhZ2UiLCJwYXRoIiwiSW5wdXRJdGVtcyIsImxpc3QiLCJyZXNwb25zZUlEIiwicXVlcnkiLCJvcHRpb25zIiwiX2NsaWVudCIsImdldEFQSUxpc3QiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/resources/responses/input-items.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/resources/responses/responses.mjs":
/*!*******************************************************************!*\
  !*** ../../node_modules/openai/resources/responses/responses.mjs ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Responses: () => (/* binding */ Responses)\n/* harmony export */ });\n/* harmony import */ var _lib_ResponsesParser_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../lib/ResponsesParser.mjs */ \"(middleware)/../../node_modules/openai/lib/ResponsesParser.mjs\");\n/* harmony import */ var _lib_responses_ResponseStream_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../lib/responses/ResponseStream.mjs */ \"(middleware)/../../node_modules/openai/lib/responses/ResponseStream.mjs\");\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/resource.mjs */ \"(middleware)/../../node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _input_items_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./input-items.mjs */ \"(middleware)/../../node_modules/openai/resources/responses/input-items.mjs\");\n/* harmony import */ var _internal_headers_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../internal/headers.mjs */ \"(middleware)/../../node_modules/openai/internal/headers.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../internal/utils/path.mjs */ \"(middleware)/../../node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\n\n\n\nclass Responses extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_2__.APIResource {\n    constructor(){\n        super(...arguments);\n        this.inputItems = new _input_items_mjs__WEBPACK_IMPORTED_MODULE_3__.InputItems(this._client);\n    }\n    create(body, options) {\n        return this._client.post(\"/responses\", {\n            body,\n            ...options,\n            stream: body.stream ?? false\n        })._thenUnwrap((rsp)=>{\n            if (\"object\" in rsp && rsp.object === \"response\") {\n                (0,_lib_ResponsesParser_mjs__WEBPACK_IMPORTED_MODULE_0__.addOutputText)(rsp);\n            }\n            return rsp;\n        });\n    }\n    retrieve(responseID, query = {}, options) {\n        return this._client.get(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_5__.path`/responses/${responseID}`, {\n            query,\n            ...options,\n            stream: query?.stream ?? false\n        });\n    }\n    /**\n     * Deletes a model response with the given ID.\n     *\n     * @example\n     * ```ts\n     * await client.responses.delete(\n     *   'resp_677efb5139a88190b512bc3fef8e535d',\n     * );\n     * ```\n     */ delete(responseID, options) {\n        return this._client.delete(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_5__.path`/responses/${responseID}`, {\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_4__.buildHeaders)([\n                {\n                    Accept: \"*/*\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    parse(body, options) {\n        return this._client.responses.create(body, options)._thenUnwrap((response)=>(0,_lib_ResponsesParser_mjs__WEBPACK_IMPORTED_MODULE_0__.parseResponse)(response, body));\n    }\n    /**\n     * Creates a model response stream\n     */ stream(body, options) {\n        return _lib_responses_ResponseStream_mjs__WEBPACK_IMPORTED_MODULE_1__.ResponseStream.createResponse(this._client, body, options);\n    }\n    /**\n     * Cancels a model response with the given ID. Only responses created with the\n     * `background` parameter set to `true` can be cancelled.\n     * [Learn more](https://platform.openai.com/docs/guides/background).\n     *\n     * @example\n     * ```ts\n     * const response = await client.responses.cancel(\n     *   'resp_677efb5139a88190b512bc3fef8e535d',\n     * );\n     * ```\n     */ cancel(responseID, options) {\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_5__.path`/responses/${responseID}/cancel`, options);\n    }\n}\nResponses.InputItems = _input_items_mjs__WEBPACK_IMPORTED_MODULE_3__.InputItems; //# sourceMappingURL=responses.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL3Jlc3BvbnNlcy9yZXNwb25zZXMubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQSxzRkFBc0Y7QUFDUjtBQUNOO0FBQ2xCO0FBQ0g7QUFDSjtBQUNXO0FBQ0w7QUFDOUMsTUFBTVEsa0JBQWtCTCwyREFBV0E7SUFDdENNLGFBQWM7UUFDVixLQUFLLElBQUlDO1FBQ1QsSUFBSSxDQUFDQyxVQUFVLEdBQUcsSUFBSVAsd0RBQXdCLENBQUMsSUFBSSxDQUFDUSxPQUFPO0lBQy9EO0lBQ0FDLE9BQU9DLElBQUksRUFBRUMsT0FBTyxFQUFFO1FBQ2xCLE9BQU8sSUFBSSxDQUFDSCxPQUFPLENBQUNJLElBQUksQ0FBQyxjQUFjO1lBQUVGO1lBQU0sR0FBR0MsT0FBTztZQUFFRSxRQUFRSCxLQUFLRyxNQUFNLElBQUk7UUFBTSxHQUFHQyxXQUFXLENBQUMsQ0FBQ0M7WUFDcEcsSUFBSSxZQUFZQSxPQUFPQSxJQUFJQyxNQUFNLEtBQUssWUFBWTtnQkFDOUNuQix1RUFBYUEsQ0FBQ2tCO1lBQ2xCO1lBQ0EsT0FBT0E7UUFDWDtJQUNKO0lBQ0FFLFNBQVNDLFVBQVUsRUFBRUMsUUFBUSxDQUFDLENBQUMsRUFBRVIsT0FBTyxFQUFFO1FBQ3RDLE9BQU8sSUFBSSxDQUFDSCxPQUFPLENBQUNZLEdBQUcsQ0FBQ2pCLDBEQUFLLENBQUMsV0FBVyxFQUFFZSxXQUFXLENBQUMsRUFBRTtZQUNyREM7WUFDQSxHQUFHUixPQUFPO1lBQ1ZFLFFBQVFNLE9BQU9OLFVBQVU7UUFDN0I7SUFDSjtJQUNBOzs7Ozs7Ozs7S0FTQyxHQUNEUSxPQUFPSCxVQUFVLEVBQUVQLE9BQU8sRUFBRTtRQUN4QixPQUFPLElBQUksQ0FBQ0gsT0FBTyxDQUFDYSxNQUFNLENBQUNsQiwwREFBSyxDQUFDLFdBQVcsRUFBRWUsV0FBVyxDQUFDLEVBQUU7WUFDeEQsR0FBR1AsT0FBTztZQUNWVyxTQUFTcEIsbUVBQVlBLENBQUM7Z0JBQUM7b0JBQUVxQixRQUFRO2dCQUFNO2dCQUFHWixTQUFTVzthQUFRO1FBQy9EO0lBQ0o7SUFDQUUsTUFBTWQsSUFBSSxFQUFFQyxPQUFPLEVBQUU7UUFDakIsT0FBTyxJQUFJLENBQUNILE9BQU8sQ0FBQ2lCLFNBQVMsQ0FDeEJoQixNQUFNLENBQUNDLE1BQU1DLFNBQ2JHLFdBQVcsQ0FBQyxDQUFDWSxXQUFhOUIsdUVBQWFBLENBQUM4QixVQUFVaEI7SUFDM0Q7SUFDQTs7S0FFQyxHQUNERyxPQUFPSCxJQUFJLEVBQUVDLE9BQU8sRUFBRTtRQUNsQixPQUFPYiw2RUFBY0EsQ0FBQzZCLGNBQWMsQ0FBQyxJQUFJLENBQUNuQixPQUFPLEVBQUVFLE1BQU1DO0lBQzdEO0lBQ0E7Ozs7Ozs7Ozs7O0tBV0MsR0FDRGlCLE9BQU9WLFVBQVUsRUFBRVAsT0FBTyxFQUFFO1FBQ3hCLE9BQU8sSUFBSSxDQUFDSCxPQUFPLENBQUNJLElBQUksQ0FBQ1QsMERBQUssQ0FBQyxXQUFXLEVBQUVlLFdBQVcsT0FBTyxDQUFDLEVBQUVQO0lBQ3JFO0FBQ0o7QUFDQVAsVUFBVUgsVUFBVSxHQUFHQSx3REFBVUEsRUFDakMsc0NBQXNDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9yZXNwb25zZXMvcmVzcG9uc2VzLm1qcz9lN2JiIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5pbXBvcnQgeyBwYXJzZVJlc3BvbnNlLCBhZGRPdXRwdXRUZXh0LCB9IGZyb20gXCIuLi8uLi9saWIvUmVzcG9uc2VzUGFyc2VyLm1qc1wiO1xuaW1wb3J0IHsgUmVzcG9uc2VTdHJlYW0gfSBmcm9tIFwiLi4vLi4vbGliL3Jlc3BvbnNlcy9SZXNwb25zZVN0cmVhbS5tanNcIjtcbmltcG9ydCB7IEFQSVJlc291cmNlIH0gZnJvbSBcIi4uLy4uL2NvcmUvcmVzb3VyY2UubWpzXCI7XG5pbXBvcnQgKiBhcyBJbnB1dEl0ZW1zQVBJIGZyb20gXCIuL2lucHV0LWl0ZW1zLm1qc1wiO1xuaW1wb3J0IHsgSW5wdXRJdGVtcyB9IGZyb20gXCIuL2lucHV0LWl0ZW1zLm1qc1wiO1xuaW1wb3J0IHsgYnVpbGRIZWFkZXJzIH0gZnJvbSBcIi4uLy4uL2ludGVybmFsL2hlYWRlcnMubWpzXCI7XG5pbXBvcnQgeyBwYXRoIH0gZnJvbSBcIi4uLy4uL2ludGVybmFsL3V0aWxzL3BhdGgubWpzXCI7XG5leHBvcnQgY2xhc3MgUmVzcG9uc2VzIGV4dGVuZHMgQVBJUmVzb3VyY2Uge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICB0aGlzLmlucHV0SXRlbXMgPSBuZXcgSW5wdXRJdGVtc0FQSS5JbnB1dEl0ZW1zKHRoaXMuX2NsaWVudCk7XG4gICAgfVxuICAgIGNyZWF0ZShib2R5LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQucG9zdCgnL3Jlc3BvbnNlcycsIHsgYm9keSwgLi4ub3B0aW9ucywgc3RyZWFtOiBib2R5LnN0cmVhbSA/PyBmYWxzZSB9KS5fdGhlblVud3JhcCgocnNwKSA9PiB7XG4gICAgICAgICAgICBpZiAoJ29iamVjdCcgaW4gcnNwICYmIHJzcC5vYmplY3QgPT09ICdyZXNwb25zZScpIHtcbiAgICAgICAgICAgICAgICBhZGRPdXRwdXRUZXh0KHJzcCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gcnNwO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgcmV0cmlldmUocmVzcG9uc2VJRCwgcXVlcnkgPSB7fSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmdldChwYXRoIGAvcmVzcG9uc2VzLyR7cmVzcG9uc2VJRH1gLCB7XG4gICAgICAgICAgICBxdWVyeSxcbiAgICAgICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgICAgICBzdHJlYW06IHF1ZXJ5Py5zdHJlYW0gPz8gZmFsc2UsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBEZWxldGVzIGEgbW9kZWwgcmVzcG9uc2Ugd2l0aCB0aGUgZ2l2ZW4gSUQuXG4gICAgICpcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHRzXG4gICAgICogYXdhaXQgY2xpZW50LnJlc3BvbnNlcy5kZWxldGUoXG4gICAgICogICAncmVzcF82NzdlZmI1MTM5YTg4MTkwYjUxMmJjM2ZlZjhlNTM1ZCcsXG4gICAgICogKTtcbiAgICAgKiBgYGBcbiAgICAgKi9cbiAgICBkZWxldGUocmVzcG9uc2VJRCwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmRlbGV0ZShwYXRoIGAvcmVzcG9uc2VzLyR7cmVzcG9uc2VJRH1gLCB7XG4gICAgICAgICAgICAuLi5vcHRpb25zLFxuICAgICAgICAgICAgaGVhZGVyczogYnVpbGRIZWFkZXJzKFt7IEFjY2VwdDogJyovKicgfSwgb3B0aW9ucz8uaGVhZGVyc10pLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgcGFyc2UoYm9keSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LnJlc3BvbnNlc1xuICAgICAgICAgICAgLmNyZWF0ZShib2R5LCBvcHRpb25zKVxuICAgICAgICAgICAgLl90aGVuVW53cmFwKChyZXNwb25zZSkgPT4gcGFyc2VSZXNwb25zZShyZXNwb25zZSwgYm9keSkpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEgbW9kZWwgcmVzcG9uc2Ugc3RyZWFtXG4gICAgICovXG4gICAgc3RyZWFtKGJvZHksIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIFJlc3BvbnNlU3RyZWFtLmNyZWF0ZVJlc3BvbnNlKHRoaXMuX2NsaWVudCwgYm9keSwgb3B0aW9ucyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENhbmNlbHMgYSBtb2RlbCByZXNwb25zZSB3aXRoIHRoZSBnaXZlbiBJRC4gT25seSByZXNwb25zZXMgY3JlYXRlZCB3aXRoIHRoZVxuICAgICAqIGBiYWNrZ3JvdW5kYCBwYXJhbWV0ZXIgc2V0IHRvIGB0cnVlYCBjYW4gYmUgY2FuY2VsbGVkLlxuICAgICAqIFtMZWFybiBtb3JlXShodHRwczovL3BsYXRmb3JtLm9wZW5haS5jb20vZG9jcy9ndWlkZXMvYmFja2dyb3VuZCkuXG4gICAgICpcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHRzXG4gICAgICogY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBjbGllbnQucmVzcG9uc2VzLmNhbmNlbChcbiAgICAgKiAgICdyZXNwXzY3N2VmYjUxMzlhODgxOTBiNTEyYmMzZmVmOGU1MzVkJyxcbiAgICAgKiApO1xuICAgICAqIGBgYFxuICAgICAqL1xuICAgIGNhbmNlbChyZXNwb25zZUlELCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQucG9zdChwYXRoIGAvcmVzcG9uc2VzLyR7cmVzcG9uc2VJRH0vY2FuY2VsYCwgb3B0aW9ucyk7XG4gICAgfVxufVxuUmVzcG9uc2VzLklucHV0SXRlbXMgPSBJbnB1dEl0ZW1zO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVzcG9uc2VzLm1qcy5tYXAiXSwibmFtZXMiOlsicGFyc2VSZXNwb25zZSIsImFkZE91dHB1dFRleHQiLCJSZXNwb25zZVN0cmVhbSIsIkFQSVJlc291cmNlIiwiSW5wdXRJdGVtc0FQSSIsIklucHV0SXRlbXMiLCJidWlsZEhlYWRlcnMiLCJwYXRoIiwiUmVzcG9uc2VzIiwiY29uc3RydWN0b3IiLCJhcmd1bWVudHMiLCJpbnB1dEl0ZW1zIiwiX2NsaWVudCIsImNyZWF0ZSIsImJvZHkiLCJvcHRpb25zIiwicG9zdCIsInN0cmVhbSIsIl90aGVuVW53cmFwIiwicnNwIiwib2JqZWN0IiwicmV0cmlldmUiLCJyZXNwb25zZUlEIiwicXVlcnkiLCJnZXQiLCJkZWxldGUiLCJoZWFkZXJzIiwiQWNjZXB0IiwicGFyc2UiLCJyZXNwb25zZXMiLCJyZXNwb25zZSIsImNyZWF0ZVJlc3BvbnNlIiwiY2FuY2VsIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/resources/responses/responses.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/resources/shared.mjs":
/*!******************************************************!*\
  !*** ../../node_modules/openai/resources/shared.mjs ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n //# sourceMappingURL=shared.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL3NoYXJlZC5tanMiLCJtYXBwaW5ncyI6IjtBQUFBLHNGQUFzRjtBQUM1RSxDQUNWLG1DQUFtQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vbm9kZV9tb2R1bGVzL29wZW5haS9yZXNvdXJjZXMvc2hhcmVkLm1qcz8yZTQxIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5leHBvcnQge307XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zaGFyZWQubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/resources/shared.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/resources/uploads/parts.mjs":
/*!*************************************************************!*\
  !*** ../../node_modules/openai/resources/uploads/parts.mjs ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Parts: () => (/* binding */ Parts)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/resource.mjs */ \"(middleware)/../../node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _internal_uploads_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../internal/uploads.mjs */ \"(middleware)/../../node_modules/openai/internal/uploads.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../internal/utils/path.mjs */ \"(middleware)/../../node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\nclass Parts extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Adds a\n     * [Part](https://platform.openai.com/docs/api-reference/uploads/part-object) to an\n     * [Upload](https://platform.openai.com/docs/api-reference/uploads/object) object.\n     * A Part represents a chunk of bytes from the file you are trying to upload.\n     *\n     * Each Part can be at most 64 MB, and you can add Parts until you hit the Upload\n     * maximum of 8 GB.\n     *\n     * It is possible to add multiple Parts in parallel. You can decide the intended\n     * order of the Parts when you\n     * [complete the Upload](https://platform.openai.com/docs/api-reference/uploads/complete).\n     */ create(uploadID, body, options) {\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__.path`/uploads/${uploadID}/parts`, (0,_internal_uploads_mjs__WEBPACK_IMPORTED_MODULE_1__.multipartFormRequestOptions)({\n            body,\n            ...options\n        }, this._client));\n    }\n} //# sourceMappingURL=parts.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL3VwbG9hZHMvcGFydHMubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSxzRkFBc0Y7QUFDaEM7QUFDbUI7QUFDcEI7QUFDOUMsTUFBTUcsY0FBY0gsMkRBQVdBO0lBQ2xDOzs7Ozs7Ozs7Ozs7S0FZQyxHQUNESSxPQUFPQyxRQUFRLEVBQUVDLElBQUksRUFBRUMsT0FBTyxFQUFFO1FBQzVCLE9BQU8sSUFBSSxDQUFDQyxPQUFPLENBQUNDLElBQUksQ0FBQ1AsMERBQUssQ0FBQyxTQUFTLEVBQUVHLFNBQVMsTUFBTSxDQUFDLEVBQUVKLGtGQUEyQkEsQ0FBQztZQUFFSztZQUFNLEdBQUdDLE9BQU87UUFBQyxHQUFHLElBQUksQ0FBQ0MsT0FBTztJQUM5SDtBQUNKLEVBQ0Esa0NBQWtDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy91cGxvYWRzL3BhcnRzLm1qcz84MjQxIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5pbXBvcnQgeyBBUElSZXNvdXJjZSB9IGZyb20gXCIuLi8uLi9jb3JlL3Jlc291cmNlLm1qc1wiO1xuaW1wb3J0IHsgbXVsdGlwYXJ0Rm9ybVJlcXVlc3RPcHRpb25zIH0gZnJvbSBcIi4uLy4uL2ludGVybmFsL3VwbG9hZHMubWpzXCI7XG5pbXBvcnQgeyBwYXRoIH0gZnJvbSBcIi4uLy4uL2ludGVybmFsL3V0aWxzL3BhdGgubWpzXCI7XG5leHBvcnQgY2xhc3MgUGFydHMgZXh0ZW5kcyBBUElSZXNvdXJjZSB7XG4gICAgLyoqXG4gICAgICogQWRkcyBhXG4gICAgICogW1BhcnRdKGh0dHBzOi8vcGxhdGZvcm0ub3BlbmFpLmNvbS9kb2NzL2FwaS1yZWZlcmVuY2UvdXBsb2Fkcy9wYXJ0LW9iamVjdCkgdG8gYW5cbiAgICAgKiBbVXBsb2FkXShodHRwczovL3BsYXRmb3JtLm9wZW5haS5jb20vZG9jcy9hcGktcmVmZXJlbmNlL3VwbG9hZHMvb2JqZWN0KSBvYmplY3QuXG4gICAgICogQSBQYXJ0IHJlcHJlc2VudHMgYSBjaHVuayBvZiBieXRlcyBmcm9tIHRoZSBmaWxlIHlvdSBhcmUgdHJ5aW5nIHRvIHVwbG9hZC5cbiAgICAgKlxuICAgICAqIEVhY2ggUGFydCBjYW4gYmUgYXQgbW9zdCA2NCBNQiwgYW5kIHlvdSBjYW4gYWRkIFBhcnRzIHVudGlsIHlvdSBoaXQgdGhlIFVwbG9hZFxuICAgICAqIG1heGltdW0gb2YgOCBHQi5cbiAgICAgKlxuICAgICAqIEl0IGlzIHBvc3NpYmxlIHRvIGFkZCBtdWx0aXBsZSBQYXJ0cyBpbiBwYXJhbGxlbC4gWW91IGNhbiBkZWNpZGUgdGhlIGludGVuZGVkXG4gICAgICogb3JkZXIgb2YgdGhlIFBhcnRzIHdoZW4geW91XG4gICAgICogW2NvbXBsZXRlIHRoZSBVcGxvYWRdKGh0dHBzOi8vcGxhdGZvcm0ub3BlbmFpLmNvbS9kb2NzL2FwaS1yZWZlcmVuY2UvdXBsb2Fkcy9jb21wbGV0ZSkuXG4gICAgICovXG4gICAgY3JlYXRlKHVwbG9hZElELCBib2R5LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQucG9zdChwYXRoIGAvdXBsb2Fkcy8ke3VwbG9hZElEfS9wYXJ0c2AsIG11bHRpcGFydEZvcm1SZXF1ZXN0T3B0aW9ucyh7IGJvZHksIC4uLm9wdGlvbnMgfSwgdGhpcy5fY2xpZW50KSk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGFydHMubWpzLm1hcCJdLCJuYW1lcyI6WyJBUElSZXNvdXJjZSIsIm11bHRpcGFydEZvcm1SZXF1ZXN0T3B0aW9ucyIsInBhdGgiLCJQYXJ0cyIsImNyZWF0ZSIsInVwbG9hZElEIiwiYm9keSIsIm9wdGlvbnMiLCJfY2xpZW50IiwicG9zdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/resources/uploads/parts.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/resources/uploads/uploads.mjs":
/*!***************************************************************!*\
  !*** ../../node_modules/openai/resources/uploads/uploads.mjs ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Uploads: () => (/* binding */ Uploads)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/resource.mjs */ \"(middleware)/../../node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _parts_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./parts.mjs */ \"(middleware)/../../node_modules/openai/resources/uploads/parts.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../internal/utils/path.mjs */ \"(middleware)/../../node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\nclass Uploads extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    constructor(){\n        super(...arguments);\n        this.parts = new _parts_mjs__WEBPACK_IMPORTED_MODULE_1__.Parts(this._client);\n    }\n    /**\n     * Creates an intermediate\n     * [Upload](https://platform.openai.com/docs/api-reference/uploads/object) object\n     * that you can add\n     * [Parts](https://platform.openai.com/docs/api-reference/uploads/part-object) to.\n     * Currently, an Upload can accept at most 8 GB in total and expires after an hour\n     * after you create it.\n     *\n     * Once you complete the Upload, we will create a\n     * [File](https://platform.openai.com/docs/api-reference/files/object) object that\n     * contains all the parts you uploaded. This File is usable in the rest of our\n     * platform as a regular File object.\n     *\n     * For certain `purpose` values, the correct `mime_type` must be specified. Please\n     * refer to documentation for the\n     * [supported MIME types for your use case](https://platform.openai.com/docs/assistants/tools/file-search#supported-files).\n     *\n     * For guidance on the proper filename extensions for each purpose, please follow\n     * the documentation on\n     * [creating a File](https://platform.openai.com/docs/api-reference/files/create).\n     */ create(body, options) {\n        return this._client.post(\"/uploads\", {\n            body,\n            ...options\n        });\n    }\n    /**\n     * Cancels the Upload. No Parts may be added after an Upload is cancelled.\n     */ cancel(uploadID, options) {\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__.path`/uploads/${uploadID}/cancel`, options);\n    }\n    /**\n     * Completes the\n     * [Upload](https://platform.openai.com/docs/api-reference/uploads/object).\n     *\n     * Within the returned Upload object, there is a nested\n     * [File](https://platform.openai.com/docs/api-reference/files/object) object that\n     * is ready to use in the rest of the platform.\n     *\n     * You can specify the order of the Parts by passing in an ordered list of the Part\n     * IDs.\n     *\n     * The number of bytes uploaded upon completion must match the number of bytes\n     * initially specified when creating the Upload object. No Parts may be added after\n     * an Upload is completed.\n     */ complete(uploadID, body, options) {\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__.path`/uploads/${uploadID}/complete`, {\n            body,\n            ...options\n        });\n    }\n}\nUploads.Parts = _parts_mjs__WEBPACK_IMPORTED_MODULE_1__.Parts; //# sourceMappingURL=uploads.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL3VwbG9hZHMvdXBsb2Fkcy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLHNGQUFzRjtBQUNoQztBQUNkO0FBQ0o7QUFDaUI7QUFDOUMsTUFBTUksZ0JBQWdCSiwyREFBV0E7SUFDcENLLGFBQWM7UUFDVixLQUFLLElBQUlDO1FBQ1QsSUFBSSxDQUFDQyxLQUFLLEdBQUcsSUFBSU4sNkNBQWMsQ0FBQyxJQUFJLENBQUNPLE9BQU87SUFDaEQ7SUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7S0FvQkMsR0FDREMsT0FBT0MsSUFBSSxFQUFFQyxPQUFPLEVBQUU7UUFDbEIsT0FBTyxJQUFJLENBQUNILE9BQU8sQ0FBQ0ksSUFBSSxDQUFDLFlBQVk7WUFBRUY7WUFBTSxHQUFHQyxPQUFPO1FBQUM7SUFDNUQ7SUFDQTs7S0FFQyxHQUNERSxPQUFPQyxRQUFRLEVBQUVILE9BQU8sRUFBRTtRQUN0QixPQUFPLElBQUksQ0FBQ0gsT0FBTyxDQUFDSSxJQUFJLENBQUNULDBEQUFLLENBQUMsU0FBUyxFQUFFVyxTQUFTLE9BQU8sQ0FBQyxFQUFFSDtJQUNqRTtJQUNBOzs7Ozs7Ozs7Ozs7OztLQWNDLEdBQ0RJLFNBQVNELFFBQVEsRUFBRUosSUFBSSxFQUFFQyxPQUFPLEVBQUU7UUFDOUIsT0FBTyxJQUFJLENBQUNILE9BQU8sQ0FBQ0ksSUFBSSxDQUFDVCwwREFBSyxDQUFDLFNBQVMsRUFBRVcsU0FBUyxTQUFTLENBQUMsRUFBRTtZQUFFSjtZQUFNLEdBQUdDLE9BQU87UUFBQztJQUN0RjtBQUNKO0FBQ0FQLFFBQVFGLEtBQUssR0FBR0EsNkNBQUtBLEVBQ3JCLG9DQUFvQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vbm9kZV9tb2R1bGVzL29wZW5haS9yZXNvdXJjZXMvdXBsb2Fkcy91cGxvYWRzLm1qcz8wYTQwIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5pbXBvcnQgeyBBUElSZXNvdXJjZSB9IGZyb20gXCIuLi8uLi9jb3JlL3Jlc291cmNlLm1qc1wiO1xuaW1wb3J0ICogYXMgUGFydHNBUEkgZnJvbSBcIi4vcGFydHMubWpzXCI7XG5pbXBvcnQgeyBQYXJ0cyB9IGZyb20gXCIuL3BhcnRzLm1qc1wiO1xuaW1wb3J0IHsgcGF0aCB9IGZyb20gXCIuLi8uLi9pbnRlcm5hbC91dGlscy9wYXRoLm1qc1wiO1xuZXhwb3J0IGNsYXNzIFVwbG9hZHMgZXh0ZW5kcyBBUElSZXNvdXJjZSB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIHRoaXMucGFydHMgPSBuZXcgUGFydHNBUEkuUGFydHModGhpcy5fY2xpZW50KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhbiBpbnRlcm1lZGlhdGVcbiAgICAgKiBbVXBsb2FkXShodHRwczovL3BsYXRmb3JtLm9wZW5haS5jb20vZG9jcy9hcGktcmVmZXJlbmNlL3VwbG9hZHMvb2JqZWN0KSBvYmplY3RcbiAgICAgKiB0aGF0IHlvdSBjYW4gYWRkXG4gICAgICogW1BhcnRzXShodHRwczovL3BsYXRmb3JtLm9wZW5haS5jb20vZG9jcy9hcGktcmVmZXJlbmNlL3VwbG9hZHMvcGFydC1vYmplY3QpIHRvLlxuICAgICAqIEN1cnJlbnRseSwgYW4gVXBsb2FkIGNhbiBhY2NlcHQgYXQgbW9zdCA4IEdCIGluIHRvdGFsIGFuZCBleHBpcmVzIGFmdGVyIGFuIGhvdXJcbiAgICAgKiBhZnRlciB5b3UgY3JlYXRlIGl0LlxuICAgICAqXG4gICAgICogT25jZSB5b3UgY29tcGxldGUgdGhlIFVwbG9hZCwgd2Ugd2lsbCBjcmVhdGUgYVxuICAgICAqIFtGaWxlXShodHRwczovL3BsYXRmb3JtLm9wZW5haS5jb20vZG9jcy9hcGktcmVmZXJlbmNlL2ZpbGVzL29iamVjdCkgb2JqZWN0IHRoYXRcbiAgICAgKiBjb250YWlucyBhbGwgdGhlIHBhcnRzIHlvdSB1cGxvYWRlZC4gVGhpcyBGaWxlIGlzIHVzYWJsZSBpbiB0aGUgcmVzdCBvZiBvdXJcbiAgICAgKiBwbGF0Zm9ybSBhcyBhIHJlZ3VsYXIgRmlsZSBvYmplY3QuXG4gICAgICpcbiAgICAgKiBGb3IgY2VydGFpbiBgcHVycG9zZWAgdmFsdWVzLCB0aGUgY29ycmVjdCBgbWltZV90eXBlYCBtdXN0IGJlIHNwZWNpZmllZC4gUGxlYXNlXG4gICAgICogcmVmZXIgdG8gZG9jdW1lbnRhdGlvbiBmb3IgdGhlXG4gICAgICogW3N1cHBvcnRlZCBNSU1FIHR5cGVzIGZvciB5b3VyIHVzZSBjYXNlXShodHRwczovL3BsYXRmb3JtLm9wZW5haS5jb20vZG9jcy9hc3Npc3RhbnRzL3Rvb2xzL2ZpbGUtc2VhcmNoI3N1cHBvcnRlZC1maWxlcykuXG4gICAgICpcbiAgICAgKiBGb3IgZ3VpZGFuY2Ugb24gdGhlIHByb3BlciBmaWxlbmFtZSBleHRlbnNpb25zIGZvciBlYWNoIHB1cnBvc2UsIHBsZWFzZSBmb2xsb3dcbiAgICAgKiB0aGUgZG9jdW1lbnRhdGlvbiBvblxuICAgICAqIFtjcmVhdGluZyBhIEZpbGVdKGh0dHBzOi8vcGxhdGZvcm0ub3BlbmFpLmNvbS9kb2NzL2FwaS1yZWZlcmVuY2UvZmlsZXMvY3JlYXRlKS5cbiAgICAgKi9cbiAgICBjcmVhdGUoYm9keSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LnBvc3QoJy91cGxvYWRzJywgeyBib2R5LCAuLi5vcHRpb25zIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDYW5jZWxzIHRoZSBVcGxvYWQuIE5vIFBhcnRzIG1heSBiZSBhZGRlZCBhZnRlciBhbiBVcGxvYWQgaXMgY2FuY2VsbGVkLlxuICAgICAqL1xuICAgIGNhbmNlbCh1cGxvYWRJRCwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LnBvc3QocGF0aCBgL3VwbG9hZHMvJHt1cGxvYWRJRH0vY2FuY2VsYCwgb3B0aW9ucyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENvbXBsZXRlcyB0aGVcbiAgICAgKiBbVXBsb2FkXShodHRwczovL3BsYXRmb3JtLm9wZW5haS5jb20vZG9jcy9hcGktcmVmZXJlbmNlL3VwbG9hZHMvb2JqZWN0KS5cbiAgICAgKlxuICAgICAqIFdpdGhpbiB0aGUgcmV0dXJuZWQgVXBsb2FkIG9iamVjdCwgdGhlcmUgaXMgYSBuZXN0ZWRcbiAgICAgKiBbRmlsZV0oaHR0cHM6Ly9wbGF0Zm9ybS5vcGVuYWkuY29tL2RvY3MvYXBpLXJlZmVyZW5jZS9maWxlcy9vYmplY3QpIG9iamVjdCB0aGF0XG4gICAgICogaXMgcmVhZHkgdG8gdXNlIGluIHRoZSByZXN0IG9mIHRoZSBwbGF0Zm9ybS5cbiAgICAgKlxuICAgICAqIFlvdSBjYW4gc3BlY2lmeSB0aGUgb3JkZXIgb2YgdGhlIFBhcnRzIGJ5IHBhc3NpbmcgaW4gYW4gb3JkZXJlZCBsaXN0IG9mIHRoZSBQYXJ0XG4gICAgICogSURzLlxuICAgICAqXG4gICAgICogVGhlIG51bWJlciBvZiBieXRlcyB1cGxvYWRlZCB1cG9uIGNvbXBsZXRpb24gbXVzdCBtYXRjaCB0aGUgbnVtYmVyIG9mIGJ5dGVzXG4gICAgICogaW5pdGlhbGx5IHNwZWNpZmllZCB3aGVuIGNyZWF0aW5nIHRoZSBVcGxvYWQgb2JqZWN0LiBObyBQYXJ0cyBtYXkgYmUgYWRkZWQgYWZ0ZXJcbiAgICAgKiBhbiBVcGxvYWQgaXMgY29tcGxldGVkLlxuICAgICAqL1xuICAgIGNvbXBsZXRlKHVwbG9hZElELCBib2R5LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQucG9zdChwYXRoIGAvdXBsb2Fkcy8ke3VwbG9hZElEfS9jb21wbGV0ZWAsIHsgYm9keSwgLi4ub3B0aW9ucyB9KTtcbiAgICB9XG59XG5VcGxvYWRzLlBhcnRzID0gUGFydHM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD11cGxvYWRzLm1qcy5tYXAiXSwibmFtZXMiOlsiQVBJUmVzb3VyY2UiLCJQYXJ0c0FQSSIsIlBhcnRzIiwicGF0aCIsIlVwbG9hZHMiLCJjb25zdHJ1Y3RvciIsImFyZ3VtZW50cyIsInBhcnRzIiwiX2NsaWVudCIsImNyZWF0ZSIsImJvZHkiLCJvcHRpb25zIiwicG9zdCIsImNhbmNlbCIsInVwbG9hZElEIiwiY29tcGxldGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/resources/uploads/uploads.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/resources/vector-stores/file-batches.mjs":
/*!**************************************************************************!*\
  !*** ../../node_modules/openai/resources/vector-stores/file-batches.mjs ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FileBatches: () => (/* binding */ FileBatches)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/resource.mjs */ \"(middleware)/../../node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/pagination.mjs */ \"(middleware)/../../node_modules/openai/core/pagination.mjs\");\n/* harmony import */ var _internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../internal/headers.mjs */ \"(middleware)/../../node_modules/openai/internal/headers.mjs\");\n/* harmony import */ var _internal_utils_sleep_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../internal/utils/sleep.mjs */ \"(middleware)/../../node_modules/openai/internal/utils/sleep.mjs\");\n/* harmony import */ var _lib_Util_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../lib/Util.mjs */ \"(middleware)/../../node_modules/openai/lib/Util.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../internal/utils/path.mjs */ \"(middleware)/../../node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\n\n\nclass FileBatches extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Create a vector store file batch.\n     */ create(vectorStoreID, body, options) {\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_5__.path`/vector_stores/${vectorStoreID}/file_batches`, {\n            body,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Retrieves a vector store file batch.\n     */ retrieve(batchID, params, options) {\n        const { vector_store_id } = params;\n        return this._client.get(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_5__.path`/vector_stores/${vector_store_id}/file_batches/${batchID}`, {\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Cancel a vector store file batch. This attempts to cancel the processing of\n     * files in this batch as soon as possible.\n     */ cancel(batchID, params, options) {\n        const { vector_store_id } = params;\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_5__.path`/vector_stores/${vector_store_id}/file_batches/${batchID}/cancel`, {\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Create a vector store batch and poll until all files have been processed.\n     */ async createAndPoll(vectorStoreId, body, options) {\n        const batch = await this.create(vectorStoreId, body);\n        return await this.poll(vectorStoreId, batch.id, options);\n    }\n    /**\n     * Returns a list of vector store files in a batch.\n     */ listFiles(batchID, params, options) {\n        const { vector_store_id, ...query } = params;\n        return this._client.getAPIList(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_5__.path`/vector_stores/${vector_store_id}/file_batches/${batchID}/files`, _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__.CursorPage, {\n            query,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Wait for the given file batch to be processed.\n     *\n     * Note: this will return even if one of the files failed to process, you need to\n     * check batch.file_counts.failed_count to handle this case.\n     */ async poll(vectorStoreID, batchID, options) {\n        const headers = (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n            options?.headers,\n            {\n                \"X-Stainless-Poll-Helper\": \"true\",\n                \"X-Stainless-Custom-Poll-Interval\": options?.pollIntervalMs?.toString() ?? undefined\n            }\n        ]);\n        while(true){\n            const { data: batch, response } = await this.retrieve(batchID, {\n                vector_store_id: vectorStoreID\n            }, {\n                ...options,\n                headers\n            }).withResponse();\n            switch(batch.status){\n                case \"in_progress\":\n                    let sleepInterval = 5000;\n                    if (options?.pollIntervalMs) {\n                        sleepInterval = options.pollIntervalMs;\n                    } else {\n                        const headerInterval = response.headers.get(\"openai-poll-after-ms\");\n                        if (headerInterval) {\n                            const headerIntervalMs = parseInt(headerInterval);\n                            if (!isNaN(headerIntervalMs)) {\n                                sleepInterval = headerIntervalMs;\n                            }\n                        }\n                    }\n                    await (0,_internal_utils_sleep_mjs__WEBPACK_IMPORTED_MODULE_3__.sleep)(sleepInterval);\n                    break;\n                case \"failed\":\n                case \"cancelled\":\n                case \"completed\":\n                    return batch;\n            }\n        }\n    }\n    /**\n     * Uploads the given files concurrently and then creates a vector store file batch.\n     *\n     * The concurrency limit is configurable using the `maxConcurrency` parameter.\n     */ async uploadAndPoll(vectorStoreId, { files, fileIds = [] }, options) {\n        if (files == null || files.length == 0) {\n            throw new Error(`No \\`files\\` provided to process. If you've already uploaded files you should use \\`.createAndPoll()\\` instead`);\n        }\n        const configuredConcurrency = options?.maxConcurrency ?? 5;\n        // We cap the number of workers at the number of files (so we don't start any unnecessary workers)\n        const concurrencyLimit = Math.min(configuredConcurrency, files.length);\n        const client = this._client;\n        const fileIterator = files.values();\n        const allFileIds = [\n            ...fileIds\n        ];\n        // This code is based on this design. The libraries don't accommodate our environment limits.\n        // https://stackoverflow.com/questions/40639432/what-is-the-best-way-to-limit-concurrency-when-using-es6s-promise-all\n        async function processFiles(iterator) {\n            for (let item of iterator){\n                const fileObj = await client.files.create({\n                    file: item,\n                    purpose: \"assistants\"\n                }, options);\n                allFileIds.push(fileObj.id);\n            }\n        }\n        // Start workers to process results\n        const workers = Array(concurrencyLimit).fill(fileIterator).map(processFiles);\n        // Wait for all processing to complete.\n        await (0,_lib_Util_mjs__WEBPACK_IMPORTED_MODULE_4__.allSettledWithThrow)(workers);\n        return await this.createAndPoll(vectorStoreId, {\n            file_ids: allFileIds\n        });\n    }\n} //# sourceMappingURL=file-batches.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/resources/vector-stores/file-batches.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/resources/vector-stores/files.mjs":
/*!*******************************************************************!*\
  !*** ../../node_modules/openai/resources/vector-stores/files.mjs ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Files: () => (/* binding */ Files)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/resource.mjs */ \"(middleware)/../../node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/pagination.mjs */ \"(middleware)/../../node_modules/openai/core/pagination.mjs\");\n/* harmony import */ var _internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../internal/headers.mjs */ \"(middleware)/../../node_modules/openai/internal/headers.mjs\");\n/* harmony import */ var _internal_utils_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../internal/utils.mjs */ \"(middleware)/../../node_modules/openai/internal/utils.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../internal/utils/path.mjs */ \"(middleware)/../../node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\n\nclass Files extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Create a vector store file by attaching a\n     * [File](https://platform.openai.com/docs/api-reference/files) to a\n     * [vector store](https://platform.openai.com/docs/api-reference/vector-stores/object).\n     */ create(vectorStoreID, body, options) {\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_4__.path`/vector_stores/${vectorStoreID}/files`, {\n            body,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Retrieves a vector store file.\n     */ retrieve(fileID, params, options) {\n        const { vector_store_id } = params;\n        return this._client.get(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_4__.path`/vector_stores/${vector_store_id}/files/${fileID}`, {\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Update attributes on a vector store file.\n     */ update(fileID, params, options) {\n        const { vector_store_id, ...body } = params;\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_4__.path`/vector_stores/${vector_store_id}/files/${fileID}`, {\n            body,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Returns a list of vector store files.\n     */ list(vectorStoreID, query = {}, options) {\n        return this._client.getAPIList(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_4__.path`/vector_stores/${vectorStoreID}/files`, _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__.CursorPage, {\n            query,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Delete a vector store file. This will remove the file from the vector store but\n     * the file itself will not be deleted. To delete the file, use the\n     * [delete file](https://platform.openai.com/docs/api-reference/files/delete)\n     * endpoint.\n     */ delete(fileID, params, options) {\n        const { vector_store_id } = params;\n        return this._client.delete(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_4__.path`/vector_stores/${vector_store_id}/files/${fileID}`, {\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Attach a file to the given vector store and wait for it to be processed.\n     */ async createAndPoll(vectorStoreId, body, options) {\n        const file = await this.create(vectorStoreId, body, options);\n        return await this.poll(vectorStoreId, file.id, options);\n    }\n    /**\n     * Wait for the vector store file to finish processing.\n     *\n     * Note: this will return even if the file failed to process, you need to check\n     * file.last_error and file.status to handle these cases\n     */ async poll(vectorStoreID, fileID, options) {\n        const headers = (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n            options?.headers,\n            {\n                \"X-Stainless-Poll-Helper\": \"true\",\n                \"X-Stainless-Custom-Poll-Interval\": options?.pollIntervalMs?.toString() ?? undefined\n            }\n        ]);\n        while(true){\n            const fileResponse = await this.retrieve(fileID, {\n                vector_store_id: vectorStoreID\n            }, {\n                ...options,\n                headers\n            }).withResponse();\n            const file = fileResponse.data;\n            switch(file.status){\n                case \"in_progress\":\n                    let sleepInterval = 5000;\n                    if (options?.pollIntervalMs) {\n                        sleepInterval = options.pollIntervalMs;\n                    } else {\n                        const headerInterval = fileResponse.response.headers.get(\"openai-poll-after-ms\");\n                        if (headerInterval) {\n                            const headerIntervalMs = parseInt(headerInterval);\n                            if (!isNaN(headerIntervalMs)) {\n                                sleepInterval = headerIntervalMs;\n                            }\n                        }\n                    }\n                    await (0,_internal_utils_mjs__WEBPACK_IMPORTED_MODULE_3__.sleep)(sleepInterval);\n                    break;\n                case \"failed\":\n                case \"completed\":\n                    return file;\n            }\n        }\n    }\n    /**\n     * Upload a file to the `files` API and then attach it to the given vector store.\n     *\n     * Note the file will be asynchronously processed (you can use the alternative\n     * polling helper method to wait for processing to complete).\n     */ async upload(vectorStoreId, file, options) {\n        const fileInfo = await this._client.files.create({\n            file: file,\n            purpose: \"assistants\"\n        }, options);\n        return this.create(vectorStoreId, {\n            file_id: fileInfo.id\n        }, options);\n    }\n    /**\n     * Add a file to a vector store and poll until processing is complete.\n     */ async uploadAndPoll(vectorStoreId, file, options) {\n        const fileInfo = await this.upload(vectorStoreId, file, options);\n        return await this.poll(vectorStoreId, fileInfo.id, options);\n    }\n    /**\n     * Retrieve the parsed contents of a vector store file.\n     */ content(fileID, params, options) {\n        const { vector_store_id } = params;\n        return this._client.getAPIList(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_4__.path`/vector_stores/${vector_store_id}/files/${fileID}/content`, _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__.Page, {\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n} //# sourceMappingURL=files.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/resources/vector-stores/files.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/resources/vector-stores/vector-stores.mjs":
/*!***************************************************************************!*\
  !*** ../../node_modules/openai/resources/vector-stores/vector-stores.mjs ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VectorStores: () => (/* binding */ VectorStores)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/resource.mjs */ \"(middleware)/../../node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _file_batches_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./file-batches.mjs */ \"(middleware)/../../node_modules/openai/resources/vector-stores/file-batches.mjs\");\n/* harmony import */ var _files_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./files.mjs */ \"(middleware)/../../node_modules/openai/resources/vector-stores/files.mjs\");\n/* harmony import */ var _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/pagination.mjs */ \"(middleware)/../../node_modules/openai/core/pagination.mjs\");\n/* harmony import */ var _internal_headers_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../internal/headers.mjs */ \"(middleware)/../../node_modules/openai/internal/headers.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../internal/utils/path.mjs */ \"(middleware)/../../node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\n\n\n\n\nclass VectorStores extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    constructor(){\n        super(...arguments);\n        this.files = new _files_mjs__WEBPACK_IMPORTED_MODULE_2__.Files(this._client);\n        this.fileBatches = new _file_batches_mjs__WEBPACK_IMPORTED_MODULE_1__.FileBatches(this._client);\n    }\n    /**\n     * Create a vector store.\n     */ create(body, options) {\n        return this._client.post(\"/vector_stores\", {\n            body,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_4__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Retrieves a vector store.\n     */ retrieve(vectorStoreID, options) {\n        return this._client.get(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_5__.path`/vector_stores/${vectorStoreID}`, {\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_4__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Modifies a vector store.\n     */ update(vectorStoreID, body, options) {\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_5__.path`/vector_stores/${vectorStoreID}`, {\n            body,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_4__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Returns a list of vector stores.\n     */ list(query = {}, options) {\n        return this._client.getAPIList(\"/vector_stores\", _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_3__.CursorPage, {\n            query,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_4__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Delete a vector store.\n     */ delete(vectorStoreID, options) {\n        return this._client.delete(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_5__.path`/vector_stores/${vectorStoreID}`, {\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_4__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Search a vector store for relevant chunks based on a query and file attributes\n     * filter.\n     */ search(vectorStoreID, body, options) {\n        return this._client.getAPIList(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_5__.path`/vector_stores/${vectorStoreID}/search`, _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_3__.Page, {\n            body,\n            method: \"post\",\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_4__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n}\nVectorStores.Files = _files_mjs__WEBPACK_IMPORTED_MODULE_2__.Files;\nVectorStores.FileBatches = _file_batches_mjs__WEBPACK_IMPORTED_MODULE_1__.FileBatches; //# sourceMappingURL=vector-stores.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL3ZlY3Rvci1zdG9yZXMvdmVjdG9yLXN0b3Jlcy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBLHNGQUFzRjtBQUNoQztBQUNEO0FBQ0g7QUFDVjtBQUNIO0FBQ3dCO0FBQ0g7QUFDTDtBQUM5QyxNQUFNUyxxQkFBcUJULDJEQUFXQTtJQUN6Q1UsYUFBYztRQUNWLEtBQUssSUFBSUM7UUFDVCxJQUFJLENBQUNDLEtBQUssR0FBRyxJQUFJVCw2Q0FBYyxDQUFDLElBQUksQ0FBQ1UsT0FBTztRQUM1QyxJQUFJLENBQUNDLFdBQVcsR0FBRyxJQUFJYiwwREFBMEIsQ0FBQyxJQUFJLENBQUNZLE9BQU87SUFDbEU7SUFDQTs7S0FFQyxHQUNERSxPQUFPQyxJQUFJLEVBQUVDLE9BQU8sRUFBRTtRQUNsQixPQUFPLElBQUksQ0FBQ0osT0FBTyxDQUFDSyxJQUFJLENBQUMsa0JBQWtCO1lBQ3ZDRjtZQUNBLEdBQUdDLE9BQU87WUFDVkUsU0FBU1osbUVBQVlBLENBQUM7Z0JBQUM7b0JBQUUsZUFBZTtnQkFBZ0I7Z0JBQUdVLFNBQVNFO2FBQVE7UUFDaEY7SUFDSjtJQUNBOztLQUVDLEdBQ0RDLFNBQVNDLGFBQWEsRUFBRUosT0FBTyxFQUFFO1FBQzdCLE9BQU8sSUFBSSxDQUFDSixPQUFPLENBQUNTLEdBQUcsQ0FBQ2QsMERBQUssQ0FBQyxlQUFlLEVBQUVhLGNBQWMsQ0FBQyxFQUFFO1lBQzVELEdBQUdKLE9BQU87WUFDVkUsU0FBU1osbUVBQVlBLENBQUM7Z0JBQUM7b0JBQUUsZUFBZTtnQkFBZ0I7Z0JBQUdVLFNBQVNFO2FBQVE7UUFDaEY7SUFDSjtJQUNBOztLQUVDLEdBQ0RJLE9BQU9GLGFBQWEsRUFBRUwsSUFBSSxFQUFFQyxPQUFPLEVBQUU7UUFDakMsT0FBTyxJQUFJLENBQUNKLE9BQU8sQ0FBQ0ssSUFBSSxDQUFDViwwREFBSyxDQUFDLGVBQWUsRUFBRWEsY0FBYyxDQUFDLEVBQUU7WUFDN0RMO1lBQ0EsR0FBR0MsT0FBTztZQUNWRSxTQUFTWixtRUFBWUEsQ0FBQztnQkFBQztvQkFBRSxlQUFlO2dCQUFnQjtnQkFBR1UsU0FBU0U7YUFBUTtRQUNoRjtJQUNKO0lBQ0E7O0tBRUMsR0FDREssS0FBS0MsUUFBUSxDQUFDLENBQUMsRUFBRVIsT0FBTyxFQUFFO1FBQ3RCLE9BQU8sSUFBSSxDQUFDSixPQUFPLENBQUNhLFVBQVUsQ0FBQyxrQkFBbUJyQiw0REFBVUEsRUFBRztZQUMzRG9CO1lBQ0EsR0FBR1IsT0FBTztZQUNWRSxTQUFTWixtRUFBWUEsQ0FBQztnQkFBQztvQkFBRSxlQUFlO2dCQUFnQjtnQkFBR1UsU0FBU0U7YUFBUTtRQUNoRjtJQUNKO0lBQ0E7O0tBRUMsR0FDRFEsT0FBT04sYUFBYSxFQUFFSixPQUFPLEVBQUU7UUFDM0IsT0FBTyxJQUFJLENBQUNKLE9BQU8sQ0FBQ2MsTUFBTSxDQUFDbkIsMERBQUssQ0FBQyxlQUFlLEVBQUVhLGNBQWMsQ0FBQyxFQUFFO1lBQy9ELEdBQUdKLE9BQU87WUFDVkUsU0FBU1osbUVBQVlBLENBQUM7Z0JBQUM7b0JBQUUsZUFBZTtnQkFBZ0I7Z0JBQUdVLFNBQVNFO2FBQVE7UUFDaEY7SUFDSjtJQUNBOzs7S0FHQyxHQUNEUyxPQUFPUCxhQUFhLEVBQUVMLElBQUksRUFBRUMsT0FBTyxFQUFFO1FBQ2pDLE9BQU8sSUFBSSxDQUFDSixPQUFPLENBQUNhLFVBQVUsQ0FBQ2xCLDBEQUFLLENBQUMsZUFBZSxFQUFFYSxjQUFjLE9BQU8sQ0FBQyxFQUFHZixzREFBSUEsRUFBRztZQUNsRlU7WUFDQWEsUUFBUTtZQUNSLEdBQUdaLE9BQU87WUFDVkUsU0FBU1osbUVBQVlBLENBQUM7Z0JBQUM7b0JBQUUsZUFBZTtnQkFBZ0I7Z0JBQUdVLFNBQVNFO2FBQVE7UUFDaEY7SUFDSjtBQUNKO0FBQ0FWLGFBQWFMLEtBQUssR0FBR0EsNkNBQUtBO0FBQzFCSyxhQUFhUCxXQUFXLEdBQUdBLDBEQUFXQSxFQUN0QywwQ0FBMEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL3ZlY3Rvci1zdG9yZXMvdmVjdG9yLXN0b3Jlcy5tanM/MWMwZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlIGdlbmVyYXRlZCBmcm9tIG91ciBPcGVuQVBJIHNwZWMgYnkgU3RhaW5sZXNzLiBTZWUgQ09OVFJJQlVUSU5HLm1kIGZvciBkZXRhaWxzLlxuaW1wb3J0IHsgQVBJUmVzb3VyY2UgfSBmcm9tIFwiLi4vLi4vY29yZS9yZXNvdXJjZS5tanNcIjtcbmltcG9ydCAqIGFzIEZpbGVCYXRjaGVzQVBJIGZyb20gXCIuL2ZpbGUtYmF0Y2hlcy5tanNcIjtcbmltcG9ydCB7IEZpbGVCYXRjaGVzLCB9IGZyb20gXCIuL2ZpbGUtYmF0Y2hlcy5tanNcIjtcbmltcG9ydCAqIGFzIEZpbGVzQVBJIGZyb20gXCIuL2ZpbGVzLm1qc1wiO1xuaW1wb3J0IHsgRmlsZXMsIH0gZnJvbSBcIi4vZmlsZXMubWpzXCI7XG5pbXBvcnQgeyBDdXJzb3JQYWdlLCBQYWdlIH0gZnJvbSBcIi4uLy4uL2NvcmUvcGFnaW5hdGlvbi5tanNcIjtcbmltcG9ydCB7IGJ1aWxkSGVhZGVycyB9IGZyb20gXCIuLi8uLi9pbnRlcm5hbC9oZWFkZXJzLm1qc1wiO1xuaW1wb3J0IHsgcGF0aCB9IGZyb20gXCIuLi8uLi9pbnRlcm5hbC91dGlscy9wYXRoLm1qc1wiO1xuZXhwb3J0IGNsYXNzIFZlY3RvclN0b3JlcyBleHRlbmRzIEFQSVJlc291cmNlIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgdGhpcy5maWxlcyA9IG5ldyBGaWxlc0FQSS5GaWxlcyh0aGlzLl9jbGllbnQpO1xuICAgICAgICB0aGlzLmZpbGVCYXRjaGVzID0gbmV3IEZpbGVCYXRjaGVzQVBJLkZpbGVCYXRjaGVzKHRoaXMuX2NsaWVudCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENyZWF0ZSBhIHZlY3RvciBzdG9yZS5cbiAgICAgKi9cbiAgICBjcmVhdGUoYm9keSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LnBvc3QoJy92ZWN0b3Jfc3RvcmVzJywge1xuICAgICAgICAgICAgYm9keSxcbiAgICAgICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgICAgICBoZWFkZXJzOiBidWlsZEhlYWRlcnMoW3sgJ09wZW5BSS1CZXRhJzogJ2Fzc2lzdGFudHM9djInIH0sIG9wdGlvbnM/LmhlYWRlcnNdKSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHJpZXZlcyBhIHZlY3RvciBzdG9yZS5cbiAgICAgKi9cbiAgICByZXRyaWV2ZSh2ZWN0b3JTdG9yZUlELCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZ2V0KHBhdGggYC92ZWN0b3Jfc3RvcmVzLyR7dmVjdG9yU3RvcmVJRH1gLCB7XG4gICAgICAgICAgICAuLi5vcHRpb25zLFxuICAgICAgICAgICAgaGVhZGVyczogYnVpbGRIZWFkZXJzKFt7ICdPcGVuQUktQmV0YSc6ICdhc3Npc3RhbnRzPXYyJyB9LCBvcHRpb25zPy5oZWFkZXJzXSksXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBNb2RpZmllcyBhIHZlY3RvciBzdG9yZS5cbiAgICAgKi9cbiAgICB1cGRhdGUodmVjdG9yU3RvcmVJRCwgYm9keSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LnBvc3QocGF0aCBgL3ZlY3Rvcl9zdG9yZXMvJHt2ZWN0b3JTdG9yZUlEfWAsIHtcbiAgICAgICAgICAgIGJvZHksXG4gICAgICAgICAgICAuLi5vcHRpb25zLFxuICAgICAgICAgICAgaGVhZGVyczogYnVpbGRIZWFkZXJzKFt7ICdPcGVuQUktQmV0YSc6ICdhc3Npc3RhbnRzPXYyJyB9LCBvcHRpb25zPy5oZWFkZXJzXSksXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIGEgbGlzdCBvZiB2ZWN0b3Igc3RvcmVzLlxuICAgICAqL1xuICAgIGxpc3QocXVlcnkgPSB7fSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmdldEFQSUxpc3QoJy92ZWN0b3Jfc3RvcmVzJywgKEN1cnNvclBhZ2UpLCB7XG4gICAgICAgICAgICBxdWVyeSxcbiAgICAgICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgICAgICBoZWFkZXJzOiBidWlsZEhlYWRlcnMoW3sgJ09wZW5BSS1CZXRhJzogJ2Fzc2lzdGFudHM9djInIH0sIG9wdGlvbnM/LmhlYWRlcnNdKSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIERlbGV0ZSBhIHZlY3RvciBzdG9yZS5cbiAgICAgKi9cbiAgICBkZWxldGUodmVjdG9yU3RvcmVJRCwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmRlbGV0ZShwYXRoIGAvdmVjdG9yX3N0b3Jlcy8ke3ZlY3RvclN0b3JlSUR9YCwge1xuICAgICAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgICAgIGhlYWRlcnM6IGJ1aWxkSGVhZGVycyhbeyAnT3BlbkFJLUJldGEnOiAnYXNzaXN0YW50cz12MicgfSwgb3B0aW9ucz8uaGVhZGVyc10pLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogU2VhcmNoIGEgdmVjdG9yIHN0b3JlIGZvciByZWxldmFudCBjaHVua3MgYmFzZWQgb24gYSBxdWVyeSBhbmQgZmlsZSBhdHRyaWJ1dGVzXG4gICAgICogZmlsdGVyLlxuICAgICAqL1xuICAgIHNlYXJjaCh2ZWN0b3JTdG9yZUlELCBib2R5LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZ2V0QVBJTGlzdChwYXRoIGAvdmVjdG9yX3N0b3Jlcy8ke3ZlY3RvclN0b3JlSUR9L3NlYXJjaGAsIChQYWdlKSwge1xuICAgICAgICAgICAgYm9keSxcbiAgICAgICAgICAgIG1ldGhvZDogJ3Bvc3QnLFxuICAgICAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgICAgIGhlYWRlcnM6IGJ1aWxkSGVhZGVycyhbeyAnT3BlbkFJLUJldGEnOiAnYXNzaXN0YW50cz12MicgfSwgb3B0aW9ucz8uaGVhZGVyc10pLFxuICAgICAgICB9KTtcbiAgICB9XG59XG5WZWN0b3JTdG9yZXMuRmlsZXMgPSBGaWxlcztcblZlY3RvclN0b3Jlcy5GaWxlQmF0Y2hlcyA9IEZpbGVCYXRjaGVzO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dmVjdG9yLXN0b3Jlcy5tanMubWFwIl0sIm5hbWVzIjpbIkFQSVJlc291cmNlIiwiRmlsZUJhdGNoZXNBUEkiLCJGaWxlQmF0Y2hlcyIsIkZpbGVzQVBJIiwiRmlsZXMiLCJDdXJzb3JQYWdlIiwiUGFnZSIsImJ1aWxkSGVhZGVycyIsInBhdGgiLCJWZWN0b3JTdG9yZXMiLCJjb25zdHJ1Y3RvciIsImFyZ3VtZW50cyIsImZpbGVzIiwiX2NsaWVudCIsImZpbGVCYXRjaGVzIiwiY3JlYXRlIiwiYm9keSIsIm9wdGlvbnMiLCJwb3N0IiwiaGVhZGVycyIsInJldHJpZXZlIiwidmVjdG9yU3RvcmVJRCIsImdldCIsInVwZGF0ZSIsImxpc3QiLCJxdWVyeSIsImdldEFQSUxpc3QiLCJkZWxldGUiLCJzZWFyY2giLCJtZXRob2QiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/resources/vector-stores/vector-stores.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/streaming.mjs":
/*!***********************************************!*\
  !*** ../../node_modules/openai/streaming.mjs ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _core_streaming_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core/streaming.mjs */ \"(middleware)/../../node_modules/openai/core/streaming.mjs\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _core_streaming_mjs__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _core_streaming_mjs__WEBPACK_IMPORTED_MODULE_0__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n //# sourceMappingURL=streaming.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvc3RyZWFtaW5nLm1qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFxQyxDQUNyQyxzQ0FBc0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvc3RyZWFtaW5nLm1qcz8xMTcwIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCIuL2NvcmUvc3RyZWFtaW5nLm1qc1wiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3RyZWFtaW5nLm1qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/streaming.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/openai/version.mjs":
/*!*********************************************!*\
  !*** ../../node_modules/openai/version.mjs ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VERSION: () => (/* binding */ VERSION)\n/* harmony export */ });\nconst VERSION = \"5.1.0\"; // x-release-please-version\n //# sourceMappingURL=version.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvdmVyc2lvbi5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPLE1BQU1BLFVBQVUsUUFBUSxDQUFDLDJCQUEyQjtDQUMzRCxvQ0FBb0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL25vZGVfbW9kdWxlcy9vcGVuYWkvdmVyc2lvbi5tanM/MTBkYyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgVkVSU0lPTiA9ICc1LjEuMCc7IC8vIHgtcmVsZWFzZS1wbGVhc2UtdmVyc2lvblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dmVyc2lvbi5tanMubWFwIl0sIm5hbWVzIjpbIlZFUlNJT04iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/openai/version.mjs\n");

/***/ })

},
/******/ __webpack_require__ => { // webpackRuntimeModules
/******/ var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
/******/ var __webpack_exports__ = (__webpack_exec__("(middleware)/./node_modules/next/dist/build/webpack/loaders/next-edge-function-loader.js?absolutePagePath=%2FUsers%2Ftsaric%2FDownloads%2Fneo-final-complete%2Fpages%2Fapi%2Fchat.ts&page=%2Fapi%2Fchat&rootDir=%2FUsers%2Ftsaric%2FDownloads%2Fneo-final-complete&preferredRegion=&middlewareConfig=e30%3D!"));
/******/ (_ENTRIES = typeof _ENTRIES === "undefined" ? {} : _ENTRIES)["middleware_pages/api/chat"] = __webpack_exports__;
/******/ }
]);